<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_bdd_cond_manager" kind="class" language="C++" prot="public">
    <compoundname>SVF::BddCondManager</compoundname>
    <includes refid="_conditions_8h" local="no">Conditions.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_bdd_cond_manager_1a3c12ca3172cd7fecea6a9389187c0117" prot="private" static="no" mutable="no">
        <type><ref refid="struct_dd_manager" kindref="compound">DdManager</ref> *</type>
        <definition>DdManager* SVF::BddCondManager::m_bdd_mgr</definition>
        <argsstring></argsstring>
        <name>m_bdd_mgr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="128" column="15" bodyfile="include/Util/Conditions.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1af81b4cf3c652695a7354daa94758792b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::BddCondManager::BddCondManager</definition>
        <argsstring>()</argsstring>
        <name>BddCondManager</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="48" column="5" bodyfile="include/Util/Conditions.h" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1a9d8fae24ce2f03ccca04380e01da9676" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::BddCondManager::~BddCondManager</definition>
        <argsstring>()</argsstring>
        <name>~BddCondManager</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="54" column="5" bodyfile="include/Util/Conditions.h" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1a9a01d3b99cf9c6614accd7ca41721c3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_dd_node" kindref="compound">DdNode</ref> *</type>
        <definition>DdNode* SVF::BddCondManager::Cudd_bdd</definition>
        <argsstring>(u32_t i)</argsstring>
        <name>Cudd_bdd</name>
        <param>
          <type>u32_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="59" column="12" bodyfile="include/Util/Conditions.h" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1ae3463aa193f9755ec2766340456be71b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned SVF::BddCondManager::BddVarNum</definition>
        <argsstring>()</argsstring>
        <name>BddVarNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="63" column="21" bodyfile="include/Util/Conditions.h" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1aedcb7f5cc71b8c144e592818180fb0c9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_dd_node" kindref="compound">DdNode</ref> *</type>
        <definition>DdNode* SVF::BddCondManager::getTrueCond</definition>
        <argsstring>() const</argsstring>
        <name>getTrueCond</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="68" column="19" bodyfile="include/Util/Conditions.h" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1a4604b02410dfe4c65e08cf08eff3240e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_dd_node" kindref="compound">DdNode</ref> *</type>
        <definition>DdNode* SVF::BddCondManager::getFalseCond</definition>
        <argsstring>() const</argsstring>
        <name>getFalseCond</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="72" column="19" bodyfile="include/Util/Conditions.h" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1a8cb493333b919d0dbea6c4633e95ac6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>u32_t</type>
        <definition>u32_t SVF::BddCondManager::getBDDMemUsage</definition>
        <argsstring>()</argsstring>
        <name>getBDDMemUsage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="77" column="18" bodyfile="include/Util/Conditions.h" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1a89ab3f923baf3062b85f34506eb85041" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>u32_t</type>
        <definition>u32_t SVF::BddCondManager::getCondNumber</definition>
        <argsstring>()</argsstring>
        <name>getCondNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="81" column="18" bodyfile="include/Util/Conditions.h" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1ad70a75998fabac2e884e398c8bb57307" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>u32_t</type>
        <definition>u32_t SVF::BddCondManager::getMaxLiveCondNumber</definition>
        <argsstring>()</argsstring>
        <name>getMaxLiveCondNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="85" column="18" bodyfile="include/Util/Conditions.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1a47ace763ad44c64a5c053f64c82b1983" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::BddCondManager::markForRelease</definition>
        <argsstring>(DdNode *cond)</argsstring>
        <name>markForRelease</name>
        <param>
          <type><ref refid="struct_dd_node" kindref="compound">DdNode</ref> *</type>
          <declname>cond</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="89" column="17" bodyfile="include/Util/Conditions.h" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1a7439d48e29f497c5a1606dec0288ee40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_dd_node" kindref="compound">DdNode</ref> *</type>
        <definition>DdNode * BddCondManager::AND</definition>
        <argsstring>(DdNode *lhs, DdNode *rhs)</argsstring>
        <name>AND</name>
        <param>
          <type><ref refid="struct_dd_node" kindref="compound">DdNode</ref> *</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="struct_dd_node" kindref="compound">DdNode</ref> *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Operations on conditions. </para>
        </briefdescription>
        <detaileddescription>
<para>use Cudd_bddAndLimit interface to avoid bdds blow up </para>
        </detaileddescription>
        <inbodydescription>
<para>drop the rhs condition</para>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="95" column="12" bodyfile="lib/Util/Conditions.cpp" bodystart="42" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1adfe12ffee44c87abc5b10ab184454bc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_dd_node" kindref="compound">DdNode</ref> *</type>
        <definition>DdNode * BddCondManager::OR</definition>
        <argsstring>(DdNode *lhs, DdNode *rhs)</argsstring>
        <name>OR</name>
        <param>
          <type><ref refid="struct_dd_node" kindref="compound">DdNode</ref> *</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="struct_dd_node" kindref="compound">DdNode</ref> *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use Cudd_bddOrLimit interface to avoid bdds blow up </para>
        </detaileddescription>
        <inbodydescription>
<para>drop the two conditions here</para>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="96" column="12" bodyfile="lib/Util/Conditions.cpp" bodystart="70" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1a3aa554033b2b7e1719788d04759c0950" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_dd_node" kindref="compound">DdNode</ref> *</type>
        <definition>DdNode * BddCondManager::NEG</definition>
        <argsstring>(DdNode *lhs)</argsstring>
        <name>NEG</name>
        <param>
          <type><ref refid="struct_dd_node" kindref="compound">DdNode</ref> *</type>
          <declname>lhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="97" column="12" bodyfile="lib/Util/Conditions.cpp" bodystart="95" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1a9cffa74f31d76365d41b6d00ae6bbc62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BddCondManager::ddClearFlag</definition>
        <argsstring>(DdNode *f) const</argsstring>
        <name>ddClearFlag</name>
        <param>
          <type><ref refid="struct_dd_node" kindref="compound">DdNode</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Utilities for dumping conditions. These methods use global functions from CUDD package and they can be removed outside this class scope to be used by others. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="104" column="10" bodyfile="lib/Util/Conditions.cpp" bodystart="110" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1a08167ddc2ccf9bb529a08e4453cfbf6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BddCondManager::BddSupportStep</definition>
        <argsstring>(DdNode *f, NodeBS &amp;support) const</argsstring>
        <name>BddSupportStep</name>
        <param>
          <type><ref refid="struct_dd_node" kindref="compound">DdNode</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>NodeBS &amp;</type>
          <declname>support</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="105" column="10" bodyfile="lib/Util/Conditions.cpp" bodystart="123" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1a39d7745293688c601e10c2716288b394" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BddCondManager::BddSupport</definition>
        <argsstring>(DdNode *f, NodeBS &amp;support) const</argsstring>
        <name>BddSupport</name>
        <param>
          <type><ref refid="struct_dd_node" kindref="compound">DdNode</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>NodeBS &amp;</type>
          <declname>support</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="106" column="10" bodyfile="lib/Util/Conditions.cpp" bodystart="136" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1a21c4f286baeca3bfa1422955d13382c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BddCondManager::dump</definition>
        <argsstring>(DdNode *lhs, raw_ostream &amp;O)</argsstring>
        <name>dump</name>
        <param>
          <type><ref refid="struct_dd_node" kindref="compound">DdNode</ref> *</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="namespace_s_v_f_1a424cc053c29ad7303699c529d1a2cc71" kindref="member">raw_ostream</ref> &amp;</type>
          <declname>O</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dump BDD </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="107" column="10" bodyfile="lib/Util/Conditions.cpp" bodystart="145" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1abb0a08b6b2e0c599fd3d9a57ba751943" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string BddCondManager::dumpStr</definition>
        <argsstring>(DdNode *lhs) const</argsstring>
        <name>dumpStr</name>
        <param>
          <type><ref refid="struct_dd_node" kindref="compound">DdNode</ref> *</type>
          <declname>lhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dump BDD </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="108" column="17" bodyfile="lib/Util/Conditions.cpp" bodystart="165" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1a80f0e4e6fadb3bf45a7cb5ef13dfd62d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::BddCondManager::printMinterms</definition>
        <argsstring>(DdNode *d)</argsstring>
        <name>printMinterms</name>
        <param>
          <type><ref refid="struct_dd_node" kindref="compound">DdNode</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>print minterms and debug information for the Ddnode </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="110" column="17" bodyfile="include/Util/Conditions.h" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1a88f1985d938e0eeadfeae0cb37540179" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::BddCondManager::printDbg</definition>
        <argsstring>(DdNode *d)</argsstring>
        <name>printDbg</name>
        <param>
          <type><ref refid="struct_dd_node" kindref="compound">DdNode</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="114" column="17" bodyfile="include/Util/Conditions.h" bodystart="114" bodyend="117"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1aa142de25ef980be1ae9022a9907bd92e" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_dd_node" kindref="compound">DdNode</ref> *</type>
        <definition>DdNode* SVF::BddCondManager::BddOne</definition>
        <argsstring>() const</argsstring>
        <name>BddOne</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="119" column="19" bodyfile="include/Util/Conditions.h" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_bdd_cond_manager_1a115f6ba3db05767dbea3bdfffa32e897" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_dd_node" kindref="compound">DdNode</ref> *</type>
        <definition>DdNode* SVF::BddCondManager::BddZero</definition>
        <argsstring>() const</argsstring>
        <name>BddZero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Conditions.h" line="123" column="19" bodyfile="include/Util/Conditions.h" bodystart="123" bodyend="126"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Using Cudd as conditions. </para>
    </detaileddescription>
    <location file="include/Util/Conditions.h" line="43" column="1" bodyfile="include/Util/Conditions.h" bodystart="44" bodyend="129"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1a7439d48e29f497c5a1606dec0288ee40" prot="public" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>AND</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1af81b4cf3c652695a7354daa94758792b" prot="public" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>BddCondManager</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1aa142de25ef980be1ae9022a9907bd92e" prot="private" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>BddOne</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1a39d7745293688c601e10c2716288b394" prot="public" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>BddSupport</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1a08167ddc2ccf9bb529a08e4453cfbf6c" prot="public" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>BddSupportStep</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1ae3463aa193f9755ec2766340456be71b" prot="public" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>BddVarNum</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1a115f6ba3db05767dbea3bdfffa32e897" prot="private" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>BddZero</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1a9a01d3b99cf9c6614accd7ca41721c3d" prot="public" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>Cudd_bdd</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1a9cffa74f31d76365d41b6d00ae6bbc62" prot="public" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>ddClearFlag</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1a21c4f286baeca3bfa1422955d13382c8" prot="public" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>dump</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1abb0a08b6b2e0c599fd3d9a57ba751943" prot="public" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>dumpStr</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1a8cb493333b919d0dbea6c4633e95ac6b" prot="public" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>getBDDMemUsage</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1a89ab3f923baf3062b85f34506eb85041" prot="public" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>getCondNumber</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1a4604b02410dfe4c65e08cf08eff3240e" prot="public" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>getFalseCond</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1ad70a75998fabac2e884e398c8bb57307" prot="public" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>getMaxLiveCondNumber</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1aedcb7f5cc71b8c144e592818180fb0c9" prot="public" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>getTrueCond</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1a3c12ca3172cd7fecea6a9389187c0117" prot="private" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>m_bdd_mgr</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1a47ace763ad44c64a5c053f64c82b1983" prot="public" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>markForRelease</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1a3aa554033b2b7e1719788d04759c0950" prot="public" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>NEG</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1adfe12ffee44c87abc5b10ab184454bc4" prot="public" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>OR</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1a88f1985d938e0eeadfeae0cb37540179" prot="public" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>printDbg</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1a80f0e4e6fadb3bf45a7cb5ef13dfd62d" prot="public" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>printMinterms</name></member>
      <member refid="class_s_v_f_1_1_bdd_cond_manager_1a9d8fae24ce2f03ccca04380e01da9676" prot="public" virt="non-virtual"><scope>SVF::BddCondManager</scope><name>~BddCondManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
