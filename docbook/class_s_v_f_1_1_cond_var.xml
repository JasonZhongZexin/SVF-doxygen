<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_cond_var" xml:lang="en-US">
<title>SVF::CondVar&lt; Cond &gt; Class Template Reference</title>
<indexterm><primary>SVF::CondVar&lt; Cond &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;ConditionalPT.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cond_var_1a0999a4b34face00af83b3b840920fd3f"/><link linkend="_class_s_v_f_1_1_cond_var_1a0999a4b34face00af83b3b840920fd3f">CondVar</link> (const Cond &amp;cond, NodeID id)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cond_var_1afd729e068419ed45bb9da8d5920f8674"/><link linkend="_class_s_v_f_1_1_cond_var_1afd729e068419ed45bb9da8d5920f8674">CondVar</link> (const <link linkend="_class_s_v_f_1_1_cond_var">CondVar</link> &amp;conVar)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cond_var_1a93101c4401ed4ced33d64b5726e9cd69"/><link linkend="_class_s_v_f_1_1_cond_var_1a93101c4401ed4ced33d64b5726e9cd69">CondVar</link> ()</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cond_var_1a90d6c2204c92db5c78991e6dfdcc5c80"/><link linkend="_class_s_v_f_1_1_cond_var">CondVar</link> &amp; <emphasis role="strong">operator=</emphasis> (const <link linkend="_class_s_v_f_1_1_cond_var">CondVar</link> &amp;rhs)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_s_v_f_1_1_cond_var_1add10a9d6f6a49cbd5dd0f5d47c423d27">operator&lt;</link> (const <link linkend="_class_s_v_f_1_1_cond_var">CondVar</link> &amp;rhs) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cond_var_1af84e7bfcff909009be5e109c600c63fe"/>const Cond &amp; <emphasis role="strong">get_cond</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cond_var_1a5d64fa2be89051cd03301e3b07bffd6a"/>NodeID <emphasis role="strong">get_id</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cond_var_1a4baf5fb20288491c96827177f9965cc4"/>std::string <emphasis role="strong">toString</emphasis> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect><title></title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_class_s_v_f_1_1_cond_var_1a7faf827845c5e820f1b63ce6523bc2a9">operator==</link> (const <link linkend="_class_s_v_f_1_1_cond_var">CondVar</link> &amp;rhs) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cond_var_1a50321e5ead24c8a9d6c58998072634f0"/>bool <emphasis role="strong">operator!=</emphasis> (const <link linkend="_class_s_v_f_1_1_cond_var">CondVar</link> &amp;rhs) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cond_var_1a539bf3722c1ef2887e5459add0abf24c"/><link linkend="_namespace_s_v_f_1a424cc053c29ad7303699c529d1a2cc71">raw_ostream</link> &amp; <emphasis role="strong">operator&lt;&lt;</emphasis> (<link linkend="_namespace_s_v_f_1a424cc053c29ad7303699c529d1a2cc71">raw_ostream</link> &amp;o, const <link linkend="_class_s_v_f_1_1_cond_var">CondVar</link>&lt; Cond &gt; &amp;cvar)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;class Cond&gt;
class SVF::CondVar&lt; Cond &gt;</title></simplesect>


<para>Conditional Variable (c,v) A context/path condition A variable NodeID </para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_cond_var_1add10a9d6f6a49cbd5dd0f5d47c423d27"/>    <section>
    <title>operator&lt;()</title>
<indexterm><primary>operator&lt;</primary><secondary>SVF::CondVar&lt; Cond &gt;</secondary></indexterm>
<indexterm><primary>SVF::CondVar&lt; Cond &gt;</primary><secondary>operator&lt;</secondary></indexterm>
<computeroutput>template&lt;class Cond &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_s_v_f_1_1_cond_var">SVF::CondVar</link>&lt; Cond &gt;::operator&lt; (const <link linkend="_class_s_v_f_1_1_cond_var">CondVar</link>&lt; Cond &gt; &amp; rhs) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Less than implementation. </para>
    </section><anchor xml:id="_class_s_v_f_1_1_cond_var_1a7faf827845c5e820f1b63ce6523bc2a9"/>    <section>
    <title>operator==()</title>
<indexterm><primary>operator==</primary><secondary>SVF::CondVar&lt; Cond &gt;</secondary></indexterm>
<indexterm><primary>SVF::CondVar&lt; Cond &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;class Cond &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_s_v_f_1_1_cond_var">SVF::CondVar</link>&lt; Cond &gt;::operator== (const <link linkend="_class_s_v_f_1_1_cond_var">CondVar</link>&lt; Cond &gt; &amp; rhs) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Comparison between two elements. </para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
include/MemoryModel/ConditionalPT.h</section>
</section>
