<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structllvm_1_1_graph_traits_3_01_s_v_f_1_1_generic_graph_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4" xml:lang="en-US">
<title>llvm::GraphTraits&lt; SVF::GenericGraph&lt; NodeTy, EdgeTy &gt; * &gt; Struct Template Reference</title>
<indexterm><primary>llvm::GraphTraits&lt; SVF::GenericGraph&lt; NodeTy, EdgeTy &gt; * &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;GenericGraph.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for llvm::GraphTraits&lt; SVF::GenericGraph&lt; NodeTy, EdgeTy &gt; * &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structllvm_1_1_graph_traits_3_01_s_v_f_1_1_generic_graph_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_s_v_f_1_1_generic_graph_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_1ada118fc2fe3ff270fe6739b0347b6455"/>typedef <link linkend="_class_s_v_f_1_1_generic_graph">SVF::GenericGraph</link>&lt; NodeTy, EdgeTy &gt; <emphasis role="strong">GenericGraphTy</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_s_v_f_1_1_generic_graph_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_1a21ca8a41615f83f001ce90bdc414a1cb"/>typedef NodeTy <emphasis role="strong">NodeType</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_s_v_f_1_1_generic_graph_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_1abf526e1e1ee7e142d4fd25ba15a4ff26"/>typedef EdgeTy <emphasis role="strong">EdgeType</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_s_v_f_1_1_generic_graph_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_1a82021578dd406a3aceee860d8a0c65ac"/>typedef std::pair&lt; SVF::NodeID, NodeType * &gt; <emphasis role="strong">PairTy</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_s_v_f_1_1_generic_graph_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_1a309511e3a0aa5b8e0cb17542087e7ea6"/>typedef std::pointer_to_unary_function&lt; PairTy, NodeType * &gt; <emphasis role="strong">DerefVal</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_s_v_f_1_1_generic_graph_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_1a579ed56b5a198617a72b8845127477b1"/>typedef mapped_iterator&lt; typename <link linkend="_class_s_v_f_1_1_generic_graph_1ac213302cf5c7cdf3b66f7b18649d0fbc">GenericGraphTy::iterator</link>, DerefVal &gt; <emphasis role="strong">nodes_iterator</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_s_v_f_1_1_generic_graph_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_1a3b82d34ba2a675f75adeb30def66c05a"/>static NodeType * <emphasis role="strong">getEntryNode</emphasis> (<link linkend="_class_s_v_f_1_1_generic_graph">GenericGraphTy</link> *pag)</para>
</listitem>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_s_v_f_1_1_generic_graph_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_1ae32bf4f188981981bc4a533130d17a42"/>static nodes_iterator <emphasis role="strong">nodes_begin</emphasis> (<link linkend="_class_s_v_f_1_1_generic_graph">GenericGraphTy</link> *G)</para>
</listitem>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_s_v_f_1_1_generic_graph_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_1a44a6d9ca4b90c001be7268a152fe5266"/>static nodes_iterator <emphasis role="strong">nodes_end</emphasis> (<link linkend="_class_s_v_f_1_1_generic_graph">GenericGraphTy</link> *G)</para>
</listitem>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_s_v_f_1_1_generic_graph_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_1a68f11322d7f4a76cefa1726e17d48790"/>static NodeType * <emphasis role="strong">Valdereference</emphasis> (PairTy P)</para>
</listitem>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_s_v_f_1_1_generic_graph_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_1a3cadd5d800704c9dcae9dab10e306cfa"/>static unsigned <emphasis role="strong">graphSize</emphasis> (<link linkend="_class_s_v_f_1_1_generic_graph">GenericGraphTy</link> *G)</para>
</listitem>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_s_v_f_1_1_generic_graph_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_1ab1ad3f6de20740e1951d70d15404df07"/>static unsigned <emphasis role="strong">getNodeID</emphasis> (NodeType *N)</para>
</listitem>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_s_v_f_1_1_generic_graph_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_1ab04003a04dedc97d3d773403d3c30919"/>static NodeType * <emphasis role="strong">getNode</emphasis> (<link linkend="_class_s_v_f_1_1_generic_graph">GenericGraphTy</link> *G, SVF::NodeID id)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;class NodeTy, class EdgeTy&gt;
struct llvm::GraphTraits&lt; SVF::GenericGraph&lt; NodeTy, EdgeTy &gt; * &gt;</title></simplesect>


<para>GraphTraints </para>
<para>
The documentation for this struct was generated from the following file:</para>
include/Graphs/GenericGraph.h</section>
</section>
