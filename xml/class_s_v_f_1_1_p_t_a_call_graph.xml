<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_p_t_a_call_graph" kind="class" language="C++" prot="public">
    <compoundname>SVF::PTACallGraph</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_generic_graph" prot="public" virt="non-virtual">SVF::GenericGraph&lt; PTACallGraphNode, PTACallGraphEdge &gt;</basecompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_thread_call_graph" prot="public" virt="non-virtual">SVF::ThreadCallGraph</derivedcompoundref>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_s_v_f_1_1_p_t_a_call_graph_1a5b1fe2b2314db947cd5e709b7285fe1c" prot="public" static="no" strong="no">
        <type></type>
        <name>CGEK</name>
        <enumvalue id="class_s_v_f_1_1_p_t_a_call_graph_1a5b1fe2b2314db947cd5e709b7285fe1ca6bbe72ac881caacbded694492df5417c" prot="public">
          <name>NormCallGraph</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_p_t_a_call_graph_1a5b1fe2b2314db947cd5e709b7285fe1ca4fe819bb1488afc48b04c1b7bef04bc2" prot="public">
          <name>ThdCallGraph</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="233" column="5" bodyfile="include/Graphs/PTACallGraph.h" bodystart="234" bodyend="236"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_p_t_a_call_graph_1a1ad288117daa4031e195eb35d805cac6" prot="public" static="no">
        <type>PTACallGraphEdge::CallGraphEdgeSet</type>
        <definition>typedef PTACallGraphEdge::CallGraphEdgeSet SVF::PTACallGraph::CallGraphEdgeSet</definition>
        <argsstring></argsstring>
        <name>CallGraphEdgeSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="222" column="48" bodyfile="include/Graphs/PTACallGraph.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_p_t_a_call_graph_1a049bc978a93f0db1fe91efb6feb22b14" prot="public" static="no">
        <type>Map&lt; const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *, <ref refid="class_s_v_f_1_1_p_t_a_call_graph_node" kindref="compound">PTACallGraphNode</ref> * &gt;</type>
        <definition>typedef Map&lt;const SVFFunction*, PTACallGraphNode *&gt; SVF::PTACallGraph::FunToCallGraphNodeMap</definition>
        <argsstring></argsstring>
        <name>FunToCallGraphNodeMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="223" column="17" bodyfile="include/Graphs/PTACallGraph.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_p_t_a_call_graph_1a16d115dd425ec02ab6d91c711fab7fd9" prot="public" static="no">
        <type>Map&lt; const <ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref> *, CallGraphEdgeSet &gt;</type>
        <definition>typedef Map&lt;const CallBlockNode*, CallGraphEdgeSet&gt; SVF::PTACallGraph::CallInstToCallGraphEdgesMap</definition>
        <argsstring></argsstring>
        <name>CallInstToCallGraphEdgesMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="224" column="17" bodyfile="include/Graphs/PTACallGraph.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_p_t_a_call_graph_1a1d1ea71cb29e190ad3c6817810bd57c7" prot="public" static="no">
        <type>std::pair&lt; const <ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref> *, const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> * &gt;</type>
        <definition>typedef std::pair&lt;const CallBlockNode*, const SVFFunction*&gt; SVF::PTACallGraph::CallSitePair</definition>
        <argsstring></argsstring>
        <name>CallSitePair</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="225" column="23" bodyfile="include/Graphs/PTACallGraph.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_p_t_a_call_graph_1ae4e3e5f108bc1e47af8f58d2e43345d2" prot="public" static="no">
        <type>Map&lt; CallSitePair, CallSiteID &gt;</type>
        <definition>typedef Map&lt;CallSitePair, CallSiteID&gt; SVF::PTACallGraph::CallSiteToIdMap</definition>
        <argsstring></argsstring>
        <name>CallSiteToIdMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="226" column="17" bodyfile="include/Graphs/PTACallGraph.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_p_t_a_call_graph_1a5f626f5c9254b9e643d943e59068efba" prot="public" static="no">
        <type>Map&lt; CallSiteID, CallSitePair &gt;</type>
        <definition>typedef Map&lt;CallSiteID, CallSitePair&gt; SVF::PTACallGraph::IdToCallSiteMap</definition>
        <argsstring></argsstring>
        <name>IdToCallSiteMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="227" column="17" bodyfile="include/Graphs/PTACallGraph.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_p_t_a_call_graph_1a5f5a5ec7e707a21994d301cc07d32a5a" prot="public" static="no">
        <type>Set&lt; const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> * &gt;</type>
        <definition>typedef Set&lt;const SVFFunction*&gt; SVF::PTACallGraph::FunctionSet</definition>
        <argsstring></argsstring>
        <name>FunctionSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="228" column="17" bodyfile="include/Graphs/PTACallGraph.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_p_t_a_call_graph_1a47bfbae96294592f4e6060deddbe5700" prot="public" static="no">
        <type>OrderedMap&lt; const <ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref> *, FunctionSet &gt;</type>
        <definition>typedef OrderedMap&lt;const CallBlockNode*, FunctionSet&gt; SVF::PTACallGraph::CallEdgeMap</definition>
        <argsstring></argsstring>
        <name>CallEdgeMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="229" column="24" bodyfile="include/Graphs/PTACallGraph.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_p_t_a_call_graph_1a2f28a1ce0c7d6a0bc2fc2627e90acf1c" prot="public" static="no">
        <type>CallGraphEdgeSet::iterator</type>
        <definition>typedef CallGraphEdgeSet::iterator SVF::PTACallGraph::CallGraphEdgeIter</definition>
        <argsstring></argsstring>
        <name>CallGraphEdgeIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="230" column="40" bodyfile="include/Graphs/PTACallGraph.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_p_t_a_call_graph_1a9b7f6979a95244c620fdb791e053237b" prot="public" static="no">
        <type>CallGraphEdgeSet::const_iterator</type>
        <definition>typedef CallGraphEdgeSet::const_iterator SVF::PTACallGraph::CallGraphEdgeConstIter</definition>
        <argsstring></argsstring>
        <name>CallGraphEdgeConstIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="231" column="46" bodyfile="include/Graphs/PTACallGraph.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_p_t_a_call_graph_1a6a5927a58cc777a0745bd0ca635f25b1" prot="private" static="no" mutable="no">
        <type>CGEK</type>
        <definition>CGEK SVF::PTACallGraph::kind</definition>
        <argsstring></argsstring>
        <name>kind</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="239" column="10" bodyfile="include/Graphs/PTACallGraph.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_p_t_a_call_graph_1adcae44bd6788954e2e4e007bff03462c" prot="private" static="no" mutable="no">
        <type>CallEdgeMap</type>
        <definition>CallEdgeMap SVF::PTACallGraph::indirectCallMap</definition>
        <argsstring></argsstring>
        <name>indirectCallMap</name>
        <briefdescription>
<para>Indirect call map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="242" column="17" bodyfile="include/Graphs/PTACallGraph.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_p_t_a_call_graph_1a75ffe4f24d59ad42601b7550aa988187" prot="private" static="yes" mutable="no">
        <type>CallSiteToIdMap</type>
        <definition>PTACallGraph::CallSiteToIdMap PTACallGraph::csToIdMap</definition>
        <argsstring></argsstring>
        <name>csToIdMap</name>
        <briefdescription>
<para>Call site information. </para>
        </briefdescription>
        <detaileddescription>
<para>Map a pair of call instruction and callee to a callsite ID </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="245" column="28" bodyfile="include/Graphs/PTACallGraph.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_p_t_a_call_graph_1a5d6f63baad19589a9fd1e069631e18fa" prot="private" static="yes" mutable="no">
        <type>IdToCallSiteMap</type>
        <definition>PTACallGraph::IdToCallSiteMap PTACallGraph::idToCSMap</definition>
        <argsstring></argsstring>
        <name>idToCSMap</name>
        <briefdescription>
<para>Map a callsite ID to a pair of call instruction and callee. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="246" column="28" bodyfile="include/Graphs/PTACallGraph.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_p_t_a_call_graph_1a276338e88cc286f6a1808b1fcdf74d9a" prot="private" static="yes" mutable="no">
        <type>CallSiteID</type>
        <definition>CallSiteID PTACallGraph::totalCallSiteNum</definition>
        <argsstring></argsstring>
        <name>totalCallSiteNum</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para>CallSiteIDs, start from 1;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="247" column="23" bodyfile="include/Graphs/PTACallGraph.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_p_t_a_call_graph_1a97986d6e6732c78b04cc053f0e9d1367" prot="protected" static="no" mutable="no">
        <type>FunToCallGraphNodeMap</type>
        <definition>FunToCallGraphNodeMap SVF::PTACallGraph::funToCallGraphNodeMap</definition>
        <argsstring></argsstring>
        <name>funToCallGraphNodeMap</name>
        <briefdescription>
<para>Call Graph node map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="250" column="27" bodyfile="include/Graphs/PTACallGraph.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_p_t_a_call_graph_1ab29003352d8152b9d0fd37919ac212c5" prot="protected" static="no" mutable="no">
        <type>CallInstToCallGraphEdgesMap</type>
        <definition>CallInstToCallGraphEdgesMap SVF::PTACallGraph::callinstToCallGraphEdgesMap</definition>
        <argsstring></argsstring>
        <name>callinstToCallGraphEdgesMap</name>
        <briefdescription>
<para>Map a call instruction to its corresponding call edges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="251" column="33" bodyfile="include/Graphs/PTACallGraph.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_p_t_a_call_graph_1af0e1a940677fb7f6c4aaef2f9c46c3e5" prot="protected" static="no" mutable="no">
        <type>NodeID</type>
        <definition>NodeID SVF::PTACallGraph::callGraphNodeNum</definition>
        <argsstring></argsstring>
        <name>callGraphNodeNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="253" column="12" bodyfile="include/Graphs/PTACallGraph.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_p_t_a_call_graph_1ad73bc2f0669ff2a28ccabb5355278826" prot="protected" static="no" mutable="no">
        <type>Size_t</type>
        <definition>Size_t SVF::PTACallGraph::numOfResolvedIndCallEdge</definition>
        <argsstring></argsstring>
        <name>numOfResolvedIndCallEdge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="254" column="12" bodyfile="include/Graphs/PTACallGraph.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1a6a794ee3e4b217a1a0c6edf4bcdbdb69" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTACallGraph::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <briefdescription>
<para>Clean up memory. </para>
        </briefdescription>
        <detaileddescription>
<para>Memory has been cleaned up at <ref refid="class_s_v_f_1_1_generic_graph" kindref="compound">GenericGraph</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="257" column="10" bodyfile="lib/Graphs/PTACallGraph.cpp" bodystart="114" bodyend="116"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1a612b05f1c37dc50a888b773b9bbe093f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PTACallGraph::PTACallGraph</definition>
        <argsstring>(CGEK k=NormCallGraph)</argsstring>
        <name>PTACallGraph</name>
        <param>
          <type>CGEK</type>
          <declname>k</declname>
          <defval>NormCallGraph</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="261" column="5" bodyfile="lib/Graphs/PTACallGraph.cpp" bodystart="105" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1a8a1621038edeb847bfc5a4a7be7620a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTACallGraph::addCallGraphNode</definition>
        <argsstring>(const SVFFunction *fun)</argsstring>
        <name>addCallGraphNode</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>fun</declname>
        </param>
        <briefdescription>
<para>Add callgraph Node. </para>
        </briefdescription>
        <detaileddescription>
<para>Add call graph node </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="264" column="10" bodyfile="lib/Graphs/PTACallGraph.cpp" bodystart="121" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1a7f1ee630caa4ec5e7ad309e1f3865e2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::PTACallGraph::~PTACallGraph</definition>
        <argsstring>()</argsstring>
        <name>~PTACallGraph</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="267" column="13" bodyfile="include/Graphs/PTACallGraph.h" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1ac6a294ec1c88862c8f7d54000f04e1f7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>CGEK</type>
        <definition>CGEK SVF::PTACallGraph::getKind</definition>
        <argsstring>() const</argsstring>
        <name>getKind</name>
        <briefdescription>
<para>Return type of this callgraph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="273" column="17" bodyfile="include/Graphs/PTACallGraph.h" bodystart="273" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1ad49fa2a288945f6910deb11acdf6a42d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>CallEdgeMap &amp;</type>
        <definition>CallEdgeMap&amp; SVF::PTACallGraph::getIndCallMap</definition>
        <argsstring>()</argsstring>
        <name>getIndCallMap</name>
        <briefdescription>
<para>Get callees from an indirect callsite. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="280" column="24" bodyfile="include/Graphs/PTACallGraph.h" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1ac46ec4fe0094145c5fdb81394f1dd644" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::PTACallGraph::hasIndCSCallees</definition>
        <argsstring>(const CallBlockNode *cs) const</argsstring>
        <name>hasIndCSCallees</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref> *</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="284" column="17" bodyfile="include/Graphs/PTACallGraph.h" bodystart="284" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1a88bec70a6bf5c1c41bc4efd035ef0e08" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const FunctionSet &amp;</type>
        <definition>const FunctionSet&amp; SVF::PTACallGraph::getIndCSCallees</definition>
        <argsstring>(const CallBlockNode *cs) const</argsstring>
        <name>getIndCSCallees</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref> *</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="288" column="30" bodyfile="include/Graphs/PTACallGraph.h" bodystart="288" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1aab4214b734d00f5db59385535419ca58" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>u32_t</type>
        <definition>u32_t SVF::PTACallGraph::getTotalCallSiteNumber</definition>
        <argsstring>() const</argsstring>
        <name>getTotalCallSiteNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="295" column="18" bodyfile="include/Graphs/PTACallGraph.h" bodystart="295" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1a3379185589e9bcafa4f961930aaf2694" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Size_t</type>
        <definition>Size_t SVF::PTACallGraph::getNumOfResolvedIndCallEdge</definition>
        <argsstring>() const</argsstring>
        <name>getNumOfResolvedIndCallEdge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="300" column="19" bodyfile="include/Graphs/PTACallGraph.h" bodystart="300" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1a368306a46d84ccc6d07d94833aded629" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const CallInstToCallGraphEdgesMap &amp;</type>
        <definition>const CallInstToCallGraphEdgesMap&amp; SVF::PTACallGraph::getCallInstToCallGraphEdgesMap</definition>
        <argsstring>() const</argsstring>
        <name>getCallInstToCallGraphEdgesMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="305" column="46" bodyfile="include/Graphs/PTACallGraph.h" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1ac695d78f0a78e2e5f1fb4f93264e52b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTACallGraph::verifyCallGraph</definition>
        <argsstring>()</argsstring>
        <name>verifyCallGraph</name>
        <briefdescription>
<para>Issue a warning if the function which has indirect call sites can not be reached from program entry. </para>
        </briefdescription>
        <detaileddescription>
<para>Issue a warning if the function which has indirect call sites can not be reached from program entry. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="311" column="10" bodyfile="lib/Graphs/PTACallGraph.cpp" bodystart="263" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1aaab54c670518d9d6790707f76ea76aa1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_p_t_a_call_graph_node" kindref="compound">PTACallGraphNode</ref> *</type>
        <definition>PTACallGraphNode* SVF::PTACallGraph::getCallGraphNode</definition>
        <argsstring>(NodeID id) const</argsstring>
        <name>getCallGraphNode</name>
        <param>
          <type>NodeID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Get call graph node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="315" column="29" bodyfile="include/Graphs/PTACallGraph.h" bodystart="315" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1ae3ee76be0e959a736c868dc7e0128077" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_p_t_a_call_graph_node" kindref="compound">PTACallGraphNode</ref> *</type>
        <definition>PTACallGraphNode* SVF::PTACallGraph::getCallGraphNode</definition>
        <argsstring>(const SVFFunction *fun) const</argsstring>
        <name>getCallGraphNode</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>fun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="319" column="29" bodyfile="include/Graphs/PTACallGraph.h" bodystart="319" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1a72efe87a80f84a3945a93431d9414d3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>CallSiteID</type>
        <definition>CallSiteID SVF::PTACallGraph::addCallSite</definition>
        <argsstring>(const CallBlockNode *cs, const SVFFunction *callee)</argsstring>
        <name>addCallSite</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref> *</type>
          <declname>cs</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>callee</declname>
        </param>
        <briefdescription>
<para>Add/Get CallSiteID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="329" column="23" bodyfile="include/Graphs/PTACallGraph.h" bodystart="329" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1afb2daec804e81f0beb72fbc805d1c82a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>CallSiteID</type>
        <definition>CallSiteID SVF::PTACallGraph::getCallSiteID</definition>
        <argsstring>(const CallBlockNode *cs, const SVFFunction *callee) const</argsstring>
        <name>getCallSiteID</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref> *</type>
          <declname>cs</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>callee</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="343" column="23" bodyfile="include/Graphs/PTACallGraph.h" bodystart="343" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1a236d1269b1b560e09f22e0197f6f1ad7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::PTACallGraph::hasCallSiteID</definition>
        <argsstring>(const CallBlockNode *cs, const SVFFunction *callee) const</argsstring>
        <name>hasCallSiteID</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref> *</type>
          <declname>cs</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>callee</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="350" column="17" bodyfile="include/Graphs/PTACallGraph.h" bodystart="350" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1a9155629ddc58f71c6a6f2aec978e4610" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const CallSitePair &amp;</type>
        <definition>const CallSitePair&amp; SVF::PTACallGraph::getCallSitePair</definition>
        <argsstring>(CallSiteID id) const</argsstring>
        <name>getCallSitePair</name>
        <param>
          <type>CallSiteID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="356" column="31" bodyfile="include/Graphs/PTACallGraph.h" bodystart="356" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1a2c8b1674f1f942a3b5aa77b7abccb229" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref> *</type>
        <definition>const CallBlockNode* SVF::PTACallGraph::getCallSite</definition>
        <argsstring>(CallSiteID id) const</argsstring>
        <name>getCallSite</name>
        <param>
          <type>CallSiteID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="362" column="32" bodyfile="include/Graphs/PTACallGraph.h" bodystart="362" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1a42035e9669204ddd5d38583db21af3d7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
        <definition>const SVFFunction* SVF::PTACallGraph::getCallerOfCallSite</definition>
        <argsstring>(CallSiteID id) const</argsstring>
        <name>getCallerOfCallSite</name>
        <param>
          <type>CallSiteID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="366" column="30" bodyfile="include/Graphs/PTACallGraph.h" bodystart="366" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1aacd5f35171717cb4d758c17bef828a0f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
        <definition>const SVFFunction* SVF::PTACallGraph::getCalleeOfCallSite</definition>
        <argsstring>(CallSiteID id) const</argsstring>
        <name>getCalleeOfCallSite</name>
        <param>
          <type>CallSiteID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="370" column="30" bodyfile="include/Graphs/PTACallGraph.h" bodystart="370" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1a6d29a39440d8f6290e2e8b7322b965fb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_p_t_a_call_graph_edge" kindref="compound">PTACallGraphEdge</ref> *</type>
        <definition>PTACallGraphEdge * PTACallGraph::hasGraphEdge</definition>
        <argsstring>(PTACallGraphNode *src, PTACallGraphNode *dst, PTACallGraphEdge::CEDGEK kind, CallSiteID csId) const</argsstring>
        <name>hasGraphEdge</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_t_a_call_graph_node" kindref="compound">PTACallGraphNode</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_t_a_call_graph_node" kindref="compound">PTACallGraphNode</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>PTACallGraphEdge::CEDGEK</type>
          <declname>kind</declname>
        </param>
        <param>
          <type>CallSiteID</type>
          <declname>csId</declname>
        </param>
        <briefdescription>
<para>Whether we have aleady created this call graph edge. </para>
        </briefdescription>
        <detaileddescription>
<para>Whether we have already created this call graph edge </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="376" column="22" bodyfile="lib/Graphs/PTACallGraph.cpp" bodystart="133" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1a2634a24621ab93fae7ec1cf94a8cba0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_p_t_a_call_graph_edge" kindref="compound">PTACallGraphEdge</ref> *</type>
        <definition>PTACallGraphEdge * PTACallGraph::getGraphEdge</definition>
        <argsstring>(PTACallGraphNode *src, PTACallGraphNode *dst, PTACallGraphEdge::CEDGEK kind, CallSiteID csId)</argsstring>
        <name>getGraphEdge</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_t_a_call_graph_node" kindref="compound">PTACallGraphNode</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_t_a_call_graph_node" kindref="compound">PTACallGraphNode</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>PTACallGraphEdge::CEDGEK</type>
          <declname>kind</declname>
        </param>
        <param>
          <type>CallSiteID</type>
          <declname>csId</declname>
        </param>
        <briefdescription>
<para>Get call graph edge via nodes. </para>
        </briefdescription>
        <detaileddescription>
<para>get CallGraph edge via nodes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="378" column="22" bodyfile="lib/Graphs/PTACallGraph.cpp" bodystart="150" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1a486f79252c216eb5a9f4c09261a24ae2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::PTACallGraph::getCallees</definition>
        <argsstring>(const CallBlockNode *cs, FunctionSet &amp;callees)</argsstring>
        <name>getCallees</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref> *</type>
          <declname>cs</declname>
        </param>
        <param>
          <type>FunctionSet &amp;</type>
          <declname>callees</declname>
        </param>
        <briefdescription>
<para>Get all callees for a callsite. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="381" column="17" bodyfile="include/Graphs/PTACallGraph.h" bodystart="381" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1afdd308d681cb2a57e9473186f431db61" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::PTACallGraph::hasCallGraphEdge</definition>
        <argsstring>(const CallBlockNode *inst) const</argsstring>
        <name>hasCallGraphEdge</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref> *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Get call graph edge via call instruction. </para>
        </briefdescription>
        <detaileddescription>
<para>whether this call instruction has a valid call graph edge </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="396" column="17" bodyfile="include/Graphs/PTACallGraph.h" bodystart="396" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1acf542e7e581ffa8453066f4c8cdfb65c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>CallGraphEdgeSet::const_iterator</type>
        <definition>CallGraphEdgeSet::const_iterator SVF::PTACallGraph::getCallEdgeBegin</definition>
        <argsstring>(const CallBlockNode *inst) const</argsstring>
        <name>getCallEdgeBegin</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref> *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="400" column="45" bodyfile="include/Graphs/PTACallGraph.h" bodystart="400" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1abfa1f3777d16597392385cf7d8bac472" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>CallGraphEdgeSet::const_iterator</type>
        <definition>CallGraphEdgeSet::const_iterator SVF::PTACallGraph::getCallEdgeEnd</definition>
        <argsstring>(const CallBlockNode *inst) const</argsstring>
        <name>getCallEdgeEnd</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref> *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="407" column="45" bodyfile="include/Graphs/PTACallGraph.h" bodystart="407" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1a3154bbc421fc85649e786ed67ca03750" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::PTACallGraph::addEdge</definition>
        <argsstring>(PTACallGraphEdge *edge)</argsstring>
        <name>addEdge</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_t_a_call_graph_edge" kindref="compound">PTACallGraphEdge</ref> *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
<para>Add call graph edge. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="416" column="17" bodyfile="include/Graphs/PTACallGraph.h" bodystart="416" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1ab0da49175c64d8e2fccd19680d79771e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTACallGraph::addDirectCallGraphEdge</definition>
        <argsstring>(const CallBlockNode *call, const SVFFunction *callerFun, const SVFFunction *calleeFun)</argsstring>
        <name>addDirectCallGraphEdge</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref> *</type>
          <declname>call</declname>
          <defname>cs</defname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>callerFun</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>calleeFun</declname>
        </param>
        <briefdescription>
<para>Add direct/indirect call edges. </para>
        </briefdescription>
        <detaileddescription>
<para>Add direct call edges </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="424" column="10" bodyfile="lib/Graphs/PTACallGraph.cpp" bodystart="165" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1a09d0b8461ec0e678e1e69368b0f66b02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTACallGraph::addIndirectCallGraphEdge</definition>
        <argsstring>(const CallBlockNode *cs, const SVFFunction *callerFun, const SVFFunction *calleeFun)</argsstring>
        <name>addIndirectCallGraphEdge</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref> *</type>
          <declname>cs</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>callerFun</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>calleeFun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add indirect call edge to update call graph </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="425" column="10" bodyfile="lib/Graphs/PTACallGraph.cpp" bodystart="185" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1a80070e2f50ed1036d334250841215ca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTACallGraph::getAllCallSitesInvokingCallee</definition>
        <argsstring>(const SVFFunction *callee, PTACallGraphEdge::CallInstSet &amp;csSet)</argsstring>
        <name>getAllCallSitesInvokingCallee</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>callee</declname>
        </param>
        <param>
          <type>PTACallGraphEdge::CallInstSet &amp;</type>
          <declname>csSet</declname>
        </param>
        <briefdescription>
<para>Get callsites invoking the callee. </para>
        </briefdescription>
        <detaileddescription>
<para>Get all callsite invoking this callee </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="430" column="10" bodyfile="lib/Graphs/PTACallGraph.cpp" bodystart="207" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1a0d2544130cc2cdc3ac418c975c278eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTACallGraph::getDirCallSitesInvokingCallee</definition>
        <argsstring>(const SVFFunction *callee, PTACallGraphEdge::CallInstSet &amp;csSet)</argsstring>
        <name>getDirCallSitesInvokingCallee</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>callee</declname>
        </param>
        <param>
          <type>PTACallGraphEdge::CallInstSet &amp;</type>
          <declname>csSet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get direct callsite invoking this callee </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="431" column="10" bodyfile="lib/Graphs/PTACallGraph.cpp" bodystart="229" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1a9a4b0c6672288b9201ab254b4c49548d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTACallGraph::getIndCallSitesInvokingCallee</definition>
        <argsstring>(const SVFFunction *callee, PTACallGraphEdge::CallInstSet &amp;csSet)</argsstring>
        <name>getIndCallSitesInvokingCallee</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>callee</declname>
        </param>
        <param>
          <type>PTACallGraphEdge::CallInstSet &amp;</type>
          <declname>csSet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get indirect callsite invoking this callee </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="432" column="10" bodyfile="lib/Graphs/PTACallGraph.cpp" bodystart="246" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1aa03df6b1ebf7f8356a47fa074d3f91a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PTACallGraph::isReachableBetweenFunctions</definition>
        <argsstring>(const SVFFunction *srcFn, const SVFFunction *dstFn) const</argsstring>
        <name>isReachableBetweenFunctions</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>srcFn</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>dstFn</declname>
        </param>
        <briefdescription>
<para>Whether its reachable between two functions. </para>
        </briefdescription>
        <detaileddescription>
<para>Whether its reachable between two functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="436" column="10" bodyfile="lib/Graphs/PTACallGraph.cpp" bodystart="283" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_1a841be22581a7896d8924564e7199f62b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTACallGraph::dump</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>dump</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Dump the graph. </para>
        </briefdescription>
        <detaileddescription>
<para>Dump call graph into dot file </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="439" column="10" bodyfile="lib/Graphs/PTACallGraph.cpp" bodystart="314" bodyend="317"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>GenericCallGraphTy</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
      <node id="3">
        <label>SVF::ThreadCallGraph</label>
        <link refid="class_s_v_f_1_1_thread_call_graph"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>SVF::PTACallGraph</label>
        <link refid="class_s_v_f_1_1_p_t_a_call_graph"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>GenericCallGraphTy</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
      <node id="1">
        <label>SVF::PTACallGraph</label>
        <link refid="class_s_v_f_1_1_p_t_a_call_graph"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/Graphs/PTACallGraph.h" line="218" column="1" bodyfile="include/Graphs/PTACallGraph.h" bodystart="219" bodyend="440"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a8a1621038edeb847bfc5a4a7be7620a3" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>addCallGraphNode</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a72efe87a80f84a3945a93431d9414d3d" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>addCallSite</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1ab0da49175c64d8e2fccd19680d79771e" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>addDirectCallGraphEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a3154bbc421fc85649e786ed67ca03750" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>addEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a0a8831a5429005ff9d71adbd6bf3994f" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>addGNode</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a09d0b8461ec0e678e1e69368b0f66b02" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>addIndirectCallGraphEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a0d9744b1b0e7a09a6f7af29188e243b7" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>begin</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a3385b008ae03444404c1e392fd47f1d6" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>begin</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a47bfbae96294592f4e6060deddbe5700" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>CallEdgeMap</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a9b7f6979a95244c620fdb791e053237b" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>CallGraphEdgeConstIter</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a2f28a1ce0c7d6a0bc2fc2627e90acf1c" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>CallGraphEdgeIter</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a1ad288117daa4031e195eb35d805cac6" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>CallGraphEdgeSet</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1af0e1a940677fb7f6c4aaef2f9c46c3e5" prot="protected" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>callGraphNodeNum</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1ab29003352d8152b9d0fd37919ac212c5" prot="protected" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>callinstToCallGraphEdgesMap</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a16d115dd425ec02ab6d91c711fab7fd9" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>CallInstToCallGraphEdgesMap</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a1d1ea71cb29e190ad3c6817810bd57c7" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>CallSitePair</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1ae4e3e5f108bc1e47af8f58d2e43345d2" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>CallSiteToIdMap</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a5b1fe2b2314db947cd5e709b7285fe1c" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>CGEK</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a5dfa3f178d4abf37177d0d74ff4c6a97" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>const_iterator</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a75ffe4f24d59ad42601b7550aa988187" prot="private" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>csToIdMap</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a6a794ee3e4b217a1a0c6edf4bcdbdb69" prot="protected" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>destroy</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a841be22581a7896d8924564e7199f62b" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>dump</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a2fbc96de5f066469c2739229307bcc0c" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>edgeNum</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a12d493d6ad2b6c89f240c9ccfa3bdf30" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>EdgeType</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a4bef15157423cef48dc7333a803cd27d" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>end</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a3001af3746d26b7dc0a212db5e48a4bb" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>end</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a5f5a5ec7e707a21994d301cc07d32a5a" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>FunctionSet</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a049bc978a93f0db1fe91efb6feb22b14" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>FunToCallGraphNodeMap</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a97986d6e6732c78b04cc053f0e9d1367" prot="protected" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>funToCallGraphNodeMap</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1aa5837cddbbd63c5a8ac5725bcecb192f" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>GenericGraph</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a80070e2f50ed1036d334250841215ca8" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getAllCallSitesInvokingCallee</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1acf542e7e581ffa8453066f4c8cdfb65c" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getCallEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1abfa1f3777d16597392385cf7d8bac472" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getCallEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1aacd5f35171717cb4d758c17bef828a0f" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getCalleeOfCallSite</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a486f79252c216eb5a9f4c09261a24ae2" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getCallees</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a42035e9669204ddd5d38583db21af3d7" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getCallerOfCallSite</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1aaab54c670518d9d6790707f76ea76aa1" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getCallGraphNode</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1ae3ee76be0e959a736c868dc7e0128077" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getCallGraphNode</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a368306a46d84ccc6d07d94833aded629" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getCallInstToCallGraphEdgesMap</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a2c8b1674f1f942a3b5aa77b7abccb229" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getCallSite</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1afb2daec804e81f0beb72fbc805d1c82a" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getCallSiteID</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a9155629ddc58f71c6a6f2aec978e4610" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getCallSitePair</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a0d2544130cc2cdc3ac418c975c278eb2" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getDirCallSitesInvokingCallee</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a43c9c773bfa17abf481c33073e30d01b" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getGNode</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a2634a24621ab93fae7ec1cf94a8cba0b" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getGraphEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1ad49fa2a288945f6910deb11acdf6a42d" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getIndCallMap</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a9a4b0c6672288b9201ab254b4c49548d" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getIndCallSitesInvokingCallee</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a88bec70a6bf5c1c41bc4efd035ef0e08" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getIndCSCallees</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1ac6a294ec1c88862c8f7d54000f04e1f7" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getKind</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a3379185589e9bcafa4f961930aaf2694" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getNumOfResolvedIndCallEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1aab4214b734d00f5db59385535419ca58" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getTotalCallSiteNumber</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a29cab1426b0000bd87c026ab8c9979c0" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getTotalEdgeNum</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a8c8d16036008f87c7811586047599858" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>getTotalNodeNum</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1afdd308d681cb2a57e9473186f431db61" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>hasCallGraphEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a236d1269b1b560e09f22e0197f6f1ad7" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>hasCallSiteID</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a6885064afa211958af7b73f0233284e5" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>hasGNode</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a6d29a39440d8f6290e2e8b7322b965fb" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>hasGraphEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1ac46ec4fe0094145c5fdb81394f1dd644" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>hasIndCSCallees</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a5f626f5c9254b9e643d943e59068efba" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>IdToCallSiteMap</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a5d6f63baad19589a9fd1e069631e18fa" prot="private" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>idToCSMap</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a47a1ef8b67b0c92f78b4457dc3bbfe71" prot="protected" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>IDToNodeMap</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1ab9027b190f50ceefc90094e4f967f269" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>IDToNodeMapTy</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a2f2bca8219c7d769f6d2937e5cd40d14" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>incEdgeNum</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a7388dabef7300e77adf33f3999639f21" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>incNodeNum</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1adcae44bd6788954e2e4e007bff03462c" prot="private" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>indirectCallMap</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1aa03df6b1ebf7f8356a47fa074d3f91a4" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>isReachableBetweenFunctions</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1ac213302cf5c7cdf3b66f7b18649d0fbc" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>iterator</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a6a5927a58cc777a0745bd0ca635f25b1" prot="private" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>kind</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a38122734cbe71551a420dfb7fee2012e" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>nodeNum</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a86c50fc6775fd29f88df2cb4646bb211" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>NodeType</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a5b1fe2b2314db947cd5e709b7285fe1ca6bbe72ac881caacbded694492df5417c" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>NormCallGraph</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1ad73bc2f0669ff2a28ccabb5355278826" prot="protected" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>numOfResolvedIndCallEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a612b05f1c37dc50a888b773b9bbe093f" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>PTACallGraph</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a1817b65e76052f11e36a67d6b9efd915" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>removeGNode</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a5b1fe2b2314db947cd5e709b7285fe1ca4fe819bb1488afc48b04c1b7bef04bc2" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>ThdCallGraph</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a276338e88cc286f6a1808b1fcdf74d9a" prot="private" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>totalCallSiteNum</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1ac695d78f0a78e2e5f1fb4f93264e52b8" prot="public" virt="non-virtual"><scope>SVF::PTACallGraph</scope><name>verifyCallGraph</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a3b94850d788a1b8da45e9b8bf2f2df2c" prot="public" virt="virtual"><scope>SVF::PTACallGraph</scope><name>~GenericGraph</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_1a7f1ee630caa4ec5e7ad309e1f3865e2e" prot="public" virt="virtual"><scope>SVF::PTACallGraph</scope><name>~PTACallGraph</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
