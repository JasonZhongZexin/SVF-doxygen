<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_flow_sensitive_stat" kind="class" language="C++" prot="public">
    <compoundname>SVF::FlowSensitiveStat</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_p_t_a_stat" prot="public" virt="non-virtual">SVF::PTAStat</basecompoundref>
    <includes refid="_w_p_a_stat_8h" local="no">WPAStat.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="class_s_v_f_1_1_flow_sensitive_stat_1ab11996ab5606f51c977b9b1385c13d71" prot="private" static="no" strong="no">
        <type></type>
        <name>ENUM_INOUT</name>
        <enumvalue id="class_s_v_f_1_1_flow_sensitive_stat_1ab11996ab5606f51c977b9b1385c13d71ad0b57a5d90c72b67337a68c04ae34739" prot="private">
          <name>IN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_flow_sensitive_stat_1ab11996ab5606f51c977b9b1385c13d71ac018f116c78ed5e314b52e5d743f3fa5" prot="private">
          <name>OUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="106" column="5" bodyfile="include/WPA/WPAStat.h" bodystart="107" bodyend="110"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_flow_sensitive_stat_1a55d45e82ea3d338114e50da877bcfb75" prot="public" static="no">
        <type>FlowSensitive::DFInOutMap</type>
        <definition>typedef FlowSensitive::DFInOutMap SVF::FlowSensitiveStat::DFInOutMap</definition>
        <argsstring></argsstring>
        <name>DFInOutMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="89" column="39" bodyfile="include/WPA/WPAStat.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_flow_sensitive_stat_1a1b605e86f33e79f7d7cd88dc54f2c19e" prot="public" static="no">
        <type>FlowSensitive::PtsMap</type>
        <definition>typedef FlowSensitive::PtsMap SVF::FlowSensitiveStat::PtsMap</definition>
        <argsstring></argsstring>
        <name>PtsMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="90" column="35" bodyfile="include/WPA/WPAStat.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1af7e04f73ee17647c52e571cadef8729f" prot="public" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_flow_sensitive" kindref="compound">FlowSensitive</ref> *</type>
        <definition>FlowSensitive* SVF::FlowSensitiveStat::fspta</definition>
        <argsstring></argsstring>
        <name>fspta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="92" column="20" bodyfile="include/WPA/WPAStat.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1aea1cb2baea2f3c4d2ef62656a56bd077" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_NumOfNullPtr</definition>
        <argsstring></argsstring>
        <name>_NumOfNullPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="124" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1a767a935ec5bacd97f4fa79a05c165cc2" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_NumOfConstantPtr</definition>
        <argsstring></argsstring>
        <name>_NumOfConstantPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="125" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1a74ab9e235e08e4840223ddf0599a9da7" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_NumOfBlackholePtr</definition>
        <argsstring></argsstring>
        <name>_NumOfBlackholePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="126" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1aa39c5d81cef922d7a0f98913dbf51fb0" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_NumOfSVFGNodesHaveInOut[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_NumOfSVFGNodesHaveInOut</name>
        <briefdescription>
<para>number of <ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> nodes which have IN/OUT set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="129" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1a2e9a786af3bce4b345d88ff05cd71f0f" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_NumOfFormalInSVFGNodesHaveInOut[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_NumOfFormalInSVFGNodesHaveInOut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="130" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1a1cfd15cd46178718ea459f79738e0b69" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_NumOfFormalOutSVFGNodesHaveInOut[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_NumOfFormalOutSVFGNodesHaveInOut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="131" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1a0530fa56a9cea05d25ee350e9db9ed2a" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_NumOfActualInSVFGNodesHaveInOut[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_NumOfActualInSVFGNodesHaveInOut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="132" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1a3ac011649b3c0ced46283265ba88dd0e" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_NumOfActualOutSVFGNodesHaveInOut[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_NumOfActualOutSVFGNodesHaveInOut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="133" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1ab6fdf88fe931ead9a9b8f353c547c4ae" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_NumOfLoadSVFGNodesHaveInOut[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_NumOfLoadSVFGNodesHaveInOut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="134" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1ae0db364bf6657c770deabbe75d901a46" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_NumOfStoreSVFGNodesHaveInOut[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_NumOfStoreSVFGNodesHaveInOut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="135" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1a60741c38448e909388942a5e9f5b5ef4" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_NumOfMSSAPhiSVFGNodesHaveInOut[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_NumOfMSSAPhiSVFGNodesHaveInOut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="136" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1ab6ccd8de2b7573f34c4d04b7f40d6522" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_NumOfVarHaveINOUTPts[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_NumOfVarHaveINOUTPts</name>
        <briefdescription>
<para>number of pag nodes which have points-to set in IN/OUT set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="139" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1a2162dffeb03e84daca52d6d8429b8529" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_NumOfVarHaveEmptyINOUTPts[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_NumOfVarHaveEmptyINOUTPts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="140" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1acebccfa66669033af9f9d4b3d021ec1a" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_NumOfVarHaveINOUTPtsInFormalIn[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_NumOfVarHaveINOUTPtsInFormalIn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="141" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1a0f9098bb73b06ba963bdce8ea26f0fa3" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_NumOfVarHaveINOUTPtsInFormalOut[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_NumOfVarHaveINOUTPtsInFormalOut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="142" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1a505057e9b8962359c9461395fd7ed138" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_NumOfVarHaveINOUTPtsInActualIn[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_NumOfVarHaveINOUTPtsInActualIn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="143" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1abeef6e8ba26d73d9e981a23d9f96e4d7" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_NumOfVarHaveINOUTPtsInActualOut[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_NumOfVarHaveINOUTPtsInActualOut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="144" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1aa754517cc9b5faeea010e336027c0ab4" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_NumOfVarHaveINOUTPtsInLoad[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_NumOfVarHaveINOUTPtsInLoad</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="145" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1a21f2c005bf927c0c23772172c08402bf" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_NumOfVarHaveINOUTPtsInStore[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_NumOfVarHaveINOUTPtsInStore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="146" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1a90f1c6072a153c856765b24bbcbfaeef" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_NumOfVarHaveINOUTPtsInMSSAPhi[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_NumOfVarHaveINOUTPtsInMSSAPhi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="147" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1a08ea2c3d891337992291123a1bb4da97" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_PotentialNumOfVarHaveINOUTPts[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_PotentialNumOfVarHaveINOUTPts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="148" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1a737d955e3707cf758a5580eab2e60e96" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_MaxPtsSize</definition>
        <argsstring></argsstring>
        <name>_MaxPtsSize</name>
        <briefdescription>
<para>sizes of points-to set </para>
        </briefdescription>
        <detaileddescription>
<para>max points-to set size. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="151" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1aecf324702d542f824e8b7a4d9827f557" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_MaxTopLvlPtsSize</definition>
        <argsstring></argsstring>
        <name>_MaxTopLvlPtsSize</name>
        <briefdescription>
<para>max points-to set size in top-level pointers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="152" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1ab3e56ed16ce45d35c8f35f1fc1248c36" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_MaxInOutPtsSize[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_MaxInOutPtsSize</name>
        <briefdescription>
<para>max points-to set size in IN/OUT set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="153" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1a8b5bfc9c3cbf9451603860789640246a" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_TotalPtsSize</definition>
        <argsstring></argsstring>
        <name>_TotalPtsSize</name>
        <briefdescription>
<para>total points-to set size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="155" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1a07adfab66dd7ed22993e59ad3bf74946" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SVF::FlowSensitiveStat::_AvgPtsSize</definition>
        <argsstring></argsstring>
        <name>_AvgPtsSize</name>
        <briefdescription>
<para>average points-to set size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="157" column="12" bodyfile="include/WPA/WPAStat.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1a31235f25af7970142ef235681d2a447c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SVF::FlowSensitiveStat::_AvgTopLvlPtsSize</definition>
        <argsstring></argsstring>
        <name>_AvgTopLvlPtsSize</name>
        <briefdescription>
<para>average points-to set size in top-level pointers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="158" column="12" bodyfile="include/WPA/WPAStat.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1af45e08caf715cca450390ffc2fddb049" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SVF::FlowSensitiveStat::_AvgInOutPtsSize[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_AvgInOutPtsSize</name>
        <briefdescription>
<para>average points-to set size in IN set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="159" column="12" bodyfile="include/WPA/WPAStat.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1a08bfa021eab91d647932aa790d300bbc" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SVF::FlowSensitiveStat::_AvgAddrTakenVarPtsSize</definition>
        <argsstring></argsstring>
        <name>_AvgAddrTakenVarPtsSize</name>
        <briefdescription>
<para>average points-to set size of addr-taken variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="160" column="12" bodyfile="include/WPA/WPAStat.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1a7c88e2528a93511ba8dde4805cadcd30" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_MaxAddrTakenVarPts</definition>
        <argsstring></argsstring>
        <name>_MaxAddrTakenVarPts</name>
        <briefdescription>
<para>max points-to set size of addr-taken variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="162" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_flow_sensitive_stat_1ae2d4df7129385905775489f1389a9fa7" prot="private" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::FlowSensitiveStat::_NumOfAddrTakeVar</definition>
        <argsstring></argsstring>
        <name>_NumOfAddrTakeVar</name>
        <briefdescription>
<para>number of occurrences of addr-taken variables in load/store. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="163" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_flow_sensitive_stat_1a2a7ae289b0400e63fa217f8717f4ffa9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::FlowSensitiveStat::FlowSensitiveStat</definition>
        <argsstring>(FlowSensitive *pta)</argsstring>
        <name>FlowSensitiveStat</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_flow_sensitive" kindref="compound">FlowSensitive</ref> *</type>
          <declname>pta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="94" column="5" bodyfile="include/WPA/WPAStat.h" bodystart="94" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_flow_sensitive_stat_1a308c187020098a7f421592e8baa98967" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::FlowSensitiveStat::~FlowSensitiveStat</definition>
        <argsstring>()</argsstring>
        <name>~FlowSensitiveStat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="101" column="13" bodyfile="include/WPA/WPAStat.h" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_flow_sensitive_stat_1a059047d05e9873a624e333162a460571" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void FlowSensitiveStat::performStat</definition>
        <argsstring>()</argsstring>
        <name>performStat</name>
        <reimplements refid="class_s_v_f_1_1_p_t_a_stat_1acfed70588cf921694db35990ec3c7497">performStat</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start statistics </para>
        </detaileddescription>
        <inbodydescription>
<para><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> nodes.</para>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="103" column="18" bodyfile="lib/WPA/FlowSensitiveStat.cpp" bodystart="84" bodyend="268"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_s_v_f_1_1_flow_sensitive_stat_1ab4c205136b22a13b54ceb48135730d23" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FlowSensitiveStat::clearStat</definition>
        <argsstring>()</argsstring>
        <name>clearStat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear statistics </para>
        </detaileddescription>
        <inbodydescription>
<para><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> nodes</para>
<para><ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> nodes.</para>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="112" column="10" bodyfile="lib/WPA/FlowSensitiveStat.cpp" bodystart="41" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_flow_sensitive_stat_1a36f7be42772b2df6f7594c51b7dc4770" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FlowSensitiveStat::statNullPtr</definition>
        <argsstring>()</argsstring>
        <name>statNullPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>TODO: change the condition here to fetch the points-to set</para>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="114" column="10" bodyfile="lib/WPA/FlowSensitiveStat.cpp" bodystart="270" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_flow_sensitive_stat_1af51e5b90f7bc52e3657a708c7bc5bb75" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FlowSensitiveStat::statPtsSize</definition>
        <argsstring>()</argsstring>
        <name>statPtsSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Points-to size </para>
        </detaileddescription>
        <inbodydescription>
<para>get points-to set size information for top-level pointers.</para>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="116" column="10" bodyfile="lib/WPA/FlowSensitiveStat.cpp" bodystart="321" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_flow_sensitive_stat_1a81785227a688389c68171a1fbd55fa9b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FlowSensitiveStat::statAddrVarPtsSize</definition>
        <argsstring>()</argsstring>
        <name>statAddrVarPtsSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Points-to size </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="118" column="10" bodyfile="lib/WPA/FlowSensitiveStat.cpp" bodystart="475" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_flow_sensitive_stat_1a04466753c771238c6e1cc57964061dce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FlowSensitiveStat::calculateAddrVarPts</definition>
        <argsstring>(NodeID pointer, const SVFGNode *node)</argsstring>
        <name>calculateAddrVarPts</name>
        <param>
          <type>NodeID</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">SVFGNode</ref> *</type>
          <declname>node</declname>
          <defname>svfg_node</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Points-to size </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="120" column="10" bodyfile="lib/WPA/FlowSensitiveStat.cpp" bodystart="492" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_flow_sensitive_stat_1a8ae7448f6210b6c759a33e6fc8a8cee8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FlowSensitiveStat::statInOutPtsSize</definition>
        <argsstring>(const DFInOutMap &amp;data, ENUM_INOUT inOrOut)</argsstring>
        <name>statInOutPtsSize</name>
        <param>
          <type>const DFInOutMap &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>ENUM_INOUT</type>
          <declname>inOrOut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>points-to target number</para>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="122" column="10" bodyfile="lib/WPA/FlowSensitiveStat.cpp" bodystart="359" bodyend="470"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Statistics of flow-sensitive analysis </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>SVF::PTAStat</label>
        <link refid="class_s_v_f_1_1_p_t_a_stat"/>
      </node>
      <node id="1">
        <label>SVF::FlowSensitiveStat</label>
        <link refid="class_s_v_f_1_1_flow_sensitive_stat"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="26">
        <label>SVF::MRGenerator</label>
        <link refid="class_s_v_f_1_1_m_r_generator"/>
      </node>
      <node id="32">
        <label>SVF::GenericGraph&lt; ConstraintNode, ConstraintEdge &gt;</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
      <node id="12">
        <label>GenericICFGTy</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
      <node id="30">
        <label>WPAConstraintSolver</label>
        <link refid="class_s_v_f_1_1_w_p_a_solver"/>
        <childnode refid="6" relation="usage">
          <edgelabel>scc</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>worklist</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>SVF::ConstraintGraph</label>
        <link refid="class_s_v_f_1_1_constraint_graph"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>pag</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>nodesToBeCollapsed</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>AddrCGEdgeSet</edgelabel>
          <edgelabel>LoadCGEdgeSet</edgelabel>
          <edgelabel>StoreCGEdgeSet</edgelabel>
          <edgelabel>directEdgeSet</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>WPASVFGFSSolver</label>
        <link refid="class_s_v_f_1_1_w_p_a_f_s_solver"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>SVF::GenericNode&lt; ConstraintNode, ConstraintEdge &gt;</label>
        <link refid="class_s_v_f_1_1_generic_node"/>
      </node>
      <node id="5">
        <label>SVF::WPASolver&lt; GraphType &gt;</label>
        <link refid="class_s_v_f_1_1_w_p_a_solver"/>
        <childnode refid="6" relation="usage">
          <edgelabel>scc</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>worklist</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>SVF::AndersenBase</label>
        <link refid="class_s_v_f_1_1_andersen_base"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>consCG</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>GenericCallGraphTy</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
      <node id="16">
        <label>SVF::PAG</label>
        <link refid="class_s_v_f_1_1_p_a_g"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>SVF::SCCDetection&lt; GraphType &gt;</label>
        <link refid="class_s_v_f_1_1_s_c_c_detection"/>
      </node>
      <node id="7">
        <label>SVF::FIFOWorkList&lt; NodeID &gt;</label>
        <link refid="class_s_v_f_1_1_f_i_f_o_work_list"/>
      </node>
      <node id="2">
        <label>SVF::PTAStat</label>
        <link refid="class_s_v_f_1_1_p_t_a_stat"/>
      </node>
      <node id="15">
        <label>SVF::CommonCHGraph</label>
        <link refid="class_s_v_f_1_1_common_c_h_graph"/>
      </node>
      <node id="24">
        <label>SVF::MemSSA</label>
        <link refid="class_s_v_f_1_1_mem_s_s_a"/>
        <childnode refid="8" relation="usage">
          <edgelabel>pta</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>stat</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>mrGen</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>SVF::SVFG</label>
        <link refid="class_s_v_f_1_1_s_v_f_g"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>stat</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>pta</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>mssa</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>SVF::ICFG</label>
        <link refid="class_s_v_f_1_1_i_c_f_g"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>SVF::MemSSAStat</label>
        <link refid="class_s_v_f_1_1_mem_s_s_a_stat"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>SVF::GenericGraph&lt; PAGNode, PAGEdge &gt;</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
      <node id="10">
        <label>SVF::SVFModule</label>
        <link refid="class_s_v_f_1_1_s_v_f_module"/>
      </node>
      <node id="23">
        <label>SVF::SVFGStat</label>
        <link refid="class_s_v_f_1_1_s_v_f_g_stat"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>SVF::AndersenWaveDiff</label>
        <link refid="class_s_v_f_1_1_andersen_wave_diff"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>SVF::TypeSystem</label>
        <link refid="class_s_v_f_1_1_type_system"/>
      </node>
      <node id="1">
        <label>SVF::FlowSensitiveStat</label>
        <link refid="class_s_v_f_1_1_flow_sensitive_stat"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>fspta</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>SVF::Andersen</label>
        <link refid="class_s_v_f_1_1_andersen"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SVF::FlowSensitive</label>
        <link refid="class_s_v_f_1_1_flow_sensitive"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>memSSA</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>ander</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>fspta</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>svfg</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>SVF::SVFGBuilder</label>
        <link refid="class_s_v_f_1_1_s_v_f_g_builder"/>
        <childnode refid="20" relation="usage">
          <edgelabel>globalSvfg</edgelabel>
          <edgelabel>svfg</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>SVF::VFG</label>
        <link refid="class_s_v_f_1_1_v_f_g"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>callgraph</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>pag</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>SVF::BVDataPTAImpl</label>
        <link refid="class_s_v_f_1_1_b_v_data_p_t_a_impl"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>SVF::PTACallGraph</label>
        <link refid="class_s_v_f_1_1_p_t_a_call_graph"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>GenericVFGTy</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
      <node id="9">
        <label>SVF::PointerAnalysis</label>
        <link refid="class_s_v_f_1_1_pointer_analysis"/>
        <childnode refid="6" relation="usage">
          <edgelabel>callGraphSCC</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>svfMod</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>icfg</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>ptaCallGraph</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>chgraph</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>pag</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>typeSystem</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>stat</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/WPA/WPAStat.h" line="86" column="1" bodyfile="include/WPA/WPAStat.h" bodystart="87" bodyend="164"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a08bfa021eab91d647932aa790d300bbc" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_AvgAddrTakenVarPtsSize</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1af45e08caf715cca450390ffc2fddb049" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_AvgInOutPtsSize</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a07adfab66dd7ed22993e59ad3bf74946" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_AvgPtsSize</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a31235f25af7970142ef235681d2a447c" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_AvgTopLvlPtsSize</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a7c88e2528a93511ba8dde4805cadcd30" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_MaxAddrTakenVarPts</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1ab3e56ed16ce45d35c8f35f1fc1248c36" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_MaxInOutPtsSize</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a737d955e3707cf758a5580eab2e60e96" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_MaxPtsSize</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1aecf324702d542f824e8b7a4d9827f557" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_MaxTopLvlPtsSize</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a0530fa56a9cea05d25ee350e9db9ed2a" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_NumOfActualInSVFGNodesHaveInOut</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a3ac011649b3c0ced46283265ba88dd0e" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_NumOfActualOutSVFGNodesHaveInOut</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1ae2d4df7129385905775489f1389a9fa7" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_NumOfAddrTakeVar</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a74ab9e235e08e4840223ddf0599a9da7" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_NumOfBlackholePtr</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a767a935ec5bacd97f4fa79a05c165cc2" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_NumOfConstantPtr</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a2e9a786af3bce4b345d88ff05cd71f0f" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_NumOfFormalInSVFGNodesHaveInOut</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a1cfd15cd46178718ea459f79738e0b69" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_NumOfFormalOutSVFGNodesHaveInOut</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1ab6fdf88fe931ead9a9b8f353c547c4ae" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_NumOfLoadSVFGNodesHaveInOut</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a60741c38448e909388942a5e9f5b5ef4" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_NumOfMSSAPhiSVFGNodesHaveInOut</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1aea1cb2baea2f3c4d2ef62656a56bd077" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_NumOfNullPtr</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1ae0db364bf6657c770deabbe75d901a46" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_NumOfStoreSVFGNodesHaveInOut</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1aa39c5d81cef922d7a0f98913dbf51fb0" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_NumOfSVFGNodesHaveInOut</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a2162dffeb03e84daca52d6d8429b8529" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_NumOfVarHaveEmptyINOUTPts</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1ab6ccd8de2b7573f34c4d04b7f40d6522" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_NumOfVarHaveINOUTPts</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a505057e9b8962359c9461395fd7ed138" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_NumOfVarHaveINOUTPtsInActualIn</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1abeef6e8ba26d73d9e981a23d9f96e4d7" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_NumOfVarHaveINOUTPtsInActualOut</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1acebccfa66669033af9f9d4b3d021ec1a" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_NumOfVarHaveINOUTPtsInFormalIn</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a0f9098bb73b06ba963bdce8ea26f0fa3" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_NumOfVarHaveINOUTPtsInFormalOut</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1aa754517cc9b5faeea010e336027c0ab4" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_NumOfVarHaveINOUTPtsInLoad</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a90f1c6072a153c856765b24bbcbfaeef" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_NumOfVarHaveINOUTPtsInMSSAPhi</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a21f2c005bf927c0c23772172c08402bf" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_NumOfVarHaveINOUTPtsInStore</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a08ea2c3d891337992291123a1bb4da97" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_PotentialNumOfVarHaveINOUTPts</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a8b5bfc9c3cbf9451603860789640246a" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>_TotalPtsSize</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1adb0edbe88a74e5e89921bcfafa4759c6" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>AveragePointsToSetSize</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a1649c9f893c5b9ec2d57a399bc050030" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>AverageTopLevPointsToSetSize</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a04466753c771238c6e1cc57964061dce" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>calculateAddrVarPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a1772bc87370b5625f71edd4476277064" prot="public" virt="virtual"><scope>SVF::FlowSensitiveStat</scope><name>callgraphStat</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1ab4c205136b22a13b54ceb48135730d23" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>clearStat</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a55d45e82ea3d338114e50da877bcfb75" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>DFInOutMap</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1afe854f7416ea408104721a083ee9fee0" prot="public" virt="virtual"><scope>SVF::FlowSensitiveStat</scope><name>endClk</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a267ba4aac2e7ceb65f008f9486d3d9f7" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>endTime</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1ab11996ab5606f51c977b9b1385c13d71" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>ENUM_INOUT</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a2a7ae289b0400e63fa217f8717f4ffa9" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>FlowSensitiveStat</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1af7e04f73ee17647c52e571cadef8729f" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>fspta</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1afa718535839a939e51afc0f8c1fbdac6" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>generalNumMap</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1aea47f02f3f56b089ba8ed45270e16eb4" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>getClk</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1ab11996ab5606f51c977b9b1385c13d71ad0b57a5d90c72b67337a68c04ae34739" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>IN</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a5b4095f427c9c7b9ec0db497ba33baea" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>localVarInRecursion</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a68c8df7d9fbb4b34254857a432e5d5e8" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>markedClocksOnly</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ab754f7768ffcd6f232b8cdf0fef6fc4e" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>MaxNumOfNodesInSCC</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1af2b45aab2eee96a1cabba3025e4375a2" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>MaxPointsToSetSize</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1af6a6e3ea4c7f8e1c984bea8d5fb9a7c0" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>MaxStructSize</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ad1a7e7aec8f272017be7d0b6acda86a4" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumberOfFieldInsensitiveObj</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ab62eb21c7dc03f68b0509c31451b2e98" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumberOfFieldSensitiveObj</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ac5bf59a0a7a760c9fec5f22dedec5eb6" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfAddrs</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a6cbeca77d0681f7da28979cbd0f661b2" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfCalls</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ae74458d96423e4a7391fe8697d5a9a67" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfConstantObjs</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a97a8b662356fc89cdd2cb9463fa5578b" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfCopys</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ac518843a4148ecc45027ccc19a690c05" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfCycles</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a1745e5c3c026a130a70954da9c0074b1" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfFieldExpand</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ae9952b7456b5102113d1fee4d9d7801a" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfFunctionObjs</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a16f9bdb5387471d0bd825c4a9cbcb22e" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfGepFieldObjects</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a164249b9d35606387e628529c643d119" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfGepFieldPointers</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1acc5e4740e11cb6f9794723e5f61ab63b" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfGeps</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a57574c85a5a875a05ef83d3c916cf3e5" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfGlobalObjs</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a4aff48eaa2045ee619a8ea793a9234b8" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfHeapObjs</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a618707c52da086e04f5e7bff31794cf3" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfIndirectCallSites</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ad51d2bd924f049e440b3d0dd0d423524" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfIndirectEdgeSolved</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ae95fb0771a71ead27da79a45cac47a36" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfIterations</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a4aa7356142f51d942063be5a2910940f" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfLoads</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a5c09f41916e40d784a63e301584511f9" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfMemObjects</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1aea3e95097b3b9d326bef0d36f17e51a5" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfNodesInCycles</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a9014371b8ed95ab8135eed2a7fa945f1" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfNonPtrObjs</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a1211e1c7f16b715f32ecdef83f39a8c6" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfNullPointer</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1adb31b163f0cbb9d9ce207ef5d8c075fa" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfObjsHasConstArray</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a918051b1d0eb4f49c349352408cc9751" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfObjsHasConstStruct</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a78693e8bf93d712eb76c9d6dc0c45ae6" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfObjsHasVarArray</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a95edd35cec92fa4cacc8b59b5eecc827" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfObjsHasVarStruct</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a218748b401bdd3d5eebd45eea0026b12" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfPointers</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a0de03cdb382b353c6c1495c0f80cfe19" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfProcessedAddrs</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ad30b36fb1884d1ef0b01c3b36a245211" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfProcessedCopys</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1aaa9d98f868c0724cb57c6934e783d1e5" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfProcessedGeps</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a17531fa1df42df0b19191d61853380d9" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfProcessedLoads</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a5b9bc0e9dac6ac97199476f6b7ea1edf" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfProcessedStores</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1aefcc3638fac7034ab3542be8eb01ab58" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfPWCCycles</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a0a552611fcd20e1310290bdae404a514" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfReturns</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ad1731b88c24bb79728f62cd3e9c55699" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfSCCDetection</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a07a1db62ddba50bda787b2985ef8d135" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfSfr</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ae05503909688a17dc1f282d1d029d24e" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfStackObjs</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a656ad9980ff05af396ed6754c50916e7" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NumOfStores</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a7e8f9f9c1662822f3f8bd016db84e1e6" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>NUMStatMap</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1ab11996ab5606f51c977b9b1385c13d71ac018f116c78ed5e314b52e5d743f3fa5" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>OUT</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a059047d05e9873a624e333162a460571" prot="public" virt="virtual"><scope>SVF::FlowSensitiveStat</scope><name>performStat</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1adef061d4454a1b1fb46efa4013d9a956" prot="public" virt="virtual"><scope>SVF::FlowSensitiveStat</scope><name>performStatPerQuery</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1aa5f455bfa79743b8e263431593d29bbf" prot="public" virt="virtual"><scope>SVF::FlowSensitiveStat</scope><name>printStat</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a7ce0630cfe41448bec002f03a176175d" prot="public" virt="virtual"><scope>SVF::FlowSensitiveStat</scope><name>printStatPerQuery</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a95a0a7861731072baeaf75354531875f" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>ProcessCopyGepTime</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1aeb6a52c31ecd004670e85f24b01d75d6" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>ProcessLoadStoreTime</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ac9b65b591200c16c420fbd26710b448f" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>PTAStat</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1afdb975520329be0c33cc7bdd51ba7031" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>PTNumStatMap</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a1b605e86f33e79f7d7cd88dc54f2c19e" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>PtsMap</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ad4c1cf3750341f73987c37745f3bd2aa" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>SCCDetectionTime</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a8c4101e697057269def501d14a987287" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>SCCMergeTime</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a4ddc0ea34909863ca339fcbba2eef278" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>setMarkedClocksOnly</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a5524ff7901659f56e9de343992be8f3b" prot="public" virt="virtual"><scope>SVF::FlowSensitiveStat</scope><name>startClk</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a59e0fe6fa506f1cf319b5acaf9d28be9" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>startTime</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a81785227a688389c68171a1fbd55fa9b" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>statAddrVarPtsSize</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a8ae7448f6210b6c759a33e6fc8a8cee8" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>statInOutPtsSize</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a36f7be42772b2df6f7594c51b7dc4770" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>statNullPtr</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1af51e5b90f7bc52e3657a708c7bc5bb75" prot="private" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>statPtsSize</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a28f304e7095f3843ca4cc017bc1f7b10" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>TIMEStatMap</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a3724756ac0527ba3d199be32e38c6337" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>timeStatMap</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a25001a6d794d91056f37d954d9660910" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>TotalAnalysisTime</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a3afc0a36232a0388d8aa42c68219cb26" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>TotalNumOfEdges</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ac0e0a1c49d33e02f5cc0f21565ce627d" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>TotalNumOfFieldObjects</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1acd9848f15aa359550e86c7b857df84ed" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>TotalNumOfObjects</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a1a4d418fd9e5413e7ffbbfe57f5e0560" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>TotalNumOfPointers</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a8aedfeb35f76e6d33135637156468894" prot="public" virt="non-virtual"><scope>SVF::FlowSensitiveStat</scope><name>UpdateCallGraphTime</name></member>
      <member refid="class_s_v_f_1_1_flow_sensitive_stat_1a308c187020098a7f421592e8baa98967" prot="public" virt="virtual"><scope>SVF::FlowSensitiveStat</scope><name>~FlowSensitiveStat</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a1e5294c49b8bd8a850e938dccd5800a5" prot="public" virt="virtual"><scope>SVF::FlowSensitiveStat</scope><name>~PTAStat</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
