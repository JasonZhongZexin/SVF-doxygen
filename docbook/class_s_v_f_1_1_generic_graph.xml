<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_generic_graph" xml:lang="en-US">
<title>SVF::GenericGraph&lt; NodeTy, EdgeTy &gt; Class Template Reference</title>
<indexterm><primary>SVF::GenericGraph&lt; NodeTy, EdgeTy &gt;</primary></indexterm>
<para>Inheritance diagram for SVF::GenericGraph&lt; NodeTy, EdgeTy &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_generic_graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1a86c50fc6775fd29f88df2cb4646bb211"/>typedef NodeTy <emphasis role="strong">NodeType</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1a12d493d6ad2b6c89f240c9ccfa3bdf30"/>typedef EdgeTy <emphasis role="strong">EdgeType</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1ab9027b190f50ceefc90094e4f967f269"/>typedef Map&lt; NodeID, NodeType * &gt; <link linkend="_class_s_v_f_1_1_generic_graph_1ab9027b190f50ceefc90094e4f967f269">IDToNodeMapTy</link></para>

<para>NodeID to <link linkend="_class_s_v_f_1_1_generic_node">GenericNode</link> map. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1ac213302cf5c7cdf3b66f7b18649d0fbc"/>typedef IDToNodeMapTy::iterator <link linkend="_class_s_v_f_1_1_generic_graph_1ac213302cf5c7cdf3b66f7b18649d0fbc">iterator</link></para>

<para>Node Iterators. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1a5dfa3f178d4abf37177d0d74ff4c6a97"/>typedef IDToNodeMapTy::const_iterator <emphasis role="strong">const_iterator</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1aa5837cddbbd63c5a8ac5725bcecb192f"/><link linkend="_class_s_v_f_1_1_generic_graph_1aa5837cddbbd63c5a8ac5725bcecb192f">GenericGraph</link> ()</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1a3b94850d788a1b8da45e9b8bf2f2df2c"/>virtual <link linkend="_class_s_v_f_1_1_generic_graph_1a3b94850d788a1b8da45e9b8bf2f2df2c">~GenericGraph</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1adf0a205f4f62f33c5fa8f2d544aac633"/>void <link linkend="_class_s_v_f_1_1_generic_graph_1adf0a205f4f62f33c5fa8f2d544aac633">destroy</link> ()</para>

<para>Release memory. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1a0d9744b1b0e7a09a6f7af29188e243b7"/><link linkend="_class_s_v_f_1_1_generic_graph_1ac213302cf5c7cdf3b66f7b18649d0fbc">iterator</link> <link linkend="_class_s_v_f_1_1_generic_graph_1a0d9744b1b0e7a09a6f7af29188e243b7">begin</link> ()</para>

<para>Iterators. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1a4bef15157423cef48dc7333a803cd27d"/><link linkend="_class_s_v_f_1_1_generic_graph_1ac213302cf5c7cdf3b66f7b18649d0fbc">iterator</link> <emphasis role="strong">end</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1a3385b008ae03444404c1e392fd47f1d6"/>const_iterator <emphasis role="strong">begin</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1a3001af3746d26b7dc0a212db5e48a4bb"/>const_iterator <emphasis role="strong">end</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1a0a8831a5429005ff9d71adbd6bf3994f"/>void <link linkend="_class_s_v_f_1_1_generic_graph_1a0a8831a5429005ff9d71adbd6bf3994f">addGNode</link> (NodeID id, NodeType *node)</para>

<para>Add a Node. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1a43c9c773bfa17abf481c33073e30d01b"/>NodeType * <link linkend="_class_s_v_f_1_1_generic_graph_1a43c9c773bfa17abf481c33073e30d01b">getGNode</link> (NodeID id) const</para>

<para>Get a node. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1a6885064afa211958af7b73f0233284e5"/>bool <link linkend="_class_s_v_f_1_1_generic_graph_1a6885064afa211958af7b73f0233284e5">hasGNode</link> (NodeID id) const</para>

<para>Has a node. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1a1817b65e76052f11e36a67d6b9efd915"/>void <link linkend="_class_s_v_f_1_1_generic_graph_1a1817b65e76052f11e36a67d6b9efd915">removeGNode</link> (NodeType *node)</para>

<para>Delete a node. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1a8c8d16036008f87c7811586047599858"/>u32_t <link linkend="_class_s_v_f_1_1_generic_graph_1a8c8d16036008f87c7811586047599858">getTotalNodeNum</link> () const</para>

<para>Get total number of node/edge. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1a29cab1426b0000bd87c026ab8c9979c0"/>u32_t <emphasis role="strong">getTotalEdgeNum</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1a7388dabef7300e77adf33f3999639f21"/>void <link linkend="_class_s_v_f_1_1_generic_graph_1a7388dabef7300e77adf33f3999639f21">incNodeNum</link> ()</para>

<para>Increase number of node/edge. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1a2f2bca8219c7d769f6d2937e5cd40d14"/>void <emphasis role="strong">incEdgeNum</emphasis> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1a2fbc96de5f066469c2739229307bcc0c"/>u32_t <link linkend="_class_s_v_f_1_1_generic_graph_1a2fbc96de5f066469c2739229307bcc0c">edgeNum</link></para>

<para>total num of node </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1a38122734cbe71551a420dfb7fee2012e"/>u32_t <link linkend="_class_s_v_f_1_1_generic_graph_1a38122734cbe71551a420dfb7fee2012e">nodeNum</link></para>

<para>total num of edge </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_graph_1a47a1ef8b67b0c92f78b4457dc3bbfe71"/><link linkend="_class_s_v_f_1_1_generic_graph_1ab9027b190f50ceefc90094e4f967f269">IDToNodeMapTy</link> <link linkend="_class_s_v_f_1_1_generic_graph_1a47a1ef8b67b0c92f78b4457dc3bbfe71">IDToNodeMap</link></para>

<para>node map </para>
</listitem>
        </itemizedlist>
</simplesect>
<para>
The documentation for this class was generated from the following file:</para>
include/Graphs/GenericGraph.h</section>
