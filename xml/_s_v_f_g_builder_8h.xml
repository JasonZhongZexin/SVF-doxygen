<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_s_v_f_g_builder_8h" kind="file" language="C++">
    <compoundname>SVFGBuilder.h</compoundname>
    <includes refid="_s_v_f_g_o_p_t_8h" local="yes">Graphs/SVFGOPT.h</includes>
    <includedby refid="_d_d_a_v_f_solver_8h" local="yes">include/DDA/DDAVFSolver.h</includedby>
    <includedby refid="_f_s_m_p_t_a_8h" local="yes">include/MTA/FSMPTA.h</includedby>
    <includedby refid="_saber_s_v_f_g_builder_8h" local="yes">include/SABER/SaberSVFGBuilder.h</includedby>
    <includedby refid="_flow_sensitive_8h" local="yes">include/WPA/FlowSensitive.h</includedby>
    <includedby refid="_flow_sensitive_t_b_h_c_8h" local="yes">include/WPA/FlowSensitiveTBHC.h</includedby>
    <includedby refid="_versioned_flow_sensitive_8h" local="yes">include/WPA/VersionedFlowSensitive.h</includedby>
    <includedby refid="_s_v_f_g_builder_8cpp" local="yes">lib/MSSA/SVFGBuilder.cpp</includedby>
    <incdepgraph>
      <node id="68">
        <label>SVF-FE/CPPUtil.h</label>
        <link refid="_c_p_p_util_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>list</label>
      </node>
      <node id="64">
        <label>MemoryModel/LocationSet.h</label>
        <link refid="_location_set_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Graphs/PAG.h</label>
        <link refid="_p_a_g_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>MSSA/MSSAMuChi.h</label>
        <link refid="_m_s_s_a_mu_chi_8h_source"/>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>MemoryModel/ConditionalPT.h</label>
        <link refid="_conditional_p_t_8h_source"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>Util/Casting.h</label>
        <link refid="_casting_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>system_error</label>
      </node>
      <node id="61">
        <label>llvm/IR/IRBuilder.h</label>
      </node>
      <node id="7">
        <label>MemoryModel/PointerAnalysis.h</label>
        <link refid="_pointer_analysis_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>llvm/ADT/GraphTraits.h</label>
      </node>
      <node id="5">
        <label>Graphs/VFGNode.h</label>
        <link refid="_v_f_g_node_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>Util/NodeIDAllocator.h</label>
        <link refid="_node_i_d_allocator_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>cudd.h</label>
        <link refid="cudd_8h_source"/>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>llvm/Bitcode/BitcodeReader.h</label>
      </node>
      <node id="83">
        <label>assert.h</label>
      </node>
      <node id="41">
        <label>llvm/ADT/SmallVector.h</label>
      </node>
      <node id="104">
        <label>Graphs/SVFGNode.h</label>
        <link refid="_s_v_f_g_node_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>llvm/IR/InstVisitor.h</label>
      </node>
      <node id="15">
        <label>llvm/Support/CommandLine.h</label>
      </node>
      <node id="14">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="75">
        <label>SVF-FE/LLVMUtil.h</label>
        <link refid="_l_l_v_m_util_8h_source"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>llvm/Analysis/ScalarEvolutionExpressions.h</label>
      </node>
      <node id="81">
        <label>Graphs/ICFG.h</label>
        <link refid="_i_c_f_g_8h_source"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>Util/PathCondAllocator.h</label>
        <link refid="_path_cond_allocator_8h_source"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>Util/ThreadAPI.h</label>
        <link refid="_thread_a_p_i_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>mtr.h</label>
        <link refid="mtr_8h_source"/>
      </node>
      <node id="47">
        <label>llvm/ADT/StringExtras.h</label>
      </node>
      <node id="86">
        <label>Util/Conditions.h</label>
        <link refid="_conditions_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>Util/SVFUtil.h</label>
        <link refid="_s_v_f_util_8h_source"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>PAGEdge.h</label>
        <link refid="_p_a_g_edge_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>cassert</label>
      </node>
      <node id="10">
        <label>Graphs/GenericGraph.h</label>
        <link refid="_generic_graph_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Util/BasicTypes.h</label>
        <link refid="_basic_types_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>st.h</label>
        <link refid="st_8h_source"/>
      </node>
      <node id="77">
        <label>string</label>
      </node>
      <node id="88">
        <label>CUDD/cuddInt.h</label>
        <link refid="cudd_int_8h_source"/>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>MemoryModel/MutablePointsToDS.h</label>
        <link refid="_mutable_points_to_d_s_8h_source"/>
      </node>
      <node id="97">
        <label>Util/SCC.h</label>
        <link refid="_s_c_c_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>map</label>
      </node>
      <node id="48">
        <label>llvm/Analysis/AliasAnalysis.h</label>
      </node>
      <node id="20">
        <label>unordered_set</label>
      </node>
      <node id="96">
        <label>Graphs/PTACallGraph.h</label>
        <link refid="_p_t_a_call_graph_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>MemoryModel/AbstractPointsToDS.h</label>
        <link refid="_abstract_points_to_d_s_8h_source"/>
      </node>
      <node id="1">
        <label>include/MSSA/SVFGBuilder.h</label>
        <link refid="_s_v_f_g_builder_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>Util/ExtAPI.h</label>
        <link refid="_ext_a_p_i_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>llvm/IR/User.h</label>
      </node>
      <node id="13">
        <label>llvm/ADT/SparseBitVector.h</label>
      </node>
      <node id="98">
        <label>limits.h</label>
      </node>
      <node id="46">
        <label>llvm/Analysis/ScalarEvolution.h</label>
      </node>
      <node id="60">
        <label>llvm/Support/GraphWriter.h</label>
      </node>
      <node id="4">
        <label>Graphs/VFG.h</label>
        <link refid="_v_f_g_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Graphs/SVFG.h</label>
        <link refid="_s_v_f_g_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>MSSA/MemSSA.h</label>
        <link refid="_mem_s_s_a_8h_source"/>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>llvm/Support/Compiler.h</label>
      </node>
      <node id="69">
        <label>Util/SVFModule.h</label>
        <link refid="_s_v_f_module_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>MemoryModel/MemModel.h</label>
        <link refid="_mem_model_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>epd.h</label>
        <link refid="epd_8h_source"/>
      </node>
      <node id="74">
        <label>SVF-FE/SymbolTableInfo.h</label>
        <link refid="_symbol_table_info_8h_source"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>llvm/Support/type_traits.h</label>
      </node>
      <node id="30">
        <label>llvm/IR/GetElementPtrTypeIterator.h</label>
      </node>
      <node id="82">
        <label>Util/WorkList.h</label>
        <link refid="_work_list_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>MSSA/MemRegion.h</label>
        <link refid="_mem_region_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>Graphs/VFGEdge.h</label>
        <link refid="_v_f_g_edge_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>stack</label>
      </node>
      <node id="17">
        <label>vector</label>
      </node>
      <node id="29">
        <label>llvm/ADT/PointerIntPair.h</label>
      </node>
      <node id="33">
        <label>llvm/Support/ToolOutputFile.h</label>
      </node>
      <node id="62">
        <label>llvm/Transforms/Utils/Local.h</label>
      </node>
      <node id="72">
        <label>PAGNode.h</label>
        <link refid="_p_a_g_node_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>llvm/ADT/StringMap.h</label>
      </node>
      <node id="27">
        <label>llvm/IR/Operator.h</label>
      </node>
      <node id="6">
        <label>MemoryModel/PointerAnalysisImpl.h</label>
        <link refid="_pointer_analysis_impl_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>time.h</label>
      </node>
      <node id="89">
        <label>math.h</label>
      </node>
      <node id="102">
        <label>llvm/Transforms/IPO/PassManagerBuilder.h</label>
      </node>
      <node id="79">
        <label>llvm/Support/JSON.h</label>
      </node>
      <node id="57">
        <label>llvm/Analysis/PostDominators.h</label>
      </node>
      <node id="84">
        <label>cstdlib</label>
      </node>
      <node id="63">
        <label>llvm/IR/DebugInfo.h</label>
      </node>
      <node id="56">
        <label>llvm/Analysis/DominanceFrontier.h</label>
      </node>
      <node id="24">
        <label>deque</label>
      </node>
      <node id="71">
        <label>Graphs/ICFGEdge.h</label>
        <link refid="_i_c_f_g_edge_8h_source"/>
      </node>
      <node id="22">
        <label>unordered_map</label>
      </node>
      <node id="54">
        <label>llvm/IRReader/IRReader.h</label>
      </node>
      <node id="12">
        <label>Util/SVFBasicTypes.h</label>
        <link refid="_s_v_f_basic_types_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>llvm/Support/FileSystem.h</label>
      </node>
      <node id="50">
        <label>llvm/IR/GlobalVariable.h</label>
      </node>
      <node id="55">
        <label>llvm/Transforms/Utils/UnifyFunctionExitNodes.h</label>
      </node>
      <node id="65">
        <label>Graphs/ICFGNode.h</label>
        <link refid="_i_c_f_g_node_8h_source"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Graphs/SVFGOPT.h</label>
        <link refid="_s_v_f_g_o_p_t_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>llvm/Bitcode/BitcodeWriter.h</label>
      </node>
      <node id="40">
        <label>type_traits</label>
      </node>
      <node id="19">
        <label>set</label>
      </node>
      <node id="101">
        <label>llvm/IR/LegacyPassManager.h</label>
      </node>
      <node id="87">
        <label>stdio.h</label>
      </node>
      <node id="26">
        <label>llvm/IR/DerivedTypes.h</label>
      </node>
      <node id="51">
        <label>llvm/Support/SourceMgr.h</label>
      </node>
      <node id="42">
        <label>llvm/IR/Instructions.h</label>
      </node>
      <node id="100">
        <label>SVF-FE/DataFlowUtil.h</label>
        <link refid="_data_flow_util_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>SVF-FE/GEPTypeBridgeIterator.h</label>
        <link refid="_g_e_p_type_bridge_iterator_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>SVF-FE/LLVMModule.h</label>
        <link refid="_l_l_v_m_module_8h_source"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>memory</label>
      </node>
      <node id="31">
        <label>Graphs/GraphPrinter.h</label>
        <link refid="_graph_printer_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>llvm/IR/CallSite.h</label>
      </node>
      <node id="105">
        <label>Graphs/SVFGEdge.h</label>
        <link refid="_s_v_f_g_edge_8h_source"/>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>llvm/IR/InstIterator.h</label>
      </node>
      <node id="49">
        <label>llvm/Analysis/CallGraph.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8">
        <label>include/SABER/LeakChecker.h</label>
        <link refid="_leak_checker_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>include/WPA/TypeAnalysis.h</label>
        <link refid="_type_analysis_8h_source"/>
      </node>
      <node id="7">
        <label>include/SABER/SrcSnkDDA.h</label>
        <link refid="_src_snk_d_d_a_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>include/WPA/FlowSensitiveTBHC.h</label>
        <link refid="_flow_sensitive_t_b_h_c_8h_source"/>
      </node>
      <node id="11">
        <label>include/WPA/FlowSensitive.h</label>
        <link refid="_flow_sensitive_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>include/WPA/Steensgaard.h</label>
        <link refid="_steensgaard_8h_source"/>
      </node>
      <node id="2">
        <label>include/DDA/DDAVFSolver.h</label>
        <link refid="_d_d_a_v_f_solver_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/MSSA/SVFGBuilder.h</label>
        <link refid="_s_v_f_g_builder_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>include/MTA/FSMPTA.h</label>
        <link refid="_f_s_m_p_t_a_8h_source"/>
      </node>
      <node id="9">
        <label>include/SABER/DoubleFreeChecker.h</label>
        <link refid="_double_free_checker_8h_source"/>
      </node>
      <node id="6">
        <label>include/SABER/SaberSVFGBuilder.h</label>
        <link refid="_saber_s_v_f_g_builder_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>include/DDA/FlowDDA.h</label>
        <link refid="_flow_d_d_a_8h_source"/>
      </node>
      <node id="16">
        <label>include/MTA/PCG.h</label>
        <link refid="_p_c_g_8h_source"/>
      </node>
      <node id="10">
        <label>include/SABER/FileChecker.h</label>
        <link refid="_file_checker_8h_source"/>
      </node>
      <node id="14">
        <label>include/WPA/WPAStat.h</label>
        <link refid="_w_p_a_stat_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>include/WPA/Andersen.h</label>
        <link refid="_andersen_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>include/WPA/VersionedFlowSensitive.h</label>
        <link refid="_versioned_flow_sensitive_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/DDA/ContextDDA.h</label>
        <link refid="_context_d_d_a_8h_source"/>
      </node>
      <node id="17">
        <label>include/WPA/AndersenSFR.h</label>
        <link refid="_andersen_s_f_r_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_s_v_f_1_1_mem_s_s_a_d_f" prot="public">SVF::MemSSADF</innerclass>
    <innerclass refid="class_s_v_f_1_1_s_v_f_g_builder" prot="public">SVF::SVFGBuilder</innerclass>
    <innernamespace refid="namespace_s_v_f">SVF</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//===-<sp/>SVFGBuilder.h<sp/>--<sp/>Building<sp/>SVFG-----------------------------------------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVF:<sp/>Static<sp/>Value-Flow<sp/>Analysis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>&lt;2013-2017&gt;<sp/><sp/>&lt;Yulei<sp/>Sui&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//===----------------------------------------------------------------------===//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>AndersenMemSSA.h</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Oct<sp/>27,<sp/>2013</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Yulei<sp/>Sui</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ANDERSENMEMSSA_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ANDERSENMEMSSA_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Graphs/SVFGOPT.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_s_v_f" kindref="compound">SVF</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_s_v_f_1_1_mem_s_s_a_d_f" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_s_v_f_1_1_mem_s_s_a_d_f" kindref="compound">MemSSADF</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="namespace_s_v_f_1ab44d20f806be99699895260b14a942d7" kindref="member">DominanceFrontier</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_mem_s_s_a_d_f" kindref="compound">MemSSADF</ref>()<sp/>:<sp/><ref refid="namespace_s_v_f_1ab44d20f806be99699895260b14a942d7" kindref="member">DominanceFrontier</ref>()</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>runOnDT(DominatorTree&amp;<sp/>dt)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>releaseMemory();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analyze(dt);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_s_v_f_1_1_s_v_f_g_builder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_s_v_f_1_1_s_v_f_g_builder" kindref="compound">SVFGBuilder</ref></highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PointerAnalysis::CallSiteSet<sp/>CallSiteSet;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PointerAnalysis::CallEdgeMap<sp/>CallEdgeMap;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PointerAnalysis::FunctionSet<sp/>FunctionSet;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>SVFG::SVFGEdgeSetTy<sp/>SVFGEdgeSet;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_s_v_f_1_1_s_v_f_g_builder_1a003c6d9e13e5f73e0648d97400f1854e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_s_v_f_g_builder_1a003c6d9e13e5f73e0648d97400f1854e" kindref="member">SVFGBuilder</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_SVFGWithIndCall<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">):<sp/>svfg(NULL),<sp/><ref refid="class_s_v_f_1_1_s_v_f_g_builder_1a70de38086437635d2e44d2a0c9fdded9" kindref="member">SVFGWithIndCall</ref>(_SVFGWithIndCall)<sp/>{}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_s_v_f_1_1_s_v_f_g_builder_1af45232cbcffcaa4c7e05dab96553068f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_s_v_f_g_builder_1af45232cbcffcaa4c7e05dab96553068f" kindref="member">~SVFGBuilder</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref>*<sp/>globalSvfg;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref>*<sp/>buildPTROnlySVFG(<ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl" kindref="compound">BVDataPTAImpl</ref>*<sp/>pta);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref>*<sp/>buildPTROnlySVFGWithoutOPT(<ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl" kindref="compound">BVDataPTAImpl</ref>*<sp/>pta);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref>*<sp/>buildFullSVFG(<ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl" kindref="compound">BVDataPTAImpl</ref>*<sp/>pta);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref>*<sp/>buildFullSVFGWithoutOPT(<ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl" kindref="compound">BVDataPTAImpl</ref>*<sp/>pta);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="class_s_v_f_1_1_s_v_f_g_builder_1a9767f95253f02901da757076e3010b37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_s_v_f_g_builder_1a9767f95253f02901da757076e3010b37" kindref="member">releaseSVFG</ref>()</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(globalSvfg)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>globalSvfg;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalSvfg<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88" refid="class_s_v_f_1_1_s_v_f_g_builder_1ad70dc4134a6290223b4168bde146b6d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref>*<sp/><ref refid="class_s_v_f_1_1_s_v_f_g_builder_1ad70dc4134a6290223b4168bde146b6d5" kindref="member">getSVFG</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="89"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>svfg;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="class_s_v_f_1_1_s_v_f_g_builder_1a3f8fc56d5190ea59d06906b359640dae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_s_v_f_g_builder_1a3f8fc56d5190ea59d06906b359640dae" kindref="member">markValidVFEdge</ref>(SVFGEdgeSet&amp;<sp/>edges)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(SVFGEdgeSet::iterator<sp/>it<sp/>=<sp/>edges.begin(),<sp/>eit<sp/>=<sp/>edges.end();<sp/>it!=eit;<sp/>++it)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_s_v_f_g_builder_1aa9b432dd72f1a39be142c4e2c2d51247" kindref="member">vfEdgesAtIndCallSite</ref>.erase(*it);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100" refid="class_s_v_f_1_1_s_v_f_g_builder_1a9e8da6a516ed6598c66d81a0891fbb6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_s_v_f_g_builder_1a9e8da6a516ed6598c66d81a0891fbb6e" kindref="member">isSpuriousVFEdgeAtIndCallSite</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_v_f_g_edge" kindref="compound">SVFGEdge</ref>*<sp/>edge)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_s_v_f_g_builder_1aa9b432dd72f1a39be142c4e2c2d51247" kindref="member">vfEdgesAtIndCallSite</ref>.find(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_s_v_f_1_1_v_f_g_edge" kindref="compound">SVFGEdge</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(edge))!=<ref refid="class_s_v_f_1_1_s_v_f_g_builder_1aa9b432dd72f1a39be142c4e2c2d51247" kindref="member">vfEdgesAtIndCallSite</ref>.end();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_mem_s_s_a" kindref="compound">MemSSA</ref>*<sp/><ref refid="class_s_v_f_1_1_s_v_f_g_builder_1a49cee21be46d6a3f65eec638714038ed" kindref="member">buildMSSA</ref>(<ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl" kindref="compound">BVDataPTAImpl</ref>*<sp/>pta,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ptrOnlyMSSA);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref>*<sp/><ref refid="class_s_v_f_1_1_s_v_f_g_builder_1a47591192260ddc3ff0717430f127cc95" kindref="member">build</ref>(<ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl" kindref="compound">BVDataPTAImpl</ref>*<sp/>pta,<sp/><ref refid="class_s_v_f_1_1_v_f_g_1ac2e2f555975063da3fa1932ac35802c6" kindref="member">VFG::VFGK</ref><sp/>kind);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_s_v_f_g_builder_1ae2d84f7527de200a2f269dc1c056a305" kindref="member">buildSVFG</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_s_v_f_g_builder_1a6e08e6a99f7e743abf35e603e35e54f5" kindref="member">releaseMemory</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="class_s_v_f_1_1_s_v_f_g_builder_1aa9b432dd72f1a39be142c4e2c2d51247" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SVFGEdgeSet<sp/><ref refid="class_s_v_f_1_1_s_v_f_g_builder_1aa9b432dd72f1a39be142c4e2c2d51247" kindref="member">vfEdgesAtIndCallSite</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref>*<sp/>svfg;</highlight></codeline>
<codeline lineno="120" refid="class_s_v_f_1_1_s_v_f_g_builder_1a70de38086437635d2e44d2a0c9fdded9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_s_v_f_g_builder_1a70de38086437635d2e44d2a0c9fdded9" kindref="member">SVFGWithIndCall</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>namespace<sp/>SVF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ANDERSENMEMSSA_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/MSSA/SVFGBuilder.h"/>
  </compounddef>
</doxygen>
