<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_pointer_analysis_impl_8h" kind="file" language="C++">
    <compoundname>PointerAnalysisImpl.h</compoundname>
    <includes refid="_pointer_analysis_8h" local="yes">MemoryModel/PointerAnalysis.h</includes>
    <includedby refid="_context_d_d_a_8h" local="yes">include/DDA/ContextDDA.h</includedby>
    <includedby refid="_d_d_a_client_8h" local="yes">include/DDA/DDAClient.h</includedby>
    <includedby refid="_d_d_a_pass_8h" local="yes">include/DDA/DDAPass.h</includedby>
    <includedby refid="_flow_d_d_a_8h" local="yes">include/DDA/FlowDDA.h</includedby>
    <includedby refid="_thread_call_graph_8h" local="yes">include/Graphs/ThreadCallGraph.h</includedby>
    <includedby refid="_v_f_g_node_8h" local="yes">include/Graphs/VFGNode.h</includedby>
    <includedby refid="_mem_region_8h" local="yes">include/MSSA/MemRegion.h</includedby>
    <includedby refid="_m_t_a_result_validator_8h" local="no">include/MTA/MTAResultValidator.h</includedby>
    <includedby refid="_type_based_heap_cloning_8h" local="yes">include/Util/TypeBasedHeapCloning.h</includedby>
    <includedby refid="_andersen_8h" local="yes">include/WPA/Andersen.h</includedby>
    <includedby refid="_w_p_a_pass_8h" local="yes">include/WPA/WPAPass.h</includedby>
    <includedby refid="_d_d_a_pass_8cpp" local="yes">lib/DDA/DDAPass.cpp</includedby>
    <includedby refid="_pointer_analysis_8cpp" local="yes">lib/MemoryModel/PointerAnalysis.cpp</includedby>
    <includedby refid="_pointer_analysis_impl_8cpp" local="yes">lib/MemoryModel/PointerAnalysisImpl.cpp</includedby>
    <includedby refid="_p_t_a_stat_8cpp" local="yes">lib/Util/PTAStat.cpp</includedby>
    <includedby refid="_type_based_heap_cloning_8cpp" local="yes">lib/Util/TypeBasedHeapCloning.cpp</includedby>
    <includedby refid="_w_p_a_pass_8cpp" local="yes">lib/WPA/WPAPass.cpp</includedby>
    <incdepgraph>
      <node id="63">
        <label>SVF-FE/CPPUtil.h</label>
        <link refid="_c_p_p_util_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>list</label>
      </node>
      <node id="59">
        <label>MemoryModel/LocationSet.h</label>
        <link refid="_location_set_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Graphs/PAG.h</label>
        <link refid="_p_a_g_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>MemoryModel/ConditionalPT.h</label>
        <link refid="_conditional_p_t_8h_source"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>Util/Casting.h</label>
        <link refid="_casting_8h_source"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>system_error</label>
      </node>
      <node id="56">
        <label>llvm/IR/IRBuilder.h</label>
      </node>
      <node id="2">
        <label>MemoryModel/PointerAnalysis.h</label>
        <link refid="_pointer_analysis_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>llvm/ADT/GraphTraits.h</label>
      </node>
      <node id="75">
        <label>Util/NodeIDAllocator.h</label>
        <link refid="_node_i_d_allocator_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>cudd.h</label>
        <link refid="cudd_8h_source"/>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>llvm/Bitcode/BitcodeReader.h</label>
      </node>
      <node id="78">
        <label>assert.h</label>
      </node>
      <node id="36">
        <label>llvm/ADT/SmallVector.h</label>
      </node>
      <node id="39">
        <label>llvm/IR/InstVisitor.h</label>
      </node>
      <node id="10">
        <label>llvm/Support/CommandLine.h</label>
      </node>
      <node id="9">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="70">
        <label>SVF-FE/LLVMUtil.h</label>
        <link refid="_l_l_v_m_util_8h_source"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>llvm/Analysis/ScalarEvolutionExpressions.h</label>
      </node>
      <node id="76">
        <label>Graphs/ICFG.h</label>
        <link refid="_i_c_f_g_8h_source"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>Util/PathCondAllocator.h</label>
        <link refid="_path_cond_allocator_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>Util/ThreadAPI.h</label>
        <link refid="_thread_a_p_i_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>mtr.h</label>
        <link refid="mtr_8h_source"/>
      </node>
      <node id="42">
        <label>llvm/ADT/StringExtras.h</label>
      </node>
      <node id="81">
        <label>Util/Conditions.h</label>
        <link refid="_conditions_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>Util/SVFUtil.h</label>
        <link refid="_s_v_f_util_8h_source"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>PAGEdge.h</label>
        <link refid="_p_a_g_edge_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>cassert</label>
      </node>
      <node id="5">
        <label>Graphs/GenericGraph.h</label>
        <link refid="_generic_graph_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Util/BasicTypes.h</label>
        <link refid="_basic_types_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>st.h</label>
        <link refid="st_8h_source"/>
      </node>
      <node id="72">
        <label>string</label>
      </node>
      <node id="83">
        <label>CUDD/cuddInt.h</label>
        <link refid="cudd_int_8h_source"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>MemoryModel/MutablePointsToDS.h</label>
        <link refid="_mutable_points_to_d_s_8h_source"/>
      </node>
      <node id="92">
        <label>Util/SCC.h</label>
        <link refid="_s_c_c_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>map</label>
      </node>
      <node id="43">
        <label>llvm/Analysis/AliasAnalysis.h</label>
      </node>
      <node id="15">
        <label>unordered_set</label>
      </node>
      <node id="91">
        <label>Graphs/PTACallGraph.h</label>
        <link refid="_p_t_a_call_graph_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>MemoryModel/AbstractPointsToDS.h</label>
        <link refid="_abstract_points_to_d_s_8h_source"/>
      </node>
      <node id="71">
        <label>Util/ExtAPI.h</label>
        <link refid="_ext_a_p_i_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>llvm/IR/User.h</label>
      </node>
      <node id="8">
        <label>llvm/ADT/SparseBitVector.h</label>
      </node>
      <node id="93">
        <label>limits.h</label>
      </node>
      <node id="41">
        <label>llvm/Analysis/ScalarEvolution.h</label>
      </node>
      <node id="55">
        <label>llvm/Support/GraphWriter.h</label>
      </node>
      <node id="31">
        <label>llvm/Support/Compiler.h</label>
      </node>
      <node id="64">
        <label>Util/SVFModule.h</label>
        <link refid="_s_v_f_module_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>MemoryModel/MemModel.h</label>
        <link refid="_mem_model_8h_source"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>epd.h</label>
        <link refid="epd_8h_source"/>
      </node>
      <node id="69">
        <label>SVF-FE/SymbolTableInfo.h</label>
        <link refid="_symbol_table_info_8h_source"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>llvm/Support/type_traits.h</label>
      </node>
      <node id="25">
        <label>llvm/IR/GetElementPtrTypeIterator.h</label>
      </node>
      <node id="77">
        <label>Util/WorkList.h</label>
        <link refid="_work_list_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>stack</label>
      </node>
      <node id="12">
        <label>vector</label>
      </node>
      <node id="24">
        <label>llvm/ADT/PointerIntPair.h</label>
      </node>
      <node id="28">
        <label>llvm/Support/ToolOutputFile.h</label>
      </node>
      <node id="57">
        <label>llvm/Transforms/Utils/Local.h</label>
      </node>
      <node id="67">
        <label>PAGNode.h</label>
        <link refid="_p_a_g_node_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>llvm/ADT/StringMap.h</label>
      </node>
      <node id="22">
        <label>llvm/IR/Operator.h</label>
      </node>
      <node id="1">
        <label>include/MemoryModel/PointerAnalysisImpl.h</label>
        <link refid="_pointer_analysis_impl_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>time.h</label>
      </node>
      <node id="84">
        <label>math.h</label>
      </node>
      <node id="97">
        <label>llvm/Transforms/IPO/PassManagerBuilder.h</label>
      </node>
      <node id="74">
        <label>llvm/Support/JSON.h</label>
      </node>
      <node id="52">
        <label>llvm/Analysis/PostDominators.h</label>
      </node>
      <node id="79">
        <label>cstdlib</label>
      </node>
      <node id="58">
        <label>llvm/IR/DebugInfo.h</label>
      </node>
      <node id="51">
        <label>llvm/Analysis/DominanceFrontier.h</label>
      </node>
      <node id="19">
        <label>deque</label>
      </node>
      <node id="66">
        <label>Graphs/ICFGEdge.h</label>
        <link refid="_i_c_f_g_edge_8h_source"/>
      </node>
      <node id="17">
        <label>unordered_map</label>
      </node>
      <node id="49">
        <label>llvm/IRReader/IRReader.h</label>
      </node>
      <node id="7">
        <label>Util/SVFBasicTypes.h</label>
        <link refid="_s_v_f_basic_types_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>llvm/Support/FileSystem.h</label>
      </node>
      <node id="45">
        <label>llvm/IR/GlobalVariable.h</label>
      </node>
      <node id="50">
        <label>llvm/Transforms/Utils/UnifyFunctionExitNodes.h</label>
      </node>
      <node id="60">
        <label>Graphs/ICFGNode.h</label>
        <link refid="_i_c_f_g_node_8h_source"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>llvm/Bitcode/BitcodeWriter.h</label>
      </node>
      <node id="35">
        <label>type_traits</label>
      </node>
      <node id="14">
        <label>set</label>
      </node>
      <node id="96">
        <label>llvm/IR/LegacyPassManager.h</label>
      </node>
      <node id="82">
        <label>stdio.h</label>
      </node>
      <node id="21">
        <label>llvm/IR/DerivedTypes.h</label>
      </node>
      <node id="46">
        <label>llvm/Support/SourceMgr.h</label>
      </node>
      <node id="37">
        <label>llvm/IR/Instructions.h</label>
      </node>
      <node id="95">
        <label>SVF-FE/DataFlowUtil.h</label>
        <link refid="_data_flow_util_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>SVF-FE/GEPTypeBridgeIterator.h</label>
        <link refid="_g_e_p_type_bridge_iterator_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>SVF-FE/LLVMModule.h</label>
        <link refid="_l_l_v_m_module_8h_source"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>memory</label>
      </node>
      <node id="26">
        <label>Graphs/GraphPrinter.h</label>
        <link refid="_graph_printer_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>llvm/IR/CallSite.h</label>
      </node>
      <node id="40">
        <label>llvm/IR/InstIterator.h</label>
      </node>
      <node id="44">
        <label>llvm/Analysis/CallGraph.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="23">
        <label>include/SABER/LeakChecker.h</label>
        <link refid="_leak_checker_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>include/WPA/TypeAnalysis.h</label>
        <link refid="_type_analysis_8h_source"/>
      </node>
      <node id="41">
        <label>include/MSSA/MSSAMuChi.h</label>
        <link refid="_m_s_s_a_mu_chi_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>include/SABER/ProgSlice.h</label>
        <link refid="_prog_slice_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>include/Graphs/VFGNode.h</label>
        <link refid="_v_f_g_node_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>include/MTA/MHP.h</label>
        <link refid="_m_h_p_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>include/Graphs/SVFGNode.h</label>
        <link refid="_s_v_f_g_node_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>include/MTA/TCT.h</label>
        <link refid="_t_c_t_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>include/SABER/SrcSnkDDA.h</label>
        <link refid="_src_snk_d_d_a_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>include/Graphs/ThreadCallGraph.h</label>
        <link refid="_thread_call_graph_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>include/WPA/FlowSensitiveTBHC.h</label>
        <link refid="_flow_sensitive_t_b_h_c_8h_source"/>
      </node>
      <node id="43">
        <label>include/WPA/WPAPass.h</label>
        <link refid="_w_p_a_pass_8h_source"/>
      </node>
      <node id="26">
        <label>include/WPA/FlowSensitive.h</label>
        <link refid="_flow_sensitive_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>include/Graphs/SVFGStat.h</label>
        <link refid="_s_v_f_g_stat_8h_source"/>
      </node>
      <node id="32">
        <label>include/WPA/Steensgaard.h</label>
        <link refid="_steensgaard_8h_source"/>
      </node>
      <node id="20">
        <label>include/DDA/DDAVFSolver.h</label>
        <link refid="_d_d_a_v_f_solver_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>include/MSSA/SVFGBuilder.h</label>
        <link refid="_s_v_f_g_builder_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>include/DDA/DDAPass.h</label>
        <link refid="_d_d_a_pass_8h_source"/>
      </node>
      <node id="10">
        <label>include/MTA/FSMPTA.h</label>
        <link refid="_f_s_m_p_t_a_8h_source"/>
      </node>
      <node id="9">
        <label>include/MTA/LockAnalysis.h</label>
        <link refid="_lock_analysis_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>include/Util/TypeBasedHeapCloning.h</label>
        <link refid="_type_based_heap_cloning_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>include/MTA/MTAResultValidator.h</label>
        <link refid="_m_t_a_result_validator_8h_source"/>
      </node>
      <node id="36">
        <label>include/Graphs/VFG.h</label>
        <link refid="_v_f_g_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>include/Graphs/SVFG.h</label>
        <link refid="_s_v_f_g_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/DDA/DDAClient.h</label>
        <link refid="_d_d_a_client_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>include/MSSA/MemSSA.h</label>
        <link refid="_mem_s_s_a_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>include/SVF-FE/CallGraphBuilder.h</label>
        <link refid="_call_graph_builder_8h_source"/>
      </node>
      <node id="37">
        <label>include/MSSA/MemRegion.h</label>
        <link refid="_mem_region_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>include/SABER/DoubleFreeChecker.h</label>
        <link refid="_double_free_checker_8h_source"/>
      </node>
      <node id="12">
        <label>include/MTA/MTAAnnotator.h</label>
        <link refid="_m_t_a_annotator_8h_source"/>
      </node>
      <node id="21">
        <label>include/SABER/SaberSVFGBuilder.h</label>
        <link refid="_saber_s_v_f_g_builder_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/MemoryModel/PointerAnalysisImpl.h</label>
        <link refid="_pointer_analysis_impl_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>include/DDA/FlowDDA.h</label>
        <link refid="_flow_d_d_a_8h_source"/>
      </node>
      <node id="13">
        <label>include/MTA/PCG.h</label>
        <link refid="_p_c_g_8h_source"/>
      </node>
      <node id="38">
        <label>include/MSSA/MemPartition.h</label>
        <link refid="_mem_partition_8h_source"/>
      </node>
      <node id="25">
        <label>include/SABER/FileChecker.h</label>
        <link refid="_file_checker_8h_source"/>
      </node>
      <node id="29">
        <label>include/WPA/WPAStat.h</label>
        <link refid="_w_p_a_stat_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>include/Graphs/SVFGOPT.h</label>
        <link refid="_s_v_f_g_o_p_t_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>include/WPA/Andersen.h</label>
        <link refid="_andersen_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>include/WPA/VersionedFlowSensitive.h</label>
        <link refid="_versioned_flow_sensitive_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/DDA/ContextDDA.h</label>
        <link refid="_context_d_d_a_8h_source"/>
      </node>
      <node id="31">
        <label>include/WPA/AndersenSFR.h</label>
        <link refid="_andersen_s_f_r_8h_source"/>
      </node>
      <node id="40">
        <label>include/Graphs/SVFGEdge.h</label>
        <link refid="_s_v_f_g_edge_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_s_v_f_1_1_b_v_data_p_t_a_impl" prot="public">SVF::BVDataPTAImpl</innerclass>
    <innerclass refid="class_s_v_f_1_1_cond_p_t_a_impl" prot="public">SVF::CondPTAImpl</innerclass>
    <innernamespace refid="namespace_s_v_f">SVF</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//===-<sp/>PointerAnalysis.h<sp/>--<sp/>Base<sp/>class<sp/>of<sp/>pointer<sp/>analyses--------------------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVF:<sp/>Static<sp/>Value-Flow<sp/>Analysis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>&lt;2013-&gt;<sp/><sp/>&lt;Yulei<sp/>Sui&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//===----------------------------------------------------------------------===//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>PointerAnalysis.h</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Nov<sp/>12,<sp/>2013</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Yulei<sp/>Sui</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDE_MEMORYMODEL_POINTERANALYSISIMPL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDE_MEMORYMODEL_POINTERANALYSISIMPL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MemoryModel/PointerAnalysis.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_s_v_f" kindref="compound">SVF</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_s_v_f_1_1_b_v_data_p_t_a_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl" kindref="compound">BVDataPTAImpl</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_pointer_analysis" kindref="compound">PointerAnalysis</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData&lt;NodeID, NodeID, PointsTo&gt;</ref><sp/><ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTDataTy</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_mutable_p_t_data" kindref="compound">MutablePTData&lt;NodeID, NodeID, PointsTo&gt;</ref><sp/><ref refid="class_s_v_f_1_1_mutable_p_t_data" kindref="compound">MutPTDataTy</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_diff_p_t_data" kindref="compound">DiffPTData&lt;NodeID, NodeID, PointsTo&gt;</ref><sp/><ref refid="class_s_v_f_1_1_diff_p_t_data" kindref="compound">DiffPTDataTy</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_mutable_diff_p_t_data" kindref="compound">MutableDiffPTData&lt;NodeID, NodeID, PointsTo&gt;</ref><sp/><ref refid="class_s_v_f_1_1_mutable_diff_p_t_data" kindref="compound">MutDiffPTDataTy</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_f_p_t_data" kindref="compound">DFPTData&lt;NodeID, NodeID, PointsTo&gt;</ref><sp/><ref refid="class_s_v_f_1_1_d_f_p_t_data" kindref="compound">DFPTDataTy</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_mutable_d_f_p_t_data" kindref="compound">MutableDFPTData&lt;NodeID, NodeID, PointsTo&gt;</ref><sp/><ref refid="class_s_v_f_1_1_mutable_d_f_p_t_data" kindref="compound">MutDFPTDataTy</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_inc_mutable_d_f_p_t_data" kindref="compound">IncMutableDFPTData&lt;NodeID, NodeID, PointsTo&gt;</ref><sp/><ref refid="class_s_v_f_1_1_inc_mutable_d_f_p_t_data" kindref="compound">IncMutDFPTDataTy</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_versioned_p_t_data" kindref="compound">VersionedPTData&lt;NodeID, NodeID, PointsTo, VersionedVar&gt;</ref><sp/><ref refid="class_s_v_f_1_1_versioned_p_t_data" kindref="compound">VersionedPTDataTy</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_mutable_versioned_p_t_data" kindref="compound">MutableVersionedPTData&lt;NodeID, NodeID, PointsTo, VersionedVar&gt;</ref><sp/><ref refid="class_s_v_f_1_1_mutable_versioned_p_t_data" kindref="compound">MutVersionedPTDataTy</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1aff20835f6fd320ccd2d2596db7945711" kindref="member">BVDataPTAImpl</ref>(<ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref>*<sp/><ref refid="class_s_v_f_1_1_pointer_analysis_1a8771956f7595b66d825b3dc459d1ae49" kindref="member">pag</ref>,<sp/><ref refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85" kindref="member">PointerAnalysis::PTATY</ref><sp/>type,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alias_check<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1a06f211184d3e75f0ca351a4b8092a478" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1a06f211184d3e75f0ca351a4b8092a478" kindref="member">~BVDataPTAImpl</ref>()</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1af783769050ab663ad4bb93f901f01a6d" kindref="member">destroy</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>classof(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_pointer_analysis" kindref="compound">PointerAnalysis</ref><sp/>*pta)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pta-&gt;<ref refid="class_s_v_f_1_1_pointer_analysis_1ac0f821cfe4fb9c9c8816e7a1b1bc0c5e" kindref="member">getImplTy</ref>()<sp/>==<sp/><ref refid="class_s_v_f_1_1_pointer_analysis_1ac0c0855918cb2cdc3d8ebc175acfbd4da84705167ea3a7162ecb9470a8a77b5d8" kindref="member">BVDataImpl</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1af783769050ab663ad4bb93f901f01a6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1af783769050ab663ad4bb93f901f01a6d" kindref="member">destroy</ref>()</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>ptD;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptD<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1aee289e298e421448caaa604b7eb34fcb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PointsTo&amp;<sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1aee289e298e421448caaa604b7eb34fcb" kindref="member">getPts</ref>(NodeID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptD-&gt;<ref refid="class_s_v_f_1_1_p_t_data_1a86a93186b51b6ce9dccffecad8381281" kindref="member">getPts</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82" refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1a58113943e4e7144d94d26991dcc8bcc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NodeSet&amp;<sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1a58113943e4e7144d94d26991dcc8bcc7" kindref="member">getRevPts</ref>(NodeID<sp/>nodeId)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptD-&gt;<ref refid="class_s_v_f_1_1_p_t_data_1a5ac0805846fb6bac6c58c0fefb106c5f" kindref="member">getRevPts</ref>(nodeId);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"></codeline>
<codeline lineno="89" refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1a4909696c946cf6aba12542ec51766b64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1a4909696c946cf6aba12542ec51766b64" kindref="member">clearPts</ref>(NodeID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>NodeID<sp/>element)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptD-&gt;<ref refid="class_s_v_f_1_1_p_t_data_1a2ee28cb51800a57a7646d72f1b92e6ac" kindref="member">clearPts</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>element);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1afdb10c2cce4935156566ea1c2daf9ea9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1afdb10c2cce4935156566ea1c2daf9ea9" kindref="member">clearFullPts</ref>(NodeID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptD-&gt;<ref refid="class_s_v_f_1_1_p_t_data_1a4a27923265487dac1eede5a57cc0c9a5" kindref="member">clearFullPts</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"></codeline>
<codeline lineno="103" refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1ae7073c07bfd7912f888d54d4652c7cc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1ae7073c07bfd7912f888d54d4652c7cc2" kindref="member">unionPts</ref>(NodeID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PointsTo&amp;<sp/>target)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptD-&gt;<ref refid="class_s_v_f_1_1_p_t_data_1a482eda0b2ea6a8e1326ee1a0c25c1fdc" kindref="member">unionPts</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>target);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1ae7073c07bfd7912f888d54d4652c7cc2" kindref="member">unionPts</ref>(NodeID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>NodeID<sp/>ptd)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptD-&gt;<ref refid="class_s_v_f_1_1_p_t_data_1a482eda0b2ea6a8e1326ee1a0c25c1fdc" kindref="member">unionPts</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,ptd);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addPts(NodeID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>NodeID<sp/>ptd)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptD-&gt;<ref refid="class_s_v_f_1_1_p_t_data_1a1365146d19ee927f870a7384c0d1db6b" kindref="member">addPts</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,ptd);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"></codeline>
<codeline lineno="118" refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1a4426df37aeabeb94d301373b55a53c20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1a4426df37aeabeb94d301373b55a53c20" kindref="member">clearAllPts</ref>()</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptD-&gt;<ref refid="class_s_v_f_1_1_p_t_data_1a3cdec1f0be962716508d3922dce058d5" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1a798c84d5e861de2b61bcb1a86385f721" kindref="member">expandFIObjs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PointsTo&amp;<sp/>pts,<sp/>PointsTo&amp;<sp/>expandedPts);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1a25c68f9d2b88437778e854ff0d741d1b" kindref="member">writeToFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1a290501006cb700db0e07dc577429c928" kindref="member">readFromFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1aa534e475fa34fa322c567bc376a3da70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1aa534e475fa34fa322c567bc376a3da70" kindref="member">updateCallGraph</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CallSiteToFunPtrMap&amp;)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Virtual<sp/>function<sp/>not<sp/>implemented!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1ae94cea78b71fb75837ee2a17b5ed0e81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTDataTy</ref>*<sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1ae94cea78b71fb75837ee2a17b5ed0e81" kindref="member">getPTDataTy</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="143"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptD;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>DiffPTDataTy*<sp/>getDiffPTDataTy()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="148"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DiffPTDataTy*<sp/>diff<sp/>=<sp/>SVFUtil::dyn_cast&lt;DiffPTDataTy&gt;(ptD);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(diff<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;BVDataPTAImpl::getDiffPTDataTy:<sp/>not<sp/>a<sp/>DiffPTDataTy!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>diff;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>DFPTDataTy*<sp/>getDFPTDataTy()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="155"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DFPTDataTy*<sp/>df<sp/>=<sp/>SVFUtil::dyn_cast&lt;DFPTDataTy&gt;(ptD);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(df<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;BVDataPTAImpl::getDFPTDataTy:<sp/>not<sp/>a<sp/>DFPTDataTy!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>df;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>MutDFPTDataTy*<sp/>getMutDFPTDataTy()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="162"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MutDFPTDataTy*<sp/>mdf<sp/>=<sp/>SVFUtil::dyn_cast&lt;MutDFPTDataTy&gt;(ptD);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mdf<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;BVDataPTAImpl::getMutDFPTDataTy:<sp/>not<sp/>a<sp/>MutDFPTDataTy!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mdf;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>VersionedPTDataTy*<sp/>getVersionedPTDataTy()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="169"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VersionedPTDataTy*<sp/>v<sp/>=<sp/>SVFUtil::dyn_cast&lt;VersionedPTDataTy&gt;(ptD);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(v<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;BVDataPTAImpl::getVersionedPTDataTy:<sp/>not<sp/>a<sp/>VersionedPTDataTy!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasPtsMap(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="176"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SVFUtil::isa&lt;MutPTDataTy&gt;(ptD)<sp/>||<sp/>SVFUtil::isa&lt;MutDiffPTDataTy&gt;(ptD);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MutPTDataTy::PtsMap&amp;<sp/>getPtsMap()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="181"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MutPTDataTy<sp/>*m<sp/>=<sp/>SVFUtil::dyn_cast&lt;MutPTDataTy&gt;(ptD))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m-&gt;getPtsMap();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MutDiffPTDataTy<sp/>*md<sp/>=<sp/>SVFUtil::dyn_cast&lt;MutDiffPTDataTy&gt;(ptD))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>md-&gt;getPtsMap();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;BVDataPTAImpl::getPtsMap:<sp/>not<sp/>a<sp/>PTData<sp/>with<sp/>a<sp/>PtsMap!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SVFUtil::dyn_cast&lt;MutPTDataTy&gt;(ptD)-&gt;getPtsMap();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1a9830d4676fd424b633f8e4d918734296" kindref="member">onTheFlyCallGraphSolve</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CallSiteToFunPtrMap&amp;<sp/>callsites,<sp/>CallEdgeMap&amp;<sp/>newEdges);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>PTDataTy*<sp/>ptD;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>AliasResult<sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1ad06fbd9a51499c668662b533eeb2e4ac" kindref="member">alias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MemoryLocation<sp/><sp/>&amp;LocA,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MemoryLocation<sp/><sp/>&amp;LocB);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>AliasResult<sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1ad06fbd9a51499c668662b533eeb2e4ac" kindref="member">alias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value*<sp/>V1,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value*<sp/>V2);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>AliasResult<sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1ad06fbd9a51499c668662b533eeb2e4ac" kindref="member">alias</ref>(NodeID<sp/>node1,<sp/>NodeID<sp/>node2);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>AliasResult<sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1ad06fbd9a51499c668662b533eeb2e4ac" kindref="member">alias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PointsTo&amp;<sp/>pts1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PointsTo&amp;<sp/>pts2);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"></codeline>
<codeline lineno="214" refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1ae20bbb7991f585deb2e6d0d8115b1b93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1ae20bbb7991f585deb2e6d0d8115b1b93" kindref="member">dumpCPts</ref>()</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptD-&gt;dumpPTData();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1a8d6cea841b6ded0f80ef2b5784e9b752" kindref="member">dumpTopLevelPtsTo</ref>();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1a97705b60d294b87ee075a69f04a35d22" kindref="member">dumpAllPts</ref>();</highlight></codeline>
<codeline lineno="223"><highlight class="normal">};</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Cond&gt;</highlight></codeline>
<codeline lineno="229" refid="class_s_v_f_1_1_cond_p_t_a_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_s_v_f_1_1_cond_p_t_a_impl" kindref="compound">CondPTAImpl</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_pointer_analysis" kindref="compound">PointerAnalysis</ref></highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_var" kindref="compound">CondVar&lt;Cond&gt;</ref><sp/><ref refid="class_s_v_f_1_1_cond_var" kindref="compound">CVar</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CondStdSet&lt;CVar&gt;</ref><sp/><sp/><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CPtSet</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData&lt;CVar, CVar, CPtSet&gt;</ref><sp/><ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTDataTy</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_mutable_p_t_data" kindref="compound">MutablePTData&lt;CVar, CVar, CPtSet&gt;</ref><sp/><ref refid="class_s_v_f_1_1_mutable_p_t_data" kindref="compound">MutPTDataTy</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Map&lt;NodeID,PointsTo&gt;<sp/>PtrToBVPtsMap;<sp/></highlight></codeline>
<codeline lineno="238" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a838c3f2be39d278072f7a9df7c0bcb4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Map&lt;NodeID,<sp/>NodeSet&gt;<sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a838c3f2be39d278072f7a9df7c0bcb4d" kindref="member">PtrToNSMap</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Map&lt;NodeID,CPtSet&gt;<sp/>PtrToCPtsMap;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="class_s_v_f_1_1_cond_p_t_a_impl_1adc5d33698377dc22aa1ae1151da13675" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1adc5d33698377dc22aa1ae1151da13675" kindref="member">CondPTAImpl</ref>(<ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref>*<sp/><ref refid="class_s_v_f_1_1_pointer_analysis_1a8771956f7595b66d825b3dc459d1ae49" kindref="member">pag</ref>,<sp/><ref refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85" kindref="member">PointerAnalysis::PTATY</ref><sp/>type)<sp/>:<sp/><ref refid="class_s_v_f_1_1_pointer_analysis" kindref="compound">PointerAnalysis</ref>(<ref refid="class_s_v_f_1_1_pointer_analysis_1a8771956f7595b66d825b3dc459d1ae49" kindref="member">pag</ref>,<sp/>type),<sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1ab4115f25e2e477bfd73d01f069f47241" kindref="member">normalized</ref>(false)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85acaf0c0774025005647deaf59582b9d58" kindref="member">PathS_DDA</ref><sp/>||<sp/>type<sp/>==<sp/><ref refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85a0ab6564c48897595c9d23382a026e0a8" kindref="member">Cxt_DDA</ref>)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1af960c10e49932ea5e9dcdd299ff300ce" kindref="member">ptD</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_mutable_p_t_data" kindref="compound">MutPTDataTy</ref>();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>points-to<sp/>data<sp/>available&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_pointer_analysis_1a5d3c3094e263bf16a4f312a118c1bd36" kindref="member">ptaImplTy</ref><sp/>=<sp/><ref refid="class_s_v_f_1_1_pointer_analysis_1ac0c0855918cb2cdc3d8ebc175acfbd4da88380bb05f60a1349e192364ba6c5292" kindref="member">CondImpl</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a01f64600bf6581403836019e4e5ae741" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a01f64600bf6581403836019e4e5ae741" kindref="member">~CondPTAImpl</ref>()</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a5fa3d986e4ef710a2148b2854167c3ed" kindref="member">destroy</ref>();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>classof(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_pointer_analysis" kindref="compound">PointerAnalysis</ref><sp/>*pta)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pta-&gt;<ref refid="class_s_v_f_1_1_pointer_analysis_1ac0f821cfe4fb9c9c8816e7a1b1bc0c5e" kindref="member">getImplTy</ref>()<sp/>==<sp/><ref refid="class_s_v_f_1_1_pointer_analysis_1ac0c0855918cb2cdc3d8ebc175acfbd4da88380bb05f60a1349e192364ba6c5292" kindref="member">CondImpl</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a5fa3d986e4ef710a2148b2854167c3ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a5fa3d986e4ef710a2148b2854167c3ed" kindref="member">destroy</ref>()</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1af960c10e49932ea5e9dcdd299ff300ce" kindref="member">ptD</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1af960c10e49932ea5e9dcdd299ff300ce" kindref="member">ptD</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a35cb1fd6e18cdc8e8466ee94846bc553" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTDataTy</ref>*<sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a35cb1fd6e18cdc8e8466ee94846bc553" kindref="member">getPTDataTy</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="272"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1af960c10e49932ea5e9dcdd299ff300ce" kindref="member">ptD</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>MutPTDataTy*<sp/>getMutPTDataTy()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="277"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MutPTDataTy*<sp/>mut<sp/>=<sp/>SVFUtil::dyn_cast&lt;MutPTDataTy&gt;(<ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1af960c10e49932ea5e9dcdd299ff300ce" kindref="member">ptD</ref>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mut<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;BVDataPTAImpl::getMutPTDataTy:<sp/>not<sp/>a<sp/>MutPTDataTy!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mut;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasPtsMap(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="284"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SVFUtil::isa&lt;MutPTDataTy&gt;(<ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1af960c10e49932ea5e9dcdd299ff300ce" kindref="member">ptD</ref>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MutPTDataTy::PtsMap&amp;<sp/>getPtsMap()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="289"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MutPTDataTy<sp/>*m<sp/>=<sp/>SVFUtil::dyn_cast&lt;MutPTDataTy&gt;(<ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1af960c10e49932ea5e9dcdd299ff300ce" kindref="member">ptD</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m-&gt;getPtsMap();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;CondPTAImpl::getPtsMap:<sp/>not<sp/>a<sp/>PTData<sp/>with<sp/>a<sp/>PtsMap!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a63fa2b3a96696ffc67a119c1ba5ce748" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CPtSet</ref>&amp;<sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a63fa2b3a96696ffc67a119c1ba5ce748" kindref="member">getPts</ref>(<ref refid="class_s_v_f_1_1_cond_var" kindref="compound">CVar</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1af960c10e49932ea5e9dcdd299ff300ce" kindref="member">ptD</ref>-&gt;<ref refid="class_s_v_f_1_1_p_t_data_1a86a93186b51b6ce9dccffecad8381281" kindref="member">getPts</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Set&lt;CVar&gt;&amp;<sp/>getRevPts(CVar<sp/>nodeId)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1af960c10e49932ea5e9dcdd299ff300ce" kindref="member">ptD</ref>-&gt;<ref refid="class_s_v_f_1_1_p_t_data_1a5ac0805846fb6bac6c58c0fefb106c5f" kindref="member">getRevPts</ref>(nodeId);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"></codeline>
<codeline lineno="308" refid="class_s_v_f_1_1_cond_p_t_a_impl_1adfae199dfbe05c9c20052e0fc204e6de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1adfae199dfbe05c9c20052e0fc204e6de" kindref="member">clearPts</ref>()</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1af960c10e49932ea5e9dcdd299ff300ce" kindref="member">ptD</ref>-&gt;<ref refid="class_s_v_f_1_1_p_t_data_1a3cdec1f0be962716508d3922dce058d5" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="class_s_v_f_1_1_cond_p_t_a_impl_1adf0acbb0c605278e43d88787d651bbd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1adf0acbb0c605278e43d88787d651bbd8" kindref="member">overlap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CPtSet</ref>&amp;<sp/>cpts1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CPtSet</ref>&amp;<sp/>cpts2)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="315"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CPtSet::const_iterator<sp/>it1<sp/>=<sp/>cpts1.<ref refid="class_s_v_f_1_1_cond_std_set_1adf095111734d81b6ad1908a7f795b038" kindref="member">begin</ref>();<sp/>it1<sp/>!=<sp/>cpts1.end();<sp/>++it1)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CPtSet::const_iterator<sp/>it2<sp/>=<sp/>cpts2.<ref refid="class_s_v_f_1_1_cond_std_set_1adf095111734d81b6ad1908a7f795b038" kindref="member">begin</ref>();<sp/>it2<sp/>!=<sp/>cpts2.end();<sp/>++it2)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a7a1be735c76ba4a6b235264fe8ec6c28" kindref="member">isSameVar</ref>(*it1,*it2))</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a87b48287d7edb97fc120200fe0e5218d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a87b48287d7edb97fc120200fe0e5218d" kindref="member">expandFIObjs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CPtSet</ref>&amp;<sp/>cpts,<sp/><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CPtSet</ref>&amp;<sp/>expandedCpts)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expandedCpts<sp/>=<sp/>cpts;;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CPtSet::const_iterator<sp/>cit<sp/>=<sp/>cpts.<ref refid="class_s_v_f_1_1_cond_std_set_1adf095111734d81b6ad1908a7f795b038" kindref="member">begin</ref>(),<sp/>ecit=cpts.end();<sp/>cit!=ecit;<sp/>++cit)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_s_v_f_1_1_pointer_analysis_1a8771956f7595b66d825b3dc459d1ae49" kindref="member">pag</ref>-&gt;getBaseObjNode(cit-&gt;get_id())==cit-&gt;get_id())</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NodeBS&amp;<sp/>fields<sp/>=<sp/><ref refid="class_s_v_f_1_1_pointer_analysis_1a8771956f7595b66d825b3dc459d1ae49" kindref="member">pag</ref>-&gt;<ref refid="class_s_v_f_1_1_p_a_g_1a049069cb76eada008e65b71e08ccdf46" kindref="member">getAllFieldsObjNode</ref>(cit-&gt;get_id());</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NodeBS::iterator<sp/>it<sp/>=<sp/>fields.begin(),<sp/>eit<sp/>=<sp/>fields.end();<sp/>it!=eit;<sp/>++it)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_cond_var" kindref="compound">CVar</ref><sp/>cvar(cit-&gt;get_cond(),*it);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expandedCpts.<ref refid="class_s_v_f_1_1_cond_std_set_1ae11deddad534be115d29daad08c90599" kindref="member">set</ref>(cvar);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a9bdc3a50c695029a28371116ddc3ef8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a9bdc3a50c695029a28371116ddc3ef8d" kindref="member">finalize</ref>()</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a9452d65894864446d8288639435382d7" kindref="member">NormalizePointsTo</ref>();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_pointer_analysis_1a118dabc50024b5cd91095814ade47166" kindref="member">PointerAnalysis::finalize</ref>();</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"></codeline>
<codeline lineno="356" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a1a95d1d6ac48157c896d9895cff697b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a1a95d1d6ac48157c896d9895cff697b4" kindref="member">unionPts</ref>(<ref refid="class_s_v_f_1_1_cond_var" kindref="compound">CVar</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CPtSet</ref>&amp;<sp/>target)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1af960c10e49932ea5e9dcdd299ff300ce" kindref="member">ptD</ref>-&gt;<ref refid="class_s_v_f_1_1_p_t_data_1a482eda0b2ea6a8e1326ee1a0c25c1fdc" kindref="member">unionPts</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>target);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a1a95d1d6ac48157c896d9895cff697b4" kindref="member">unionPts</ref>(CVar<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>CVar<sp/>ptd)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1af960c10e49932ea5e9dcdd299ff300ce" kindref="member">ptD</ref>-&gt;<ref refid="class_s_v_f_1_1_p_t_data_1a482eda0b2ea6a8e1326ee1a0c25c1fdc" kindref="member">unionPts</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,ptd);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addPts(CVar<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>CVar<sp/>ptd)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1af960c10e49932ea5e9dcdd299ff300ce" kindref="member">ptD</ref>-&gt;<ref refid="class_s_v_f_1_1_p_t_data_1a1365146d19ee927f870a7384c0d1db6b" kindref="member">addPts</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,ptd);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"></codeline>
<codeline lineno="373"></codeline>
<codeline lineno="374" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a3b5877fec52bbfa7c83bab6c9bc95684" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a3b5877fec52bbfa7c83bab6c9bc95684" kindref="member">mustAlias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_var" kindref="compound">CVar</ref>&amp;<sp/>var1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_var" kindref="compound">CVar</ref>&amp;<sp/>var2)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a7a1be735c76ba4a6b235264fe8ec6c28" kindref="member">isSameVar</ref>(var1,var2))</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>singleton<sp/>=<sp/>!(<ref refid="class_s_v_f_1_1_pointer_analysis_1ae6ea391ac44dffeb6899bb44323c5361" kindref="member">isHeapMemObj</ref>(var1.get_id())<sp/>||<sp/><ref refid="class_s_v_f_1_1_pointer_analysis_1a108380f6f0b67654bb7c7676686096c8" kindref="member">isLocalVarInRecursiveFun</ref>(var1.get_id()));</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a6b746c30161c7dab86510895e0032935" kindref="member">isCondCompatible</ref>(var1.get_cond(),var2.get_cond(),singleton)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CPtSet</ref>&amp;<sp/>cpts1<sp/>=<sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a63fa2b3a96696ffc67a119c1ba5ce748" kindref="member">getPts</ref>(var1);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CPtSet</ref>&amp;<sp/>cpts2<sp/>=<sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a63fa2b3a96696ffc67a119c1ba5ce748" kindref="member">getPts</ref>(var2);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(contains(cpts1,cpts2)<sp/>&amp;&amp;<sp/>contains(cpts2,cpts1));</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Whether<sp/>cpts1<sp/>contains<sp/>all<sp/>points-to<sp/>targets<sp/>of<sp/>pts2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>contains(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CPtSet&amp;<sp/>cpts1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CPtSet&amp;<sp/>cpts2)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cpts1.empty()<sp/>||<sp/>cpts2.empty())</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CPtSet::const_iterator<sp/>it2<sp/>=<sp/>cpts2.begin();<sp/>it2<sp/>!=<sp/>cpts2.end();<sp/>++it2)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasObj<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CPtSet::const_iterator<sp/>it1<sp/>=<sp/>cpts1.begin();<sp/>it1<sp/>!=<sp/>cpts1.end();<sp/>++it1)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a7a1be735c76ba4a6b235264fe8ec6c28" kindref="member">isSameVar</ref>(*it1,*it2))</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasObj<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hasObj<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a7a1be735c76ba4a6b235264fe8ec6c28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a7a1be735c76ba4a6b235264fe8ec6c28" kindref="member">isSameVar</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_var" kindref="compound">CVar</ref>&amp;<sp/>var1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_var" kindref="compound">CVar</ref>&amp;<sp/>var2)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="413"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(var1.get_id()<sp/>!=<sp/>var2.get_id())</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>singleton<sp/>=<sp/>!(<ref refid="class_s_v_f_1_1_pointer_analysis_1ae6ea391ac44dffeb6899bb44323c5361" kindref="member">isHeapMemObj</ref>(var1.get_id())<sp/>||<sp/><ref refid="class_s_v_f_1_1_pointer_analysis_1a108380f6f0b67654bb7c7676686096c8" kindref="member">isLocalVarInRecursiveFun</ref>(var1.get_id()));</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a6b746c30161c7dab86510895e0032935" kindref="member">isCondCompatible</ref>(var1.get_cond(),var2.get_cond(),singleton);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"></codeline>
<codeline lineno="424" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a9452d65894864446d8288639435382d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a9452d65894864446d8288639435382d7" kindref="member">NormalizePointsTo</ref>()</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1ab4115f25e2e477bfd73d01f069f47241" kindref="member">normalized</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasPtsMap())</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MutPTDataTy::PtsMap&amp;<sp/>ptsMap<sp/>=<sp/>getPtsMap();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MutPTDataTy::PtsMap::const_iterator<sp/>it<sp/>=<sp/>ptsMap.begin(),<sp/>eit=ptsMap.end();<sp/>it!=eit;<sp/>++it)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CPtSet::const_iterator<sp/>cit<sp/>=<sp/>it-&gt;second.begin(),<sp/>ecit=it-&gt;second.end();<sp/>cit!=ecit;<sp/>++cit)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a30b9ee7b1dcd04285f92cf7accd05b2e" kindref="member">ptrToBVPtsMap</ref>[(it-&gt;first).get_id()].set(cit-&gt;get_id());</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a22c23f3ba1ee7e0aaccf0b8a1b58e33e" kindref="member">objToNSRevPtsMap</ref>[cit-&gt;get_id()].insert((it-&gt;first).get_id());</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a61167fcdb2005090de1b38e53450431a" kindref="member">ptrToCPtsMap</ref>[(it-&gt;first).get_id()].set(*cit);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;CondPTAImpl::NormalizePointsTo:<sp/>could<sp/>not<sp/>normalize<sp/>points-to<sp/>sets&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446" refid="class_s_v_f_1_1_cond_p_t_a_impl_1af960c10e49932ea5e9dcdd299ff300ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTDataTy</ref>*<sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1af960c10e49932ea5e9dcdd299ff300ce" kindref="member">ptD</ref>;</highlight></codeline>
<codeline lineno="448" refid="class_s_v_f_1_1_cond_p_t_a_impl_1ab4115f25e2e477bfd73d01f069f47241" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1ab4115f25e2e477bfd73d01f069f47241" kindref="member">normalized</ref>;</highlight></codeline>
<codeline lineno="450" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a30b9ee7b1dcd04285f92cf7accd05b2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>PtrToBVPtsMap<sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a30b9ee7b1dcd04285f92cf7accd05b2e" kindref="member">ptrToBVPtsMap</ref>;</highlight></codeline>
<codeline lineno="452" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a22c23f3ba1ee7e0aaccf0b8a1b58e33e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a838c3f2be39d278072f7a9df7c0bcb4d" kindref="member">PtrToNSMap</ref><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a22c23f3ba1ee7e0aaccf0b8a1b58e33e" kindref="member">objToNSRevPtsMap</ref>;</highlight></codeline>
<codeline lineno="454" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a61167fcdb2005090de1b38e53450431a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>PtrToCPtsMap<sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a61167fcdb2005090de1b38e53450431a" kindref="member">ptrToCPtsMap</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="457" refid="class_s_v_f_1_1_cond_p_t_a_impl_1aa260a3275fbec7061295306a58763d24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1aa260a3275fbec7061295306a58763d24" kindref="member">dumpCPts</ref>()</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1af960c10e49932ea5e9dcdd299ff300ce" kindref="member">ptD</ref>-&gt;<ref refid="class_s_v_f_1_1_p_t_data_1affb0e613229679f926c52c37b3c141ea" kindref="member">dumpPTData</ref>();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a94f3e4d073b8c5bab3c46058ddba3f43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>PointsTo<sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a94f3e4d073b8c5bab3c46058ddba3f43" kindref="member">getBVPointsTo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CPtSet</ref>&amp;<sp/>cpts)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="463"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PointsTo<sp/>pts;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CPtSet::const_iterator<sp/>cit<sp/>=<sp/>cpts.<ref refid="class_s_v_f_1_1_cond_std_set_1adf095111734d81b6ad1908a7f795b038" kindref="member">begin</ref>(),<sp/>ecit=cpts.end();<sp/>cit!=ecit;<sp/>++cit)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pts.set(cit-&gt;get_id());</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pts;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a0b96ba98239186d6d676f9540da9e590" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>PointsTo&amp;<sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a0b96ba98239186d6d676f9540da9e590" kindref="member">getPts</ref>(NodeID<sp/>ptr)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1ab4115f25e2e477bfd73d01f069f47241" kindref="member">normalized</ref><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Pts<sp/>of<sp/>all<sp/>context-var<sp/>have<sp/>to<sp/>be<sp/>merged/normalized.<sp/>Want<sp/>to<sp/>use<sp/>getPts(CVar<sp/>cvar)??&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a30b9ee7b1dcd04285f92cf7accd05b2e" kindref="member">ptrToBVPtsMap</ref>[ptr];</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a454a998ef5a866f2a6f270e3283c6ebd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CPtSet</ref>&amp;<sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a454a998ef5a866f2a6f270e3283c6ebd" kindref="member">getCondPointsTo</ref>(NodeID<sp/>ptr)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1ab4115f25e2e477bfd73d01f069f47241" kindref="member">normalized</ref><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Pts<sp/>of<sp/>all<sp/>context-vars<sp/>have<sp/>to<sp/>be<sp/>merged/normalized.<sp/>Want<sp/>to<sp/>use<sp/>getPts(CVar<sp/>cvar)??&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a61167fcdb2005090de1b38e53450431a" kindref="member">ptrToCPtsMap</ref>[ptr];</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482" refid="class_s_v_f_1_1_cond_p_t_a_impl_1aa266eef30817c557882de19aefe135a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>NodeSet&amp;<sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1aa266eef30817c557882de19aefe135a9" kindref="member">getRevPts</ref>(NodeID<sp/>obj)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1ab4115f25e2e477bfd73d01f069f47241" kindref="member">normalized</ref><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Pts<sp/>of<sp/>all<sp/>context-var<sp/>have<sp/>to<sp/>be<sp/>merged/normalized.<sp/>Want<sp/>to<sp/>use<sp/>getPts(CVar<sp/>cvar)??&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a22c23f3ba1ee7e0aaccf0b8a1b58e33e" kindref="member">objToNSRevPtsMap</ref>[obj];</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="class_s_v_f_1_1_cond_p_t_a_impl_1afa6dffc1ac7e8dada1ff9e75b8cfd187" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>AliasResult<sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1afa6dffc1ac7e8dada1ff9e75b8cfd187" kindref="member">alias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MemoryLocation<sp/>&amp;LocA,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MemoryLocation<sp/><sp/>&amp;LocB)</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1afa6dffc1ac7e8dada1ff9e75b8cfd187" kindref="member">alias</ref>(LocA.Ptr,<sp/>LocB.Ptr);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a171918ada9b679b0114b27476caa5ee6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>AliasResult<sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a171918ada9b679b0114b27476caa5ee6" kindref="member">alias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value*<sp/>V1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value*<sp/>V2)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1afa6dffc1ac7e8dada1ff9e75b8cfd187" kindref="member">alias</ref>(<ref refid="class_s_v_f_1_1_pointer_analysis_1a8771956f7595b66d825b3dc459d1ae49" kindref="member">pag</ref>-&gt;<ref refid="class_s_v_f_1_1_p_a_g_1a5f49b7da110a626ed6605d1f108dfa25" kindref="member">getValueNode</ref>(V1),<ref refid="class_s_v_f_1_1_pointer_analysis_1a8771956f7595b66d825b3dc459d1ae49" kindref="member">pag</ref>-&gt;<ref refid="class_s_v_f_1_1_p_a_g_1a5f49b7da110a626ed6605d1f108dfa25" kindref="member">getValueNode</ref>(V2));</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500" refid="class_s_v_f_1_1_cond_p_t_a_impl_1ac18e1dc9c6fc8cc952f67a93c2491876" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>AliasResult<sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1ac18e1dc9c6fc8cc952f67a93c2491876" kindref="member">alias</ref>(NodeID<sp/>node1,<sp/>NodeID<sp/>node2)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1afa6dffc1ac7e8dada1ff9e75b8cfd187" kindref="member">alias</ref>(<ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a454a998ef5a866f2a6f270e3283c6ebd" kindref="member">getCondPointsTo</ref>(node1),<ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a454a998ef5a866f2a6f270e3283c6ebd" kindref="member">getCondPointsTo</ref>(node2));</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505" refid="class_s_v_f_1_1_cond_p_t_a_impl_1adb1ed3728d53a13c94402392155e9913" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>AliasResult<sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1adb1ed3728d53a13c94402392155e9913" kindref="member">alias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_var" kindref="compound">CVar</ref>&amp;<sp/>var1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_var" kindref="compound">CVar</ref>&amp;<sp/>var2)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1afa6dffc1ac7e8dada1ff9e75b8cfd187" kindref="member">alias</ref>(<ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a63fa2b3a96696ffc67a119c1ba5ce748" kindref="member">getPts</ref>(var1),<ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a63fa2b3a96696ffc67a119c1ba5ce748" kindref="member">getPts</ref>(var2));</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a8e48e9fe6f7e21da49a155f8f6893944" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>AliasResult<sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a8e48e9fe6f7e21da49a155f8f6893944" kindref="member">alias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CPtSet</ref>&amp;<sp/>pts1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CPtSet</ref>&amp;<sp/>pts2)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CPtSet</ref><sp/>cpts1;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a87b48287d7edb97fc120200fe0e5218d" kindref="member">expandFIObjs</ref>(pts1,cpts1);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CPtSet</ref><sp/>cpts2;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a87b48287d7edb97fc120200fe0e5218d" kindref="member">expandFIObjs</ref>(pts2,cpts2);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a8cd7b08bd978513cb0faacc47bbaf578" kindref="member">containBlackHoleNode</ref>(cpts1)<sp/>||<sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a8cd7b08bd978513cb0faacc47bbaf578" kindref="member">containBlackHoleNode</ref>(cpts2))</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>llvm::MayAlias;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="class_s_v_f_1_1_pointer_analysis_1ac23f71c1307cda9cba44acc40059f0a3" kindref="member">getAnalysisTy</ref>()==<ref refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85acaf0c0774025005647deaf59582b9d58" kindref="member">PathS_DDA</ref><sp/>&amp;&amp;<sp/>contains(cpts1,cpts2)<sp/>&amp;&amp;<sp/>contains(cpts2,cpts1))</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>llvm::MustAlias;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1adf0acbb0c605278e43d88787d651bbd8" kindref="member">overlap</ref>(cpts1,cpts2))</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>llvm::MayAlias;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>llvm::NoAlias;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a8cd7b08bd978513cb0faacc47bbaf578" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a8cd7b08bd978513cb0faacc47bbaf578" kindref="member">containBlackHoleNode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CPtSet</ref>&amp;<sp/>cpts)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CPtSet::const_iterator<sp/>cit<sp/>=<sp/>cpts.<ref refid="class_s_v_f_1_1_cond_std_set_1adf095111734d81b6ad1908a7f795b038" kindref="member">begin</ref>(),<sp/>ecit=cpts.end();<sp/>cit!=ecit;<sp/>++cit)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cit-&gt;get_id()<sp/>==<sp/><ref refid="class_s_v_f_1_1_pointer_analysis_1a8771956f7595b66d825b3dc459d1ae49" kindref="member">pag</ref>-&gt;<ref refid="class_s_v_f_1_1_p_a_g_1adc2f52d5c95c6b8718fe3f899d19cc2f" kindref="member">getBlackHoleNode</ref>())</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a3a10f3327d6473c348df5b62a5d6683f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a3a10f3327d6473c348df5b62a5d6683f" kindref="member">containConstantNode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CPtSet</ref>&amp;<sp/>cpts)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CPtSet::const_iterator<sp/>cit<sp/>=<sp/>cpts.<ref refid="class_s_v_f_1_1_cond_std_set_1adf095111734d81b6ad1908a7f795b038" kindref="member">begin</ref>(),<sp/>ecit=cpts.end();<sp/>cit!=ecit;<sp/>++cit)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cit-&gt;get_id()<sp/>==<sp/><ref refid="class_s_v_f_1_1_pointer_analysis_1a8771956f7595b66d825b3dc459d1ae49" kindref="member">pag</ref>-&gt;getConstantNode())</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a6b746c30161c7dab86510895e0032935" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a6b746c30161c7dab86510895e0032935" kindref="member">isCondCompatible</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cond&amp;<sp/>cxt1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cond&amp;<sp/>cxt2,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>singleton)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="551" refid="class_s_v_f_1_1_cond_p_t_a_impl_1a80daa422e0dacf75aceb4fe5b4687c04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a80daa422e0dacf75aceb4fe5b4687c04" kindref="member">dumpTopLevelPtsTo</ref>()</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(OrderedNodeSet::iterator<sp/>nIter<sp/>=<sp/>this-&gt;<ref refid="class_s_v_f_1_1_pointer_analysis_1a60b111647e000cc983aa52513f90afbc" kindref="member">getAllValidPtrs</ref>().begin();<sp/>nIter<sp/>!=<sp/>this-&gt;<ref refid="class_s_v_f_1_1_pointer_analysis_1a60b111647e000cc983aa52513f90afbc" kindref="member">getAllValidPtrs</ref>().end();<sp/>++nIter)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_p_a_g_node" kindref="compound">PAGNode</ref>*<sp/>node<sp/>=<sp/>this-&gt;<ref refid="class_s_v_f_1_1_pointer_analysis_1aaf6b41f44da3a4caea1fa395e41edf71" kindref="member">getPAG</ref>()-&gt;<ref refid="class_s_v_f_1_1_p_a_g_1a3aa1c92eb8a6fab72996964de80f19ac" kindref="member">getPAGNode</ref>(*nIter);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_s_v_f_1_1_pointer_analysis_1aaf6b41f44da3a4caea1fa395e41edf71" kindref="member">getPAG</ref>()-&gt;isValidTopLevelPtr(node))</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SVFUtil::isa&lt;DummyObjPN&gt;(node))</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;##&lt;Blackhole<sp/>or<sp/>constant&gt;<sp/>id:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>node-&gt;<ref refid="class_s_v_f_1_1_generic_node_1ac3e55ef37aefb411ea4c87b1aa3b1895" kindref="member">getId</ref>();</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SVFUtil::isa&lt;DummyValPN&gt;(node))</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;##&lt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>node-&gt;<ref refid="class_s_v_f_1_1_p_a_g_node_1a45be6b7b2f1f9754ea47e511e65d46ae" kindref="member">getValue</ref>()-&gt;getName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&gt;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//SVFUtil::outs()<sp/>&lt;&lt;<sp/>&quot;Source<sp/>Loc:<sp/>&quot;<sp/>&lt;&lt;<sp/>SVFUtil::getSourceLoc(node-&gt;getValue());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PointsTo&amp;<sp/>pts<sp/>=<sp/><ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a63fa2b3a96696ffc67a119c1ba5ce748" kindref="member">getPts</ref>(node-&gt;<ref refid="class_s_v_f_1_1_generic_node_1ac3e55ef37aefb411ea4c87b1aa3b1895" kindref="member">getId</ref>());</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nNodeID<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>node-&gt;<ref refid="class_s_v_f_1_1_generic_node_1ac3e55ef37aefb411ea4c87b1aa3b1895" kindref="member">getId</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pts.empty())</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t\tPointsTo:<sp/>{empty}\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t\tPointsTo:<sp/>{<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(PointsTo::iterator<sp/>it<sp/>=<sp/>pts.begin(),<sp/>eit<sp/>=<sp/>pts.end();<sp/>it<sp/>!=<sp/>eit;<sp/>++it)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/>*it<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVFUtil::outs().flush();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal">};</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>namespace<sp/>SVF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDE_MEMORYMODEL_POINTERANALYSISIMPL_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/MemoryModel/PointerAnalysisImpl.h"/>
  </compounddef>
</doxygen>
