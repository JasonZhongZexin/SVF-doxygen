<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_context_cond" xml:lang="en-US">
<title>SVF::ContextCond Class Reference</title>
<indexterm><primary>SVF::ContextCond</primary></indexterm>
<para>
<computeroutput>#include &lt;DPItem.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for SVF::ContextCond:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_context_cond.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_context_cond_1a101bc917679a9d8ee7badb3c9e8c12e3"/>typedef CallStrCxt::const_iterator <emphasis role="strong">const_iterator</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_context_cond_1a9b81bf11679645d32d50b91bdb6d2dc1"/><link linkend="_class_s_v_f_1_1_context_cond_1a9b81bf11679645d32d50b91bdb6d2dc1">ContextCond</link> ()</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_context_cond_1a5f31275f74ff9eb5734481f36275c6d9"/><link linkend="_class_s_v_f_1_1_context_cond_1a5f31275f74ff9eb5734481f36275c6d9">ContextCond</link> (const <link linkend="_class_s_v_f_1_1_context_cond">ContextCond</link> &amp;cond)</para>

<para>Copy Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_context_cond_1acacf53982ab08b9f0fcfbd1e941b3365"/>virtual <link linkend="_class_s_v_f_1_1_context_cond_1acacf53982ab08b9f0fcfbd1e941b3365">~ContextCond</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_context_cond_1a73d4d6ed38898b912926d044268fd35b"/>const CallStrCxt &amp; <link linkend="_class_s_v_f_1_1_context_cond_1a73d4d6ed38898b912926d044268fd35b">getContexts</link> () const</para>

<para>Get context. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_context_cond_1a2af7a9769d97ddb4a217d0baaf7c03a3"/>CallStrCxt &amp; <link linkend="_class_s_v_f_1_1_context_cond_1a2af7a9769d97ddb4a217d0baaf7c03a3">getContexts</link> ()</para>

<para>Get context. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_context_cond_1ac5f7388c0bbcee1878201819b9cd199f"/>bool <link linkend="_class_s_v_f_1_1_context_cond_1ac5f7388c0bbcee1878201819b9cd199f">isConcreteCxt</link> () const</para>

<para>Whether it is an concrete context. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_context_cond_1ac80892cbef7a5d2c949e5f07682bc885"/>void <link linkend="_class_s_v_f_1_1_context_cond_1ac80892cbef7a5d2c949e5f07682bc885">setNonConcreteCxt</link> ()</para>

<para>Whether it is an concrete context. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_context_cond_1a6f5b0bbc0978220aaa990f5fd0ddce8d"/>bool <link linkend="_class_s_v_f_1_1_context_cond_1a6f5b0bbc0978220aaa990f5fd0ddce8d">containCallStr</link> (NodeID cxt) const</para>

<para>Whether contains callstring cxt. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_context_cond_1a20f15a1661f928ab80bacaf8f5c497b1"/>u32_t <link linkend="_class_s_v_f_1_1_context_cond_1a20f15a1661f928ab80bacaf8f5c497b1">cxtSize</link> () const</para>

<para>Get context size. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_s_v_f_1_1_context_cond_1ad16644f61728fbb166ce80957b17d884">pushContext</link> (NodeID ctx)</para>

<para>Push context. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_s_v_f_1_1_context_cond_1ab816f854687999b8c01f5c02fcf6b8af">matchContext</link> (NodeID ctx)</para>

<para>Match context. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_s_v_f_1_1_context_cond_1a53e0a8ac864e15edf0de827bdbb4eb01">operator&lt;</link> (const <link linkend="_class_s_v_f_1_1_context_cond">ContextCond</link> &amp;rhs) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_context_cond_1a62cc1c7c01d454e9cbebd3f7f5f3aa1f"/>NodeID <link linkend="_class_s_v_f_1_1_context_cond_1a62cc1c7c01d454e9cbebd3f7f5f3aa1f">operator[]</link> (const u32_t index) const</para>

<para>Overloading operator[]. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_context_cond_1ae4d1bb47d0c8ef4d8b31ffaeb83edf04"/><link linkend="_class_s_v_f_1_1_context_cond">ContextCond</link> &amp; <link linkend="_class_s_v_f_1_1_context_cond_1ae4d1bb47d0c8ef4d8b31ffaeb83edf04">operator=</link> (const <link linkend="_class_s_v_f_1_1_context_cond">ContextCond</link> &amp;rhs)</para>

<para>Overloading operator=. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_context_cond_1a69b8789b4815f2958afe67028640bfc5"/>bool <link linkend="_class_s_v_f_1_1_context_cond_1a69b8789b4815f2958afe67028640bfc5">operator==</link> (const <link linkend="_class_s_v_f_1_1_context_cond">ContextCond</link> &amp;rhs) const</para>

<para>Overloading operator==. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_context_cond_1a357317ef5f0a848a30eb38eec8c8a0f8"/>bool <link linkend="_class_s_v_f_1_1_context_cond_1a357317ef5f0a848a30eb38eec8c8a0f8">operator!=</link> (const <link linkend="_class_s_v_f_1_1_context_cond">ContextCond</link> &amp;rhs) const</para>

<para>Overloading operator!=. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_context_cond_1a4ae7e2236708b0d205f393cdce75c8d1"/>const_iterator <link linkend="_class_s_v_f_1_1_context_cond_1a4ae7e2236708b0d205f393cdce75c8d1">begin</link> () const</para>

<para>Begin iterators. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_context_cond_1a4b56b54896a1241032d7614309829399"/>const_iterator <link linkend="_class_s_v_f_1_1_context_cond_1a4b56b54896a1241032d7614309829399">end</link> () const</para>

<para>End iterators. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_context_cond_1a5f73451064b22bc1aab91b22ddea1eee"/>std::string <link linkend="_class_s_v_f_1_1_context_cond_1a5f73451064b22bc1aab91b22ddea1eee">toString</link> () const</para>

<para>Dump context condition. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_context_cond_1a92e89bbae0f31bb9eb971ab3edcc8071"/>static void <link linkend="_class_s_v_f_1_1_context_cond_1a92e89bbae0f31bb9eb971ab3edcc8071">setMaxCxtLen</link> (u32_t max)</para>

<para>set max context limit </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_context_cond_1a151b9f21eedd4fdd8f46b78bb456582d"/>static u32_t <emphasis role="strong">maximumCxt</emphasis> = 0</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_context_cond_1ac431eae00244cc7792b6e7e00634d535"/>CallStrCxt <emphasis role="strong">context</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Context Condition </para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_context_cond_1ab816f854687999b8c01f5c02fcf6b8af"/>    <section>
    <title>matchContext()</title>
<indexterm><primary>matchContext</primary><secondary>SVF::ContextCond</secondary></indexterm>
<indexterm><primary>SVF::ContextCond</primary><secondary>matchContext</secondary></indexterm>
<para><computeroutput>virtual bool SVF::ContextCond::matchContext (NodeID ctx)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Match context. </para>
</para>

<para>if context is empty, then it is the unbalanced parentheses match</para>

<para>otherwise, we perform balanced parentheses matching</para>
    </section><anchor xml:id="_class_s_v_f_1_1_context_cond_1a53e0a8ac864e15edf0de827bdbb4eb01"/>    <section>
    <title>operator&lt;()</title>
<indexterm><primary>operator&lt;</primary><secondary>SVF::ContextCond</secondary></indexterm>
<indexterm><primary>SVF::ContextCond</primary><secondary>operator&lt;</secondary></indexterm>
<para><computeroutput>bool SVF::ContextCond::operator&lt; (const <link linkend="_class_s_v_f_1_1_context_cond">ContextCond</link> &amp; rhs) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Enable compare operator to avoid duplicated item insertion in map or set to be noted that two vectors can also overload operator() </para>
    </section><anchor xml:id="_class_s_v_f_1_1_context_cond_1ad16644f61728fbb166ce80957b17d884"/>    <section>
    <title>pushContext()</title>
<indexterm><primary>pushContext</primary><secondary>SVF::ContextCond</secondary></indexterm>
<indexterm><primary>SVF::ContextCond</primary><secondary>pushContext</secondary></indexterm>
<para><computeroutput>virtual bool SVF::ContextCond::pushContext (NodeID ctx)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Push context. </para>
</para>

<para>handle out of context limit case</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/Util/DPItem.hlib/Util/PathCondAllocator.cpp</section>
</section>
