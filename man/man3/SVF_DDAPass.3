.TH "SVF::DDAPass" 3 "Sun Feb 14 2021" "SVF" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SVF::DDAPass
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <DDAPass\&.h>\fP
.PP
Inherits ModulePass\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fBSCCDetection\fP< \fBSVFG\fP * > \fBSVFGSCC\fP"
.br
.ti -1c
.RI "typedef OrderedSet< const \fBSVFGEdge\fP * > \fBSVFGEdgeSet\fP"
.br
.ti -1c
.RI "typedef std::vector< \fBPointerAnalysis\fP * > \fBPTAVector\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBgetAnalysisUsage\fP (AnalysisUsage &au) const"
.br
.ti -1c
.RI "virtual void * \fBgetAdjustedAnalysisPointer\fP (AnalysisID)"
.br
.ti -1c
.RI "virtual AliasResult \fBalias\fP (const MemoryLocation &LocA, const MemoryLocation &LocB)"
.br
.RI "Interface expose to users of our pointer analysis, given Location infos\&. "
.ti -1c
.RI "virtual AliasResult \fBalias\fP (const Value *V1, const Value *V2)"
.br
.RI "Interface expose to users of our pointer analysis, given Value infos\&. "
.ti -1c
.RI "virtual AliasResult \fBalias\fP (NodeID V1, NodeID V2)"
.br
.RI "Interface expose to users of our pointer analysis, given PAGNodes\&. "
.ti -1c
.RI "virtual void \fBrunOnModule\fP (\fBSVFModule\fP *module)"
.br
.RI "We start from here\&. "
.ti -1c
.RI "virtual bool \fBrunOnModule\fP (Module &module)"
.br
.RI "We start from here\&. "
.ti -1c
.RI "virtual void \fBselectClient\fP (\fBSVFModule\fP *module)"
.br
.RI "Select a client\&. "
.ti -1c
.RI "virtual StringRef \fBgetPassName\fP () const"
.br
.RI "Pass name\&. "
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static char \fBID\fP = 0"
.br
.RI "Pass ID\&. "
.in -1c
.SH "Detailed Description"
.PP 
Demand-Driven Pointer Analysis\&. This class performs various pointer analysis on the given module\&. 
.SH "Member Function Documentation"
.PP 
.SS "AliasResult DDAPass::alias (const Value * V1, const Value * V2)\fC [virtual]\fP"

.PP
Interface expose to users of our pointer analysis, given Value infos\&. Return alias results based on our points-to/alias analysis TODO: Need to handle PartialAlias and MustAlias here\&. TODO: When this method is invoked during compiler optimizations, the IR used for pointer analysis may been changed, so some Values may not find corresponding \fBPAG\fP node\&. In this case, we only check alias between two Values if they both have \fBPAG\fP nodes\&. Otherwise, MayAlias will be returned\&.
.SS "virtual void SVF::DDAPass::getAnalysisUsage (AnalysisUsage & au) const\fC [inline]\fP, \fC [virtual]\fP"
do not intend to change the IR in this pass,
.SS "void DDAPass::runOnModule (\fBSVFModule\fP * module)\fC [virtual]\fP"

.PP
We start from here\&. initialization for llvm alias analyzer
.SS "void DDAPass::selectClient (\fBSVFModule\fP * module)\fC [virtual]\fP"

.PP
Select a client\&. select a client to initialize queries solve function pointer
.PP
allow user specify queries

.SH "Author"
.PP 
Generated automatically by Doxygen for SVF from the source code\&.
