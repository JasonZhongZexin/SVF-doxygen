<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_d_d_a_client" kind="class" language="C++" prot="public">
    <compoundname>SVF::DDAClient</compoundname>
    <derivedcompoundref refid="class_s_v_f_1_1_alias_d_d_a_client" prot="public" virt="non-virtual">SVF::AliasDDAClient</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_funptr_d_d_a_client" prot="public" virt="non-virtual">SVF::FunptrDDAClient</derivedcompoundref>
    <includes refid="_d_d_a_client_8h" local="no">DDAClient.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_d_d_a_client_1a9b5fe841dca605d3a30fe0e9e77baf08" prot="protected" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> *</type>
        <definition>PAG* SVF::DDAClient::pag</definition>
        <argsstring></argsstring>
        <name>pag</name>
        <briefdescription>
<para><ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> graph used by current DDA analysis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/DDAClient.h" line="88" column="11" bodyfile="include/DDA/DDAClient.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_d_d_a_client_1a4ac68012099540beb87ee4700e824d64" prot="protected" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_s_v_f_module" kindref="compound">SVFModule</ref> *</type>
        <definition>SVFModule* SVF::DDAClient::module</definition>
        <argsstring></argsstring>
        <name>module</name>
        <briefdescription>
<para>LLVM module. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/DDAClient.h" line="89" column="15" bodyfile="include/DDA/DDAClient.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_d_d_a_client_1a6a133cf24ef65eaf58c82ec213f3f6cb" prot="protected" static="no" mutable="no">
        <type>NodeID</type>
        <definition>NodeID SVF::DDAClient::curPtr</definition>
        <argsstring></argsstring>
        <name>curPtr</name>
        <briefdescription>
<para>current pointer being queried </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/DDAClient.h" line="90" column="12" bodyfile="include/DDA/DDAClient.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_d_d_a_client_1aa6fdff97be2e1a886237b515406d2e61" prot="protected" static="no" mutable="no">
        <type>OrderedNodeSet</type>
        <definition>OrderedNodeSet SVF::DDAClient::candidateQueries</definition>
        <argsstring></argsstring>
        <name>candidateQueries</name>
        <briefdescription>
<para>store all candidate pointers to be queried </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/DDAClient.h" line="91" column="20" bodyfile="include/DDA/DDAClient.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_d_d_a_client_1a25f8abbcaca653d0883d542bfbe729a3" prot="private" static="no" mutable="no">
        <type>OrderedNodeSet</type>
        <definition>OrderedNodeSet SVF::DDAClient::userInput</definition>
        <argsstring></argsstring>
        <name>userInput</name>
        <briefdescription>
<para>User input queries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/DDAClient.h" line="94" column="20" bodyfile="include/DDA/DDAClient.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_d_d_a_client_1aa8a67c60ec0395c9cfae178dcff638a8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SVF::DDAClient::solveAll</definition>
        <argsstring></argsstring>
        <name>solveAll</name>
        <briefdescription>
<para>TRUE if all top level pointers are being queried. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/DDAClient.h" line="95" column="10" bodyfile="include/DDA/DDAClient.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_d_d_a_client_1a1070c1a68fa7da7bdb23240957048ee9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::DDAClient::DDAClient</definition>
        <argsstring>(SVFModule *mod)</argsstring>
        <name>DDAClient</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_s_v_f_module" kindref="compound">SVFModule</ref> *</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/DDAClient.h" line="28" column="5" bodyfile="include/DDA/DDAClient.h" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_d_d_a_client_1a0d35dae2cbceebecba7c4a9782a98dff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::DDAClient::~DDAClient</definition>
        <argsstring>()</argsstring>
        <name>~DDAClient</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/DDAClient.h" line="30" column="13" bodyfile="include/DDA/DDAClient.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_d_d_a_client_1a40f6d8769db41f4c907fe5b615e5df83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::DDAClient::initialise</definition>
        <argsstring>(SVFModule *)</argsstring>
        <name>initialise</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_s_v_f_module" kindref="compound">SVFModule</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/DDAClient.h" line="32" column="25" bodyfile="include/DDA/DDAClient.h" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_d_d_a_client_1a77da21e92c5068d3c9bdbc1cac0486b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>OrderedNodeSet &amp;</type>
        <definition>virtual OrderedNodeSet&amp; SVF::DDAClient::collectCandidateQueries</definition>
        <argsstring>(PAG *p)</argsstring>
        <name>collectCandidateQueries</name>
        <reimplementedby refid="class_s_v_f_1_1_funptr_d_d_a_client_1ac57dc015e4019aef292cb918a0040499">collectCandidateQueries</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_alias_d_d_a_client_1a44c1426f9d88f399f8a319d6ad0120cf">collectCandidateQueries</reimplementedby>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Collect candidate pointers for query. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/DDAClient.h" line="35" column="35" bodyfile="include/DDA/DDAClient.h" bodystart="35" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_d_d_a_client_1a6f50b9a26f66e716acf163cc77030e5f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const OrderedNodeSet &amp;</type>
        <definition>const OrderedNodeSet&amp; SVF::DDAClient::getCandidateQueries</definition>
        <argsstring>() const</argsstring>
        <name>getCandidateQueries</name>
        <briefdescription>
<para>Get candidate queries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/DDAClient.h" line="48" column="33" bodyfile="include/DDA/DDAClient.h" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_d_d_a_client_1aec3de00152e828beb5037269430f387d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::DDAClient::handleStatement</definition>
        <argsstring>(const SVFGNode *, NodeID)</argsstring>
        <name>handleStatement</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">SVFGNode</ref> *</type>
        </param>
        <param>
          <type>NodeID</type>
        </param>
        <briefdescription>
<para>Call back used by <ref refid="class_s_v_f_1_1_d_d_a_v_f_solver" kindref="compound">DDAVFSolver</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/DDAClient.h" line="54" column="25" bodyfile="include/DDA/DDAClient.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_d_d_a_client_1af0ca064f86a9e9a7764c0e2577d49ce2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::DDAClient::setPAG</definition>
        <argsstring>(PAG *g)</argsstring>
        <name>setPAG</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> *</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> graph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/DDAClient.h" line="56" column="17" bodyfile="include/DDA/DDAClient.h" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_d_d_a_client_1a3fbe4ffde0a14b2db40189883d49237f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::DDAClient::setCurrentQueryPtr</definition>
        <argsstring>(NodeID ptr)</argsstring>
        <name>setCurrentQueryPtr</name>
        <param>
          <type>NodeID</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Set the pointer being queried. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/DDAClient.h" line="61" column="10" bodyfile="include/DDA/DDAClient.h" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_d_d_a_client_1a3d0f732e284f3237287b375582c0aa88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::DDAClient::setQuery</definition>
        <argsstring>(NodeID ptr)</argsstring>
        <name>setQuery</name>
        <param>
          <type>NodeID</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Set pointer to be queried by DDA analysis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/DDAClient.h" line="66" column="10" bodyfile="include/DDA/DDAClient.h" bodystart="66" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_d_d_a_client_1ad9484fac56de8beaf120b1611d23dddc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_s_v_f_module" kindref="compound">SVFModule</ref> *</type>
        <definition>SVFModule* SVF::DDAClient::getModule</definition>
        <argsstring>() const</argsstring>
        <name>getModule</name>
        <briefdescription>
<para>Get LLVM module. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/DDAClient.h" line="72" column="22" bodyfile="include/DDA/DDAClient.h" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_d_d_a_client_1a3b202f9a70b6e23c06a15556d23d245e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void DDAClient::answerQueries</definition>
        <argsstring>(PointerAnalysis *pta)</argsstring>
        <name>answerQueries</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_pointer_analysis" kindref="compound">PointerAnalysis</ref> *</type>
          <declname>pta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/DDAClient.h" line="76" column="18" bodyfile="lib/DDA/DDAClient.cpp" bodystart="49" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_d_d_a_client_1aedd25e487775d37d4f6dcc8a5565c2a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::DDAClient::performStat</definition>
        <argsstring>(PointerAnalysis *)</argsstring>
        <name>performStat</name>
        <reimplementedby refid="class_s_v_f_1_1_funptr_d_d_a_client_1acb63480cc42ceec325d3380aa617670d">performStat</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_alias_d_d_a_client_1a66e5ae6a814c752615b63c6496b9e916">performStat</reimplementedby>
        <param>
          <type><ref refid="class_s_v_f_1_1_pointer_analysis" kindref="compound">PointerAnalysis</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/DDAClient.h" line="78" column="25" bodyfile="include/DDA/DDAClient.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_d_d_a_client_1a76b4c50a1051ff7c0b162b55473de028" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::DDAClient::collectWPANum</definition>
        <argsstring>(SVFModule *)</argsstring>
        <name>collectWPANum</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_s_v_f_module" kindref="compound">SVFModule</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/DDAClient.h" line="80" column="25" bodyfile="include/DDA/DDAClient.h" bodystart="80" bodyend="80"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_s_v_f_1_1_d_d_a_client_1a7c07d9527011ea0165038e3a112a85d8" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::DDAClient::addCandidate</definition>
        <argsstring>(NodeID id)</argsstring>
        <name>addCandidate</name>
        <param>
          <type>NodeID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/DDAClient.h" line="82" column="10" bodyfile="include/DDA/DDAClient.h" bodystart="82" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>General <ref refid="class_s_v_f_1_1_d_d_a_client" kindref="compound">DDAClient</ref> which queries all top level pointers by default. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>SVF::AliasDDAClient</label>
        <link refid="class_s_v_f_1_1_alias_d_d_a_client"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SVF::FunptrDDAClient</label>
        <link refid="class_s_v_f_1_1_funptr_d_d_a_client"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>SVF::DDAClient</label>
        <link refid="class_s_v_f_1_1_d_d_a_client"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>SVF::PAG</label>
        <link refid="class_s_v_f_1_1_p_a_g"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>SVF::GenericGraph&lt; PAGNode, PAGEdge &gt;</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
      <node id="2">
        <label>SVF::SVFModule</label>
        <link refid="class_s_v_f_1_1_s_v_f_module"/>
      </node>
      <node id="1">
        <label>SVF::DDAClient</label>
        <link refid="class_s_v_f_1_1_d_d_a_client"/>
        <childnode refid="2" relation="usage">
          <edgelabel>module</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>pag</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/DDA/DDAClient.h" line="25" column="1" bodyfile="include/DDA/DDAClient.h" bodystart="26" bodyend="96"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_d_d_a_client_1a7c07d9527011ea0165038e3a112a85d8" prot="protected" virt="non-virtual"><scope>SVF::DDAClient</scope><name>addCandidate</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_client_1a3b202f9a70b6e23c06a15556d23d245e" prot="public" virt="virtual"><scope>SVF::DDAClient</scope><name>answerQueries</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_client_1aa6fdff97be2e1a886237b515406d2e61" prot="protected" virt="non-virtual"><scope>SVF::DDAClient</scope><name>candidateQueries</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_client_1a77da21e92c5068d3c9bdbc1cac0486b9" prot="public" virt="virtual"><scope>SVF::DDAClient</scope><name>collectCandidateQueries</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_client_1a76b4c50a1051ff7c0b162b55473de028" prot="public" virt="virtual"><scope>SVF::DDAClient</scope><name>collectWPANum</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_client_1a6a133cf24ef65eaf58c82ec213f3f6cb" prot="protected" virt="non-virtual"><scope>SVF::DDAClient</scope><name>curPtr</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_client_1a1070c1a68fa7da7bdb23240957048ee9" prot="public" virt="non-virtual"><scope>SVF::DDAClient</scope><name>DDAClient</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_client_1a6f50b9a26f66e716acf163cc77030e5f" prot="public" virt="non-virtual"><scope>SVF::DDAClient</scope><name>getCandidateQueries</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_client_1ad9484fac56de8beaf120b1611d23dddc" prot="public" virt="non-virtual"><scope>SVF::DDAClient</scope><name>getModule</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_client_1aec3de00152e828beb5037269430f387d" prot="public" virt="virtual"><scope>SVF::DDAClient</scope><name>handleStatement</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_client_1a40f6d8769db41f4c907fe5b615e5df83" prot="public" virt="virtual"><scope>SVF::DDAClient</scope><name>initialise</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_client_1a4ac68012099540beb87ee4700e824d64" prot="protected" virt="non-virtual"><scope>SVF::DDAClient</scope><name>module</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_client_1a9b5fe841dca605d3a30fe0e9e77baf08" prot="protected" virt="non-virtual"><scope>SVF::DDAClient</scope><name>pag</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_client_1aedd25e487775d37d4f6dcc8a5565c2a3" prot="public" virt="virtual"><scope>SVF::DDAClient</scope><name>performStat</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_client_1a3fbe4ffde0a14b2db40189883d49237f" prot="public" virt="non-virtual"><scope>SVF::DDAClient</scope><name>setCurrentQueryPtr</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_client_1af0ca064f86a9e9a7764c0e2577d49ce2" prot="public" virt="non-virtual"><scope>SVF::DDAClient</scope><name>setPAG</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_client_1a3d0f732e284f3237287b375582c0aa88" prot="public" virt="non-virtual"><scope>SVF::DDAClient</scope><name>setQuery</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_client_1aa8a67c60ec0395c9cfae178dcff638a8" prot="private" virt="non-virtual"><scope>SVF::DDAClient</scope><name>solveAll</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_client_1a25f8abbcaca653d0883d542bfbe729a3" prot="private" virt="non-virtual"><scope>SVF::DDAClient</scope><name>userInput</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_client_1a0d35dae2cbceebecba7c4a9782a98dff" prot="public" virt="virtual"><scope>SVF::DDAClient</scope><name>~DDAClient</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
