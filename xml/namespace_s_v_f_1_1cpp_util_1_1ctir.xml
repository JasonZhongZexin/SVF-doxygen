<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespace_s_v_f_1_1cpp_util_1_1ctir" kind="namespace" language="C++">
    <compoundname>SVF::cppUtil::ctir</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespace_s_v_f_1_1cpp_util_1_1ctir_1a0cd5347bc8043d4306e66a4a96005ace" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string SVF::cppUtil::ctir::derefMDName</definition>
        <argsstring></argsstring>
        <name>derefMDName</name>
        <initializer>= &quot;ctir&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>On loads, stores, GEPs representing dereferences, and calls representing virtual calls. (The static type.) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CPPUtil.h" line="110" column="19" bodyfile="include/SVF-FE/CPPUtil.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_s_v_f_1_1cpp_util_1_1ctir_1aa4630844aa25aa4801659304a2552058" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string SVF::cppUtil::ctir::vtMDName</definition>
        <argsstring></argsstring>
        <name>vtMDName</name>
        <initializer>= &quot;ctir.vt&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>On the (global) virtual table itself. (The class it corresponds to.) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CPPUtil.h" line="113" column="19" bodyfile="include/SVF-FE/CPPUtil.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_s_v_f_1_1cpp_util_1_1ctir_1a02b3f4190d325c921922c25e319dc8d9" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string SVF::cppUtil::ctir::vtInitMDName</definition>
        <argsstring></argsstring>
        <name>vtInitMDName</name>
        <initializer>= &quot;ctir.vt.init&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>On the bitcast of <computeroutput>this</computeroutput> to i8*. (The class the constructor it corresponds to.) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CPPUtil.h" line="116" column="19" bodyfile="include/SVF-FE/CPPUtil.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_s_v_f_1_1cpp_util_1_1ctir_1a05c7c51164928786d70713094db7f3f3" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t SVF::cppUtil::ctir::moduleFlagValue</definition>
        <argsstring></argsstring>
        <name>moduleFlagValue</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para>Value we expect a ctir-annotated module to have. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CPPUtil.h" line="119" column="16" bodyfile="include/SVF-FE/CPPUtil.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Constants pertaining to CTir, for C and C++. TODO: move helper functions here too? </para>
    </detaileddescription>
    <location file="include/SVF-FE/CPPUtil.h" line="105" column="1"/>
  </compounddef>
</doxygen>
