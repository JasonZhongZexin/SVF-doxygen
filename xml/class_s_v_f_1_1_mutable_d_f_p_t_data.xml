<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_mutable_d_f_p_t_data" kind="class" language="C++" prot="public">
    <compoundname>SVF::MutableDFPTData</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_d_f_p_t_data" prot="public" virt="non-virtual">SVF::DFPTData&lt; Key, Datum, Data &gt;</basecompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_inc_mutable_d_f_p_t_data" prot="public" virt="non-virtual">SVF::IncMutableDFPTData&lt; Key, Datum, Data &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>typename Key</type>
      </param>
      <param>
        <type>typename Datum</type>
      </param>
      <param>
        <type>typename Data</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a568a7a5db13b1ae5b2c7ef84904ae761" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const PtsMap &amp;</type>
        <definition>const PtsMap&amp; SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::getDFInPtsMap</definition>
        <argsstring>(LocID loc)</argsstring>
        <name>getDFInPtsMap</name>
        <param>
          <type>LocID</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get internal flow-sensitive data structures. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="368" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="368" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1ac66a43ea8b8cd6c47cb5042f84207669" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const PtsMap &amp;</type>
        <definition>const PtsMap&amp; SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::getDFOutPtsMap</definition>
        <argsstring>(LocID loc)</argsstring>
        <name>getDFOutPtsMap</name>
        <param>
          <type>LocID</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="372" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="372" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a9ea741eb5f1cd10c887633fe6f4c7405" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1accdcfd0e05c36f1df08c884b85e00be4" kindref="member">DFPtsMap</ref> &amp;</type>
        <definition>const DFPtsMap&amp; SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::getDFIn</definition>
        <argsstring>()</argsstring>
        <name>getDFIn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="376" column="27" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="376" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1aafbb54c099035733f69cb1668b811189" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1accdcfd0e05c36f1df08c884b85e00be4" kindref="member">DFPtsMap</ref> &amp;</type>
        <definition>const DFPtsMap&amp; SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::getDFOut</definition>
        <argsstring>()</argsstring>
        <name>getDFOut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="380" column="27" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="380" bodyend="383"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a4042cbb54fd15014845263d3875e5b39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::addPts</definition>
        <argsstring>(const Key &amp;dstKey, const Key &amp;srcKey) override</argsstring>
        <name>addPts</name>
        <param>
          <type>const Key &amp;</type>
          <declname>dstKey</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>srcKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Override the methods defined in <ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData</ref>. Union/add points-to without adding reverse points-to, used internally </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="448" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="448" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1ae62e6fb9f9d26a2b217d571f22cbaefa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::unionPts</definition>
        <argsstring>(const Key &amp;dstKey, const Key &amp;srcKey) override</argsstring>
        <name>unionPts</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1a482eda0b2ea6a8e1326ee1a0c25c1fdc">unionPts</reimplements>
        <param>
          <type>const Key &amp;</type>
          <declname>dstVar</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>srcVar</declname>
        </param>
        <briefdescription>
<para>Performs pts(dstVar) = pts(dstVar) U pts(srcVar). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="452" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="452" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1ae54ae1abd4317922f59a212d835e2f5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::unionPts</definition>
        <argsstring>(const Key &amp;dstKey, const Data &amp;srcData) override</argsstring>
        <name>unionPts</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1ab378c0f2171f6de9b8aa076b43f88e89">unionPts</reimplements>
        <param>
          <type>const Key &amp;</type>
          <declname>dstVar</declname>
        </param>
        <param>
          <type>const Data &amp;</type>
          <declname>srcData</declname>
        </param>
        <briefdescription>
<para>Performs pts(dstVar) = pts(dstVar) U srcData. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="456" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="456" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a23c1faea6b1f5f4a236d64d4ba721210" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::clearPts</definition>
        <argsstring>(const Key &amp;var, const Datum &amp;element) override</argsstring>
        <name>clearPts</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1a2ee28cb51800a57a7646d72f1b92e6ac">clearPts</reimplements>
        <param>
          <type>const Key &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>const Datum &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
<para>Clears element from the points-to set of var. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="460" column="18" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="460" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1aadc5ef1807dc08cbae610af022ab4440" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::clearFullPts</definition>
        <argsstring>(const Key &amp;var) override</argsstring>
        <name>clearFullPts</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1a4a27923265487dac1eede5a57cc0c9a5">clearFullPts</reimplements>
        <param>
          <type>const Key &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
<para>Fully clears the points-to set of var. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="464" column="18" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="464" bodyend="467"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a1e485ecbd42ea54b91a4f243c98fe5f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::dumpPTData</definition>
        <argsstring>() override</argsstring>
        <name>dumpPTData</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1affb0e613229679f926c52c37b3c141ea">dumpPTData</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dump the DF IN/OUT set information for debugging purpose </para>
        </detaileddescription>
        <inbodydescription>
<para>dump points-to of top-level pointers</para>
<para>dump points-to of address-taken variables</para>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="499" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="499" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a743710f11d13897bb4cd354c22b90e89" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::dumpPts</definition>
        <argsstring>(const PtsMap &amp;ptsSet, raw_ostream &amp;O=SVFUtil::outs()) const</argsstring>
        <name>dumpPts</name>
        <param>
          <type>const PtsMap &amp;</type>
          <declname>ptsSet</declname>
        </param>
        <param>
          <type><ref refid="namespace_s_v_f_1a424cc053c29ad7303699c529d1a2cc71" kindref="member">raw_ostream</ref> &amp;</type>
          <declname>O</declname>
          <defval>SVFUtil::outs()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="545" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="545" bodyend="557"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1ad061606c8b0660a1fd59caf1748a0a5c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::classof</definition>
        <argsstring>(const MutableDFPTData&lt; Key, Datum, Data &gt; *)</argsstring>
        <name>classof</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_mutable_d_f_p_t_data" kindref="compound">MutableDFPTData</ref>&lt; Key, Datum, Data &gt; *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Methods to support type inquiry through isa, cast, and dyn_cast: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="472" column="24" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="472" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1aba46d41578c6033b4845738918e43b70" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::classof</definition>
        <argsstring>(const PTData&lt; Key, Datum, Data &gt; *ptd)</argsstring>
        <name>classof</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData</ref>&lt; Key, Datum, Data &gt; *</type>
          <declname>ptd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="476" column="24" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="476" bodyend="480"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a314ba4379d92075b5e069f8509575521" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::unionPts</definition>
        <argsstring>(Data &amp;dstData, const Data &amp;srcData)</argsstring>
        <name>unionPts</name>
        <param>
          <type>Data &amp;</type>
          <declname>dstData</declname>
        </param>
        <param>
          <type>const Data &amp;</type>
          <declname>srcData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Internal union/add points-to helper methods. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="486" column="17" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="486" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a65cfc6c3c718e5f0cbc73663797a80c5" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::addPts</definition>
        <argsstring>(Data &amp;d, const Datum &amp;e)</argsstring>
        <name>addPts</name>
        <param>
          <type>Data &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const Datum &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="490" column="17" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="490" bodyend="493"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1ab0b4be5588e3a0a065a13acd6fabd3b8" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData</ref>&lt; Key, Datum, Data &gt;</type>
        <definition>typedef PTData&lt;Key, Datum, Data&gt; SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::BasePTData</definition>
        <argsstring></argsstring>
        <name>BasePTData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="287" column="20" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a3d35314489da7db19305bf83a876e98d" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_mutable_p_t_data" kindref="compound">MutablePTData</ref>&lt; Key, Datum, Data &gt;</type>
        <definition>typedef MutablePTData&lt;Key, Datum, Data&gt; SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::BaseMutPTData</definition>
        <argsstring></argsstring>
        <name>BaseMutPTData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="288" column="27" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1aaa7fd9e24e8579f6ce64f1372f9c19ae" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_d_f_p_t_data" kindref="compound">DFPTData</ref>&lt; Key, Datum, Data &gt;</type>
        <definition>typedef DFPTData&lt;Key, Datum, Data&gt; SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::BaseDFPTData</definition>
        <argsstring></argsstring>
        <name>BaseDFPTData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="289" column="22" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1ab5711ac8c7eddbed1564f298d2be3dac" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848" kindref="member">BasePTData::PTDataTy</ref></type>
        <definition>typedef BasePTData::PTDataTy SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::PTDataTy</definition>
        <argsstring></argsstring>
        <name>PTDataTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="290" column="43" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a2026071aad165913e9e112c8e208471c" prot="public" static="no">
        <type>BasePTData::KeySet</type>
        <definition>typedef BasePTData::KeySet SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::KeySet</definition>
        <argsstring></argsstring>
        <name>KeySet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="291" column="41" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1ad552fbabd608ddded3d20c32a93c5de6" prot="public" static="no">
        <type>BaseDFPTData::LocID</type>
        <definition>typedef BaseDFPTData::LocID SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::LocID</definition>
        <argsstring></argsstring>
        <name>LocID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="293" column="42" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a20b13b56728becc70e3e2b0e0bdd6192" prot="public" static="no">
        <type>BaseMutPTData::PtsMap</type>
        <definition>typedef BaseMutPTData::PtsMap SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::PtsMap</definition>
        <argsstring></argsstring>
        <name>PtsMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="294" column="44" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a21445ff2320cad2907fb8e32be6b22ca" prot="public" static="no">
        <type>BaseMutPTData::PtsMapConstIter</type>
        <definition>typedef BaseMutPTData::PtsMapConstIter SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::PtsMapConstIter</definition>
        <argsstring></argsstring>
        <name>PtsMapConstIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="295" column="53" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1accdcfd0e05c36f1df08c884b85e00be4" prot="public" static="no">
        <type>Map&lt; LocID, PtsMap &gt;</type>
        <definition>typedef Map&lt;LocID, PtsMap&gt; SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::DFPtsMap</definition>
        <argsstring></argsstring>
        <name>DFPtsMap</name>
        <briefdescription>
<para>Data-flow point-to map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="296" column="17" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a2f5d5632580a1ab1e3f2d3b4d94e513e" prot="public" static="no">
        <type>DFPtsMap::iterator</type>
        <definition>typedef DFPtsMap::iterator SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::DFPtsMapIter</definition>
        <argsstring></argsstring>
        <name>DFPtsMapIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="297" column="41" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1adc5973bc01ba8875bb2efa1e0fe0a178" prot="public" static="no">
        <type>DFPtsMap::const_iterator</type>
        <definition>typedef DFPtsMap::const_iterator SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::DFPtsMapconstIter</definition>
        <argsstring></argsstring>
        <name>DFPtsMapconstIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="298" column="47" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a15f5e0f3e07be534387dd73ec61e7450" prot="protected" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1accdcfd0e05c36f1df08c884b85e00be4" kindref="member">DFPtsMap</ref></type>
        <definition>DFPtsMap SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::dfInPtsMap</definition>
        <argsstring></argsstring>
        <name>dfInPtsMap</name>
        <briefdescription>
<para>Data-flow IN set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="562" column="14" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="562" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1af5c46ec2b1d99441479dd68a97c07b45" prot="protected" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1accdcfd0e05c36f1df08c884b85e00be4" kindref="member">DFPtsMap</ref></type>
        <definition>DFPtsMap SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::dfOutPtsMap</definition>
        <argsstring></argsstring>
        <name>dfOutPtsMap</name>
        <briefdescription>
<para>Data-flow OUT set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="564" column="14" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="564" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1aeb069ef3767c1942510a58c7ef6993ea" prot="protected" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_mutable_p_t_data" kindref="compound">MutablePTData</ref>&lt; Key, Datum, Data &gt;</type>
        <definition>MutablePTData&lt;Key, Datum, Data&gt; SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::mutPTData</definition>
        <argsstring></argsstring>
        <name>mutPTData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Backing to implement the basic <ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData</ref> methods which are not overridden. This allows us to avoid multiple-inheritance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="567" column="19" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="567" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a4c8ddcc2d81ee6a3c8a506bf9d675b7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::MutableDFPTData</definition>
        <argsstring>(bool reversePT=true, PTDataTy ty=BaseDFPTData::MutDataFlow)</argsstring>
        <name>MutableDFPTData</name>
        <param>
          <type>bool</type>
          <declname>reversePT</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848" kindref="member">PTDataTy</ref></type>
          <declname>ty</declname>
          <defval>BaseDFPTData::MutDataFlow</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="301" column="5" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="301" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1ac2bffb657b58ee1a83d00c414b0e60d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::~MutableDFPTData</definition>
        <argsstring>()</argsstring>
        <name>~MutableDFPTData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="303" column="13" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="303" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a446b1eae4a238b9e665eb86311c86e3c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const PtsMap &amp;</type>
        <definition>virtual const PtsMap&amp; SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::getPtsMap</definition>
        <argsstring>() const</argsstring>
        <name>getPtsMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="305" column="33" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a77f96a1d0f0e325de2c2da3fe4436025" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::clear</definition>
        <argsstring>() override</argsstring>
        <name>clear</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1a3cdec1f0be962716508d3922dce058d5">clear</reimplements>
        <briefdescription>
<para>Clears all points-to sets as if nothing is stored. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="310" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="310" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a0628fe9394d3cec433c44cddad09a9f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>const Data &amp;</type>
        <definition>virtual const Data&amp; SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::getPts</definition>
        <argsstring>(const Key &amp;var) override</argsstring>
        <name>getPts</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1a86a93186b51b6ce9dccffecad8381281">getPts</reimplements>
        <param>
          <type>const Key &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
<para>Get points-to set of var. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="315" column="31" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="315" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1aa4195a2fb1bd66a23ebf3a98475436f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>const KeySet &amp;</type>
        <definition>virtual const KeySet&amp; SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::getRevPts</definition>
        <argsstring>(const Datum &amp;datum) override</argsstring>
        <name>getRevPts</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1a5ac0805846fb6bac6c58c0fefb106c5f">getRevPts</reimplements>
        <param>
          <type>const Datum &amp;</type>
          <declname>datum</declname>
        </param>
        <briefdescription>
<para>Get reverse points-to set of datum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="320" column="33" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="320" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a564a0b873d4491a6dabccc599c4f82c7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::hasDFInSet</definition>
        <argsstring>(LocID loc) const override</argsstring>
        <name>hasDFInSet</name>
        <reimplements refid="class_s_v_f_1_1_d_f_p_t_data_1a12e2de05a6ece6e9e486c37b3083e534">hasDFInSet</reimplements>
        <param>
          <type>LocID</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine whether the DF IN/OUT sets have points-to sets. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="326" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="326" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a16995ae975870c7c842259a86389fc54" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::hasDFOutSet</definition>
        <argsstring>(LocID loc) const override</argsstring>
        <name>hasDFOutSet</name>
        <reimplements refid="class_s_v_f_1_1_d_f_p_t_data_1ac00df48b29eea123d8778e8e9c963c16">hasDFOutSet</reimplements>
        <param>
          <type>LocID</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="331" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="331" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a3c603150d9b115bd3ea72dbd21fc47e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::hasDFInSet</definition>
        <argsstring>(LocID loc, const Key &amp;var) const override</argsstring>
        <name>hasDFInSet</name>
        <reimplements refid="class_s_v_f_1_1_d_f_p_t_data_1a6aa28007d88862428fa605c8e7f306d2">hasDFInSet</reimplements>
        <param>
          <type>LocID</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="336" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="336" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a7920b327d1662b48f32d6b4a2c085d8e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::hasDFOutSet</definition>
        <argsstring>(LocID loc, const Key &amp;var) const override</argsstring>
        <name>hasDFOutSet</name>
        <reimplements refid="class_s_v_f_1_1_d_f_p_t_data_1a329824d15a4b5d2f8a1371fc98c4ab76">hasDFOutSet</reimplements>
        <param>
          <type>LocID</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access points-to set from data-flow IN/OUT set. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="345" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="345" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a013a9eb81d5e7b7a776248a9668e3d9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Data &amp;</type>
        <definition>virtual Data&amp; SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::getDFInPtsSet</definition>
        <argsstring>(LocID loc, const Key &amp;var) override</argsstring>
        <name>getDFInPtsSet</name>
        <reimplements refid="class_s_v_f_1_1_d_f_p_t_data_1ad8b7b7c86f8f524cd11f96b6d4c013f8">getDFInPtsSet</reimplements>
        <param>
          <type>LocID</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="354" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="354" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a333876ce361848881e7ead4f78c0189b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Data &amp;</type>
        <definition>virtual Data&amp; SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::getDFOutPtsSet</definition>
        <argsstring>(LocID loc, const Key &amp;var) override</argsstring>
        <name>getDFOutPtsSet</name>
        <reimplements refid="class_s_v_f_1_1_d_f_p_t_data_1a4d29f3c33f477bd273031b09d1b6cf50">getDFOutPtsSet</reimplements>
        <param>
          <type>LocID</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="360" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="360" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a11faecf2d217edd3d6c1aac03788e9e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::updateDFInFromIn</definition>
        <argsstring>(LocID srcLoc, const Key &amp;srcVar, LocID dstLoc, const Key &amp;dstVar) override</argsstring>
        <name>updateDFInFromIn</name>
        <reimplements refid="class_s_v_f_1_1_d_f_p_t_data_1a4c2a88efa302a5857e78fa32c4271c08">updateDFInFromIn</reimplements>
        <reimplementedby refid="class_s_v_f_1_1_inc_mutable_d_f_p_t_data_1a65c7e3eb77a92e9a0f2b5f72ca80d9d6">updateDFInFromIn</reimplementedby>
        <param>
          <type>LocID</type>
          <declname>srcLoc</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>srcVar</declname>
        </param>
        <param>
          <type>LocID</type>
          <declname>dstLoc</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>dstVar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update points-to for IN/OUT set IN[loc:var] represents the points-to of variable var in the IN set of location loc. union(ptsDst, ptsSrc) represents ptsDst = ptsDst U ptsSrc.</para>
<para>Union (IN[dstLoc:dstVar], IN[srcLoc:srcVar]). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="386" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="386" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a0663e86966f0581364f91a14333a906f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::updateDFInFromOut</definition>
        <argsstring>(LocID srcLoc, const Key &amp;srcVar, LocID dstLoc, const Key &amp;dstVar) override</argsstring>
        <name>updateDFInFromOut</name>
        <reimplements refid="class_s_v_f_1_1_d_f_p_t_data_1a716c949a43140845c498778675d57f2b">updateDFInFromOut</reimplements>
        <reimplementedby refid="class_s_v_f_1_1_inc_mutable_d_f_p_t_data_1afa0e2e4df28e2db338c9d354fd15234f">updateDFInFromOut</reimplementedby>
        <param>
          <type>LocID</type>
          <declname>srcLoc</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>srcVar</declname>
        </param>
        <param>
          <type>LocID</type>
          <declname>dstLoc</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>dstVar</declname>
        </param>
        <briefdescription>
<para>Union (IN[dstLoc:dstVar], OUT[srcLoc:srcVar]). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="391" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="391" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a6fcafe4e1a1e4dc356f0e49b783bb1c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::updateDFOutFromIn</definition>
        <argsstring>(LocID srcLoc, const Key &amp;srcVar, LocID dstLoc, const Key &amp;dstVar) override</argsstring>
        <name>updateDFOutFromIn</name>
        <reimplements refid="class_s_v_f_1_1_d_f_p_t_data_1a4e4e548b1bb1c31f5bc5487817dfe8f8">updateDFOutFromIn</reimplements>
        <reimplementedby refid="class_s_v_f_1_1_inc_mutable_d_f_p_t_data_1a5e745c95b9a5ac2d5367e3c037bf48dc">updateDFOutFromIn</reimplementedby>
        <param>
          <type>LocID</type>
          <declname>srcLoc</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>srcVar</declname>
        </param>
        <param>
          <type>LocID</type>
          <declname>dstLoc</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>dstVar</declname>
        </param>
        <briefdescription>
<para>Union (OUT[dstLoc:dstVar], IN[srcLoc:srcVar]). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="396" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="396" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a1d9ef43bd762ea251a73bdf64d98a260" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::updateAllDFInFromOut</definition>
        <argsstring>(LocID srcLoc, const Key &amp;srcVar, LocID dstLoc, const Key &amp;dstVar) override</argsstring>
        <name>updateAllDFInFromOut</name>
        <reimplements refid="class_s_v_f_1_1_d_f_p_t_data_1a84217d424bd24a9cde806e8428cd68a2">updateAllDFInFromOut</reimplements>
        <reimplementedby refid="class_s_v_f_1_1_inc_mutable_d_f_p_t_data_1a212e96bb81bfdb24d4c871b0535f68dd">updateAllDFInFromOut</reimplementedby>
        <param>
          <type>LocID</type>
          <declname>srcLoc</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>srcVar</declname>
        </param>
        <param>
          <type>LocID</type>
          <declname>dstLoc</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>dstVar</declname>
        </param>
        <briefdescription>
<para>Union (IN[dstLoc::dstVar], OUT[srcLoc:srcVar]. There is no flag check, unlike the above. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="401" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="401" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a0db60bc13df08f906e55ec8830954e28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::updateAllDFInFromIn</definition>
        <argsstring>(LocID srcLoc, const Key &amp;srcVar, LocID dstLoc, const Key &amp;dstVar) override</argsstring>
        <name>updateAllDFInFromIn</name>
        <reimplements refid="class_s_v_f_1_1_d_f_p_t_data_1acdecfed9eff1772af0c398e160809173">updateAllDFInFromIn</reimplements>
        <reimplementedby refid="class_s_v_f_1_1_inc_mutable_d_f_p_t_data_1aeb225273938a2da7766306785bbe744d">updateAllDFInFromIn</reimplementedby>
        <param>
          <type>LocID</type>
          <declname>srcLoc</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>srcVar</declname>
        </param>
        <param>
          <type>LocID</type>
          <declname>dstLoc</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>dstVar</declname>
        </param>
        <briefdescription>
<para>Union (IN[dstLoc::dstVar], IN[srcLoc:srcVar]. There is no flag check, unlike the above. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="406" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="406" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a780b6307f9994997243f8a7261815c1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::updateAllDFOutFromIn</definition>
        <argsstring>(LocID loc, const Key &amp;singleton, bool strongUpdates) override</argsstring>
        <name>updateAllDFOutFromIn</name>
        <reimplements refid="class_s_v_f_1_1_d_f_p_t_data_1a616c798289eb8af5eb529f5a56c2557b">updateAllDFOutFromIn</reimplements>
        <reimplementedby refid="class_s_v_f_1_1_inc_mutable_d_f_p_t_data_1a7fc76812496101c36283d8aaff3164bc">updateAllDFOutFromIn</reimplementedby>
        <param>
          <type>LocID</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>singleton</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>strongUpdates</declname>
        </param>
        <briefdescription>
<para>For each variable var in IN at loc, do updateDFOutFromIn(loc, var, loc, var). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Only variables has new pts from IN set need to be updated.</para>
<para>Enable strong updates if it is required to do so</para>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="411" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="411" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a7e5431ec33bbcb509260e1f6cc8b20df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::updateTLVPts</definition>
        <argsstring>(LocID srcLoc, const Key &amp;srcVar, const Key &amp;dstVar) override</argsstring>
        <name>updateTLVPts</name>
        <reimplements refid="class_s_v_f_1_1_d_f_p_t_data_1a0e326cbff78740fd641a2964eb7a143f">updateTLVPts</reimplements>
        <reimplementedby refid="class_s_v_f_1_1_inc_mutable_d_f_p_t_data_1a7fc7beea0a67842a6bd744497c4f522a">updateTLVPts</reimplementedby>
        <param>
          <type>LocID</type>
          <declname>srcLoc</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>srcVar</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>dstVar</declname>
        </param>
        <briefdescription>
<para>Update points-to set of top-level pointers with IN[srcLoc:srcVar]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="431" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="431" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a39db820c23fc8bda511457056e81766a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::updateATVPts</definition>
        <argsstring>(const Key &amp;srcVar, LocID dstLoc, const Key &amp;dstVar) override</argsstring>
        <name>updateATVPts</name>
        <reimplements refid="class_s_v_f_1_1_d_f_p_t_data_1a5a79c5b7007859640876a1bef5011c66">updateATVPts</reimplements>
        <reimplementedby refid="class_s_v_f_1_1_inc_mutable_d_f_p_t_data_1a2f6fe4f0c82c373e73bd33af4632af37">updateATVPts</reimplementedby>
        <param>
          <type>const Key &amp;</type>
          <declname>srcVar</declname>
        </param>
        <param>
          <type>LocID</type>
          <declname>dstLoc</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>dstVar</declname>
        </param>
        <briefdescription>
<para>Update address-taken variables OUT[dstLoc:dstVar] with points-to of top-level pointers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="436" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="436" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_d_f_p_t_data_1a2ed188e0896403687b8374c40568f666" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::MutableDFPTData&lt; Key, Datum, Data &gt;::clearAllDFOutUpdatedVar</definition>
        <argsstring>(LocID) override</argsstring>
        <name>clearAllDFOutUpdatedVar</name>
        <reimplements refid="class_s_v_f_1_1_d_f_p_t_data_1a0cf720b50e17f3aba2171a558fc54032">clearAllDFOutUpdatedVar</reimplements>
        <reimplementedby refid="class_s_v_f_1_1_inc_mutable_d_f_p_t_data_1a3d121bedfb4ac3af01ef60656e7f9de6">clearAllDFOutUpdatedVar</reimplementedby>
        <param>
          <type>LocID</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="441" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="441" bodyend="443"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>SVF::DFPTData&lt; Key, Datum, Data &gt;</label>
        <link refid="class_s_v_f_1_1_d_f_p_t_data"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>SVF::MutableDFPTData&lt; Key, Datum, Data &gt;</label>
        <link refid="class_s_v_f_1_1_mutable_d_f_p_t_data"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>SVF::IncMutableDFPTData&lt; Key, Datum, Data &gt;</label>
        <link refid="class_s_v_f_1_1_inc_mutable_d_f_p_t_data"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SVF::PTData&lt; Key, Datum, Data &gt;</label>
        <link refid="class_s_v_f_1_1_p_t_data"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>SVF::DFPTData&lt; Key, Datum, Data &gt;</label>
        <link refid="class_s_v_f_1_1_d_f_p_t_data"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>SVF::MutableDFPTData&lt; Key, Datum, Data &gt;</label>
        <link refid="class_s_v_f_1_1_mutable_d_f_p_t_data"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SVF::PTData&lt; Key, Datum, Data &gt;</label>
        <link refid="class_s_v_f_1_1_p_t_data"/>
      </node>
    </collaborationgraph>
    <location file="include/MemoryModel/MutablePointsToDS.h" line="284" column="1" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="285" bodyend="568"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a4042cbb54fd15014845263d3875e5b39" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>addPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a65cfc6c3c718e5f0cbc73663797a80c5" prot="protected" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>addPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a1365146d19ee927f870a7384c0d1db6b" prot="public" virt="pure-virtual" ambiguityscope="SVF::DFPTData::"><scope>SVF::MutableDFPTData</scope><name>addPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a48ea0972c2495007d758a0674fd958a0" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>Base</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1aaa7fd9e24e8579f6ce64f1372f9c19ae" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>BaseDFPTData</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a3d35314489da7db19305bf83a876e98d" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>BaseMutPTData</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1ab0b4be5588e3a0a065a13acd6fabd3b8" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>BasePTData</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1ad061606c8b0660a1fd59caf1748a0a5c" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1aba46d41578c6033b4845738918e43b70" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_d_f_p_t_data_1a2499a9d3e2b1c0cbfe3ac21c49e1a576" prot="public" virt="non-virtual" ambiguityscope="SVF::DFPTData::"><scope>SVF::MutableDFPTData</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a77f96a1d0f0e325de2c2da3fe4436025" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>clear</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a2ed188e0896403687b8374c40568f666" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>clearAllDFOutUpdatedVar</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1aadc5ef1807dc08cbae610af022ab4440" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>clearFullPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a23c1faea6b1f5f4a236d64d4ba721210" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>clearPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a9fd234f8ac4f0615ef1bc2f9c02e00ab" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>DataFlow</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a15f5e0f3e07be534387dd73ec61e7450" prot="protected" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>dfInPtsMap</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1af5c46ec2b1d99441479dd68a97c07b45" prot="protected" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>dfOutPtsMap</name></member>
      <member refid="class_s_v_f_1_1_d_f_p_t_data_1a1c9b437febcc05a8ef5ddb20e98b21cb" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>DFPTData</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1accdcfd0e05c36f1df08c884b85e00be4" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>DFPtsMap</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1adc5973bc01ba8875bb2efa1e0fe0a178" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>DFPtsMapconstIter</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a2f5d5632580a1ab1e3f2d3b4d94e513e" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>DFPtsMapIter</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a12db671c6effedfcd48f3a390a3cea39" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>Diff</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a1e485ecbd42ea54b91a4f243c98fe5f2" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>dumpPTData</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a743710f11d13897bb4cd354c22b90e89" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>dumpPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a9ea741eb5f1cd10c887633fe6f4c7405" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>getDFIn</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a568a7a5db13b1ae5b2c7ef84904ae761" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>getDFInPtsMap</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a013a9eb81d5e7b7a776248a9668e3d9d" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>getDFInPtsSet</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1aafbb54c099035733f69cb1668b811189" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>getDFOut</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1ac66a43ea8b8cd6c47cb5042f84207669" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>getDFOutPtsMap</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a333876ce361848881e7ead4f78c0189b" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>getDFOutPtsSet</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a22b25cb7e65dd9989dbb4c1819d68dee" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>getPTDTY</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a0628fe9394d3cec433c44cddad09a9f5" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>getPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a446b1eae4a238b9e665eb86311c86e3c" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>getPtsMap</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1aa4195a2fb1bd66a23ebf3a98475436f3" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>getRevPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a564a0b873d4491a6dabccc599c4f82c7" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>hasDFInSet</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a3c603150d9b115bd3ea72dbd21fc47e0" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>hasDFInSet</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a16995ae975870c7c842259a86389fc54" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>hasDFOutSet</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a7920b327d1662b48f32d6b4a2c085d8e" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>hasDFOutSet</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a85136c4ad93cefd1d2371cc92aa2423d" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>IncMutDataFlow</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a2026071aad165913e9e112c8e208471c" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>KeySet</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1ad552fbabd608ddded3d20c32a93c5de6" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>LocID</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a4c8ddcc2d81ee6a3c8a506bf9d675b7b" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>MutableDFPTData</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848ad89e3219f31ba0f1424c1a219565b7b0" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>MutBase</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a13666448dbecfb781405aff71a674d4e" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>MutDataFlow</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a31e94f61c6e2166b4c205fe03a4e912d" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>MutDiff</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1aeb069ef3767c1942510a58c7ef6993ea" prot="protected" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>mutPTData</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a97fea46c57fe00f026da2cd3f510e785" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>MutVersioned</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a4481e26740c77bd69239552badf85614" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>PTData</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1ab5711ac8c7eddbed1564f298d2be3dac" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>PTDataTy</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a11120561456b00e1a6210e5105e8f718" prot="protected" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>ptdTy</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a20b13b56728becc70e3e2b0e0bdd6192" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>PtsMap</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a21445ff2320cad2907fb8e32be6b22ca" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>PtsMapConstIter</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1aea15e71384244f3ad556e9924a1d0d21" prot="protected" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>rev</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1ae62e6fb9f9d26a2b217d571f22cbaefa" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1ae54ae1abd4317922f59a212d835e2f5b" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a314ba4379d92075b5e069f8509575521" prot="protected" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a0db60bc13df08f906e55ec8830954e28" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>updateAllDFInFromIn</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a1d9ef43bd762ea251a73bdf64d98a260" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>updateAllDFInFromOut</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a780b6307f9994997243f8a7261815c1d" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>updateAllDFOutFromIn</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a39db820c23fc8bda511457056e81766a" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>updateATVPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a11faecf2d217edd3d6c1aac03788e9e7" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>updateDFInFromIn</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a0663e86966f0581364f91a14333a906f" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>updateDFInFromOut</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a6fcafe4e1a1e4dc356f0e49b783bb1c2" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>updateDFOutFromIn</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1a7e5431ec33bbcb509260e1f6cc8b20df" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>updateTLVPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a4fcfbbd2f9f50444a49c4cc4065b0aeb" prot="public" virt="non-virtual"><scope>SVF::MutableDFPTData</scope><name>Versioned</name></member>
      <member refid="class_s_v_f_1_1_d_f_p_t_data_1a3565bc58d2cc6cab3374544ef869f3c3" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>~DFPTData</name></member>
      <member refid="class_s_v_f_1_1_mutable_d_f_p_t_data_1ac2bffb657b58ee1a83d00c414b0e60d5" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>~MutableDFPTData</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a982153a8d2300d18549a7a6c4235c52d" prot="public" virt="virtual"><scope>SVF::MutableDFPTData</scope><name>~PTData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
