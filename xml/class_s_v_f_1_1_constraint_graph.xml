<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_constraint_graph" kind="class" language="C++" prot="public">
    <compoundname>SVF::ConstraintGraph</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_generic_graph" prot="public" virt="non-virtual">SVF::GenericGraph&lt; ConstraintNode, ConstraintEdge &gt;</basecompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_offline_cons_g" prot="public" virt="non-virtual">SVF::OfflineConsG</derivedcompoundref>
    <includes refid="_cons_g_8h" local="no">ConsG.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_constraint_graph_1af2dcf9fd0bc3d353c8582849cdabdf54" prot="public" static="no">
        <type>Map&lt; NodeID, <ref refid="class_s_v_f_1_1_constraint_node" kindref="compound">ConstraintNode</ref> * &gt;</type>
        <definition>typedef Map&lt;NodeID, ConstraintNode *&gt; SVF::ConstraintGraph::ConstraintNodeIDToNodeMapTy</definition>
        <argsstring></argsstring>
        <name>ConstraintNodeIDToNodeMapTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="48" column="17" bodyfile="include/Graphs/ConsG.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_constraint_graph_1a15bc278f76cdfcf38e623cedbc80d025" prot="public" static="no">
        <type>ConstraintEdge::ConstraintEdgeSetTy::iterator</type>
        <definition>typedef ConstraintEdge::ConstraintEdgeSetTy::iterator SVF::ConstraintGraph::ConstraintNodeIter</definition>
        <argsstring></argsstring>
        <name>ConstraintNodeIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="49" column="59" bodyfile="include/Graphs/ConsG.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_constraint_graph_1afe34ca6bdbb22b188799a4297fd19004" prot="public" static="no">
        <type>Map&lt; NodeID, NodeID &gt;</type>
        <definition>typedef Map&lt;NodeID, NodeID&gt; SVF::ConstraintGraph::NodeToRepMap</definition>
        <argsstring></argsstring>
        <name>NodeToRepMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="50" column="17" bodyfile="include/Graphs/ConsG.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_constraint_graph_1ac7d24753491a9bab39a13b32bb65f139" prot="public" static="no">
        <type>Map&lt; NodeID, NodeBS &gt;</type>
        <definition>typedef Map&lt;NodeID, NodeBS&gt; SVF::ConstraintGraph::NodeToSubsMap</definition>
        <argsstring></argsstring>
        <name>NodeToSubsMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="51" column="17" bodyfile="include/Graphs/ConsG.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_constraint_graph_1ae80fc7e5d68e103d8f3a82bc9ffb0f00" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_f_i_f_o_work_list" kindref="compound">FIFOWorkList</ref>&lt; NodeID &gt;</type>
        <definition>typedef FIFOWorkList&lt;NodeID&gt; SVF::ConstraintGraph::WorkList</definition>
        <argsstring></argsstring>
        <name>WorkList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="52" column="26" bodyfile="include/Graphs/ConsG.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_constraint_graph_1adcafd4b3c58e882bb4143e3a4fb96688" prot="protected" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> *</type>
        <definition>PAG* SVF::ConstraintGraph::pag</definition>
        <argsstring></argsstring>
        <name>pag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="55" column="8" bodyfile="include/Graphs/ConsG.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_constraint_graph_1ab1b5ee9202bd9f5d738f9850b42a45d2" prot="protected" static="no" mutable="no">
        <type>NodeToRepMap</type>
        <definition>NodeToRepMap SVF::ConstraintGraph::nodeToRepMap</definition>
        <argsstring></argsstring>
        <name>nodeToRepMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="56" column="18" bodyfile="include/Graphs/ConsG.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_constraint_graph_1af91f1027cd5de591ae40865f691c5f60" prot="protected" static="no" mutable="no">
        <type>NodeToSubsMap</type>
        <definition>NodeToSubsMap SVF::ConstraintGraph::nodeToSubsMap</definition>
        <argsstring></argsstring>
        <name>nodeToSubsMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="57" column="19" bodyfile="include/Graphs/ConsG.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_constraint_graph_1af3406f1e191d9d6d9c33d23bdd2d564b" prot="protected" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_f_i_f_o_work_list" kindref="compound">WorkList</ref></type>
        <definition>WorkList SVF::ConstraintGraph::nodesToBeCollapsed</definition>
        <argsstring></argsstring>
        <name>nodesToBeCollapsed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="58" column="14" bodyfile="include/Graphs/ConsG.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_constraint_graph_1ac246dc91562d4b1e168b7c39b2c2720f" prot="protected" static="no" mutable="no">
        <type>EdgeID</type>
        <definition>EdgeID SVF::ConstraintGraph::edgeIndex</definition>
        <argsstring></argsstring>
        <name>edgeIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="59" column="12" bodyfile="include/Graphs/ConsG.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_constraint_graph_1a5bbd6df25027d26911f5d8d6a10881dc" prot="protected" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_constraint_edge_1ad155e1ed2473cc4f5f57128d282ac541" kindref="member">ConstraintEdge::ConstraintEdgeSetTy</ref></type>
        <definition>ConstraintEdge::ConstraintEdgeSetTy SVF::ConstraintGraph::AddrCGEdgeSet</definition>
        <argsstring></argsstring>
        <name>AddrCGEdgeSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="61" column="41" bodyfile="include/Graphs/ConsG.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_constraint_graph_1a1be3ebb84b3d334daf98f7e6f5b82256" prot="protected" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_constraint_edge_1ad155e1ed2473cc4f5f57128d282ac541" kindref="member">ConstraintEdge::ConstraintEdgeSetTy</ref></type>
        <definition>ConstraintEdge::ConstraintEdgeSetTy SVF::ConstraintGraph::directEdgeSet</definition>
        <argsstring></argsstring>
        <name>directEdgeSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="62" column="41" bodyfile="include/Graphs/ConsG.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_constraint_graph_1a1cb9124b29720e7a5b39d83419f9cc17" prot="protected" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_constraint_edge_1ad155e1ed2473cc4f5f57128d282ac541" kindref="member">ConstraintEdge::ConstraintEdgeSetTy</ref></type>
        <definition>ConstraintEdge::ConstraintEdgeSetTy SVF::ConstraintGraph::LoadCGEdgeSet</definition>
        <argsstring></argsstring>
        <name>LoadCGEdgeSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="63" column="41" bodyfile="include/Graphs/ConsG.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_constraint_graph_1a0f9d5eef25827ac1d380e5d8bd225025" prot="protected" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_constraint_edge_1ad155e1ed2473cc4f5f57128d282ac541" kindref="member">ConstraintEdge::ConstraintEdgeSetTy</ref></type>
        <definition>ConstraintEdge::ConstraintEdgeSetTy SVF::ConstraintGraph::StoreCGEdgeSet</definition>
        <argsstring></argsstring>
        <name>StoreCGEdgeSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="64" column="41" bodyfile="include/Graphs/ConsG.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a1973126243ff619033a78a3782944278" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ConstraintGraph::buildCG</definition>
        <argsstring>()</argsstring>
        <name>buildCG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start building constraint graph </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="66" column="10" bodyfile="lib/Graphs/ConsG.cpp" bodystart="41" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a77ba38543b1ee164f1ae95589d5dbc44" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ConstraintGraph::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Memory has been cleaned up at <ref refid="class_s_v_f_1_1_generic_graph" kindref="compound">GenericGraph</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="68" column="10" bodyfile="lib/Graphs/ConsG.cpp" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1ad5d89d94b16c167a593aa2a0c8e6ad9c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>PAGEdge::PAGEdgeSetTy &amp;</type>
        <definition>PAGEdge::PAGEdgeSetTy&amp; SVF::ConstraintGraph::getPAGEdgeSet</definition>
        <argsstring>(PAGEdge::PEDGEK kind)</argsstring>
        <name>getPAGEdgeSet</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g_edge_1a79080505b4744aa8806b55215ac2b0f6" kindref="member">PAGEdge::PEDGEK</ref></type>
          <declname>kind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="70" column="27" bodyfile="include/Graphs/ConsG.h" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a00242eb1c1204abf1f5eb0cae759a38c" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NodeID</type>
        <definition>NodeID SVF::ConstraintGraph::getValueNode</definition>
        <argsstring>(const Value *value) const</argsstring>
        <name>getValueNode</name>
        <param>
          <type>const Value *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Wappers used internally, not expose to Andernsen Pass. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="77" column="19" bodyfile="include/Graphs/ConsG.h" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a802d7aa5c5bdc5c8720120f71d316b68" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NodeID</type>
        <definition>NodeID SVF::ConstraintGraph::getReturnNode</definition>
        <argsstring>(const SVFFunction *value) const</argsstring>
        <name>getReturnNode</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="82" column="19" bodyfile="include/Graphs/ConsG.h" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a527342ce5ac3b9491d7ad4302145cec5" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NodeID</type>
        <definition>NodeID SVF::ConstraintGraph::getVarargNode</definition>
        <argsstring>(const SVFFunction *value) const</argsstring>
        <name>getVarargNode</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="87" column="19" bodyfile="include/Graphs/ConsG.h" bodystart="87" bodyend="90"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a6ce1bb9ad2c2b9da7c39d572816a06da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::ConstraintGraph::ConstraintGraph</definition>
        <argsstring>(PAG *p)</argsstring>
        <name>ConstraintGraph</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="95" column="5" bodyfile="include/Graphs/ConsG.h" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a171331edb83de1fd118eebb3a0fa1662" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::ConstraintGraph::~ConstraintGraph</definition>
        <argsstring>()</argsstring>
        <name>~ConstraintGraph</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="100" column="13" bodyfile="include/Graphs/ConsG.h" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a26722666cc8f2fce61bed73f086a0e87" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_constraint_node" kindref="compound">ConstraintNode</ref> *</type>
        <definition>ConstraintNode* SVF::ConstraintGraph::getConstraintNode</definition>
        <argsstring>(NodeID id) const</argsstring>
        <name>getConstraintNode</name>
        <param>
          <type>NodeID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Get/add/remove constraint node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="107" column="27" bodyfile="include/Graphs/ConsG.h" bodystart="107" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a5ea9c47d232f36b66d985f979f33293b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::ConstraintGraph::addConstraintNode</definition>
        <argsstring>(ConstraintNode *node, NodeID id)</argsstring>
        <name>addConstraintNode</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_node" kindref="compound">ConstraintNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>NodeID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="112" column="17" bodyfile="include/Graphs/ConsG.h" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1aad6c37476edfd9ae92dc8c0d004d782d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::ConstraintGraph::hasConstraintNode</definition>
        <argsstring>(NodeID id) const</argsstring>
        <name>hasConstraintNode</name>
        <param>
          <type>NodeID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="116" column="17" bodyfile="include/Graphs/ConsG.h" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a9e21bc9b86080b4059f0907e9a7b33f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::ConstraintGraph::removeConstraintNode</definition>
        <argsstring>(ConstraintNode *node)</argsstring>
        <name>removeConstraintNode</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_node" kindref="compound">ConstraintNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="120" column="17" bodyfile="include/Graphs/ConsG.h" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a5f57823a4918f6c6bfee9c18beddda51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::ConstraintGraph::hasEdge</definition>
        <argsstring>(ConstraintNode *src, ConstraintNode *dst, ConstraintEdge::ConstraintEdgeK kind)</argsstring>
        <name>hasEdge</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_node" kindref="compound">ConstraintNode</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_node" kindref="compound">ConstraintNode</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_edge_1a663af27955ba0c545f34fa1f076b7375" kindref="member">ConstraintEdge::ConstraintEdgeK</ref></type>
          <declname>kind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="127" column="17" bodyfile="include/Graphs/ConsG.h" bodystart="127" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a04a57ef9803917346cb966e05ecd0de4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_constraint_edge" kindref="compound">ConstraintEdge</ref> *</type>
        <definition>ConstraintEdge* SVF::ConstraintGraph::getEdge</definition>
        <argsstring>(ConstraintNode *src, ConstraintNode *dst, ConstraintEdge::ConstraintEdgeK kind)</argsstring>
        <name>getEdge</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_node" kindref="compound">ConstraintNode</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_node" kindref="compound">ConstraintNode</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_edge_1a663af27955ba0c545f34fa1f076b7375" kindref="member">ConstraintEdge::ConstraintEdgeK</ref></type>
          <declname>kind</declname>
        </param>
        <briefdescription>
<para>Get an edge via its src and dst nodes and kind. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="145" column="27" bodyfile="include/Graphs/ConsG.h" bodystart="145" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a56cfcc39637cf5208f65297a63dde266" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_addr_c_g_edge" kindref="compound">AddrCGEdge</ref> *</type>
        <definition>AddrCGEdge * ConstraintGraph::addAddrCGEdge</definition>
        <argsstring>(NodeID src, NodeID dst)</argsstring>
        <name>addAddrCGEdge</name>
        <param>
          <type>NodeID</type>
          <declname>src</declname>
        </param>
        <param>
          <type>NodeID</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Add a <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> edge into Edge map. </para>
        </briefdescription>
        <detaileddescription>
<para>Add Address edge</para>
<para>Add an address edge </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="177" column="16" bodyfile="lib/Graphs/ConsG.cpp" bodystart="155" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a60bb27100e8c264be2add004069d1758" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_copy_c_g_edge" kindref="compound">CopyCGEdge</ref> *</type>
        <definition>CopyCGEdge * ConstraintGraph::addCopyCGEdge</definition>
        <argsstring>(NodeID src, NodeID dst)</argsstring>
        <name>addCopyCGEdge</name>
        <param>
          <type>NodeID</type>
          <declname>src</declname>
        </param>
        <param>
          <type>NodeID</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Add Copy edge. </para>
        </briefdescription>
        <detaileddescription>
<para>Add Copy edge </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="179" column="16" bodyfile="lib/Graphs/ConsG.cpp" bodystart="172" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a5aac453464955185ca0d47e91db9df7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_normal_gep_c_g_edge" kindref="compound">NormalGepCGEdge</ref> *</type>
        <definition>NormalGepCGEdge * ConstraintGraph::addNormalGepCGEdge</definition>
        <argsstring>(NodeID src, NodeID dst, const LocationSet &amp;ls)</argsstring>
        <name>addNormalGepCGEdge</name>
        <param>
          <type>NodeID</type>
          <declname>src</declname>
        </param>
        <param>
          <type>NodeID</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_location_set" kindref="compound">LocationSet</ref> &amp;</type>
          <declname>ls</declname>
        </param>
        <briefdescription>
<para>Add Gep edge. </para>
        </briefdescription>
        <detaileddescription>
<para>Add Gep edge </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="181" column="22" bodyfile="lib/Graphs/ConsG.cpp" bodystart="193" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a6902cabb252b1eaadb3c8220b4581a2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_variant_gep_c_g_edge" kindref="compound">VariantGepCGEdge</ref> *</type>
        <definition>VariantGepCGEdge * ConstraintGraph::addVariantGepCGEdge</definition>
        <argsstring>(NodeID src, NodeID dst)</argsstring>
        <name>addVariantGepCGEdge</name>
        <param>
          <type>NodeID</type>
          <declname>src</declname>
        </param>
        <param>
          <type>NodeID</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add variant gep edge </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="182" column="22" bodyfile="lib/Graphs/ConsG.cpp" bodystart="211" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a1e5a23fbd08cf4186775baffbd6a7934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_load_c_g_edge" kindref="compound">LoadCGEdge</ref> *</type>
        <definition>LoadCGEdge * ConstraintGraph::addLoadCGEdge</definition>
        <argsstring>(NodeID src, NodeID dst)</argsstring>
        <name>addLoadCGEdge</name>
        <param>
          <type>NodeID</type>
          <declname>src</declname>
        </param>
        <param>
          <type>NodeID</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Add Load edge. </para>
        </briefdescription>
        <detaileddescription>
<para>Add Load edge </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="184" column="16" bodyfile="lib/Graphs/ConsG.cpp" bodystart="229" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a633666953f8d6675961981c4eab1adb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_store_c_g_edge" kindref="compound">StoreCGEdge</ref> *</type>
        <definition>StoreCGEdge * ConstraintGraph::addStoreCGEdge</definition>
        <argsstring>(NodeID src, NodeID dst)</argsstring>
        <name>addStoreCGEdge</name>
        <param>
          <type>NodeID</type>
          <declname>src</declname>
        </param>
        <param>
          <type>NodeID</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Add Store edge. </para>
        </briefdescription>
        <detaileddescription>
<para>Add Store edge </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="186" column="17" bodyfile="lib/Graphs/ConsG.cpp" bodystart="247" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1adee52f15f5ff58dd455e419c2643f89b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_constraint_edge_1ad155e1ed2473cc4f5f57128d282ac541" kindref="member">ConstraintEdge::ConstraintEdgeSetTy</ref> &amp;</type>
        <definition>ConstraintEdge::ConstraintEdgeSetTy&amp; SVF::ConstraintGraph::getAddrCGEdges</definition>
        <argsstring>()</argsstring>
        <name>getAddrCGEdges</name>
        <briefdescription>
<para>Get <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> edge. </para>
        </briefdescription>
        <detaileddescription>
<para>Get Address edges </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="192" column="48" bodyfile="include/Graphs/ConsG.h" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1ad7196d5f05192d9468ee0ca93b6b66ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_constraint_edge_1ad155e1ed2473cc4f5f57128d282ac541" kindref="member">ConstraintEdge::ConstraintEdgeSetTy</ref> &amp;</type>
        <definition>ConstraintEdge::ConstraintEdgeSetTy&amp; SVF::ConstraintGraph::getDirectCGEdges</definition>
        <argsstring>()</argsstring>
        <name>getDirectCGEdges</name>
        <briefdescription>
<para>Get Copy/call/ret/gep edges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="197" column="48" bodyfile="include/Graphs/ConsG.h" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1afb849d8f3425ff36497d062ecefd2cc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_constraint_edge_1ad155e1ed2473cc4f5f57128d282ac541" kindref="member">ConstraintEdge::ConstraintEdgeSetTy</ref> &amp;</type>
        <definition>ConstraintEdge::ConstraintEdgeSetTy&amp; SVF::ConstraintGraph::getLoadCGEdges</definition>
        <argsstring>()</argsstring>
        <name>getLoadCGEdges</name>
        <briefdescription>
<para>Get Load edges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="202" column="48" bodyfile="include/Graphs/ConsG.h" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a61ef90be6ccc01634e5440f22a0f746e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_constraint_edge_1ad155e1ed2473cc4f5f57128d282ac541" kindref="member">ConstraintEdge::ConstraintEdgeSetTy</ref> &amp;</type>
        <definition>ConstraintEdge::ConstraintEdgeSetTy&amp; SVF::ConstraintGraph::getStoreCGEdges</definition>
        <argsstring>()</argsstring>
        <name>getStoreCGEdges</name>
        <briefdescription>
<para>Get Store edges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="207" column="48" bodyfile="include/Graphs/ConsG.h" bodystart="207" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a4db3484e3710c3f5cc86ec32dd643722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ConstraintGraph::reTargetDstOfEdge</definition>
        <argsstring>(ConstraintEdge *edge, ConstraintNode *newDstNode)</argsstring>
        <name>reTargetDstOfEdge</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_edge" kindref="compound">ConstraintEdge</ref> *</type>
          <declname>edge</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_node" kindref="compound">ConstraintNode</ref> *</type>
          <declname>newDstNode</declname>
        </param>
        <briefdescription>
<para>Used for cycle elimination. </para>
        </briefdescription>
        <detaileddescription>
<para>Remove edge from old dst target, change edge dst id and add modifed edge into new dst</para>
<para>Re-target dst node of an edge</para>
<para>(1) Remove edge from old dst target, (2) Change edge dst id and (3) Add modifed edge into new dst </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="216" column="10" bodyfile="lib/Graphs/ConsG.cpp" bodystart="270" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1aaae56afed424f7cd59fddb3fcb2f7214" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ConstraintGraph::reTargetSrcOfEdge</definition>
        <argsstring>(ConstraintEdge *edge, ConstraintNode *newSrcNode)</argsstring>
        <name>reTargetSrcOfEdge</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_edge" kindref="compound">ConstraintEdge</ref> *</type>
          <declname>edge</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_node" kindref="compound">ConstraintNode</ref> *</type>
          <declname>newSrcNode</declname>
        </param>
        <briefdescription>
<para>Remove edge from old src target, change edge dst id and add modifed edge into new src. </para>
        </briefdescription>
        <detaileddescription>
<para>Re-target src node of an edge (1) Remove edge from old src target, (2) Change edge src id and (3) Add modified edge into new src </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="218" column="10" bodyfile="lib/Graphs/ConsG.cpp" bodystart="314" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1acc23df2db1fa7b8e0270d8a04f08f2ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ConstraintGraph::removeAddrEdge</definition>
        <argsstring>(AddrCGEdge *edge)</argsstring>
        <name>removeAddrEdge</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_addr_c_g_edge" kindref="compound">AddrCGEdge</ref> *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
<para>Remove addr edge from their src and dst edge sets. </para>
        </briefdescription>
        <detaileddescription>
<para>Remove addr edge from their src and dst edge sets </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="220" column="10" bodyfile="lib/Graphs/ConsG.cpp" bodystart="355" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a9fc73676ea133651604e2528fe1d8244" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ConstraintGraph::removeDirectEdge</definition>
        <argsstring>(ConstraintEdge *edge)</argsstring>
        <name>removeDirectEdge</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_edge" kindref="compound">ConstraintEdge</ref> *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
<para>Remove direct edge from their src and dst edge sets. </para>
        </briefdescription>
        <detaileddescription>
<para>Remove edges from their src and dst edge sets </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="222" column="10" bodyfile="lib/Graphs/ConsG.cpp" bodystart="391" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1aa4bca2422049413439cb0c3400f2ce28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ConstraintGraph::removeLoadEdge</definition>
        <argsstring>(LoadCGEdge *edge)</argsstring>
        <name>removeLoadEdge</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_load_c_g_edge" kindref="compound">LoadCGEdge</ref> *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
<para>Remove load edge from their src and dst edge sets. </para>
        </briefdescription>
        <detaileddescription>
<para>Remove load edge from their src and dst edge sets </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="224" column="10" bodyfile="lib/Graphs/ConsG.cpp" bodystart="367" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1aad3d05c949c33a587b3ac6d627f5a0a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ConstraintGraph::removeStoreEdge</definition>
        <argsstring>(StoreCGEdge *edge)</argsstring>
        <name>removeStoreEdge</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_store_c_g_edge" kindref="compound">StoreCGEdge</ref> *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
<para>Remove store edge from their src and dst edge sets. </para>
        </briefdescription>
        <detaileddescription>
<para>Remove store edge from their src and dst edge sets </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="226" column="10" bodyfile="lib/Graphs/ConsG.cpp" bodystart="379" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a39b973543acdcdc5493832cc9d0f586f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NodeID</type>
        <definition>NodeID SVF::ConstraintGraph::sccRepNode</definition>
        <argsstring>(NodeID id) const</argsstring>
        <name>sccRepNode</name>
        <param>
          <type>NodeID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>SCC rep/sub nodes methods. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="231" column="19" bodyfile="include/Graphs/ConsG.h" bodystart="231" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1aed605b010e313f4b11e95b83fe50e3b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodeBS &amp;</type>
        <definition>NodeBS&amp; SVF::ConstraintGraph::sccSubNodes</definition>
        <argsstring>(NodeID id)</argsstring>
        <name>sccSubNodes</name>
        <param>
          <type>NodeID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="239" column="19" bodyfile="include/Graphs/ConsG.h" bodystart="239" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1abea65bf6dd43aa312082f8d4c7c3e3cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::ConstraintGraph::setRep</definition>
        <argsstring>(NodeID node, NodeID rep)</argsstring>
        <name>setRep</name>
        <param>
          <type>NodeID</type>
          <declname>node</declname>
        </param>
        <param>
          <type>NodeID</type>
          <declname>rep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="244" column="17" bodyfile="include/Graphs/ConsG.h" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a148235bd1355a700d3ce187702e89bc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::ConstraintGraph::setSubs</definition>
        <argsstring>(NodeID node, NodeBS &amp;subs)</argsstring>
        <name>setSubs</name>
        <param>
          <type>NodeID</type>
          <declname>node</declname>
        </param>
        <param>
          <type>NodeBS &amp;</type>
          <declname>subs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="248" column="17" bodyfile="include/Graphs/ConsG.h" bodystart="248" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a5fe3815a7990e16b99cf46e90529f8b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::ConstraintGraph::resetSubs</definition>
        <argsstring>(NodeID node)</argsstring>
        <name>resetSubs</name>
        <param>
          <type>NodeID</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="252" column="17" bodyfile="include/Graphs/ConsG.h" bodystart="252" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a081bf1238121eb52a0c9ad60f77ecbcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ConstraintGraph::moveInEdgesToRepNode</definition>
        <argsstring>(ConstraintNode *node, ConstraintNode *rep)</argsstring>
        <name>moveInEdgesToRepNode</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_node" kindref="compound">ConstraintNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_node" kindref="compound">ConstraintNode</ref> *</type>
          <declname>rep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="struct_move" kindref="compound">Move</ref> incoming direct edges of a sub node which is outside the SCC to its rep node Remove incoming direct edges of a sub node which is inside the SCC from its rep node Return TRUE if there&apos;s a gep edge inside this SCC (PWC).</para>
<para><ref refid="struct_move" kindref="compound">Move</ref> incoming direct edges of a sub node which is outside SCC to its rep node Remove incoming direct edges of a sub node which is inside SCC from its rep node </para>
        </detaileddescription>
        <inbodydescription>
<para>only copy and gep edge can be removed</para>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="261" column="10" bodyfile="lib/Graphs/ConsG.cpp" bodystart="406" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1aa436aac95be84d1946169f4984deae59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ConstraintGraph::moveOutEdgesToRepNode</definition>
        <argsstring>(ConstraintNode *node, ConstraintNode *rep)</argsstring>
        <name>moveOutEdgesToRepNode</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_node" kindref="compound">ConstraintNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_node" kindref="compound">ConstraintNode</ref> *</type>
          <declname>rep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="struct_move" kindref="compound">Move</ref> outgoing direct edges of a sub node which is outside the SCC to its rep node Remove outgoing direct edges of sub node which is inside the SCC from its rep node Return TRUE if there&apos;s a gep edge inside this SCC (PWC).</para>
<para><ref refid="struct_move" kindref="compound">Move</ref> outgoing direct edges of a sub node which is outside SCC to its rep node Remove outgoing direct edges of a sub node which is inside SCC from its rep node </para>
        </detaileddescription>
        <inbodydescription>
<para>only copy and gep edge can be removed</para>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="266" column="10" bodyfile="lib/Graphs/ConsG.cpp" bodystart="464" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1aabe2861fcbc364e2c8aa8114d4879c39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::ConstraintGraph::moveEdgesToRepNode</definition>
        <argsstring>(ConstraintNode *node, ConstraintNode *rep)</argsstring>
        <name>moveEdgesToRepNode</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_node" kindref="compound">ConstraintNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_node" kindref="compound">ConstraintNode</ref> *</type>
          <declname>rep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="struct_move" kindref="compound">Move</ref> incoming/outgoing direct edges of a sub node to its rep node Return TRUE if there&apos;s a gep edge inside this SCC (PWC). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="270" column="17" bodyfile="include/Graphs/ConsG.h" bodystart="270" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1af790af4146197682dd4f9abfad1434f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::ConstraintGraph::isZeroOffsettedGepCGEdge</definition>
        <argsstring>(ConstraintEdge *edge) const</argsstring>
        <name>isZeroOffsettedGepCGEdge</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_edge" kindref="compound">ConstraintEdge</ref> *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
<para>Check if a given edge is a <ref refid="class_s_v_f_1_1_normal_gep_c_g_edge" kindref="compound">NormalGepCGEdge</ref> with 0 offset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="278" column="17" bodyfile="include/Graphs/ConsG.h" bodystart="278" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a003e68319c41fb32df9ab6f2fe02d8d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const PAG::CallSiteToFunPtrMap &amp;</type>
        <definition>const PAG::CallSiteToFunPtrMap&amp; SVF::ConstraintGraph::getIndirectCallsites</definition>
        <argsstring>() const</argsstring>
        <name>getIndirectCallsites</name>
        <briefdescription>
<para>Wrappers for invoking <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> methods. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="288" column="43" bodyfile="include/Graphs/ConsG.h" bodystart="288" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1ab2b4725a8fcae8a1bc3c026d236005b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodeID</type>
        <definition>NodeID SVF::ConstraintGraph::getBlackHoleNode</definition>
        <argsstring>()</argsstring>
        <name>getBlackHoleNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="292" column="19" bodyfile="include/Graphs/ConsG.h" bodystart="292" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a8ba74f82c1e796f2888ba34bc8355ce9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::ConstraintGraph::isBlkObjOrConstantObj</definition>
        <argsstring>(NodeID id)</argsstring>
        <name>isBlkObjOrConstantObj</name>
        <param>
          <type>NodeID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="296" column="17" bodyfile="include/Graphs/ConsG.h" bodystart="296" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a8200b7cbd600958c662f24169ccbc8d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodeBS &amp;</type>
        <definition>NodeBS&amp; SVF::ConstraintGraph::getAllFieldsObjNode</definition>
        <argsstring>(NodeID id)</argsstring>
        <name>getAllFieldsObjNode</name>
        <param>
          <type>NodeID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="300" column="19" bodyfile="include/Graphs/ConsG.h" bodystart="300" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a2337fa70dc5b0b13dbba4cd776404c6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodeID</type>
        <definition>NodeID SVF::ConstraintGraph::getBaseObjNode</definition>
        <argsstring>(NodeID id)</argsstring>
        <name>getBaseObjNode</name>
        <param>
          <type>NodeID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="304" column="19" bodyfile="include/Graphs/ConsG.h" bodystart="304" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a38fd07dd86f6187a7671f9f85565fccc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::ConstraintGraph::isSingleFieldObj</definition>
        <argsstring>(NodeID id) const</argsstring>
        <name>isSingleFieldObj</name>
        <param>
          <type>NodeID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="308" column="17" bodyfile="include/Graphs/ConsG.h" bodystart="308" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a4a42759f8a39ff4495c8691f3c87e443" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodeID</type>
        <definition>NodeID SVF::ConstraintGraph::getGepObjNode</definition>
        <argsstring>(NodeID id, const LocationSet &amp;ls)</argsstring>
        <name>getGepObjNode</name>
        <param>
          <type>NodeID</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_location_set" kindref="compound">LocationSet</ref> &amp;</type>
          <declname>ls</declname>
        </param>
        <briefdescription>
<para>Get a field of a memory object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Create a node when it is (1) not exist on graph and (2) not merged</para>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="314" column="19" bodyfile="include/Graphs/ConsG.h" bodystart="314" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a5fbbfb7b935e0b8867f7beab32ab7763" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodeID</type>
        <definition>NodeID SVF::ConstraintGraph::getFIObjNode</definition>
        <argsstring>(NodeID id)</argsstring>
        <name>getFIObjNode</name>
        <param>
          <type>NodeID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Get a field-insensitive node of a memory object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Create a node when it is (1) not exist on graph and (2) not merged</para>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="323" column="19" bodyfile="include/Graphs/ConsG.h" bodystart="323" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a84468bc9355d31e8c3e18369036ddf5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::ConstraintGraph::isPWCNode</definition>
        <argsstring>(NodeID nodeId)</argsstring>
        <name>isPWCNode</name>
        <param>
          <type>NodeID</type>
          <declname>nodeId</declname>
        </param>
        <briefdescription>
<para>Check/Set PWC (positive weight cycle) flag. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="335" column="17" bodyfile="include/Graphs/ConsG.h" bodystart="335" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a03f9fe8ae7094c39937f47f422276724" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::ConstraintGraph::setPWCNode</definition>
        <argsstring>(NodeID nodeId)</argsstring>
        <name>setPWCNode</name>
        <param>
          <type>NodeID</type>
          <declname>nodeId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="339" column="17" bodyfile="include/Graphs/ConsG.h" bodystart="339" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1aa867ffe0f3639a0ef5b5c36696e733be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::ConstraintGraph::hasNodesToBeCollapsed</definition>
        <argsstring>() const</argsstring>
        <name>hasNodesToBeCollapsed</name>
        <briefdescription>
<para>Add/get nodes to be collapsed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="347" column="17" bodyfile="include/Graphs/ConsG.h" bodystart="347" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a19e69dabc1f5d16129bfedc81e6e7ceb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::ConstraintGraph::addNodeToBeCollapsed</definition>
        <argsstring>(NodeID id)</argsstring>
        <name>addNodeToBeCollapsed</name>
        <param>
          <type>NodeID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="351" column="17" bodyfile="include/Graphs/ConsG.h" bodystart="351" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1a006667ed55132ca0909c0e9118fea704" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodeID</type>
        <definition>NodeID SVF::ConstraintGraph::getNextCollapseNode</definition>
        <argsstring>()</argsstring>
        <name>getNextCollapseNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="355" column="19" bodyfile="include/Graphs/ConsG.h" bodystart="355" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1af9fc8308845628fe8900528573e30462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ConstraintGraph::dump</definition>
        <argsstring>(std::string name)</argsstring>
        <name>dump</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Dump graph into dot file. </para>
        </briefdescription>
        <detaileddescription>
<para>Dump constraint graph </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="362" column="10" bodyfile="lib/Graphs/ConsG.cpp" bodystart="523" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_constraint_graph_1aa87bf07fc538c2cf425138727e7acbce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ConstraintGraph::print</definition>
        <argsstring>()</argsstring>
        <name>print</name>
        <briefdescription>
<para>Print CG into terminal. </para>
        </briefdescription>
        <detaileddescription>
<para>Print this constraint graph including its nodes and edges </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsG.h" line="364" column="10" bodyfile="lib/Graphs/ConsG.cpp" bodystart="531" bodyend="586"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Constraint graph for <ref refid="class_s_v_f_1_1_andersen" kindref="compound">Andersen</ref>&apos;s analysis ConstraintNodes are same as PAGNodes ConstraintEdges are self-defined edges (initialized with ConstraintEdges) </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>SVF::GenericGraph&lt; ConstraintNode, ConstraintEdge &gt;</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
      <node id="1">
        <label>SVF::ConstraintGraph</label>
        <link refid="class_s_v_f_1_1_constraint_graph"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SVF::OfflineConsG</label>
        <link refid="class_s_v_f_1_1_offline_cons_g"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>SVF::GenericGraph&lt; ConstraintNode, ConstraintEdge &gt;</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
      <node id="1">
        <label>SVF::ConstraintGraph</label>
        <link refid="class_s_v_f_1_1_constraint_graph"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>pag</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>nodesToBeCollapsed</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>AddrCGEdgeSet</edgelabel>
          <edgelabel>LoadCGEdgeSet</edgelabel>
          <edgelabel>StoreCGEdgeSet</edgelabel>
          <edgelabel>directEdgeSet</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>SVF::GenericNode&lt; ConstraintNode, ConstraintEdge &gt;</label>
        <link refid="class_s_v_f_1_1_generic_node"/>
      </node>
      <node id="3">
        <label>SVF::PAG</label>
        <link refid="class_s_v_f_1_1_p_a_g"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>SVF::FIFOWorkList&lt; NodeID &gt;</label>
        <link refid="class_s_v_f_1_1_f_i_f_o_work_list"/>
      </node>
      <node id="4">
        <label>SVF::GenericGraph&lt; PAGNode, PAGEdge &gt;</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
    </collaborationgraph>
    <location file="include/Graphs/ConsG.h" line="44" column="1" bodyfile="include/Graphs/ConsG.h" bodystart="45" bodyend="365"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_constraint_graph_1a56cfcc39637cf5208f65297a63dde266" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>addAddrCGEdge</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a5ea9c47d232f36b66d985f979f33293b" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>addConstraintNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a60bb27100e8c264be2add004069d1758" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>addCopyCGEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a0a8831a5429005ff9d71adbd6bf3994f" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>addGNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a1e5a23fbd08cf4186775baffbd6a7934" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>addLoadCGEdge</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a19e69dabc1f5d16129bfedc81e6e7ceb" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>addNodeToBeCollapsed</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a5aac453464955185ca0d47e91db9df7b" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>addNormalGepCGEdge</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a5bbd6df25027d26911f5d8d6a10881dc" prot="protected" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>AddrCGEdgeSet</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a633666953f8d6675961981c4eab1adb0" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>addStoreCGEdge</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a6902cabb252b1eaadb3c8220b4581a2f" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>addVariantGepCGEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a0d9744b1b0e7a09a6f7af29188e243b7" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>begin</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a3385b008ae03444404c1e392fd47f1d6" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>begin</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a1973126243ff619033a78a3782944278" prot="protected" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>buildCG</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a5dfa3f178d4abf37177d0d74ff4c6a97" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>const_iterator</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a6ce1bb9ad2c2b9da7c39d572816a06da" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>ConstraintGraph</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1af2dcf9fd0bc3d353c8582849cdabdf54" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>ConstraintNodeIDToNodeMapTy</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a15bc278f76cdfcf38e623cedbc80d025" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>ConstraintNodeIter</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a77ba38543b1ee164f1ae95589d5dbc44" prot="protected" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>destroy</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a1be3ebb84b3d334daf98f7e6f5b82256" prot="protected" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>directEdgeSet</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1af9fc8308845628fe8900528573e30462" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>dump</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1ac246dc91562d4b1e168b7c39b2c2720f" prot="protected" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>edgeIndex</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a2fbc96de5f066469c2739229307bcc0c" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>edgeNum</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a12d493d6ad2b6c89f240c9ccfa3bdf30" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>EdgeType</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a4bef15157423cef48dc7333a803cd27d" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>end</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a3001af3746d26b7dc0a212db5e48a4bb" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>end</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1aa5837cddbbd63c5a8ac5725bcecb192f" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>GenericGraph</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1adee52f15f5ff58dd455e419c2643f89b" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>getAddrCGEdges</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a8200b7cbd600958c662f24169ccbc8d6" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>getAllFieldsObjNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a2337fa70dc5b0b13dbba4cd776404c6b" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>getBaseObjNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1ab2b4725a8fcae8a1bc3c026d236005b8" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>getBlackHoleNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a26722666cc8f2fce61bed73f086a0e87" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>getConstraintNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1ad7196d5f05192d9468ee0ca93b6b66ee" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>getDirectCGEdges</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a04a57ef9803917346cb966e05ecd0de4" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>getEdge</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a5fbbfb7b935e0b8867f7beab32ab7763" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>getFIObjNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a4a42759f8a39ff4495c8691f3c87e443" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>getGepObjNode</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a43c9c773bfa17abf481c33073e30d01b" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>getGNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a003e68319c41fb32df9ab6f2fe02d8d2" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>getIndirectCallsites</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1afb849d8f3425ff36497d062ecefd2cc1" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>getLoadCGEdges</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a006667ed55132ca0909c0e9118fea704" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>getNextCollapseNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1ad5d89d94b16c167a593aa2a0c8e6ad9c" prot="protected" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>getPAGEdgeSet</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a802d7aa5c5bdc5c8720120f71d316b68" prot="protected" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>getReturnNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a61ef90be6ccc01634e5440f22a0f746e" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>getStoreCGEdges</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a29cab1426b0000bd87c026ab8c9979c0" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>getTotalEdgeNum</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a8c8d16036008f87c7811586047599858" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>getTotalNodeNum</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a00242eb1c1204abf1f5eb0cae759a38c" prot="protected" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>getValueNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a527342ce5ac3b9491d7ad4302145cec5" prot="protected" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>getVarargNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1aad6c37476edfd9ae92dc8c0d004d782d" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>hasConstraintNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a5f57823a4918f6c6bfee9c18beddda51" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>hasEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a6885064afa211958af7b73f0233284e5" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>hasGNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1aa867ffe0f3639a0ef5b5c36696e733be" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>hasNodesToBeCollapsed</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a47a1ef8b67b0c92f78b4457dc3bbfe71" prot="protected" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>IDToNodeMap</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1ab9027b190f50ceefc90094e4f967f269" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>IDToNodeMapTy</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a2f2bca8219c7d769f6d2937e5cd40d14" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>incEdgeNum</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a7388dabef7300e77adf33f3999639f21" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>incNodeNum</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a8ba74f82c1e796f2888ba34bc8355ce9" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>isBlkObjOrConstantObj</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a84468bc9355d31e8c3e18369036ddf5c" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>isPWCNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a38fd07dd86f6187a7671f9f85565fccc" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>isSingleFieldObj</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1af790af4146197682dd4f9abfad1434f6" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>isZeroOffsettedGepCGEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1ac213302cf5c7cdf3b66f7b18649d0fbc" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>iterator</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a1cb9124b29720e7a5b39d83419f9cc17" prot="protected" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>LoadCGEdgeSet</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1aabe2861fcbc364e2c8aa8114d4879c39" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>moveEdgesToRepNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a081bf1238121eb52a0c9ad60f77ecbcd" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>moveInEdgesToRepNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1aa436aac95be84d1946169f4984deae59" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>moveOutEdgesToRepNode</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a38122734cbe71551a420dfb7fee2012e" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>nodeNum</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1af3406f1e191d9d6d9c33d23bdd2d564b" prot="protected" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>nodesToBeCollapsed</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1ab1b5ee9202bd9f5d738f9850b42a45d2" prot="protected" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>nodeToRepMap</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1afe34ca6bdbb22b188799a4297fd19004" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>NodeToRepMap</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1af91f1027cd5de591ae40865f691c5f60" prot="protected" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>nodeToSubsMap</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1ac7d24753491a9bab39a13b32bb65f139" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>NodeToSubsMap</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a86c50fc6775fd29f88df2cb4646bb211" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>NodeType</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1adcafd4b3c58e882bb4143e3a4fb96688" prot="protected" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>pag</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1aa87bf07fc538c2cf425138727e7acbce" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>print</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1acc23df2db1fa7b8e0270d8a04f08f2ee" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>removeAddrEdge</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a9e21bc9b86080b4059f0907e9a7b33f3" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>removeConstraintNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a9fc73676ea133651604e2528fe1d8244" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>removeDirectEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a1817b65e76052f11e36a67d6b9efd915" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>removeGNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1aa4bca2422049413439cb0c3400f2ce28" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>removeLoadEdge</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1aad3d05c949c33a587b3ac6d627f5a0a2" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>removeStoreEdge</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a5fe3815a7990e16b99cf46e90529f8b3" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>resetSubs</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a4db3484e3710c3f5cc86ec32dd643722" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>reTargetDstOfEdge</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1aaae56afed424f7cd59fddb3fcb2f7214" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>reTargetSrcOfEdge</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a39b973543acdcdc5493832cc9d0f586f" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>sccRepNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1aed605b010e313f4b11e95b83fe50e3b3" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>sccSubNodes</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a03f9fe8ae7094c39937f47f422276724" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>setPWCNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1abea65bf6dd43aa312082f8d4c7c3e3cb" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>setRep</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a148235bd1355a700d3ce187702e89bc8" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>setSubs</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a0f9d5eef25827ac1d380e5d8bd225025" prot="protected" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>StoreCGEdgeSet</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1ae80fc7e5d68e103d8f3a82bc9ffb0f00" prot="public" virt="non-virtual"><scope>SVF::ConstraintGraph</scope><name>WorkList</name></member>
      <member refid="class_s_v_f_1_1_constraint_graph_1a171331edb83de1fd118eebb3a0fa1662" prot="public" virt="virtual"><scope>SVF::ConstraintGraph</scope><name>~ConstraintGraph</name></member>
      <member refid="class_s_v_f_1_1_generic_graph_1a3b94850d788a1b8da45e9b8bf2f2df2c" prot="public" virt="virtual"><scope>SVF::ConstraintGraph</scope><name>~GenericGraph</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
