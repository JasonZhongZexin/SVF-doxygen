<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_double_free_checker" xml:lang="en-US">
<title>SVF::DoubleFreeChecker Class Reference</title>
<indexterm><primary>SVF::DoubleFreeChecker</primary></indexterm>
<para>
<computeroutput>#include &lt;DoubleFreeChecker.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for SVF::DoubleFreeChecker:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_double_free_checker.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_double_free_checker_1ac9d147b16442bb4746f66cffe46a070a"/><link linkend="_class_s_v_f_1_1_double_free_checker_1ac9d147b16442bb4746f66cffe46a070a">DoubleFreeChecker</link> ()</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_double_free_checker_1a2eddb7691ad68af168fcae3dacd79824"/>virtual <link linkend="_class_s_v_f_1_1_double_free_checker_1a2eddb7691ad68af168fcae3dacd79824">~DoubleFreeChecker</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_s_v_f_1_1_double_free_checker_1a71c9f9450e369d1196c49b7d9019dbda">runOnModule</link> (<link linkend="_class_s_v_f_1_1_s_v_f_module">SVFModule</link> *module)</para>

<para>We start from here. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_double_free_checker_1aa6bde3be780876317dcdcdf26d2ece2a"/>void <link linkend="_class_s_v_f_1_1_double_free_checker_1aa6bde3be780876317dcdcdf26d2ece2a">reportBug</link> (<link linkend="_class_s_v_f_1_1_prog_slice">ProgSlice</link> *slice)</para>

<para>Report file/close bugs. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Double free checker to check deallocations of memory </para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_double_free_checker_1a71c9f9450e369d1196c49b7d9019dbda"/>    <section>
    <title>runOnModule()</title>
<indexterm><primary>runOnModule</primary><secondary>SVF::DoubleFreeChecker</secondary></indexterm>
<indexterm><primary>SVF::DoubleFreeChecker</primary><secondary>runOnModule</secondary></indexterm>
<para><computeroutput>virtual bool SVF::DoubleFreeChecker::runOnModule (<link linkend="_class_s_v_f_1_1_s_v_f_module">SVFModule</link> * module)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>We start from here. </para>
</para>

<para>start analysis</para>
<para>
Reimplemented from <link linkend="_class_s_v_f_1_1_leak_checker_1ab3bb79d88d73c8b881d714921e7b5e12">SVF::LeakChecker</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/SABER/DoubleFreeChecker.hlib/SABER/DoubleFreeChecker.cpp</section>
</section>
