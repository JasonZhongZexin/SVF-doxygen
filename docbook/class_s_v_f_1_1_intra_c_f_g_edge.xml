<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_intra_c_f_g_edge" xml:lang="en-US">
<title>SVF::IntraCFGEdge Class Reference</title>
<indexterm><primary>SVF::IntraCFGEdge</primary></indexterm>
<para>
<computeroutput>#include &lt;ICFGEdge.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for SVF::IntraCFGEdge:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_intra_c_f_g_edge.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>typedef std::pair&lt; const Value *, NodeID &gt; <link linkend="_class_s_v_f_1_1_intra_c_f_g_edge_1a92c78050b62f802fff360bac02cd42dd">BranchCondition</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_intra_c_f_g_edge_1aeab701d63caadf8effabdbd23ac0cd49"/><link linkend="_class_s_v_f_1_1_intra_c_f_g_edge_1aeab701d63caadf8effabdbd23ac0cd49">IntraCFGEdge</link> (<link linkend="_class_s_v_f_1_1_i_c_f_g_node">ICFGNode</link> *s, <link linkend="_class_s_v_f_1_1_i_c_f_g_node">ICFGNode</link> *d)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_intra_c_f_g_edge_1a6566fce687cd2e6a0cd4be98b0205953"/><link linkend="_class_s_v_f_1_1_intra_c_f_g_edge_1a92c78050b62f802fff360bac02cd42dd">BranchCondition</link> &amp; <emphasis role="strong">getBranchCondtion</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_intra_c_f_g_edge_1a97402e3c122618d5be189dce1b58cd8f"/>void <emphasis role="strong">setBranchCondtion</emphasis> (const Value *pNode, NodeID branchID)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_intra_c_f_g_edge_1a1e63286b4d6f757ac1220f5f03ae62de"/>virtual const std::string <emphasis role="strong">toString</emphasis> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_intra_c_f_g_edge_1a70bdadf898a10c6db89e9f432529092c"/>static bool <link linkend="_class_s_v_f_1_1_intra_c_f_g_edge_1a70bdadf898a10c6db89e9f432529092c">classof</link> (const <link linkend="_class_s_v_f_1_1_intra_c_f_g_edge">IntraCFGEdge</link> *)</para>

<para>Methods for support type inquiry through isa, cast, and dyn_cast: </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_intra_c_f_g_edge_1aea905f535696918ed63cd5ce04b7e0fb"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_class_s_v_f_1_1_i_c_f_g_edge">ICFGEdge</link> *edge)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_intra_c_f_g_edge_1adda4f50f50127f5d7f193300933c209f"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_namespace_s_v_f_1a91e714a719b1e62e9b63103e9e6af404">GenericICFGEdgeTy</link> *edge)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Intra <link linkend="_class_s_v_f_1_1_i_c_f_g">ICFG</link> edge representing control-flows between basic blocks within a function </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_intra_c_f_g_edge_1a92c78050b62f802fff360bac02cd42dd"/>    <section>
    <title>BranchCondition</title>
<indexterm><primary>BranchCondition</primary><secondary>SVF::IntraCFGEdge</secondary></indexterm>
<indexterm><primary>SVF::IntraCFGEdge</primary><secondary>BranchCondition</secondary></indexterm>
<para><computeroutput>typedef std::pair&lt;const Value*,NodeID&gt; <link linkend="_class_s_v_f_1_1_intra_c_f_g_edge_1a92c78050b62f802fff360bac02cd42dd">SVF::IntraCFGEdge::BranchCondition</link></computeroutput></para>
<para>the first element is a boolean (for if/else) or numeric condition value (for switch) the second element is the value when this condition should hold to execute this CFGEdge. e.g., Inst1: br cmp label 0, label 1, Inst2 is label 0 and Inst 3 is label 1; for edge between Inst1 and Inst 2, the first element is cmp and second element is 0 </para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/Graphs/ICFGEdge.hlib/Graphs/ICFG.cpp</section>
</section>
