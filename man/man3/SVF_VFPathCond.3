.TH "SVF::VFPathCond" 3 "Sun Feb 14 2021" "SVF" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SVF::VFPathCond
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBSVF::ContextCond\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fBPathCondAllocator::Condition\fP \fBPathCond\fP"
.br
.ti -1c
.RI "typedef std::vector< std::pair< NodeID, NodeID > > \fBEdgeSet\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBVFPathCond\fP (\fBPathCond\fP *p=PathCondAllocator::trueCond())"
.br
.RI "Constructor\&. "
.ti -1c
.RI "\fBVFPathCond\fP (const \fBVFPathCond\fP &cond)"
.br
.RI "Copy Constructor\&. "
.ti -1c
.RI "virtual \fB~VFPathCond\fP ()"
.br
.RI "Destructor\&. "
.ti -1c
.RI "u32_t \fBgetMaxPathLen\fP () const"
.br
.ti -1c
.RI "\fBPathCond\fP * \fBgetPaths\fP () const"
.br
.RI "Return paths\&. "
.ti -1c
.RI "const EdgeSet & \fBgetVFEdges\fP () const"
.br
.RI "Return paths\&. "
.ti -1c
.RI "void \fBsetPaths\fP (\fBPathCond\fP *p, const EdgeSet &e)"
.br
.RI "Set paths\&. "
.ti -1c
.RI "u32_t \fBpathLen\fP () const"
.br
.RI "Get path length\&. "
.ti -1c
.RI "void \fBaddVFEdge\fP (NodeID from, NodeID to)"
.br
.RI "Add \fBSVFG\fP Edge\&. "
.ti -1c
.RI "bool \fBhasVFEdge\fP (NodeID from, NodeID to) const"
.br
.RI "Has \fBSVFG\fP Edge\&. "
.ti -1c
.RI "bool \fBhasIncomingEdge\fP (NodeID node) const"
.br
.RI "Whether Node dst has incoming edge\&. "
.ti -1c
.RI "bool \fBhasOutgoingEdge\fP (NodeID node) const"
.br
.RI "Whether Node dst has outgoing edge\&. "
.ti -1c
.RI "bool \fBaddPath\fP (\fBPathCondAllocator\fP *allocator, \fBPathCond\fP *c, NodeID from, NodeID to)"
.br
.ti -1c
.RI "bool \fBcondAnd\fP (\fBPathCondAllocator\fP *allocator, \fBPathCond\fP *c)"
.br
.RI "Condition operatoration\&. "
.ti -1c
.RI "void \fBcondOr\fP (\fBPathCondAllocator\fP *allocator, \fBPathCond\fP *c)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (const \fBVFPathCond\fP &rhs) const"
.br
.ti -1c
.RI "\fBVFPathCond\fP & \fBoperator=\fP (const \fBVFPathCond\fP &rhs)"
.br
.RI "Overloading operator=\&. "
.ti -1c
.RI "bool \fBoperator==\fP (const \fBVFPathCond\fP &rhs) const"
.br
.RI "Overloading operator==\&. "
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBVFPathCond\fP &rhs) const"
.br
.RI "Overloading operator!=\&. "
.ti -1c
.RI "std::string \fBvfEdgesTrace\fP () const"
.br
.RI "Get value-flow edge traces\&. "
.ti -1c
.RI "std::string \fBtoString\fP () const"
.br
.RI "Dump context condition\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBsetMaxPathLen\fP (u32_t max)"
.br
.RI "set max path limit "
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static u32_t \fBmaximumPath\fP = 0"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Member Function Documentation"
.PP 
.SS "bool SVF::VFPathCond::addPath (\fBPathCondAllocator\fP * allocator, \fBPathCond\fP * c, NodeID from, NodeID to)\fC [inline]\fP"
drop condition when existing a loop (vf cycle)
.SS "bool SVF::VFPathCond::operator< (const \fBVFPathCond\fP & rhs) const\fC [inline]\fP"
Enable compare operator to avoid duplicated item insertion in map or set to be noted that two vectors can also overload operator() 

.SH "Author"
.PP 
Generated automatically by Doxygen for SVF from the source code\&.
