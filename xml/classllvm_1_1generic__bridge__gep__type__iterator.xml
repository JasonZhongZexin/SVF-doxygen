<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classllvm_1_1generic__bridge__gep__type__iterator" kind="class" language="C++" prot="public">
    <compoundname>llvm::generic_bridge_gep_type_iterator</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::iterator&lt; std::forward_iterator_tag, Type *, ptrdiff_t &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename ItTy</type>
        <defval>User::const_op_iterator</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classllvm_1_1generic__bridge__gep__type__iterator_1aba9aa299a72307833598eca0ade33504" prot="private" static="no">
        <type>std::iterator&lt; std::forward_iterator_tag, Type *, ptrdiff_t &gt;</type>
        <definition>typedef std::iterator&lt;std::forward_iterator_tag,Type *, ptrdiff_t&gt; llvm::generic_bridge_gep_type_iterator&lt; ItTy &gt;::super</definition>
        <argsstring></argsstring>
        <name>super</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/GEPTypeBridgeIterator.h" line="20" column="27" bodyfile="include/SVF-FE/GEPTypeBridgeIterator.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classllvm_1_1generic__bridge__gep__type__iterator_1aa3fd4dca27e09df9ee726879624ae47e" prot="private" static="no" mutable="no">
        <type>ItTy</type>
        <definition>ItTy llvm::generic_bridge_gep_type_iterator&lt; ItTy &gt;::OpIt</definition>
        <argsstring></argsstring>
        <name>OpIt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/GEPTypeBridgeIterator.h" line="21" column="10" bodyfile="include/SVF-FE/GEPTypeBridgeIterator.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classllvm_1_1generic__bridge__gep__type__iterator_1aa602c207fe08960b24fc496ca1d34509" prot="private" static="no" mutable="no">
        <type>PointerIntPair&lt; Type *, 1 &gt;</type>
        <definition>PointerIntPair&lt;Type *,1&gt; llvm::generic_bridge_gep_type_iterator&lt; ItTy &gt;::CurTy</definition>
        <argsstring></argsstring>
        <name>CurTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/GEPTypeBridgeIterator.h" line="22" column="20" bodyfile="include/SVF-FE/GEPTypeBridgeIterator.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classllvm_1_1generic__bridge__gep__type__iterator_1a58127812b9ab914238095883ab1fe24e" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned llvm::generic_bridge_gep_type_iterator&lt; ItTy &gt;::AddrSpace</definition>
        <argsstring></argsstring>
        <name>AddrSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/GEPTypeBridgeIterator.h" line="23" column="14" bodyfile="include/SVF-FE/GEPTypeBridgeIterator.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classllvm_1_1generic__bridge__gep__type__iterator_1a93f554395c6f42b26bea2ba3c70442c3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>llvm::generic_bridge_gep_type_iterator&lt; ItTy &gt;::generic_bridge_gep_type_iterator</definition>
        <argsstring>()</argsstring>
        <name>generic_bridge_gep_type_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/GEPTypeBridgeIterator.h" line="24" column="5" bodyfile="include/SVF-FE/GEPTypeBridgeIterator.h" bodystart="24" bodyend="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classllvm_1_1generic__bridge__gep__type__iterator_1aabd833b8eca182f681462209c9f24f1a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classllvm_1_1generic__bridge__gep__type__iterator" kindref="compound">generic_bridge_gep_type_iterator</ref></type>
        <definition>static generic_bridge_gep_type_iterator llvm::generic_bridge_gep_type_iterator&lt; ItTy &gt;::begin</definition>
        <argsstring>(Type *Ty, ItTy It)</argsstring>
        <name>begin</name>
        <param>
          <type>Type *</type>
          <declname>Ty</declname>
        </param>
        <param>
          <type>ItTy</type>
          <declname>It</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/GEPTypeBridgeIterator.h" line="27" column="45" bodyfile="include/SVF-FE/GEPTypeBridgeIterator.h" bodystart="27" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classllvm_1_1generic__bridge__gep__type__iterator_1a4d10570a7a3b75fbec9fbc9fc7d3e619" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classllvm_1_1generic__bridge__gep__type__iterator" kindref="compound">generic_bridge_gep_type_iterator</ref></type>
        <definition>static generic_bridge_gep_type_iterator llvm::generic_bridge_gep_type_iterator&lt; ItTy &gt;::begin</definition>
        <argsstring>(Type *Ty, unsigned AddrSpace, ItTy It)</argsstring>
        <name>begin</name>
        <param>
          <type>Type *</type>
          <declname>Ty</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>AddrSpace</declname>
        </param>
        <param>
          <type>ItTy</type>
          <declname>It</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/GEPTypeBridgeIterator.h" line="35" column="45" bodyfile="include/SVF-FE/GEPTypeBridgeIterator.h" bodystart="35" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classllvm_1_1generic__bridge__gep__type__iterator_1a4f13b7cccd69bdac2a4f5feff5625f01" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classllvm_1_1generic__bridge__gep__type__iterator" kindref="compound">generic_bridge_gep_type_iterator</ref></type>
        <definition>static generic_bridge_gep_type_iterator llvm::generic_bridge_gep_type_iterator&lt; ItTy &gt;::end</definition>
        <argsstring>(ItTy It)</argsstring>
        <name>end</name>
        <param>
          <type>ItTy</type>
          <declname>It</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/GEPTypeBridgeIterator.h" line="46" column="45" bodyfile="include/SVF-FE/GEPTypeBridgeIterator.h" bodystart="46" bodyend="51"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classllvm_1_1generic__bridge__gep__type__iterator_1a1f0e8716ad7ff580240f81db1228a690" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool llvm::generic_bridge_gep_type_iterator&lt; ItTy &gt;::operator==</definition>
        <argsstring>(const generic_bridge_gep_type_iterator &amp;x) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classllvm_1_1generic__bridge__gep__type__iterator" kindref="compound">generic_bridge_gep_type_iterator</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/GEPTypeBridgeIterator.h" line="53" column="10" bodyfile="include/SVF-FE/GEPTypeBridgeIterator.h" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classllvm_1_1generic__bridge__gep__type__iterator_1ab831157001de89b02c7df98a9b513e9c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool llvm::generic_bridge_gep_type_iterator&lt; ItTy &gt;::operator!=</definition>
        <argsstring>(const generic_bridge_gep_type_iterator &amp;x) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classllvm_1_1generic__bridge__gep__type__iterator" kindref="compound">generic_bridge_gep_type_iterator</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/GEPTypeBridgeIterator.h" line="58" column="10" bodyfile="include/SVF-FE/GEPTypeBridgeIterator.h" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classllvm_1_1generic__bridge__gep__type__iterator_1aef8babf0bd09f63692e99d3ec563b193" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Type *</type>
        <definition>Type* llvm::generic_bridge_gep_type_iterator&lt; ItTy &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/GEPTypeBridgeIterator.h" line="63" column="10" bodyfile="include/SVF-FE/GEPTypeBridgeIterator.h" bodystart="63" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classllvm_1_1generic__bridge__gep__type__iterator_1acc10ad7ecc64270225cb5e8f52689673" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Type *</type>
        <definition>Type* llvm::generic_bridge_gep_type_iterator&lt; ItTy &gt;::getIndexedType</definition>
        <argsstring>() const</argsstring>
        <name>getIndexedType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/GEPTypeBridgeIterator.h" line="70" column="10" bodyfile="include/SVF-FE/GEPTypeBridgeIterator.h" bodystart="70" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classllvm_1_1generic__bridge__gep__type__iterator_1a7407c9a10bc872bcf03a2a4e67c2c188" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Type *</type>
        <definition>Type* llvm::generic_bridge_gep_type_iterator&lt; ItTy &gt;::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/GEPTypeBridgeIterator.h" line="80" column="10" bodyfile="include/SVF-FE/GEPTypeBridgeIterator.h" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classllvm_1_1generic__bridge__gep__type__iterator_1a9494bbdc909dab98dd3fd23a416f3a31" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Value *</type>
        <definition>Value* llvm::generic_bridge_gep_type_iterator&lt; ItTy &gt;::getOperand</definition>
        <argsstring>() const</argsstring>
        <name>getOperand</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/GEPTypeBridgeIterator.h" line="85" column="11" bodyfile="include/SVF-FE/GEPTypeBridgeIterator.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classllvm_1_1generic__bridge__gep__type__iterator_1a4616da5f93bb639271c23f634e6e647e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classllvm_1_1generic__bridge__gep__type__iterator" kindref="compound">generic_bridge_gep_type_iterator</ref> &amp;</type>
        <definition>generic_bridge_gep_type_iterator&amp; llvm::generic_bridge_gep_type_iterator&lt; ItTy &gt;::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/GEPTypeBridgeIterator.h" line="91" column="38" bodyfile="include/SVF-FE/GEPTypeBridgeIterator.h" bodystart="91" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classllvm_1_1generic__bridge__gep__type__iterator_1a68eed6927bf5fb5cd6a6637d6c9cb300" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classllvm_1_1generic__bridge__gep__type__iterator" kindref="compound">generic_bridge_gep_type_iterator</ref></type>
        <definition>generic_bridge_gep_type_iterator llvm::generic_bridge_gep_type_iterator&lt; ItTy &gt;::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/GEPTypeBridgeIterator.h" line="110" column="38" bodyfile="include/SVF-FE/GEPTypeBridgeIterator.h" bodystart="110" bodyend="115"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>llvm::generic_bridge_gep_type_iterator&lt; ItTy &gt;</label>
        <link refid="classllvm_1_1generic__bridge__gep__type__iterator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::iterator&lt; std::forward_iterator_tag, Type *, ptrdiff_t &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>llvm::generic_bridge_gep_type_iterator&lt; ItTy &gt;</label>
        <link refid="classllvm_1_1generic__bridge__gep__type__iterator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::iterator&lt; std::forward_iterator_tag, Type *, ptrdiff_t &gt;</label>
      </node>
    </collaborationgraph>
    <location file="include/SVF-FE/GEPTypeBridgeIterator.h" line="17" column="1" bodyfile="include/SVF-FE/GEPTypeBridgeIterator.h" bodystart="18" bodyend="117"/>
    <listofallmembers>
      <member refid="classllvm_1_1generic__bridge__gep__type__iterator_1a58127812b9ab914238095883ab1fe24e" prot="private" virt="non-virtual"><scope>llvm::generic_bridge_gep_type_iterator</scope><name>AddrSpace</name></member>
      <member refid="classllvm_1_1generic__bridge__gep__type__iterator_1aabd833b8eca182f681462209c9f24f1a" prot="public" virt="non-virtual"><scope>llvm::generic_bridge_gep_type_iterator</scope><name>begin</name></member>
      <member refid="classllvm_1_1generic__bridge__gep__type__iterator_1a4d10570a7a3b75fbec9fbc9fc7d3e619" prot="public" virt="non-virtual"><scope>llvm::generic_bridge_gep_type_iterator</scope><name>begin</name></member>
      <member refid="classllvm_1_1generic__bridge__gep__type__iterator_1aa602c207fe08960b24fc496ca1d34509" prot="private" virt="non-virtual"><scope>llvm::generic_bridge_gep_type_iterator</scope><name>CurTy</name></member>
      <member refid="classllvm_1_1generic__bridge__gep__type__iterator_1a4f13b7cccd69bdac2a4f5feff5625f01" prot="public" virt="non-virtual"><scope>llvm::generic_bridge_gep_type_iterator</scope><name>end</name></member>
      <member refid="classllvm_1_1generic__bridge__gep__type__iterator_1a93f554395c6f42b26bea2ba3c70442c3" prot="private" virt="non-virtual"><scope>llvm::generic_bridge_gep_type_iterator</scope><name>generic_bridge_gep_type_iterator</name></member>
      <member refid="classllvm_1_1generic__bridge__gep__type__iterator_1acc10ad7ecc64270225cb5e8f52689673" prot="public" virt="non-virtual"><scope>llvm::generic_bridge_gep_type_iterator</scope><name>getIndexedType</name></member>
      <member refid="classllvm_1_1generic__bridge__gep__type__iterator_1a9494bbdc909dab98dd3fd23a416f3a31" prot="public" virt="non-virtual"><scope>llvm::generic_bridge_gep_type_iterator</scope><name>getOperand</name></member>
      <member refid="classllvm_1_1generic__bridge__gep__type__iterator_1ab831157001de89b02c7df98a9b513e9c" prot="public" virt="non-virtual"><scope>llvm::generic_bridge_gep_type_iterator</scope><name>operator!=</name></member>
      <member refid="classllvm_1_1generic__bridge__gep__type__iterator_1aef8babf0bd09f63692e99d3ec563b193" prot="public" virt="non-virtual"><scope>llvm::generic_bridge_gep_type_iterator</scope><name>operator*</name></member>
      <member refid="classllvm_1_1generic__bridge__gep__type__iterator_1a4616da5f93bb639271c23f634e6e647e" prot="public" virt="non-virtual"><scope>llvm::generic_bridge_gep_type_iterator</scope><name>operator++</name></member>
      <member refid="classllvm_1_1generic__bridge__gep__type__iterator_1a68eed6927bf5fb5cd6a6637d6c9cb300" prot="public" virt="non-virtual"><scope>llvm::generic_bridge_gep_type_iterator</scope><name>operator++</name></member>
      <member refid="classllvm_1_1generic__bridge__gep__type__iterator_1a7407c9a10bc872bcf03a2a4e67c2c188" prot="public" virt="non-virtual"><scope>llvm::generic_bridge_gep_type_iterator</scope><name>operator-&gt;</name></member>
      <member refid="classllvm_1_1generic__bridge__gep__type__iterator_1a1f0e8716ad7ff580240f81db1228a690" prot="public" virt="non-virtual"><scope>llvm::generic_bridge_gep_type_iterator</scope><name>operator==</name></member>
      <member refid="classllvm_1_1generic__bridge__gep__type__iterator_1aa3fd4dca27e09df9ee726879624ae47e" prot="private" virt="non-virtual"><scope>llvm::generic_bridge_gep_type_iterator</scope><name>OpIt</name></member>
      <member refid="classllvm_1_1generic__bridge__gep__type__iterator_1aba9aa299a72307833598eca0ade33504" prot="private" virt="non-virtual"><scope>llvm::generic_bridge_gep_type_iterator</scope><name>super</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
