<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_m_t_a_annotator" kind="class" language="C++" prot="public">
    <compoundname>SVF::MTAAnnotator</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_annotator" prot="public" virt="non-virtual">SVF::Annotator</basecompoundref>
    <includes refid="_m_t_a_annotator_8h" local="no">MTAAnnotator.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_m_t_a_annotator_1a95f4607624dac40e9d62f37e6b16fcf0" prot="public" static="no">
        <type>Set&lt; const Instruction * &gt;</type>
        <definition>typedef Set&lt;const Instruction*&gt; SVF::MTAAnnotator::InstSet</definition>
        <argsstring></argsstring>
        <name>InstSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="25" column="17" bodyfile="include/MTA/MTAAnnotator.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_m_t_a_annotator_1a94d7a3fd9166126c052fca28f9a4c825" prot="private" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_m_h_p" kindref="compound">MHP</ref> *</type>
        <definition>MHP* SVF::MTAAnnotator::mhp</definition>
        <argsstring></argsstring>
        <name>mhp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="85" column="9" bodyfile="include/MTA/MTAAnnotator.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_m_t_a_annotator_1a42a5c0eac879be5e300583aa7d07beb0" prot="private" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_lock_analysis" kindref="compound">LockAnalysis</ref> *</type>
        <definition>LockAnalysis* SVF::MTAAnnotator::lsa</definition>
        <argsstring></argsstring>
        <name>lsa</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="86" column="18" bodyfile="include/MTA/MTAAnnotator.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_m_t_a_annotator_1a469851829bf1105fe8faac44b4abbfdd" prot="private" static="no" mutable="no">
        <type>InstSet</type>
        <definition>InstSet SVF::MTAAnnotator::loadset</definition>
        <argsstring></argsstring>
        <name>loadset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="87" column="13" bodyfile="include/MTA/MTAAnnotator.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_m_t_a_annotator_1a37df9f2416685c535be2faa01e162f3a" prot="private" static="no" mutable="no">
        <type>InstSet</type>
        <definition>InstSet SVF::MTAAnnotator::storeset</definition>
        <argsstring></argsstring>
        <name>storeset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="88" column="13" bodyfile="include/MTA/MTAAnnotator.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_m_t_a_annotator_1aa0149b932b4148b14b36e2c5cf9b614b" prot="public" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::MTAAnnotator::numOfAllSt</definition>
        <argsstring></argsstring>
        <name>numOfAllSt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="95" column="11" bodyfile="include/MTA/MTAAnnotator.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_m_t_a_annotator_1a5c1743a40d54fdbde2f9dadb612de608" prot="public" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::MTAAnnotator::numOfAllLd</definition>
        <argsstring></argsstring>
        <name>numOfAllLd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="96" column="11" bodyfile="include/MTA/MTAAnnotator.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_m_t_a_annotator_1a3c07f9964623b3895b1bab59a63dccfb" prot="public" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::MTAAnnotator::numOfNonLocalSt</definition>
        <argsstring></argsstring>
        <name>numOfNonLocalSt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="97" column="11" bodyfile="include/MTA/MTAAnnotator.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_m_t_a_annotator_1ad53ac0cec797f84d3bc14bdb6bab1ab3" prot="public" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::MTAAnnotator::numOfNonLocalLd</definition>
        <argsstring></argsstring>
        <name>numOfNonLocalLd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="98" column="11" bodyfile="include/MTA/MTAAnnotator.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_m_t_a_annotator_1a71178ddc585c9ca7c9e5c3b52378cd7d" prot="public" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::MTAAnnotator::numOfAliasSt</definition>
        <argsstring></argsstring>
        <name>numOfAliasSt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="99" column="11" bodyfile="include/MTA/MTAAnnotator.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_m_t_a_annotator_1aa1572c2a9f260ff66c9da661fd669a5f" prot="public" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::MTAAnnotator::numOfAliasLd</definition>
        <argsstring></argsstring>
        <name>numOfAliasLd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="100" column="11" bodyfile="include/MTA/MTAAnnotator.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_m_t_a_annotator_1a3a53e90b4f361d1298983bc89795b3d2" prot="public" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::MTAAnnotator::numOfMHPSt</definition>
        <argsstring></argsstring>
        <name>numOfMHPSt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="101" column="11" bodyfile="include/MTA/MTAAnnotator.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_m_t_a_annotator_1a29e0123620ab072fddc45331c6aa46e8" prot="public" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::MTAAnnotator::numOfMHPLd</definition>
        <argsstring></argsstring>
        <name>numOfMHPLd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="102" column="11" bodyfile="include/MTA/MTAAnnotator.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_m_t_a_annotator_1afbb8c25a126362ab0a4101866b4fc0ee" prot="public" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::MTAAnnotator::numOfAnnotatedSt</definition>
        <argsstring></argsstring>
        <name>numOfAnnotatedSt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="103" column="11" bodyfile="include/MTA/MTAAnnotator.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_m_t_a_annotator_1a57df091dbdd4fc947cc5e7aaec123700" prot="public" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::MTAAnnotator::numOfAnnotatedLd</definition>
        <argsstring></argsstring>
        <name>numOfAnnotatedLd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="104" column="11" bodyfile="include/MTA/MTAAnnotator.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_m_t_a_annotator_1a4e10dbbb742125ebcbdc079ad647b87b" prot="public" static="yes" mutable="no">
        <type>const u32_t</type>
        <definition>const u32_t SVF::MTAAnnotator::ANNO_MHP</definition>
        <argsstring></argsstring>
        <name>ANNO_MHP</name>
        <initializer>= 0x04</initializer>
        <briefdescription>
<para>Constant INTERLEV_FLAG values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="108" column="24" bodyfile="include/MTA/MTAAnnotator.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_m_t_a_annotator_1a27f54c50256fc4a2f96fa2305ad04eb1" prot="public" static="yes" mutable="no">
        <type>const u32_t</type>
        <definition>const u32_t SVF::MTAAnnotator::ANNO_ALIAS</definition>
        <argsstring></argsstring>
        <name>ANNO_ALIAS</name>
        <initializer>= 0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="109" column="24" bodyfile="include/MTA/MTAAnnotator.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_m_t_a_annotator_1aded5add82485d493d57e293fd59bf960" prot="public" static="yes" mutable="no">
        <type>const u32_t</type>
        <definition>const u32_t SVF::MTAAnnotator::ANNO_LOCAL</definition>
        <argsstring></argsstring>
        <name>ANNO_LOCAL</name>
        <initializer>= 0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="110" column="24" bodyfile="include/MTA/MTAAnnotator.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_m_t_a_annotator_1a37ae5e04b0f5560d0f6c2f143b325cd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::MTAAnnotator::MTAAnnotator</definition>
        <argsstring>()</argsstring>
        <name>MTAAnnotator</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="27" column="5" bodyfile="include/MTA/MTAAnnotator.h" bodystart="27" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_m_t_a_annotator_1a1dc12d846adf07265a9b6a5c2694c84d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::MTAAnnotator::~MTAAnnotator</definition>
        <argsstring>()</argsstring>
        <name>~MTAAnnotator</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="41" column="13" bodyfile="include/MTA/MTAAnnotator.h" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_m_t_a_annotator_1a5513a9f2a5b89ab5f90549552fb2b20f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MTAAnnotator::annotateDRCheck</definition>
        <argsstring>(Instruction *inst)</argsstring>
        <name>annotateDRCheck</name>
        <param>
          <type>Instruction *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Annotation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>memcpy and memset is not annotated</para>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="47" column="10" bodyfile="lib/MTA/MTAAnnotator.cpp" bodystart="17" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_m_t_a_annotator_1a108616cc98f15af3010ca45b91f32c04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MTAAnnotator::initialize</definition>
        <argsstring>(MHP *mhp, LockAnalysis *lsa)</argsstring>
        <name>initialize</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_m_h_p" kindref="compound">MHP</ref> *</type>
          <declname>mhp</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_lock_analysis" kindref="compound">LockAnalysis</ref> *</type>
          <declname>lsa</declname>
        </param>
        <briefdescription>
<para>Initialize. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="51" column="10" bodyfile="lib/MTA/MTAAnnotator.cpp" bodystart="104" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_m_t_a_annotator_1af469d79fcc3bebd9360f72696a242d4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MTAAnnotator::pruneThreadLocal</definition>
        <argsstring>(PointerAnalysis *pta)</argsstring>
        <name>pruneThreadLocal</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_pointer_analysis" kindref="compound">PointerAnalysis</ref> *</type>
          <declname>pta</declname>
        </param>
        <briefdescription>
<para>Prune candidate instructions that are thread local. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>find fork arguments&apos; objects</para>
<para>find global pointer-to objects</para>
<para>find all non-local objects that are transitively pointed by global and fork arguments.</para>
<para>compute all store and load instructions that may operate a non-local object.</para>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="54" column="10" bodyfile="lib/MTA/MTAAnnotator.cpp" bodystart="113" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_m_t_a_annotator_1a0ed08b6a94483a750c95eef6c2523dc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MTAAnnotator::pruneAliasMHP</definition>
        <argsstring>(PointerAnalysis *pta)</argsstring>
        <name>pruneAliasMHP</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_pointer_analysis" kindref="compound">PointerAnalysis</ref> *</type>
          <declname>pta</declname>
        </param>
        <briefdescription>
<para>Prune candidate instructions that non-mhp and non-alias with others. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>if it1 == it2, mhp analysis will annotate it1 that locates in loop or recursion. but alias analysis fails to determine whether it1 is in loop or recursion, that means all store instructions will be annotated by alias analysis to guarantee sound.</para>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="57" column="10" bodyfile="lib/MTA/MTAAnnotator.cpp" bodystart="199" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_m_t_a_annotator_1a4e25b3ef3e4e91f14c35841d0138d888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MTAAnnotator::performAnnotate</definition>
        <argsstring>()</argsstring>
        <name>performAnnotate</name>
        <briefdescription>
<para>Perform annotation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="60" column="10" bodyfile="lib/MTA/MTAAnnotator.cpp" bodystart="269" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_m_t_a_annotator_1ab84e4295f1137090bdf9e0608a4c2077" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MTAAnnotator::collectLoadStoreInst</definition>
        <argsstring>(SVFModule *mod)</argsstring>
        <name>collectLoadStoreInst</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_s_v_f_module" kindref="compound">SVFModule</ref> *</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
<para>Collect all load and store instruction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="63" column="10" bodyfile="lib/MTA/MTAAnnotator.cpp" bodystart="36" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_m_t_a_annotator_1a49434afd0d7beb9f5d6580e8f672889c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const Value *</type>
        <definition>const Value * MTAAnnotator::getStoreOperand</definition>
        <argsstring>(const Instruction *inst)</argsstring>
        <name>getStoreOperand</name>
        <param>
          <type>const Instruction *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Get operand of store and load. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="66" column="17" bodyfile="lib/MTA/MTAAnnotator.cpp" bodystart="71" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_m_t_a_annotator_1a399e53d065bc34af428a1ba89a04972b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const Value *</type>
        <definition>const Value * MTAAnnotator::getLoadOperand</definition>
        <argsstring>(const Instruction *inst)</argsstring>
        <name>getLoadOperand</name>
        <param>
          <type>const Instruction *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="67" column="17" bodyfile="lib/MTA/MTAAnnotator.cpp" bodystart="89" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_m_t_a_annotator_1a36eb47b716c3b44ba5c459052bb0ed93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::MTAAnnotator::isMemset</definition>
        <argsstring>(const Instruction *I)</argsstring>
        <name>isMemset</name>
        <param>
          <type>const Instruction *</type>
          <declname>I</declname>
        </param>
        <briefdescription>
<para>Check if Function &quot;F&quot; is memset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="71" column="17" bodyfile="include/MTA/MTAAnnotator.h" bodystart="71" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_m_t_a_annotator_1aee9e5ebac543d9a2aab511410b047898" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::MTAAnnotator::isMemcpy</definition>
        <argsstring>(const Instruction *I)</argsstring>
        <name>isMemcpy</name>
        <param>
          <type>const Instruction *</type>
          <declname>I</declname>
        </param>
        <briefdescription>
<para>Check if Function &quot;F&quot; is memcpy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/MTAAnnotator.h" line="78" column="17" bodyfile="include/MTA/MTAAnnotator.h" bodystart="78" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_s_v_f_1_1_m_t_a" kindref="compound">MTA</ref> annotation </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>SVF::Annotator</label>
        <link refid="class_s_v_f_1_1_annotator"/>
      </node>
      <node id="1">
        <label>SVF::MTAAnnotator</label>
        <link refid="class_s_v_f_1_1_m_t_a_annotator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>SVF::Annotator</label>
        <link refid="class_s_v_f_1_1_annotator"/>
      </node>
      <node id="1">
        <label>SVF::MTAAnnotator</label>
        <link refid="class_s_v_f_1_1_m_t_a_annotator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/MTA/MTAAnnotator.h" line="21" column="1" bodyfile="include/MTA/MTAAnnotator.h" bodystart="22" bodyend="112"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_annotator_1ad1424270d91f70dee1461b6301ce8091" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>addMDTag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1ade321f69e1a727f1be15860e01effa43" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>addMDTag</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a27f54c50256fc4a2f96fa2305ad04eb1" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>ANNO_ALIAS</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1aded5add82485d493d57e293fd59bf960" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>ANNO_LOCAL</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a4e10dbbb742125ebcbdc079ad647b87b" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>ANNO_MHP</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a5513a9f2a5b89ab5f90549552fb2b20f" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>annotateDRCheck</name></member>
      <member refid="class_s_v_f_1_1_annotator_1aa72e6952df50b5b36f0e0fed4024055f" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>Annotator</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1ab84e4295f1137090bdf9e0608a4c2077" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>collectLoadStoreInst</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a64fa6f1cac79c47c66b16ac29d2ac3f4" prot="protected" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>DR_CHECK</name></member>
      <member refid="class_s_v_f_1_1_annotator_1af220da6fe6fc879d15cc34ab397c5ba1" prot="protected" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>DR_NOT_CHECK</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a399e53d065bc34af428a1ba89a04972b" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>getLoadOperand</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a49434afd0d7beb9f5d6580e8f672889c" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>getStoreOperand</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a6e958c20d7809545b026eb5246444711" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>hasDRCheckFlag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1abc2d4a40ac8a0d70428b5066266f861c" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>hasDRCheckFlag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1ad78f6de28e5474614f16707e1c599f48" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>hasDRNotCheckFlag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a11d7bfcb525e4fb74e3031dd9a2635fe" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>hasDRNotCheckFlag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1acbb2e202ab3fb864e70eac6b41c3899e" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>hasSBSinkFlag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a3fb284999931900d92e60104980648ef" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>hasSBSourceFlag</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a108616cc98f15af3010ca45b91f32c04" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>initialize</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a95f4607624dac40e9d62f37e6b16fcf0" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>InstSet</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1aee9e5ebac543d9a2aab511410b047898" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>isMemcpy</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a36eb47b716c3b44ba5c459052bb0ed93" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>isMemset</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a469851829bf1105fe8faac44b4abbfdd" prot="private" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>loadset</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a42a5c0eac879be5e300583aa7d07beb0" prot="private" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>lsa</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a94d7a3fd9166126c052fca28f9a4c825" prot="private" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>mhp</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a37ae5e04b0f5560d0f6c2f143b325cd4" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>MTAAnnotator</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1aa1572c2a9f260ff66c9da661fd669a5f" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>numOfAliasLd</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a71178ddc585c9ca7c9e5c3b52378cd7d" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>numOfAliasSt</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a5c1743a40d54fdbde2f9dadb612de608" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>numOfAllLd</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1aa0149b932b4148b14b36e2c5cf9b614b" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>numOfAllSt</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a57df091dbdd4fc947cc5e7aaec123700" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>numOfAnnotatedLd</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1afbb8c25a126362ab0a4101866b4fc0ee" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>numOfAnnotatedSt</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a29e0123620ab072fddc45331c6aa46e8" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>numOfMHPLd</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a3a53e90b4f361d1298983bc89795b3d2" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>numOfMHPSt</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1ad53ac0cec797f84d3bc14bdb6bab1ab3" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>numOfNonLocalLd</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a3c07f9964623b3895b1bab59a63dccfb" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>numOfNonLocalSt</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a4e25b3ef3e4e91f14c35841d0138d888" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>performAnnotate</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a0ed08b6a94483a750c95eef6c2523dc6" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>pruneAliasMHP</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1af469d79fcc3bebd9360f72696a242d4e" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>pruneThreadLocal</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a35dabd3a84615e730b34f568623ad8f5" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>removeMDTag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a676a5c9b425e13f17fa73879c72787a6" prot="public" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>removeMDTag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1ac58473072d90baa6dc377b45f18d0da5" prot="protected" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>SB_FESIBLE</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a556138c152d52921d6f0a709a826a93a" prot="protected" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>SB_INFESIBLE</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a3edacb8703c74abf42c4a29761a3437f" prot="protected" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>SB_SLICESINK</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a01900f5ada5948361cc18857aee26744" prot="protected" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>SB_SLICESOURCE</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a37df9f2416685c535be2faa01e162f3a" prot="private" virt="non-virtual"><scope>SVF::MTAAnnotator</scope><name>storeset</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a77ae10cccf9eeece8adf7dd00821e836" prot="public" virt="virtual"><scope>SVF::MTAAnnotator</scope><name>~Annotator</name></member>
      <member refid="class_s_v_f_1_1_m_t_a_annotator_1a1dc12d846adf07265a9b6a5c2694c84d" prot="public" virt="virtual"><scope>SVF::MTAAnnotator</scope><name>~MTAAnnotator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
