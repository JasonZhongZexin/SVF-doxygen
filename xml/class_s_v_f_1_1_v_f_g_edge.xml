<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_v_f_g_edge" kind="class" language="C++" prot="public">
    <compoundname>SVF::VFGEdge</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_generic_edge" prot="public" virt="non-virtual">SVF::GenericEdge&lt; VFGNode &gt;</basecompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_direct_s_v_f_g_edge" prot="public" virt="non-virtual">SVF::DirectSVFGEdge</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_indirect_s_v_f_g_edge" prot="public" virt="non-virtual">SVF::IndirectSVFGEdge</derivedcompoundref>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5" prot="public" static="no" strong="no">
        <type></type>
        <name>VFGEdgeK</name>
        <enumvalue id="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5a08201e6cbff4817e44568747a966b71d" prot="public">
          <name>IntraDirectVF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5aa80551154bcfbfa84f02df32ead6b1b0" prot="public">
          <name>IntraIndirectVF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5a8383c27feab3f1acc67cacef9744c04a" prot="public">
          <name>CallDirVF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5a8288c583cfcbfdf9aa2ac2103c0e7191" prot="public">
          <name>RetDirVF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5a978c857fcc06d2f988bc9ce16ce10145" prot="public">
          <name>CallIndVF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5ac8124172b3f5f7fc94e895f6b192b668" prot="public">
          <name>RetIndVF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5aae3168b6bc9141e4a1f3723eae4f3375" prot="public">
          <name>TheadMHPIndirectVF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>seven types of <ref refid="class_s_v_f_1_1_i_c_f_g" kindref="compound">ICFG</ref> edge four types of direct value-flow edges three types of indirect value-flow edges </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGEdge.h" line="51" column="5" bodyfile="include/Graphs/VFGEdge.h" bodystart="52" bodyend="60"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_v_f_g_edge_1ae77e57aa36ed43fe83efa4c90a84688f" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5" kindref="member">VFGEdgeK</ref></type>
        <definition>typedef VFGEdgeK SVF::VFGEdge::SVFGEdgeK</definition>
        <argsstring></argsstring>
        <name>SVFGEdgeK</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGEdge.h" line="62" column="22" bodyfile="include/Graphs/VFGEdge.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_v_f_g_edge_1a54e8b1d339da481222292e3b62d1e765" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_node" kindref="compound">GenericNode</ref>&lt; <ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">VFGNode</ref>, <ref refid="class_s_v_f_1_1_v_f_g_edge" kindref="compound">VFGEdge</ref> &gt;::GEdgeSetTy</type>
        <definition>typedef GenericNode&lt;VFGNode,VFGEdge&gt;::GEdgeSetTy SVF::VFGEdge::VFGEdgeSetTy</definition>
        <argsstring></argsstring>
        <name>VFGEdgeSetTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGEdge.h" line="117" column="38" bodyfile="include/Graphs/VFGEdge.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_v_f_g_edge_1a557334ef75bb5479b045f68c27b38701" prot="public" static="no">
        <type>VFGEdgeSetTy</type>
        <definition>typedef VFGEdgeSetTy SVF::VFGEdge::SVFGEdgeSetTy</definition>
        <argsstring></argsstring>
        <name>SVFGEdgeSetTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGEdge.h" line="118" column="26" bodyfile="include/Graphs/VFGEdge.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_v_f_g_edge_1a9a29abd99da3465e07bd62470bd9bb56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::VFGEdge::VFGEdge</definition>
        <argsstring>(VFGNode *s, VFGNode *d, GEdgeFlag k)</argsstring>
        <name>VFGEdge</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">VFGNode</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">VFGNode</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_generic_edge_1aab8892b73370c32b48621cd1d0cce614" kindref="member">GEdgeFlag</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGEdge.h" line="66" column="5" bodyfile="include/Graphs/VFGEdge.h" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_v_f_g_edge_1a35e826ecdbdc55cb72aaec6c91419b0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::VFGEdge::~VFGEdge</definition>
        <argsstring>()</argsstring>
        <name>~VFGEdge</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGEdge.h" line="70" column="5" bodyfile="include/Graphs/VFGEdge.h" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_v_f_g_edge_1a8777555f00696706de250159b920d14b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::VFGEdge::isDirectVFGEdge</definition>
        <argsstring>() const</argsstring>
        <name>isDirectVFGEdge</name>
        <briefdescription>
<para>Get methods of the components. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGEdge.h" line="76" column="17" bodyfile="include/Graphs/VFGEdge.h" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_v_f_g_edge_1aa8f30d093d4950724a6688707326b57b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::VFGEdge::isIndirectVFGEdge</definition>
        <argsstring>() const</argsstring>
        <name>isIndirectVFGEdge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGEdge.h" line="80" column="17" bodyfile="include/Graphs/VFGEdge.h" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_v_f_g_edge_1a4352297ef44c4eff1efe2f348cce6fe9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::VFGEdge::isCallVFGEdge</definition>
        <argsstring>() const</argsstring>
        <name>isCallVFGEdge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGEdge.h" line="84" column="17" bodyfile="include/Graphs/VFGEdge.h" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_v_f_g_edge_1a3937eef974c3953f1d1e7d64c5a24ff3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::VFGEdge::isRetVFGEdge</definition>
        <argsstring>() const</argsstring>
        <name>isRetVFGEdge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGEdge.h" line="88" column="17" bodyfile="include/Graphs/VFGEdge.h" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_v_f_g_edge_1a92e3da59f7f5a693945b9a93f169da04" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::VFGEdge::isCallDirectVFGEdge</definition>
        <argsstring>() const</argsstring>
        <name>isCallDirectVFGEdge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGEdge.h" line="92" column="17" bodyfile="include/Graphs/VFGEdge.h" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_v_f_g_edge_1a49cbf2a714c9b965b19452d266cd8bdf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::VFGEdge::isRetDirectVFGEdge</definition>
        <argsstring>() const</argsstring>
        <name>isRetDirectVFGEdge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGEdge.h" line="96" column="17" bodyfile="include/Graphs/VFGEdge.h" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_v_f_g_edge_1ae14a5f58064e6c08b53a3cffcc050077" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::VFGEdge::isCallIndirectVFGEdge</definition>
        <argsstring>() const</argsstring>
        <name>isCallIndirectVFGEdge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGEdge.h" line="100" column="17" bodyfile="include/Graphs/VFGEdge.h" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_v_f_g_edge_1ad0df7ea2de8de5607229dfcdd7b70b87" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::VFGEdge::isRetIndirectVFGEdge</definition>
        <argsstring>() const</argsstring>
        <name>isRetIndirectVFGEdge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGEdge.h" line="104" column="17" bodyfile="include/Graphs/VFGEdge.h" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_v_f_g_edge_1a5d2668f46a709eb179007a296d94b77b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::VFGEdge::isIntraVFGEdge</definition>
        <argsstring>() const</argsstring>
        <name>isIntraVFGEdge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGEdge.h" line="108" column="17" bodyfile="include/Graphs/VFGEdge.h" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_v_f_g_edge_1ace832abe1ec87e3e2338944061d09ea4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::VFGEdge::isThreadMHPIndirectVFGEdge</definition>
        <argsstring>() const</argsstring>
        <name>isThreadMHPIndirectVFGEdge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGEdge.h" line="112" column="17" bodyfile="include/Graphs/VFGEdge.h" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_v_f_g_edge_1a8f4bec008af7cd1a89870715eaa91a7b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::string</type>
        <definition>const std::string VFGEdge::toString</definition>
        <argsstring>() const</argsstring>
        <name>toString</name>
        <reimplementedby refid="class_s_v_f_1_1_indirect_s_v_f_g_edge_1a33e6221e5005fda68903f4cdadf58ce8">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_intra_ind_s_v_f_g_edge_1ae148fda488b6505a6cc4103aae30e291">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_call_ind_s_v_f_g_edge_1a06cc5ba2c5be41bf38e4fad0c031138e">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_ret_ind_s_v_f_g_edge_1a58502c0881d2d8dccf9dd09385e08dc5">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_thread_m_h_p_ind_s_v_f_g_edge_1a09b7fef74030eecc6fa7b83a15c12521">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_direct_s_v_f_g_edge_1aa8d70214eb0242c3f2baaa506c12852c">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_intra_dir_s_v_f_g_edge_1a1c8dc17717409aa42749181aafd155aa">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_call_dir_s_v_f_g_edge_1af07decd05375f56baa4a1c4fe70bc3f1">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_ret_dir_s_v_f_g_edge_1a6282c2619d843cf90575886a0ef81edf">toString</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGEdge.h" line="134" column="31" bodyfile="lib/Graphs/VFG.cpp" bodystart="248" bodyend="253"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_s_v_f_1_1_v_f_g_edge_1a30c07e8afb0853d4b46cfa722d912650" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_generic_edge_1aab8892b73370c32b48621cd1d0cce614" kindref="member">GEdgeFlag</ref></type>
        <definition>static GEdgeFlag SVF::VFGEdge::makeEdgeFlagWithInvokeID</definition>
        <argsstring>(GEdgeKind k, CallSiteID cs)</argsstring>
        <name>makeEdgeFlagWithInvokeID</name>
        <param>
          <type>GEdgeKind</type>
          <declname>k</declname>
        </param>
        <param>
          <type>CallSiteID</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
<para>Compute the unique edgeFlag value from edge kind and CallSiteID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGEdge.h" line="120" column="29" bodyfile="include/Graphs/VFGEdge.h" bodystart="120" bodyend="123"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_s_v_f_1_1_v_f_g_edge_1a99d90686fe65a24f861520e7efcca476" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_s_v_f_1a424cc053c29ad7303699c529d1a2cc71" kindref="member">raw_ostream</ref> &amp;</type>
        <definition>raw_ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(raw_ostream &amp;o, const VFGEdge &amp;edge)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="namespace_s_v_f_1a424cc053c29ad7303699c529d1a2cc71" kindref="member">raw_ostream</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_v_f_g_edge" kindref="compound">VFGEdge</ref> &amp;</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
<para>Overloading operator &lt;&lt; for dumping <ref refid="class_s_v_f_1_1_i_c_f_g" kindref="compound">ICFG</ref> node ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGEdge.h" line="127" column="12" bodyfile="include/Graphs/VFGEdge.h" bodystart="127" bodyend="131"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>SVF::RetDirSVFGEdge</label>
        <link refid="class_s_v_f_1_1_ret_dir_s_v_f_g_edge"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>SVF::IntraDirSVFGEdge</label>
        <link refid="class_s_v_f_1_1_intra_dir_s_v_f_g_edge"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>SVF::IntraIndSVFGEdge</label>
        <link refid="class_s_v_f_1_1_intra_ind_s_v_f_g_edge"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GenericVFGEdgeTy</label>
        <link refid="class_s_v_f_1_1_generic_edge"/>
      </node>
      <node id="3">
        <label>SVF::DirectSVFGEdge</label>
        <link refid="class_s_v_f_1_1_direct_s_v_f_g_edge"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>SVF::RetIndSVFGEdge</label>
        <link refid="class_s_v_f_1_1_ret_ind_s_v_f_g_edge"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>SVF::CallDirSVFGEdge</label>
        <link refid="class_s_v_f_1_1_call_dir_s_v_f_g_edge"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>SVF::CallIndSVFGEdge</label>
        <link refid="class_s_v_f_1_1_call_ind_s_v_f_g_edge"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>SVF::ThreadMHPIndSVFGEdge</label>
        <link refid="class_s_v_f_1_1_thread_m_h_p_ind_s_v_f_g_edge"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>SVF::IndirectSVFGEdge</label>
        <link refid="class_s_v_f_1_1_indirect_s_v_f_g_edge"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>SVF::VFGEdge</label>
        <link refid="class_s_v_f_1_1_v_f_g_edge"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>GenericVFGEdgeTy</label>
        <link refid="class_s_v_f_1_1_generic_edge"/>
      </node>
      <node id="1">
        <label>SVF::VFGEdge</label>
        <link refid="class_s_v_f_1_1_v_f_g_edge"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/Graphs/VFGEdge.h" line="44" column="1" bodyfile="include/Graphs/VFGEdge.h" bodystart="45" bodyend="135"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5a8383c27feab3f1acc67cacef9744c04a" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>CallDirVF</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5a978c857fcc06d2f988bc9ce16ce10145" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>CallIndVF</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a93dec4c27088242a4b1b6aa82cea46b9" prot="protected" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>EdgeKindMask</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1af1c2fd4b5ef1d7b7605572bf2489c298" prot="protected" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>EdgeKindMaskBits</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1aab8892b73370c32b48621cd1d0cce614" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>GEdgeFlag</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a7eb93c9018c80057672a8ce71615dc0d" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>GEdgeKind</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a6764973569c281d483afab17a75cb4dc" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>GenericEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1ad9edb45e74ae675d9da82f5acf02d56e" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>getDstID</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1aeaa31a2c8479e831b36ce2e2582ceb86" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>getDstNode</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1abe8525c542def8162b094c169a01993b" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>getEdgeKind</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1ae6792506a0150a9400d635eceab7f9e7" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>getSrcID</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1ab47ca533c415841ef75456cbad439589" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>getSrcNode</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5a08201e6cbff4817e44568747a966b71d" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>IntraDirectVF</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5aa80551154bcfbfa84f02df32ead6b1b0" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>IntraIndirectVF</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a92e3da59f7f5a693945b9a93f169da04" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>isCallDirectVFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1ae14a5f58064e6c08b53a3cffcc050077" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>isCallIndirectVFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a4352297ef44c4eff1efe2f348cce6fe9" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>isCallVFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a8777555f00696706de250159b920d14b" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>isDirectVFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1aa8f30d093d4950724a6688707326b57b" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>isIndirectVFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a5d2668f46a709eb179007a296d94b77b" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>isIntraVFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a49cbf2a714c9b965b19452d266cd8bdf" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>isRetDirectVFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1ad0df7ea2de8de5607229dfcdd7b70b87" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>isRetIndirectVFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a3937eef974c3953f1d1e7d64c5a24ff3" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>isRetVFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1ace832abe1ec87e3e2338944061d09ea4" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>isThreadMHPIndirectVFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a30c07e8afb0853d4b46cfa722d912650" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>makeEdgeFlagWithInvokeID</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1aff95460d4b859e657a9198b7c5e5c736" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>NodeType</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a99d90686fe65a24f861520e7efcca476" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a88b2086dcebb60bc86bca0fb94f49fca" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>operator==</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5a8288c583cfcbfdf9aa2ac2103c0e7191" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>RetDirVF</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5ac8124172b3f5f7fc94e895f6b192b668" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>RetIndVF</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1ae77e57aa36ed43fe83efa4c90a84688f" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>SVFGEdgeK</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a557334ef75bb5479b045f68c27b38701" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>SVFGEdgeSetTy</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5aae3168b6bc9141e4a1f3723eae4f3375" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>TheadMHPIndirectVF</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a8f4bec008af7cd1a89870715eaa91a7b" prot="public" virt="virtual"><scope>SVF::VFGEdge</scope><name>toString</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a9a29abd99da3465e07bd62470bd9bb56" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>VFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>VFGEdgeK</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a54e8b1d339da481222292e3b62d1e765" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>VFGEdgeSetTy</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a548daea0cac6491de91d4840b7297741" prot="public" virt="virtual"><scope>SVF::VFGEdge</scope><name>~GenericEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a35e826ecdbdc55cb72aaec6c91419b0d" prot="public" virt="non-virtual"><scope>SVF::VFGEdge</scope><name>~VFGEdge</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
