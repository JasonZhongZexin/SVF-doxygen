<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_p_t_a_call_graph_edge" kind="class" language="C++" prot="public">
    <compoundname>SVF::PTACallGraphEdge</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_generic_edge" prot="public" virt="non-virtual">SVF::GenericEdge&lt; PTACallGraphNode &gt;</basecompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_hare_par_for_edge" prot="public" virt="non-virtual">SVF::HareParForEdge</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_thread_fork_edge" prot="public" virt="non-virtual">SVF::ThreadForkEdge</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_thread_join_edge" prot="public" virt="non-virtual">SVF::ThreadJoinEdge</derivedcompoundref>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1a9738544725458bb022b8d5f2dbd281f7" prot="public" static="no" strong="no">
        <type></type>
        <name>CEDGEK</name>
        <enumvalue id="class_s_v_f_1_1_p_t_a_call_graph_edge_1a9738544725458bb022b8d5f2dbd281f7aa968b68fb87a0135833105f4e6413c69" prot="public">
          <name>CallRetEdge</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_p_t_a_call_graph_edge_1a9738544725458bb022b8d5f2dbd281f7af32caf15ca19d512b5183bcf0d859cd7" prot="public">
          <name>TDForkEdge</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_p_t_a_call_graph_edge_1a9738544725458bb022b8d5f2dbd281f7a2d65840140263a0808f5b9d553a4bff5" prot="public">
          <name>TDJoinEdge</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_p_t_a_call_graph_edge_1a9738544725458bb022b8d5f2dbd281f7a17e0d58fd42d0d493087e698d4ecd838" prot="public">
          <name>HareParForEdge</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="56" column="5" bodyfile="include/Graphs/PTACallGraph.h" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1aca11d1b778309a72e9d345bd02324459" prot="public" static="no">
        <type>Set&lt; const <ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref> * &gt;</type>
        <definition>typedef Set&lt;const CallBlockNode*&gt; SVF::PTACallGraphEdge::CallInstSet</definition>
        <argsstring></argsstring>
        <name>CallInstSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="55" column="17" bodyfile="include/Graphs/PTACallGraph.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1aa96d6bc3ffd3a5537b871a4c87c65888" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_node" kindref="compound">GenericNode</ref>&lt; <ref refid="class_s_v_f_1_1_p_t_a_call_graph_node" kindref="compound">PTACallGraphNode</ref>, <ref refid="class_s_v_f_1_1_p_t_a_call_graph_edge" kindref="compound">PTACallGraphEdge</ref> &gt;::GEdgeSetTy</type>
        <definition>typedef GenericNode&lt;PTACallGraphNode,PTACallGraphEdge&gt;::GEdgeSetTy SVF::PTACallGraphEdge::CallGraphEdgeSet</definition>
        <argsstring></argsstring>
        <name>CallGraphEdgeSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="166" column="38" bodyfile="include/Graphs/PTACallGraph.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1a2f3e4b61225c4ca37b0f70e3edc61920" prot="private" static="no" mutable="no">
        <type>CallInstSet</type>
        <definition>CallInstSet SVF::PTACallGraphEdge::directCalls</definition>
        <argsstring></argsstring>
        <name>directCalls</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="63" column="17" bodyfile="include/Graphs/PTACallGraph.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1a66491523e4ccfdf2ff57e10cfd6f3074" prot="private" static="no" mutable="no">
        <type>CallInstSet</type>
        <definition>CallInstSet SVF::PTACallGraphEdge::indirectCalls</definition>
        <argsstring></argsstring>
        <name>indirectCalls</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="64" column="17" bodyfile="include/Graphs/PTACallGraph.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1a7488c5125d55e56ec427ef0d8ee88999" prot="private" static="no" mutable="no">
        <type>CallSiteID</type>
        <definition>CallSiteID SVF::PTACallGraphEdge::csId</definition>
        <argsstring></argsstring>
        <name>csId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="65" column="16" bodyfile="include/Graphs/PTACallGraph.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1aa34123e6c62c3f152b579510c09984e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::PTACallGraphEdge::PTACallGraphEdge</definition>
        <argsstring>(PTACallGraphNode *s, PTACallGraphNode *d, CEDGEK kind, CallSiteID cs)</argsstring>
        <name>PTACallGraphEdge</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_t_a_call_graph_node" kindref="compound">PTACallGraphNode</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_t_a_call_graph_node" kindref="compound">PTACallGraphNode</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>CEDGEK</type>
          <declname>kind</declname>
        </param>
        <param>
          <type>CallSiteID</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="68" column="5" bodyfile="include/Graphs/PTACallGraph.h" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1af17fd69ee1061b7348af1b2739f145a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::PTACallGraphEdge::~PTACallGraphEdge</definition>
        <argsstring>()</argsstring>
        <name>~PTACallGraphEdge</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="73" column="13" bodyfile="include/Graphs/PTACallGraph.h" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1af9ca9cfffbba3b68838d41be62c914ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>CallSiteID</type>
        <definition>CallSiteID SVF::PTACallGraphEdge::getCallSiteID</definition>
        <argsstring>() const</argsstring>
        <name>getCallSiteID</name>
        <briefdescription>
<para>Get direct and indirect calls. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="83" column="23" bodyfile="include/Graphs/PTACallGraph.h" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1a8c46ccaa41f6792ca4a31a56548a554a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::PTACallGraphEdge::isDirectCallEdge</definition>
        <argsstring>() const</argsstring>
        <name>isDirectCallEdge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="87" column="17" bodyfile="include/Graphs/PTACallGraph.h" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1a74692d47f929dc2188eede497acb91b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::PTACallGraphEdge::isIndirectCallEdge</definition>
        <argsstring>() const</argsstring>
        <name>isIndirectCallEdge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="91" column="17" bodyfile="include/Graphs/PTACallGraph.h" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1af0e9f86be3cf263b868f80d374641fc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>CallInstSet &amp;</type>
        <definition>CallInstSet&amp; SVF::PTACallGraphEdge::getDirectCalls</definition>
        <argsstring>()</argsstring>
        <name>getDirectCalls</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="95" column="24" bodyfile="include/Graphs/PTACallGraph.h" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1a76aa19edf03a4cacfa3e27a21abfcd07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>CallInstSet &amp;</type>
        <definition>CallInstSet&amp; SVF::PTACallGraphEdge::getIndirectCalls</definition>
        <argsstring>()</argsstring>
        <name>getIndirectCalls</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="99" column="24" bodyfile="include/Graphs/PTACallGraph.h" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1a6310e7684d6b6ecd345f557eda899160" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const CallInstSet &amp;</type>
        <definition>const CallInstSet&amp; SVF::PTACallGraphEdge::getDirectCalls</definition>
        <argsstring>() const</argsstring>
        <name>getDirectCalls</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="103" column="30" bodyfile="include/Graphs/PTACallGraph.h" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1a51dbd8a7b9d0a4602215f71e3fdfee5f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const CallInstSet &amp;</type>
        <definition>const CallInstSet&amp; SVF::PTACallGraphEdge::getIndirectCalls</definition>
        <argsstring>() const</argsstring>
        <name>getIndirectCalls</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="107" column="30" bodyfile="include/Graphs/PTACallGraph.h" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1a9f2ef4c539e31e91f26a3af2ffae26de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTACallGraphEdge::addDirectCallSite</definition>
        <argsstring>(const CallBlockNode *call)</argsstring>
        <name>addDirectCallSite</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
<para>Add direct and indirect callsite. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="115" column="10" bodyfile="lib/Graphs/PTACallGraph.cpp" bodystart="45" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1aad95920da19b78c0211e68caadba6d39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PTACallGraphEdge::addInDirectCallSite</definition>
        <argsstring>(const CallBlockNode *call)</argsstring>
        <name>addInDirectCallSite</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="117" column="10" bodyfile="lib/Graphs/PTACallGraph.cpp" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1a750e50a9022451e406c4819979edffa5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>CallInstSet::const_iterator</type>
        <definition>CallInstSet::const_iterator SVF::PTACallGraphEdge::directCallsBegin</definition>
        <argsstring>() const</argsstring>
        <name>directCallsBegin</name>
        <briefdescription>
<para>Iterators for direct and indirect callsites. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="122" column="40" bodyfile="include/Graphs/PTACallGraph.h" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1acc4fcacefdc9be9a214dfcc455fe7970" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>CallInstSet::const_iterator</type>
        <definition>CallInstSet::const_iterator SVF::PTACallGraphEdge::directCallsEnd</definition>
        <argsstring>() const</argsstring>
        <name>directCallsEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="126" column="40" bodyfile="include/Graphs/PTACallGraph.h" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1afbdb582d20ab953b2de1f3efacb74679" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>CallInstSet::const_iterator</type>
        <definition>CallInstSet::const_iterator SVF::PTACallGraphEdge::indirectCallsBegin</definition>
        <argsstring>() const</argsstring>
        <name>indirectCallsBegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="131" column="40" bodyfile="include/Graphs/PTACallGraph.h" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1a494bc8bacca5ca8d266286f3fb303495" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>CallInstSet::const_iterator</type>
        <definition>CallInstSet::const_iterator SVF::PTACallGraphEdge::indirectCallsEnd</definition>
        <argsstring>() const</argsstring>
        <name>indirectCallsEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="135" column="40" bodyfile="include/Graphs/PTACallGraph.h" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1a27979e812ced26f114369b46e1536b02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::string</type>
        <definition>const std::string PTACallGraphEdge::toString</definition>
        <argsstring>() const</argsstring>
        <name>toString</name>
        <reimplementedby refid="class_s_v_f_1_1_thread_fork_edge_1acdc2ff9ad9800847b581e9d27efd3843">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_thread_join_edge_1a67b68672ef76e0a4f326f7dbbd77bbf7">toString</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="164" column="31" bodyfile="lib/Graphs/PTACallGraph.cpp" bodystart="58" bodyend="68"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1a4eaeb2765fdcc455116537dbe2119800" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_generic_edge_1aab8892b73370c32b48621cd1d0cce614" kindref="member">GEdgeFlag</ref></type>
        <definition>static GEdgeFlag SVF::PTACallGraphEdge::makeEdgeFlagWithInvokeID</definition>
        <argsstring>(GEdgeKind k, CallSiteID cs)</argsstring>
        <name>makeEdgeFlagWithInvokeID</name>
        <param>
          <type>GEdgeKind</type>
          <declname>k</declname>
        </param>
        <param>
          <type>CallSiteID</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
<para>Compute the unique edgeFlag value from edge kind and CallSiteID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="77" column="29" bodyfile="include/Graphs/PTACallGraph.h" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1adb10c32eff8a794d9f2b1b4a47d85d21" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SVF::PTACallGraphEdge::classof</definition>
        <argsstring>(const PTACallGraphEdge *)</argsstring>
        <name>classof</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_p_t_a_call_graph_edge" kindref="compound">PTACallGraphEdge</ref> *</type>
        </param>
        <briefdescription>
<para>ClassOf. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="143" column="24" bodyfile="include/Graphs/PTACallGraph.h" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1afb092fc0502837b52ebcaa3c0dedb736" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SVF::PTACallGraphEdge::classof</definition>
        <argsstring>(const GenericCallGraphEdgeTy *edge)</argsstring>
        <name>classof</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_generic_edge" kindref="compound">GenericCallGraphEdgeTy</ref> *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="147" column="24" bodyfile="include/Graphs/PTACallGraph.h" bodystart="147" bodyend="152"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_s_v_f_1_1_p_t_a_call_graph_edge_1a65b897bc0d878c6228feca008fa1fcb1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_s_v_f_1a424cc053c29ad7303699c529d1a2cc71" kindref="member">raw_ostream</ref> &amp;</type>
        <definition>raw_ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(raw_ostream &amp;o, const PTACallGraphEdge &amp;edge)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="namespace_s_v_f_1a424cc053c29ad7303699c529d1a2cc71" kindref="member">raw_ostream</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_p_t_a_call_graph_edge" kindref="compound">PTACallGraphEdge</ref> &amp;</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
<para>Overloading operator &lt;&lt; for dumping <ref refid="class_s_v_f_1_1_i_c_f_g" kindref="compound">ICFG</ref> node ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="157" column="12" bodyfile="include/Graphs/PTACallGraph.h" bodystart="157" bodyend="161"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>SVF::HareParForEdge</label>
        <link refid="class_s_v_f_1_1_hare_par_for_edge"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>SVF::PTACallGraphEdge</label>
        <link refid="class_s_v_f_1_1_p_t_a_call_graph_edge"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>SVF::ThreadJoinEdge</label>
        <link refid="class_s_v_f_1_1_thread_join_edge"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GenericCallGraphEdgeTy</label>
        <link refid="class_s_v_f_1_1_generic_edge"/>
      </node>
      <node id="4">
        <label>SVF::ThreadForkEdge</label>
        <link refid="class_s_v_f_1_1_thread_fork_edge"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>SVF::PTACallGraphEdge</label>
        <link refid="class_s_v_f_1_1_p_t_a_call_graph_edge"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GenericCallGraphEdgeTy</label>
        <link refid="class_s_v_f_1_1_generic_edge"/>
      </node>
    </collaborationgraph>
    <location file="include/Graphs/PTACallGraph.h" line="51" column="1" bodyfile="include/Graphs/PTACallGraph.h" bodystart="52" bodyend="168"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a9f2ef4c539e31e91f26a3af2ffae26de" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>addDirectCallSite</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1aad95920da19b78c0211e68caadba6d39" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>addInDirectCallSite</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1aa96d6bc3ffd3a5537b871a4c87c65888" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>CallGraphEdgeSet</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1aca11d1b778309a72e9d345bd02324459" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>CallInstSet</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a9738544725458bb022b8d5f2dbd281f7aa968b68fb87a0135833105f4e6413c69" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>CallRetEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a9738544725458bb022b8d5f2dbd281f7" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>CEDGEK</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1adb10c32eff8a794d9f2b1b4a47d85d21" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1afb092fc0502837b52ebcaa3c0dedb736" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a7488c5125d55e56ec427ef0d8ee88999" prot="private" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>csId</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a2f3e4b61225c4ca37b0f70e3edc61920" prot="private" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>directCalls</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a750e50a9022451e406c4819979edffa5" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>directCallsBegin</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1acc4fcacefdc9be9a214dfcc455fe7970" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>directCallsEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a93dec4c27088242a4b1b6aa82cea46b9" prot="protected" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>EdgeKindMask</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1af1c2fd4b5ef1d7b7605572bf2489c298" prot="protected" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>EdgeKindMaskBits</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1aab8892b73370c32b48621cd1d0cce614" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>GEdgeFlag</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a7eb93c9018c80057672a8ce71615dc0d" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>GEdgeKind</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a6764973569c281d483afab17a75cb4dc" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>GenericEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1af9ca9cfffbba3b68838d41be62c914ac" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>getCallSiteID</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1af0e9f86be3cf263b868f80d374641fc9" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>getDirectCalls</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a6310e7684d6b6ecd345f557eda899160" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>getDirectCalls</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1ad9edb45e74ae675d9da82f5acf02d56e" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>getDstID</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1aeaa31a2c8479e831b36ce2e2582ceb86" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>getDstNode</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1abe8525c542def8162b094c169a01993b" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>getEdgeKind</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a76aa19edf03a4cacfa3e27a21abfcd07" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>getIndirectCalls</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a51dbd8a7b9d0a4602215f71e3fdfee5f" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>getIndirectCalls</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1ae6792506a0150a9400d635eceab7f9e7" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>getSrcID</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1ab47ca533c415841ef75456cbad439589" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>getSrcNode</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a9738544725458bb022b8d5f2dbd281f7a17e0d58fd42d0d493087e698d4ecd838" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>HareParForEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a66491523e4ccfdf2ff57e10cfd6f3074" prot="private" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>indirectCalls</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1afbdb582d20ab953b2de1f3efacb74679" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>indirectCallsBegin</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a494bc8bacca5ca8d266286f3fb303495" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>indirectCallsEnd</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a8c46ccaa41f6792ca4a31a56548a554a" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>isDirectCallEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a74692d47f929dc2188eede497acb91b7" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>isIndirectCallEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a4eaeb2765fdcc455116537dbe2119800" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>makeEdgeFlagWithInvokeID</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1aff95460d4b859e657a9198b7c5e5c736" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>NodeType</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a65b897bc0d878c6228feca008fa1fcb1" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a88b2086dcebb60bc86bca0fb94f49fca" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>operator==</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1aa34123e6c62c3f152b579510c09984e6" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>PTACallGraphEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a9738544725458bb022b8d5f2dbd281f7af32caf15ca19d512b5183bcf0d859cd7" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>TDForkEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a9738544725458bb022b8d5f2dbd281f7a2d65840140263a0808f5b9d553a4bff5" prot="public" virt="non-virtual"><scope>SVF::PTACallGraphEdge</scope><name>TDJoinEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a27979e812ced26f114369b46e1536b02" prot="public" virt="virtual"><scope>SVF::PTACallGraphEdge</scope><name>toString</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a548daea0cac6491de91d4840b7297741" prot="public" virt="virtual"><scope>SVF::PTACallGraphEdge</scope><name>~GenericEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1af17fd69ee1061b7348af1b2739f145a9" prot="public" virt="virtual"><scope>SVF::PTACallGraphEdge</scope><name>~PTACallGraphEdge</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
