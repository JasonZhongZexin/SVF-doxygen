<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_context_d_d_a" kind="class" language="C++" prot="public">
    <compoundname>SVF::ContextDDA</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_cond_p_t_a_impl" prot="public" virt="non-virtual">SVF::CondPTAImpl&lt; ContextCond &gt;</basecompoundref>
    <basecompoundref refid="class_s_v_f_1_1_d_d_a_v_f_solver" prot="public" virt="non-virtual">SVF::DDAVFSolver&lt; CxtVar, CxtPtSet, CxtLocDPItem &gt;</basecompoundref>
    <includes refid="_context_d_d_a_8h" local="no">ContextDDA.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_context_d_d_a_1a942e79dced48bd284a58540a2fb778b9" prot="private" static="no" mutable="no">
        <type>ConstSVFGEdgeSet</type>
        <definition>ConstSVFGEdgeSet SVF::ContextDDA::insensitveEdges</definition>
        <argsstring></argsstring>
        <name>insensitveEdges</name>
        <briefdescription>
<para>insensitive call-return edges </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="194" column="22" bodyfile="include/DDA/ContextDDA.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_context_d_d_a_1a2a23f0235fc49a177b2694f668b02551" prot="private" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_flow_d_d_a" kindref="compound">FlowDDA</ref> *</type>
        <definition>FlowDDA* SVF::ContextDDA::flowDDA</definition>
        <argsstring></argsstring>
        <name>flowDDA</name>
        <briefdescription>
<para>downgrade to flowDDA if out-of-budget </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="195" column="13" bodyfile="include/DDA/ContextDDA.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_context_d_d_a_1ae3b04859ed69c47302177988aa68a70b" prot="private" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_d_d_a_client" kindref="compound">DDAClient</ref> *</type>
        <definition>DDAClient* SVF::ContextDDA::_client</definition>
        <argsstring></argsstring>
        <name>_client</name>
        <briefdescription>
<para>DDA client. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="196" column="15" bodyfile="include/DDA/ContextDDA.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_context_d_d_a_1afb57381096ffc49b2065de6d9bf00895" prot="private" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_p_t_a_c_f_info_builder" kindref="compound">PTACFInfoBuilder</ref></type>
        <definition>PTACFInfoBuilder SVF::ContextDDA::loopInfoBuilder</definition>
        <argsstring></argsstring>
        <name>loopInfoBuilder</name>
        <briefdescription>
<para>LoopInfo. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="197" column="22" bodyfile="include/DDA/ContextDDA.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1adc70126ea6583df10b52501943a2af49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ContextDDA::ContextDDA</definition>
        <argsstring>(PAG *_pag, DDAClient *client)</argsstring>
        <name>ContextDDA</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> *</type>
          <declname>_pag</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_d_d_a_client" kindref="compound">DDAClient</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="30" column="5" bodyfile="lib/DDA/ContextDDA.cpp" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1a691e26b2d370efe2aee77212f982a1ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>ContextDDA::~ContextDDA</definition>
        <argsstring>()</argsstring>
        <name>~ContextDDA</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="33" column="13" bodyfile="lib/DDA/ContextDDA.cpp" bodystart="30" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1adb9f21a86daeb2dd79537f3939c393cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ContextDDA::initialize</definition>
        <argsstring>() override</argsstring>
        <name>initialize</name>
        <reimplements refid="class_s_v_f_1_1_pointer_analysis_1a431ec4f85eb0f029e5740b92fd9ceb32">initialize</reimplements>
        <briefdescription>
<para>Initialization of the analysis. </para>
        </briefdescription>
        <detaileddescription>
<para>Analysis initialization </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="36" column="18" bodyfile="lib/DDA/ContextDDA.cpp" bodystart="40" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1ae34cd06ee3b7d763c81ec418af76d244" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::ContextDDA::finalize</definition>
        <argsstring>() override</argsstring>
        <name>finalize</name>
        <reimplements refid="class_s_v_f_1_1_cond_p_t_a_impl_1a9bdc3a50c695029a28371116ddc3ef8d">finalize</reimplements>
        <briefdescription>
<para>Finalize analysis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="39" column="25" bodyfile="include/DDA/ContextDDA.h" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1ac8fe1cb3af6048a28028f00bb87a5eba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::ContextDDA::analyze</definition>
        <argsstring>() override</argsstring>
        <name>analyze</name>
        <reimplements refid="class_s_v_f_1_1_pointer_analysis_1ae1e217dc18be0ce70bee5ad930cb54c6">analyze</reimplements>
        <briefdescription>
<para>dummy analyze method </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="45" column="18" bodyfile="include/DDA/ContextDDA.h" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1a337eb89cc5f31741ad8d840d9f284ca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ContextDDA::computeDDAPts</definition>
        <argsstring>(NodeID id) override</argsstring>
        <name>computeDDAPts</name>
        <reimplements refid="class_s_v_f_1_1_pointer_analysis_1a0bb90b398ef85504bcd816ae57bee01d">computeDDAPts</reimplements>
        <param>
          <type>NodeID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Compute points-to set for an unconditional pointer. </para>
        </briefdescription>
        <detaileddescription>
<para>Compute points-to set for an unconditional pointer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="48" column="18" bodyfile="lib/DDA/ContextDDA.cpp" bodystart="83" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1ae0f3b07267ded5f0ee879c39effff864" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CxtPtSet</ref> &amp;</type>
        <definition>const CxtPtSet &amp; ContextDDA::computeDDAPts</definition>
        <argsstring>(const CxtVar &amp;cxtVar)</argsstring>
        <name>computeDDAPts</name>
        <param>
          <type>const <ref refid="namespace_s_v_f_1ab3532a31724d8719d29aa4c3521ca215" kindref="member">CxtVar</ref> &amp;</type>
          <declname>cxtVar</declname>
          <defname>var</defname>
        </param>
        <briefdescription>
<para>Compute points-to set for a context-sensitive pointer. </para>
        </briefdescription>
        <detaileddescription>
<para>Compute points-to set for a context-sensitive pointer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="51" column="28" bodyfile="lib/DDA/ContextDDA.cpp" bodystart="53" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1a1b9bfe46777c8a57781452a05635fb02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ContextDDA::handleOutOfBudgetDpm</definition>
        <argsstring>(const CxtLocDPItem &amp;dpm)</argsstring>
        <name>handleOutOfBudgetDpm</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_cxt_stmt_d_p_item" kindref="compound">CxtLocDPItem</ref> &amp;</type>
          <declname>dpm</declname>
        </param>
        <briefdescription>
<para>Handle out-of-budget dpm. </para>
        </briefdescription>
        <detaileddescription>
<para>Handle out-of-budget dpm </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="54" column="10" bodyfile="lib/DDA/ContextDDA.cpp" bodystart="93" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1a32ce0085cb99f92f63b54df0f2ea2523" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CxtPtSet</ref></type>
        <definition>virtual CxtPtSet SVF::ContextDDA::getConservativeCPts</definition>
        <argsstring>(const CxtLocDPItem &amp;dpm) override</argsstring>
        <name>getConservativeCPts</name>
        <reimplements refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a38f5a6b666b2a427d55f1217f9c5595f">getConservativeCPts</reimplements>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_cxt_stmt_d_p_item" kindref="compound">CxtLocDPItem</ref> &amp;</type>
          <declname>dpm</declname>
        </param>
        <briefdescription>
<para>Override parent method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="57" column="22" bodyfile="include/DDA/ContextDDA.h" bodystart="57" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1a6ae16be6774994932aaa594c9b9cb397" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>NodeID</type>
        <definition>virtual NodeID SVF::ContextDDA::getPtrNodeID</definition>
        <argsstring>(const CxtVar &amp;var) const override</argsstring>
        <name>getPtrNodeID</name>
        <reimplements refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a3fa002d4ba4194ffde62ecbdd361a24d">getPtrNodeID</reimplements>
        <param>
          <type>const <ref refid="namespace_s_v_f_1ab3532a31724d8719d29aa4c3521ca215" kindref="member">CxtVar</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
<para>Override parent method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="71" column="27" bodyfile="include/DDA/ContextDDA.h" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1aa8a7b6e99b92abfa5c2404515b703a2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ContextDDA::handleBKCondition</definition>
        <argsstring>(CxtLocDPItem &amp;dpm, const SVFGEdge *edge) override</argsstring>
        <name>handleBKCondition</name>
        <reimplements refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a601282325e55badc15f3ba9141816af5">handleBKCondition</reimplements>
        <param>
          <type><ref refid="class_s_v_f_1_1_cxt_stmt_d_p_item" kindref="compound">CxtLocDPItem</ref> &amp;</type>
          <declname>dpm</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_v_f_g_edge" kindref="compound">SVFGEdge</ref> *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
<para>Handle condition for context or path analysis (backward analysis) </para>
        </briefdescription>
        <detaileddescription>
<para>Handle conditions during backward traversing. </para>
        </detaileddescription>
        <inbodydescription>
<para>we don&apos;t handle context in recursions, they treated as assignments</para>
<para>we don&apos;t handle context in recursions, they treated as assignments</para>
<para>TODO: When this call site id is contained in current call string, we may find a recursion. Try to solve this later.</para>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="76" column="18" bodyfile="lib/DDA/ContextDDA.cpp" bodystart="234" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1a02902af9bc4455b994a5da4a9d6cf121" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ContextDDA::isHeapCondMemObj</definition>
        <argsstring>(const CxtVar &amp;var, const StoreSVFGNode *store) override</argsstring>
        <name>isHeapCondMemObj</name>
        <reimplements refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a645c7d0637b49e139898016ff652e1f3">isHeapCondMemObj</reimplements>
        <param>
          <type>const <ref refid="namespace_s_v_f_1ab3532a31724d8719d29aa4c3521ca215" kindref="member">CxtVar</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_store_v_f_g_node" kindref="compound">StoreSVFGNode</ref> *</type>
          <declname>store</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>we exclude concrete heap given the following conditions: (1) concrete calling context (not involved in recursion and not exceed the maximum context limit) (2) not inside loop </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="81" column="18" bodyfile="lib/DDA/ContextDDA.cpp" bodystart="313" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1aa440bf9abda3f353bf91e5e64462b818" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ContextDDA::testIndCallReachability</definition>
        <argsstring>(CxtLocDPItem &amp;dpm, const SVFFunction *callee, const CallBlockNode *cs)</argsstring>
        <name>testIndCallReachability</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_cxt_stmt_d_p_item" kindref="compound">CxtLocDPItem</ref> &amp;</type>
          <declname>dpm</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>callee</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref> *</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
<para>refine indirect call edge </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="84" column="10" bodyfile="lib/DDA/ContextDDA.cpp" bodystart="167" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1a2ce589a1d63a5126e178fc47527e0f92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CallSiteID</type>
        <definition>CallSiteID ContextDDA::getCSIDAtCall</definition>
        <argsstring>(CxtLocDPItem &amp;dpm, const SVFGEdge *edge)</argsstring>
        <name>getCSIDAtCall</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_cxt_stmt_d_p_item" kindref="compound">CxtLocDPItem</ref> &amp;</type>
          <declname>dpm</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_v_f_g_edge" kindref="compound">SVFGEdge</ref> *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
<para>get callsite id from call, return 0 if it is a spurious call edge </para>
        </briefdescription>
        <detaileddescription>
<para>get callsite id from call, return 0 if it is a spurious call edge translate the callsite id from pre-computed callgraph on <ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> to the one on current callgraph </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="87" column="16" bodyfile="lib/DDA/ContextDDA.cpp" bodystart="188" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1a7687f36ad3f27bb16069975f00a1a202" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CallSiteID</type>
        <definition>CallSiteID ContextDDA::getCSIDAtRet</definition>
        <argsstring>(CxtLocDPItem &amp;dpm, const SVFGEdge *edge)</argsstring>
        <name>getCSIDAtRet</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_cxt_stmt_d_p_item" kindref="compound">CxtLocDPItem</ref> &amp;</type>
          <declname>dpm</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_v_f_g_edge" kindref="compound">SVFGEdge</ref> *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
<para>get callsite id from return, return 0 if it is a spurious return edge </para>
        </briefdescription>
        <detaileddescription>
<para>get callsite id from return, return 0 if it is a spurious return edge translate the callsite id from pre-computed callgraph on <ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> to the one on current callgraph </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="90" column="16" bodyfile="lib/DDA/ContextDDA.cpp" bodystart="212" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1a2754d0fd4b168786c990bbf36538b151" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::ContextDDA::popRecursiveCallSites</definition>
        <argsstring>(CxtLocDPItem &amp;dpm)</argsstring>
        <name>popRecursiveCallSites</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_cxt_stmt_d_p_item" kindref="compound">CxtLocDPItem</ref> &amp;</type>
          <declname>dpm</declname>
        </param>
        <briefdescription>
<para>Pop recursive callsites. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="94" column="25" bodyfile="include/DDA/ContextDDA.h" bodystart="94" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1a525949d1743136466d33bf4dc26ba423" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::ContextDDA::isEdgeInRecursion</definition>
        <argsstring>(CallSiteID csId)</argsstring>
        <name>isEdgeInRecursion</name>
        <param>
          <type>CallSiteID</type>
          <declname>csId</declname>
        </param>
        <briefdescription>
<para>Whether call/return inside recursion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="105" column="25" bodyfile="include/DDA/ContextDDA.h" bodystart="105" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1a4b8466d2e8e885fea2f41b5713f785bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::ContextDDA::updateCallGraphAndSVFG</definition>
        <argsstring>(const CxtLocDPItem &amp;dpm, const CallBlockNode *cs, SVFGEdgeSet &amp;svfgEdges) override</argsstring>
        <name>updateCallGraphAndSVFG</name>
        <reimplements refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a4f63b6b3a06633675ae99667cbaa6cdc">updateCallGraphAndSVFG</reimplements>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_cxt_stmt_d_p_item" kindref="compound">CxtLocDPItem</ref> &amp;</type>
          <declname>dpm</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref> *</type>
          <declname>cs</declname>
        </param>
        <param>
          <type>SVFGEdgeSet &amp;</type>
          <declname>svfgEdges</declname>
        </param>
        <briefdescription>
<para>Update call graph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="113" column="18" bodyfile="include/DDA/ContextDDA.h" bodystart="113" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1ad54f523bf5f2504c1924b4f94c5abbba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::ContextDDA::edgeInCallGraphSCC</definition>
        <argsstring>(const SVFGEdge *edge)</argsstring>
        <name>edgeInCallGraphSCC</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_v_f_g_edge" kindref="compound">SVFGEdge</ref> *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
<para>Return TRUE if this edge is inside a <ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> SCC, i.e., src node and dst node are in the same SCC on the <ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="131" column="17" bodyfile="include/DDA/ContextDDA.h" bodystart="131" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1aefd2b50015aa98fa88a508e3ed1d402a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CxtPtSet</ref></type>
        <definition>CxtPtSet ContextDDA::processGepPts</definition>
        <argsstring>(const GepSVFGNode *gep, const CxtPtSet &amp;srcPts) override</argsstring>
        <name>processGepPts</name>
        <reimplements refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ab10a34efa1acb6125ea32cf7a8cf919f">processGepPts</reimplements>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_gep_v_f_g_node" kindref="compound">GepSVFGNode</ref> *</type>
          <declname>gep</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CxtPtSet</ref> &amp;</type>
          <declname>srcPts</declname>
        </param>
        <briefdescription>
<para>processGep node </para>
        </briefdescription>
        <detaileddescription>
<para>Generate field objects for structs </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="145" column="22" bodyfile="lib/DDA/ContextDDA.cpp" bodystart="132" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1a26031c81d3eba5b3ff3ebd51d89510ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::ContextDDA::handleAddr</definition>
        <argsstring>(CxtPtSet &amp;pts, const CxtLocDPItem &amp;dpm, const AddrSVFGNode *addr) override</argsstring>
        <name>handleAddr</name>
        <reimplements refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acfe7d961caac8f0f558881a9a006b1fa">handleAddr</reimplements>
        <param>
          <type><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CxtPtSet</ref> &amp;</type>
          <declname>pts</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_cxt_stmt_d_p_item" kindref="compound">CxtLocDPItem</ref> &amp;</type>
          <declname>dpm</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_addr_v_f_g_node" kindref="compound">AddrSVFGNode</ref> *</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Handle Address SVFGNode to add proper conditional points-to. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>whether this object is set field-insensitive during pre-analysis</para>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="148" column="18" bodyfile="include/DDA/ContextDDA.h" bodystart="148" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1a45d7a381fec0692b4d2f7d0eec47ccf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::ContextDDA::propagateViaObj</definition>
        <argsstring>(const CxtVar &amp;storeObj, const CxtVar &amp;loadObj) override</argsstring>
        <name>propagateViaObj</name>
        <reimplements refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ace35b8247204d9806ca1a4f01bff2364">propagateViaObj</reimplements>
        <param>
          <type>const <ref refid="namespace_s_v_f_1ab3532a31724d8719d29aa4c3521ca215" kindref="member">CxtVar</ref> &amp;</type>
          <declname>storeObj</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_s_v_f_1ab3532a31724d8719d29aa4c3521ca215" kindref="member">CxtVar</ref> &amp;</type>
          <declname>loadObj</declname>
        </param>
        <briefdescription>
<para>Propagate along indirect value-flow if two objects of load and store are same. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="162" column="25" bodyfile="include/DDA/ContextDDA.h" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1a57d309971de00db9bd8c6bfaf237cbff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool ContextDDA::isCondCompatible</definition>
        <argsstring>(const ContextCond &amp;cxt1, const ContextCond &amp;cxt2, bool singleton) const override</argsstring>
        <name>isCondCompatible</name>
        <reimplements refid="class_s_v_f_1_1_cond_p_t_a_impl_1a6b746c30161c7dab86510895e0032935">isCondCompatible</reimplements>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_context_cond" kindref="compound">ContextCond</ref> &amp;</type>
          <declname>cxt1</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_context_cond" kindref="compound">ContextCond</ref> &amp;</type>
          <declname>cxt2</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>singleton</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether two call string contexts are compatible which may represent the same memory object compare with call strings from last few callsite ids (most recent ids to objects): compatible : (e.g., 123 == 123, 123 == 23). not compatible (e.g., 123 != 423)</para>
<para>context conditions of local(not in recursion) and global variables are compatible </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="170" column="25" bodyfile="lib/DDA/ContextDDA.cpp" bodystart="114" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1a76487b8b3e3abb8a16b5c4f5c7e79819" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::ContextDDA::isInsensitiveCallRet</definition>
        <argsstring>(const SVFGEdge *edge)</argsstring>
        <name>isInsensitiveCallRet</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_v_f_g_edge" kindref="compound">SVFGEdge</ref> *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
<para>Whether this edge is treated context-insensitively. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="173" column="10" bodyfile="include/DDA/ContextDDA.h" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1a0d407903c4b0d976da30538ff0c5fc41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ConstSVFGEdgeSet &amp;</type>
        <definition>ConstSVFGEdgeSet&amp; SVF::ContextDDA::getInsensitiveEdgeSet</definition>
        <argsstring>()</argsstring>
        <name>getInsensitiveEdgeSet</name>
        <briefdescription>
<para>Return insensitive edge set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="178" column="29" bodyfile="include/DDA/ContextDDA.h" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1ac3e622d810ee69917b7bef08a882117c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::ContextDDA::dumpContexts</definition>
        <argsstring>(const ContextCond &amp;cxts)</argsstring>
        <name>dumpContexts</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_context_cond" kindref="compound">ContextCond</ref> &amp;</type>
          <declname>cxts</declname>
        </param>
        <briefdescription>
<para>dump context call strings </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="183" column="25" bodyfile="include/DDA/ContextDDA.h" bodystart="183" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_d_d_a_1afb0ab7fc43e6f0331072419e39ae0606" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const std::string</type>
        <definition>virtual const std::string SVF::ContextDDA::PTAName</definition>
        <argsstring>() const override</argsstring>
        <name>PTAName</name>
        <reimplements refid="class_s_v_f_1_1_pointer_analysis_1aed4e5066f6ddef83afaf60adbcc11de0">PTAName</reimplements>
        <briefdescription>
<para>Return PTA name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="188" column="31" bodyfile="include/DDA/ContextDDA.h" bodystart="188" bodyend="191"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Context-, Flow- Sensitive Demand-driven Analysis </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>SVF::DDAVFSolver&lt; CxtVar, CxtPtSet, CxtLocDPItem &gt;</label>
        <link refid="class_s_v_f_1_1_d_d_a_v_f_solver"/>
      </node>
      <node id="2">
        <label>SVF::CondPTAImpl&lt; ContextCond &gt;</label>
        <link refid="class_s_v_f_1_1_cond_p_t_a_impl"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>SVF::ContextDDA</label>
        <link refid="class_s_v_f_1_1_context_d_d_a"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SVF::PointerAnalysis</label>
        <link refid="class_s_v_f_1_1_pointer_analysis"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="15">
        <label>SVF::DDAVFSolver&lt; CxtVar, CxtPtSet, CxtLocDPItem &gt;</label>
        <link refid="class_s_v_f_1_1_d_d_a_v_f_solver"/>
      </node>
      <node id="7">
        <label>GenericICFGTy</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
      <node id="9">
        <label>GenericCallGraphTy</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
      <node id="11">
        <label>SVF::PAG</label>
        <link refid="class_s_v_f_1_1_p_a_g"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>SVF::SCCDetection&lt; GraphType &gt;</label>
        <link refid="class_s_v_f_1_1_s_c_c_detection"/>
      </node>
      <node id="14">
        <label>SVF::PTAStat</label>
        <link refid="class_s_v_f_1_1_p_t_a_stat"/>
      </node>
      <node id="10">
        <label>SVF::CommonCHGraph</label>
        <link refid="class_s_v_f_1_1_common_c_h_graph"/>
      </node>
      <node id="6">
        <label>SVF::ICFG</label>
        <link refid="class_s_v_f_1_1_i_c_f_g"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>SVF::GenericGraph&lt; PAGNode, PAGEdge &gt;</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
      <node id="5">
        <label>SVF::SVFModule</label>
        <link refid="class_s_v_f_1_1_s_v_f_module"/>
      </node>
      <node id="13">
        <label>SVF::TypeSystem</label>
        <link refid="class_s_v_f_1_1_type_system"/>
      </node>
      <node id="2">
        <label>SVF::CondPTAImpl&lt; ContextCond &gt;</label>
        <link refid="class_s_v_f_1_1_cond_p_t_a_impl"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>SVF::ContextDDA</label>
        <link refid="class_s_v_f_1_1_context_d_d_a"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>SVF::PTACallGraph</label>
        <link refid="class_s_v_f_1_1_p_t_a_call_graph"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SVF::PointerAnalysis</label>
        <link refid="class_s_v_f_1_1_pointer_analysis"/>
        <childnode refid="4" relation="usage">
          <edgelabel>callGraphSCC</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>svfMod</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>icfg</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>ptaCallGraph</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>chgraph</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>pag</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>typeSystem</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>stat</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/DDA/ContextDDA.h" line="25" column="1" bodyfile="include/DDA/ContextDDA.h" bodystart="26" bodyend="198"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa1d1b6e8cc23f0a6d3935cbe4f02cbdf" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>_ander</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1abf24080617c6a74abed9f0bb0bc9c0c5" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>_callGraph</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a4c307d486756daa1e79595b1e9edc40a" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>_callGraphSCC</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1ae3b04859ed69c47302177988aa68a70b" prot="private" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>_client</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af08857f907caa32c090eed2c1b404729" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>_pag</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a74d83f06e8fc0ecedc1e1846030c99c6" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>_svfg</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a54f5d4972238ae69f19c9da3b9f51644" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>_svfgSCC</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85a859290ec941a06029f84ef249a5d2fda" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>ADAPTFSCS_WPA</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85a42d52c9444028e72ea8e6dc0c8c08ada" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>ADAPTFSCSPS_WPA</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a5a8632a957fce63f186dd8b657566dd2" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>addDDAPts</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7579491400f1781356cb7d1913537547" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>addLoadCVar</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a4725013a7617645e1418ed670d4837b5" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>addLoadDpm</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a1cd1023bca18db16bc54e622c881e494" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>addLoadDpmAndCVar</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae1e77060ac22d465b5cc9430962e280c" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>addOutOfBudgetDpm</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a08037f32b927fe2e6be47a61a060463c" prot="protected" virt="virtual"><scope>SVF::ContextDDA</scope><name>addPts</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aeb6b56cf3d140d251b0524eb5cbd6dce" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>addSUStat</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1afa6dffc1ac7e8dada1ff9e75b8cfd187" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>alias</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a171918ada9b679b0114b27476caa5ee6" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>alias</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1ac18e1dc9c6fc8cc952f67a93c2491876" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>alias</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1adb1ed3728d53a13c94402392155e9913" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>alias</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a8e48e9fe6f7e21da49a155f8f6893944" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>alias</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1aac1a133d478bd14c74309d9c4eaf0c8e" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>alias_validation</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ac87eb408daafd5d556ecd8633f7d4f1f" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>AliasAnalysis</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a32c6f12ce8bc0554dbb6aafa36f9a235" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>aliasTestFailMayAlias</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a651cc82379c2d18cc2f69f25b2ae08db" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>aliasTestFailMayAliasMangled</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a18347e41bc66b16e3f42c7c52811ad42" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>aliasTestFailNoAlias</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1aefd4e9ea66da5ad84a45efead823eb22" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>aliasTestFailNoAliasMangled</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a7648a0358e2c0798db1c547ec7aa7c64" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>aliasTestMayAlias</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a13ce6b930a35877f17bffd4b89e22654" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>aliasTestMayAliasMangled</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a7477a4301d548b93958e57df389cbba0" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>aliasTestMustAlias</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1aec884481726cfaf19c4ab8ec8d9195b7" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>aliasTestMustAliasMangled</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ac353221cc7aced590dcf3550a24b1570" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>aliasTestNoAlias</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0e68883e2ee328315af29e59bb2008cd" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>aliasTestNoAliasMangled</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a83b0a51d88fa7aadff6e9267765d07a5" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>aliasTestPartialAlias</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1acbb517523fd30708ed1a93f306cd3545" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>aliasTestPartialAliasMangled</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1ac8fe1cb3af6048a28028f00bb87a5eba" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>analyze</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85a9a25374fb6d2218c6c59de0482548f49" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>Andersen_BASE</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85ab68615784a520e39856be5237930e6a6" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>Andersen_WPA</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85a46f5e74d5f4b0a2d134e68d262079c3f" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>AndersenHCD_WPA</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85a99d50c1712075e4c3278fc4fa4c9cd2f" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>AndersenHLCD_WPA</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85ac7c033efd59e2b5fcded79fc3ebdb9d4" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>AndersenLCD_WPA</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85a6c06b12c95a4aa57edc6bef57514a7e1" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>AndersenSCD_WPA</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85accfa4ed42d3a3ac5e4abc403e738427b" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>AndersenSFR_WPA</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85abf2f61ee9a5f6228db6587a8182ec9f2" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>AndersenWaveDiff_WPA</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85ac581e279a4bd69c059b0e5987f839a1f" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>AndersenWaveDiffWithType_WPA</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7a6af30f30f32d55fc910f2ae4909791" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>backtraceAlongDirectVF</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a040bc02742836b0a6d46ce3c3e89fa46" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>backtraceAlongIndirectVF</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1adbd209b4a2327b2b068fbb56e12042f7" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>backtraceToStoreSrc</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af6a6243b497df5fdab9f658b9add9c8a" prot="protected" virt="virtual"><scope>SVF::ContextDDA</scope><name>backwardPropDpm</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a63d04c3af4529d0e0f82acd76ed57f6c" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>backwardVisited</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ac0c0855918cb2cdc3d8ebc175acfbd4da66b132e5ab8c8746eb22e58d199b4c2a" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>BaseImpl</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af2a0732401e5904ebf81878d3ffe0675" prot="protected" virt="virtual"><scope>SVF::ContextDDA</scope><name>buildSVFG</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ac0c0855918cb2cdc3d8ebc175acfbd4da84705167ea3a7162ecb9470a8a77b5d8" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>BVDataImpl</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1aa9661d26d1ae9c829a9296d1b6d874f4" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>CallEdgeMap</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ac4ad73782f42f90ad7ac9c66edb27c69" prot="public" virt="non-virtual" ambiguityscope="CondPTAImpl&lt; ContextCond &gt;::"><scope>SVF::ContextDDA</scope><name>CallGraphSCC</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af6e05e87ba8d6b6ae65807803b1b0221" prot="public" virt="non-virtual" ambiguityscope="DDAVFSolver&lt; CxtVar, CxtPtSet, CxtLocDPItem &gt;::"><scope>SVF::ContextDDA</scope><name>CallGraphSCC</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ae3b651799345d9d92b6d736dafb03f63" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>callGraphSCC</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1aafa5df4aa576a144476e547b1da35795" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>callGraphSCCDetection</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ac227096ad71dfda8bc48c139fccb3af2" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>CallInstSet</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a1f5f2ecf1e893759633ffec1b23d5650" prot="public" virt="non-virtual" ambiguityscope="CondPTAImpl&lt; ContextCond &gt;::"><scope>SVF::ContextDDA</scope><name>CallSiteSet</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7248a3fe0078a2b13786765b5f014ba6" prot="public" virt="non-virtual" ambiguityscope="DDAVFSolver&lt; CxtVar, CxtPtSet, CxtLocDPItem &gt;::"><scope>SVF::ContextDDA</scope><name>CallSiteSet</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1afc2e412fe96c1fad268ba0255a2042e7" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>CallSiteToFunPtrMap</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae0e78fafb7eec0fbc1a02d24547335e9" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>candidateQueries</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a251638a947815a8ff91a507486cadfcd" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>chgraph</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1ae76fb767c13ca39baa0fbec55a7780fe" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa7e5839c5bc6f913561de10bce61e74b" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>clearbkVisited</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1adfae199dfbe05c9c20052e0fc204e6de" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>clearPts</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1a337eb89cc5f31741ad8d840d9f284ca5" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>computeDDAPts</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1ae0f3b07267ded5f0ee879c39effff864" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>computeDDAPts</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ac0c0855918cb2cdc3d8ebc175acfbd4da88380bb05f60a1349e192364ba6c5292" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>CondImpl</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1adc5d33698377dc22aa1ae1151da13675" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>CondPTAImpl</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a8ff3f219b9f118a4f06360750408c9cb" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>connectVCallToVFns</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aef98e8e9144a69bb7481fef5d2dcb303" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>ConstSVFGEdgeSet</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a8cd7b08bd978513cb0faacc47bbaf578" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>containBlackHoleNode</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a56368369bc37e37b13f19e5eb1890063" prot="public" virt="non-virtual" ambiguityscope="SVF::PointerAnalysis::"><scope>SVF::ContextDDA</scope><name>containBlackHoleNode</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a3a10f3327d6473c348df5b62a5d6683f" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>containConstantNode</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1afa7d9f6209904acd7893ae583e28dafd" prot="public" virt="non-virtual" ambiguityscope="SVF::PointerAnalysis::"><scope>SVF::ContextDDA</scope><name>containConstantNode</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a5af00bb26800882ab96c470ee9fc4632" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>contains</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1adc70126ea6583df10b52501943a2af49" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>ContextDDA</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a3f2f48fc122c07ff9eb1382aa7a3f966" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>CPtSet</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85ac9e931f254fa3471f5f5337cbca1de09" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>CSCallString_WPA</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85adf8fe4349f84779601a0b41659ca8e27" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>CSSummary_WPA</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1af71b4ec9844701582d997466c2e4d94f" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>CVar</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85a0ab6564c48897595c9d23382a026e0a8" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>Cxt_DDA</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae40c7bad663e0fa07dee4be3d1794ff2" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>ddaStat</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7ee96b513074c283d23434590ce15e7d" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>DDAVFSolver</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85adb3d4cbd8c38c1c498bc51198626a790" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>Default_PTA</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a5fa3d986e4ef710a2148b2854167c3ed" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>destroy</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1af44b14fed89918847c0228c1100c56d2" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>disablePrintStat</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a8b5a34679fb1362425c88d6e74b6c019" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>DPImToCPtSetMap</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a2565bf8dcacb22350dc1dc98ec7595f2" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>dpmToADCPtSetMap</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af0538abf12c01d31a0296553e2f7c92d" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>DPMToCVarMap</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a2ccbcfa949a1796094b5d9499177fc2b" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>DPMToDPMMap</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a9d8959dfee05685cd74d0d7a78069692" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>dpmToloadDpmMap</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a2d6df8149b45d719e22fc505df94171a" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>dpmToTLCPtSetMap</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a05d6b074b04aad7dc1f3cbe0ca587467" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>DPTItemSet</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a861554c2fdeaa406131c2c920b4c7908" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>dumpAllPts</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a08399de593c073b6dd848a8d849dad27" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>dumpAllTypes</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1ac3e622d810ee69917b7bef08a882117c" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>dumpContexts</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1aa260a3275fbec7061295306a58763d24" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>dumpCPts</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa4dc73ea65f736282a413a9d286141e5" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>dumpCPtSet</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a3fd44d3cfc3f4ab18506870c65df32f5" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>dumpGraph</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a1a6cee7e690ccb3e53cdc4c3e67b386d" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>dumpPts</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ab83b827ea42d3a61aad20b1a1485d866" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>dumpStat</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a80daa422e0dacf75aceb4fe5b4687c04" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>dumpTopLevelPtsTo</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1ad54f523bf5f2504c1924b4f94c5abbba" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>edgeInCallGraphSCC</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a034e3c8b2eec00aee9de439dfeeda332" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>edgeInSVFGSCC</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a87b48287d7edb97fc120200fe0e5218d" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>expandFIObjs</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85abe1d8104c77bfe4bbc201a64410c7f61" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>FieldS_DDA</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1ae34cd06ee3b7d763c81ec418af76d244" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>finalize</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a52737dd41c63404ef91691154aa250ce" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>findPT</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1a2a23f0235fc49a177b2694f668b02551" prot="private" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>flowDDA</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85aa43c83e2f0df003c158d4b1325b50b18" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>FlowS_DDA</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85a43837619e78e03dc95ec6e88959faf82" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>FSCS_WPA</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85a30826fb1ddb602fd4439ca84eb73e8f4" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>FSCSPS_WPA</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85a62281bc39fea50a88e55edf605620322" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>FSDATAFLOW_WPA</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85ad6ccf1ce66083278349c5c3111172d78" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>FSSPARSE_WPA</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85a088dda60195ab259693977af8414f203" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>FSTBHC_WPA</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ac1422cd8b449fdb4a1f7c539364e4c41" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>FunctionSet</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1aeec490de5955497af1a2a9cd429f0d5d" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>getAllFieldsObjNode</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a60b111647e000cc983aa52513f90afbc" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getAllValidPtrs</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ac23f71c1307cda9cba44acc40059f0a3" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getAnalysisTy</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ac39860015b45b9af6351d0343f8983bb" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getAndersenAnalysis</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a8008bdef087708de961a37a8bf458fc7" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getBaseObjNode</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a94f3e4d073b8c5bab3c46058ddba3f43" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>getBVPointsTo</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a2a2b3783074c9f509fc265b97b979704" prot="protected" virt="virtual"><scope>SVF::ContextDDA</scope><name>getCachedADPointsTo</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae31e9281e4f1e0585fdf328b7339e1bf" prot="protected" virt="virtual"><scope>SVF::ContextDDA</scope><name>getCachedPointsTo</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aac432dfa7ccfc3434d9e0e2eb65afe7f" prot="protected" virt="virtual"><scope>SVF::ContextDDA</scope><name>getCachedTLPointsTo</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0bddf297a2d8cd59ce9a232f0229f248" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getCallGraphSCC</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ae8190ce12fb0c6360953f4b05047fbe8" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getCallGraphSCCRepNode</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a73bbf4f763316e8d5db62d163da35a18" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getCandidateQueries</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ae2cc7cd0803dbd90639140e71b06b1b5" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getCHGraph</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a454a998ef5a866f2a6f270e3283c6ebd" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>getCondPointsTo</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1a32ce0085cb99f92f63b54df0f2ea2523" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>getConservativeCPts</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1a2ce589a1d63a5126e178fc47527e0f92" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getCSIDAtCall</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1a7687f36ad3f27bb16069975f00a1a202" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getCSIDAtRet</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a55803a2d30137b5ad15c5afeec7c6b28" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getDefSVFGNode</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ad7d92fad8606d5512786a7b7a08930e2" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>getDPIm</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ac4cb0b666d68d135c5e385bfc880fd67" prot="protected" virt="virtual"><scope>SVF::ContextDDA</scope><name>getDPImWithOldCond</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a15494d0aa074ae2e89470b3c9f407cc4" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getFIObjNode</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a74df51017ceaa389de2c2f33f3522fc3" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getFunPtr</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a6423e0d1bc9a5ee6bfea27a4a358574f" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getGepObjNode</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ac0f821cfe4fb9c9c8816e7a1b1bc0c5e" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getImplTy</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a1ca30dfa42702071b65d363c76d25cbe" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getIndCallMap</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a9e473e97a0bad49996faacbc05be7e68" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getIndCSCallees</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a9d3e7753643166465b0d647a75bc145a" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getIndirectCallsites</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1a0d407903c4b0d976da30538ff0c5fc41" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getInsensitiveEdgeSet</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ad42efad8e857290459689833c224e467" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getLoadCVar</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a630aad14a285c954a50c632f9cb13fa9" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getLoadDpm</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ad8b71cebf46deaf60e2cd4f6d6bb9433" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getModule</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1ab582d46731c06a7fa022bf301d6008c1" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getMutPTDataTy</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ac522df904e702381222a4d9b205c775b" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getNumOfResolvedIndCallEdge</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1aaf6b41f44da3a4caea1fa395e41edf71" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getPAG</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a7c9b7e5fe37ae31ba84d167945ca57df" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getPTACallGraph</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a35cb1fd6e18cdc8e8466ee94846bc553" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getPTDataTy</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1a6ae16be6774994932aaa594c9b9cb397" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>getPtrNodeID</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a63fa2b3a96696ffc67a119c1ba5ce748" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>getPts</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a0b96ba98239186d6d676f9540da9e590" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>getPts</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a979486e35b529fbc62b2974899627113" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getPtsMap</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a0da0602c5b260afaba4bef1abcbcf7b3" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>getRevPts</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1aa266eef30817c557882de19aefe135a9" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>getRevPts</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0ebf1138011aa526d92470c1931313ad" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getStat</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acb7980c7e0d1d8ad6abab0b80831d2a9" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getSVFG</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a1fdd7c0efa8f0506edfba2da8f2b3cc0" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getSVFGSCC</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a1583ed2eb1d4b88dc2a5b4c0b6842496" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getSVFGSCCRepNode</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ae615dd279fbf681e3c15e7209e3adfbe" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getTypeSystem</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0e09e07ee52ba605dc386ae1d7b965e2" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getVFnsFromCHA</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a8fa5b8a7b410faf63106a879ff72bf51" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>getVFnsFromPts</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1a26031c81d3eba5b3ff3ebd51d89510ae" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>handleAddr</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1aa8a7b6e99b92abfa5c2404515b703a2d" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>handleBKCondition</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1a1b9bfe46777c8a57781452a05635fb02" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>handleOutOfBudgetDpm</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a99f631cf1bc438e3f08f7f935e98e38d" prot="protected" virt="virtual"><scope>SVF::ContextDDA</scope><name>handleSingleStatement</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a8d3a457efb1963f8d87305bf33c02754" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>hasIndCSCallees</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a597e9c4e76f358c36d4b820c4d69ebc6" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>hasPtsMap</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a962cc91e4d68b25ce201072c384d8fc2" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>icfg</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1adb9f21a86daeb2dd79537f3939c393cf" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>initialize</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ae58c2b25494ec51e714c83c6cfd5dd67" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>inSameCallGraphSCC</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1a942e79dced48bd284a58540a2fb778b9" prot="private" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>insensitveEdges</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a9aaa5ee3dc8abc51c4b6e463e1949ee7" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>isArrayCondMemObj</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a89dfeedf8e3e91603a1e9c73e3608a73" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>isArrayMemObj</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a9a9c3a8b5e4ffc89418073110e446f20" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>isbkVisited</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a45462312a746339fff8b990a093d9a1b" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>isBlkObjOrConstantObj</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1a57d309971de00db9bd8c6bfaf237cbff" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>isCondCompatible</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1a525949d1743136466d33bf4dc26ba423" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>isEdgeInRecursion</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a37a6321f50bef2939b287cc088e76170" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>isFieldInsenCondMemObj</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0f71e4cd0948b294c7d33a690bde7dbe" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>isFieldInsensitive</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1af90d2ccb01402c5ca9d7a059f345c816" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>isFIObjNode</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1a02902af9bc4455b994a5da4a9d6cf121" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>isHeapCondMemObj</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ae6ea391ac44dffeb6899bb44323c5361" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>isHeapMemObj</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1aa725a0c9426e8615cbc078c88561f66a" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>isInRecursion</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1a76487b8b3e3abb8a16b5c4f5c7e79819" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>isInsensitiveCallRet</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a20cadb651b41343437e135e985c4e566" prot="protected" virt="virtual"><scope>SVF::ContextDDA</scope><name>isLocalCVarInRecursion</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a108380f6f0b67654bb7c7676686096c8" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>isLocalVarInRecursiveFun</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a345e5379f53b618adef014aa6887bfe7" prot="protected" virt="virtual"><scope>SVF::ContextDDA</scope><name>isMustAlias</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a9d3b20c9883d734537fb98b57b5372b9" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>isNonPointerObj</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a0b1f774883adc7d535f8363bf3c8b1e8" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>isOutOfBudgetDpm</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7994236bff84ba8244592fdf5e546734" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>isOutOfBudgetQuery</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a7a1be735c76ba4a6b235264fe8ec6c28" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>isSameVar</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a94bcddbc7b9ccecb3fbb693b13372785" prot="protected" virt="virtual"><scope>SVF::ContextDDA</scope><name>isStrongUpdate</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1add7daee4a0ecae479a5ab015130c8c93" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>isSVFGNodeInCycle</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7b35588de00e322afd742041bf735571" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>isTopLevelPtrStmt</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a6d62420837fe0c7814fc4da68a91eda4" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>loadToPTCVarMap</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa724698d499615bce7caf8f312b746a7" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>locToDpmSetMap</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aab76f98ae4f0c1f62f101ac5c5fdbf83" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>LocToDPMVecMap</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1afb57381096ffc49b2065de6d9bf00895" prot="private" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>loopInfoBuilder</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7112ce6145be0855f8b035bb0d8a331c" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>markbkVisited</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a521f99705f67e3fea7167728a4e37129" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>matchArgs</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a3b5877fec52bbfa7c83bab6c9bc95684" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>mustAlias</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1abc91ac8ebca1c22d08ddb357889d0fa8" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>MutPTDataTy</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1ab4115f25e2e477bfd73d01f069f47241" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>normalized</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a9452d65894864446d8288639435382d7" prot="protected" virt="virtual"><scope>SVF::ContextDDA</scope><name>NormalizePointsTo</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a22c23f3ba1ee7e0aaccf0b8a1b58e33e" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>objToNSRevPtsMap</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1afc320fbf269404fe128e69c98e6f9cac" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>OnTheFlyIterBudgetForStat</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ab60c701f1881d88aa4440991fb972638" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>OOBResetVisited</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aad57a954473f3099188cf8c8fba87880" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>outOfBudgetDpms</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1afdecfbacc64cb8d694268aa73ec8a7b6" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>outOfBudgetQuery</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1adf0acbb0c605278e43d88787d651bbd8" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>overlap</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a8771956f7595b66d825b3dc459d1ae49" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>pag</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85acaf0c0774025005647deaf59582b9d58" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>PathS_DDA</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1af42ef08568b1fa892f8f98c4421a0477" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>PointerAnalysis</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1a2754d0fd4b168786c990bbf36538b151" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>popRecursiveCallSites</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a3550ea3f087ec557a6fe076bc443b05d" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>print_stat</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a28bcd16249c04eea2d13fafd2bcaf9d9" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>printIndCSTargets</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a062f1f2d6d47694caa9ac64a9e68c7b3" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>printIndCSTargets</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a4880571f57542afc50da506dfe273183" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>printStat</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1aefd2b50015aa98fa88a508e3ed1d402a" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>processGepPts</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1a45d7a381fec0692b4d2f7d0eec47ccf1" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>propagateViaObj</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ad47b39252e02c68dfb466d4f42dc7ebe" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>ptaCallGraph</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ac0c0855918cb2cdc3d8ebc175acfbd4d" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>PTAImplTy</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a5d3c3094e263bf16a4f312a118c1bd36" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>ptaImplTy</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1afb0ab7fc43e6f0331072419e39ae0606" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>PTAName</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>PTATY</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ade83738ac754d5ffc2a3b497b600cad4" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>ptaTy</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1af960c10e49932ea5e9dcdd299ff300ce" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>ptD</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1aca28ac25c0c3ca6bebbec2535c175230" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>PTDataTy</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a30b9ee7b1dcd04285f92cf7accd05b2e" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>ptrToBVPtsMap</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1aba828ca8e2aa2bd71b78be8b45a48c9b" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>PtrToBVPtsMap</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a5043e9d9255d31777d038c48c809bb09" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>PtrToCPtsMap</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a61167fcdb2005090de1b38e53450431a" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>ptrToCPtsMap</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a838c3f2be39d278072f7a9df7c0bcb4d" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>PtrToNSMap</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a8c5220108a65fa281959529cb1e9cc57" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>reCompute</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ace037388135f272365cee2e87844bfba" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>reComputeForEdges</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a73fb8e595473e0c7df1dd0de4968ad13" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>resetObjFieldSensitive</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1afe518d3d7f8051de5b9860f2460aa1b7" prot="protected" virt="virtual"><scope>SVF::ContextDDA</scope><name>resetQuery</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ac9f54859eabff4c1e1f5785d57a0c818" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>resolveCPPIndCalls</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1afcc074be34dd0c45418ff16b3d9d4192" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>resolveFunPtr</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1acca7b86bb199f9b3da72f100c3e55e0f" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>resolveIndCalls</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7d0775354df32f293e98578ed071d33c" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>rmSUStat</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1afc2b0eeb1d5d5f292690f3c949217c38" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>setCallGraph</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1abd652b2627f68d7d4f8bf3bdb20ce975" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>setCallGraphSCC</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1adcb641eec4f620effdb3f61a46429f40" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>setDDAStat</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ac5683fe2e24b393ccc5cb6d8bc92cf2b" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>setObjFieldInsensitive</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acd694c2092adf8c516d1aba5f798cec7" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>startNewPTCompFromLoadSrc</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aff744e724dcf06a2b1cdd7ba2b1093f1" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>startNewPTCompFromStoreDst</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a5ec3d9bf1fc81346c9df29638daedc0f" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>stat</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85ad24ef5326c26db858c73432aa7e67a0a" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>Steensgaard_WPA</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af66895278f0ecbc882f9e4f43ef9c8a8" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>storeToDPMs</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1accaacd2dd680f92ff83cfe75eef6ffab" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>StoreToPMSetMap</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a0d563fe8b016b27a58f5b054fec9c38a" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>svfgBuilder</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a6489319b33a807f7caba2d34017a3e1b" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>SVFGEdgeSet</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a502207f81ed22fa42f9e18ccba83ad4e" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>SVFGSCC</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aba0ec611a5cfd096ac0b8b11e0bd5580" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>SVFGSCCDetection</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a7e8b3f6843e5ea75fd189162d2cd60a5" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>svfMod</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1aa440bf9abda3f353bf91e5e64462b818" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>testIndCallReachability</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a3fb52286c5324ea3d58e22c630b307e3" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>testOutOfBudget</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85acc2e7cbdd04a614a3b6189d2f01042f3" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>TypeCPP_WPA</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a219baed92b811d5519b056ad393fceed" prot="protected" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>typeSystem</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a99764ee5bc19378795fe464e9036e78b" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>unionDDAPts</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae7949e141978474f3b6cb510bacafa37" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>unionDDAPts</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a1a95d1d6ac48157c896d9895cff697b4" prot="protected" virt="virtual"><scope>SVF::ContextDDA</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a4ad5da56c8b7bc75bf2dc30a1bcf1552" prot="protected" virt="virtual"><scope>SVF::ContextDDA</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a239a55960dfbbe73df63063070a18b56" prot="protected" virt="virtual"><scope>SVF::ContextDDA</scope><name>updateCachedPointsTo</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1a4b8466d2e8e885fea2f41b5713f785bd" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>updateCallGraphAndSVFG</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1ab982e6bbd99a2f9a0a3abbebeeb00dcc" prot="protected" virt="virtual"><scope>SVF::ContextDDA</scope><name>validateExpectedFailureTests</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a7accf4e4db4001716e53d98ce5217ac8" prot="protected" virt="virtual"><scope>SVF::ContextDDA</scope><name>validateSuccessTests</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0454332c89e60729956bb7d69a1a24df" prot="protected" virt="virtual"><scope>SVF::ContextDDA</scope><name>validateTests</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85a412254a7738029bf3ee96f5c15a6bec9" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>VFS_WPA</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1aa7f15c74eb438be78fcc028534477478" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>VFunSet</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1af46f4b99fc2d5061c9266a7f45aafaca" prot="public" virt="non-virtual"><scope>SVF::ContextDDA</scope><name>VTableSet</name></member>
      <member refid="class_s_v_f_1_1_cond_p_t_a_impl_1a01f64600bf6581403836019e4e5ae741" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>~CondPTAImpl</name></member>
      <member refid="class_s_v_f_1_1_context_d_d_a_1a691e26b2d370efe2aee77212f982a1ed" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>~ContextDDA</name></member>
      <member refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a211f2f0c572d5085d22c2cb40341b606" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>~DDAVFSolver</name></member>
      <member refid="class_s_v_f_1_1_pointer_analysis_1a4aeca84393c5586eea7a480737daf17c" prot="public" virt="virtual"><scope>SVF::ContextDDA</scope><name>~PointerAnalysis</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
