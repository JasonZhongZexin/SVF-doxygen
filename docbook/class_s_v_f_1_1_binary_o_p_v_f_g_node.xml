<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_binary_o_p_v_f_g_node" xml:lang="en-US">
<title>SVF::BinaryOPVFGNode Class Reference</title>
<indexterm><primary>SVF::BinaryOPVFGNode</primary></indexterm>
<para>
<computeroutput>#include &lt;VFGNode.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for SVF::BinaryOPVFGNode:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_binary_o_p_v_f_g_node.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_binary_o_p_v_f_g_node_1a880c8260e3acb3fbe431446f2c1f5990"/>typedef Map&lt; u32_t, const <link linkend="_class_s_v_f_1_1_p_a_g_node">PAGNode</link> * &gt; <emphasis role="strong">OPVers</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_binary_o_p_v_f_g_node_1afa52d77205075141b59847b8400344e7"/><link linkend="_class_s_v_f_1_1_binary_o_p_v_f_g_node_1afa52d77205075141b59847b8400344e7">BinaryOPVFGNode</link> (NodeID id, const <link linkend="_class_s_v_f_1_1_p_a_g_node">PAGNode</link> *r)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_binary_o_p_v_f_g_node_1a4c71d3d586a5389f524f93ca82ffe0e5"/>const <link linkend="_class_s_v_f_1_1_p_a_g_node">PAGNode</link> * <link linkend="_class_s_v_f_1_1_binary_o_p_v_f_g_node_1a4c71d3d586a5389f524f93ca82ffe0e5">getOpVer</link> (u32_t pos) const</para>

<para>Operands at a BinaryNode. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_binary_o_p_v_f_g_node_1a76c67d31ffb67c4ef102471898ae2709"/>void <emphasis role="strong">setOpVer</emphasis> (u32_t pos, const <link linkend="_class_s_v_f_1_1_p_a_g_node">PAGNode</link> *node)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_binary_o_p_v_f_g_node_1a1fa8795102bc6c1d6bac1b55b7542eea"/>const <link linkend="_class_s_v_f_1_1_p_a_g_node">PAGNode</link> * <emphasis role="strong">getRes</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_binary_o_p_v_f_g_node_1a16511457605363135685cf3cf3a474dd"/>u32_t <emphasis role="strong">getOpVerNum</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_binary_o_p_v_f_g_node_1adaff45c46c4cc8158bd3147d304deab5"/>OPVers::const_iterator <emphasis role="strong">opVerBegin</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_binary_o_p_v_f_g_node_1aed5a32d1a145df7007ba7d934e4c2bd4"/>OPVers::const_iterator <emphasis role="strong">opVerEnd</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_binary_o_p_v_f_g_node_1abf1af3895a12b39b6d7865f0d6a5fc53"/>virtual const std::string <emphasis role="strong">toString</emphasis> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_binary_o_p_v_f_g_node_1a74266197f0ac969746c0be4175e70c17"/>static bool <link linkend="_class_s_v_f_1_1_binary_o_p_v_f_g_node_1a74266197f0ac969746c0be4175e70c17">classof</link> (const <link linkend="_class_s_v_f_1_1_binary_o_p_v_f_g_node">BinaryOPVFGNode</link> *)</para>

<para>Methods for support type inquiry through isa, cast, and dyn_cast: </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_binary_o_p_v_f_g_node_1aea93da7b12eec71280459e1c4a41306f"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_class_s_v_f_1_1_v_f_g_node">VFGNode</link> *node)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_binary_o_p_v_f_g_node_1a9da4b2fca555fbb6a1867e9bc4749046"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_namespace_s_v_f_1a3b4bbc4b72e982a79c23fd3ec26410b6">GenericVFGNodeTy</link> *node)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_binary_o_p_v_f_g_node_1a01ca492acb9b769eb6e1fe2137dff47d"/>const <link linkend="_class_s_v_f_1_1_p_a_g_node">PAGNode</link> * <emphasis role="strong">res</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_binary_o_p_v_f_g_node_1ae803603f567cc28f5a7e1b66fb324cbc"/>OPVers <emphasis role="strong">opVers</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para><link linkend="_class_s_v_f_1_1_v_f_g_node">VFGNode</link> for binary operator instructions, e.g., a = b + c; </para>
<para>
The documentation for this class was generated from the following files:</para>
include/Graphs/VFGNode.hlib/Graphs/VFG.cpp</section>
</section>
