<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_s_c_c_detection" kind="class" language="C++" prot="public">
    <compoundname>SVF::SCCDetection</compoundname>
    <innerclass refid="class_s_v_f_1_1_s_c_c_detection_1_1_g_node_s_c_c_info" prot="public">SVF::SCCDetection::GNodeSCCInfo</innerclass>
    <templateparamlist>
      <param>
        <type>class GraphType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_s_c_c_detection_1aaee4b4afbfb6efa02c537529e3cebfef" prot="private" static="no">
        <type>llvm::GraphTraits&lt; GraphType &gt;</type>
        <definition>typedef llvm::GraphTraits&lt;GraphType&gt; SVF::SCCDetection&lt; GraphType &gt;::GTraits</definition>
        <argsstring></argsstring>
        <name>GTraits</name>
        <briefdescription>
<para>Define the GTraits and node iterator for printing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="59" column="31" bodyfile="include/Util/SCC.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_s_c_c_detection_1a7d7b354d8a7ce69b27dc775ccd192a62" prot="private" static="no">
        <type>GTraits::NodeRef</type>
        <definition>typedef GTraits::NodeRef SVF::SCCDetection&lt; GraphType &gt;::GNODE</definition>
        <argsstring></argsstring>
        <name>GNODE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="60" column="48" bodyfile="include/Util/SCC.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_s_c_c_detection_1abaf75ef45e8f5349b902dab063999ad8" prot="private" static="no">
        <type>GTraits::nodes_iterator</type>
        <definition>typedef GTraits::nodes_iterator SVF::SCCDetection&lt; GraphType &gt;::node_iterator</definition>
        <argsstring></argsstring>
        <name>node_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="61" column="46" bodyfile="include/Util/SCC.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_s_c_c_detection_1ac1274a90ddbea6f1f0b539710505d902" prot="private" static="no">
        <type>GTraits::ChildIteratorType</type>
        <definition>typedef GTraits::ChildIteratorType SVF::SCCDetection&lt; GraphType &gt;::child_iterator</definition>
        <argsstring></argsstring>
        <name>child_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="62" column="49" bodyfile="include/Util/SCC.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_s_c_c_detection_1a4f954a92b432b96f63454b7db46b60e2" prot="private" static="no">
        <type>unsigned</type>
        <definition>typedef unsigned SVF::SCCDetection&lt; GraphType &gt;::NodeID</definition>
        <argsstring></argsstring>
        <name>NodeID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="63" column="22" bodyfile="include/Util/SCC.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_s_c_c_detection_1a84fc3aef6f950471a539b7d9fa3c1289" prot="public" static="no">
        <type>std::stack&lt; NodeID &gt;</type>
        <definition>typedef std::stack&lt;NodeID&gt; SVF::SCCDetection&lt; GraphType &gt;::GNodeStack</definition>
        <argsstring></argsstring>
        <name>GNodeStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="66" column="24" bodyfile="include/Util/SCC.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_s_c_c_detection_1a56c28264d14062354e3272a4a993a1ec" prot="public" static="no">
        <type>Map&lt; NodeID, <ref refid="class_s_v_f_1_1_s_c_c_detection_1_1_g_node_s_c_c_info" kindref="compound">GNodeSCCInfo</ref> &gt;</type>
        <definition>typedef Map&lt;NodeID,GNodeSCCInfo &gt; SVF::SCCDetection&lt; GraphType &gt;::GNODESCCInfoMap</definition>
        <argsstring></argsstring>
        <name>GNODESCCInfoMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="116" column="17" bodyfile="include/Util/SCC.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_s_c_c_detection_1a7e9a12e188a93ea8e571bac4e49e2a6b" prot="public" static="no">
        <type>Map&lt; NodeID, NodeID &gt;</type>
        <definition>typedef Map&lt;NodeID, NodeID&gt; SVF::SCCDetection&lt; GraphType &gt;::NodeToNodeMap</definition>
        <argsstring></argsstring>
        <name>NodeToNodeMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="117" column="17" bodyfile="include/Util/SCC.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_s_c_c_detection_1a55e1ac9dff59ff78d02e8799d306215b" prot="private" static="no" mutable="no">
        <type>GNODESCCInfoMap</type>
        <definition>GNODESCCInfoMap SVF::SCCDetection&lt; GraphType &gt;::_NodeSCCAuxInfo</definition>
        <argsstring></argsstring>
        <name>_NodeSCCAuxInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="192" column="22" bodyfile="include/Util/SCC.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_s_c_c_detection_1a2123596f26729d61b241cf468d8925d8" prot="private" static="no" mutable="no">
        <type>const GraphType &amp;</type>
        <definition>const GraphType&amp; SVF::SCCDetection&lt; GraphType &gt;::_graph</definition>
        <argsstring></argsstring>
        <name>_graph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="194" column="32" bodyfile="include/Util/SCC.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_s_c_c_detection_1a9105051438f60587df95a9dba618d008" prot="private" static="no" mutable="no">
        <type>NodeID</type>
        <definition>NodeID SVF::SCCDetection&lt; GraphType &gt;::_I</definition>
        <argsstring></argsstring>
        <name>_I</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="195" column="30" bodyfile="include/Util/SCC.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_s_c_c_detection_1a58b7ae8ed203311628dc5a84e1e79a5e" prot="private" static="no" mutable="no">
        <type>NodeToNodeMap</type>
        <definition>NodeToNodeMap SVF::SCCDetection&lt; GraphType &gt;::_D</definition>
        <argsstring></argsstring>
        <name>_D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="196" column="30" bodyfile="include/Util/SCC.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_s_c_c_detection_1a0e9ca6d916963160fb4ae9acec1c1fe9" prot="private" static="no" mutable="no">
        <type>GNodeStack</type>
        <definition>GNodeStack SVF::SCCDetection&lt; GraphType &gt;::_SS</definition>
        <argsstring></argsstring>
        <name>_SS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="197" column="28" bodyfile="include/Util/SCC.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_s_c_c_detection_1a0373c80345ffb147ba9a5f57e96d7745" prot="private" static="no" mutable="no">
        <type>GNodeStack</type>
        <definition>GNodeStack SVF::SCCDetection&lt; GraphType &gt;::_T</definition>
        <argsstring></argsstring>
        <name>_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="198" column="28" bodyfile="include/Util/SCC.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_s_c_c_detection_1a2b9605126ebb2abb1e16b3ccf99cf04b" prot="private" static="no" mutable="no">
        <type>NodeBS</type>
        <definition>NodeBS SVF::SCCDetection&lt; GraphType &gt;::repNodes</definition>
        <argsstring></argsstring>
        <name>repNodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="199" column="12" bodyfile="include/Util/SCC.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_s_c_c_detection_1a1bd915ba4079ddd5dd6e57a88129ffee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::SCCDetection&lt; GraphType &gt;::SCCDetection</definition>
        <argsstring>(const GraphType &amp;GT)</argsstring>
        <name>SCCDetection</name>
        <param>
          <type>const GraphType &amp;</type>
          <declname>GT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="119" column="5" bodyfile="include/Util/SCC.h" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_c_c_detection_1a6502c0a765ac1653474ffee651949f93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>GNodeStack &amp;</type>
        <definition>GNodeStack&amp; SVF::SCCDetection&lt; GraphType &gt;::topoNodeStack</definition>
        <argsstring>()</argsstring>
        <name>topoNodeStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="128" column="23" bodyfile="include/Util/SCC.h" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_c_c_detection_1ab3bdd1e73f95735a8f37566c3793bb36" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const GNODESCCInfoMap &amp;</type>
        <definition>const GNODESCCInfoMap&amp; SVF::SCCDetection&lt; GraphType &gt;::GNodeSCCInfo</definition>
        <argsstring>() const</argsstring>
        <name>GNodeSCCInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="133" column="35" bodyfile="include/Util/SCC.h" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_c_c_detection_1a3a5fdc9330a657240f77199f5aee602d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NodeID</type>
        <definition>NodeID SVF::SCCDetection&lt; GraphType &gt;::repNode</definition>
        <argsstring>(NodeID n) const</argsstring>
        <name>repNode</name>
        <param>
          <type>NodeID</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>get the rep node if not found return itself </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="139" column="19" bodyfile="include/Util/SCC.h" bodystart="139" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_c_c_detection_1a5d699af73b1e7ad4e3a5f6d26b8b6d15" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::SCCDetection&lt; GraphType &gt;::isInCycle</definition>
        <argsstring>(NodeID n) const</argsstring>
        <name>isInCycle</name>
        <param>
          <type>NodeID</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>whether the node is in a cycle </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="149" column="17" bodyfile="include/Util/SCC.h" bodystart="149" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_c_c_detection_1a6ab5eff6a576e6d8703c1ea29b7f425d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const NodeBS &amp;</type>
        <definition>const NodeBS&amp; SVF::SCCDetection&lt; GraphType &gt;::subNodes</definition>
        <argsstring>(NodeID n) const</argsstring>
        <name>subNodes</name>
        <param>
          <type>NodeID</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>get all subnodes in one scc, if size is empty insert itself into the set </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="173" column="25" bodyfile="include/Util/SCC.h" bodystart="173" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_c_c_detection_1a457973fa38fad89bbd2dc41ba041703e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const NodeBS &amp;</type>
        <definition>const NodeBS&amp; SVF::SCCDetection&lt; GraphType &gt;::getRepNodes</definition>
        <argsstring>() const</argsstring>
        <name>getRepNodes</name>
        <briefdescription>
<para>get all repNodeID </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="181" column="25" bodyfile="include/Util/SCC.h" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_c_c_detection_1a1b8b57a3ea3740f36a19afc8bd42033d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const GraphType &amp;</type>
        <definition>const GraphType&amp; SVF::SCCDetection&lt; GraphType &gt;::graph</definition>
        <argsstring>()</argsstring>
        <name>graph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="186" column="29" bodyfile="include/Util/SCC.h" bodystart="186" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_c_c_detection_1a123b5006a6da7053e5e357140da3c5a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::SCCDetection&lt; GraphType &gt;::find</definition>
        <argsstring>(void)</argsstring>
        <name>find</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="308" column="10" bodyfile="include/Util/SCC.h" bodystart="308" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_c_c_detection_1a1d0d98fd1286e71cfae50180cd2b1313" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::SCCDetection&lt; GraphType &gt;::find</definition>
        <argsstring>(NodeSet &amp;candidates)</argsstring>
        <name>find</name>
        <param>
          <type>NodeSet &amp;</type>
          <declname>candidates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="334" column="10" bodyfile="include/Util/SCC.h" bodystart="334" bodyend="348"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_s_v_f_1_1_s_c_c_detection_1aa7f342aa9281749d16bb377acf14c0d7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::SCCDetection&lt; GraphType &gt;::visited</definition>
        <argsstring>(NodeID n)</argsstring>
        <name>visited</name>
        <param>
          <type>NodeID</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="201" column="17" bodyfile="include/Util/SCC.h" bodystart="201" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_c_c_detection_1a60b977d41c29aa6ea01b94be12792351" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::SCCDetection&lt; GraphType &gt;::inSCC</definition>
        <argsstring>(NodeID n)</argsstring>
        <name>inSCC</name>
        <param>
          <type>NodeID</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="205" column="17" bodyfile="include/Util/SCC.h" bodystart="205" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_c_c_detection_1ad888a3dc94909823319384055896c84d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::SCCDetection&lt; GraphType &gt;::setVisited</definition>
        <argsstring>(NodeID n, bool v)</argsstring>
        <name>setVisited</name>
        <param>
          <type>NodeID</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="210" column="17" bodyfile="include/Util/SCC.h" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_c_c_detection_1aafe9ae9d158480e6a04803b25b61083e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::SCCDetection&lt; GraphType &gt;::setInSCC</definition>
        <argsstring>(NodeID n, bool v)</argsstring>
        <name>setInSCC</name>
        <param>
          <type>NodeID</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="214" column="17" bodyfile="include/Util/SCC.h" bodystart="214" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_c_c_detection_1a0495f912a9084b21327f678b47ef7e07" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::SCCDetection&lt; GraphType &gt;::rep</definition>
        <argsstring>(NodeID n, NodeID r)</argsstring>
        <name>rep</name>
        <param>
          <type>NodeID</type>
          <declname>n</declname>
        </param>
        <param>
          <type>NodeID</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="218" column="17" bodyfile="include/Util/SCC.h" bodystart="218" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_c_c_detection_1ac22aee5fdb22387b5bd0f612faef689c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodeID</type>
        <definition>NodeID SVF::SCCDetection&lt; GraphType &gt;::rep</definition>
        <argsstring>(NodeID n)</argsstring>
        <name>rep</name>
        <param>
          <type>NodeID</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="230" column="19" bodyfile="include/Util/SCC.h" bodystart="230" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_c_c_detection_1aff6c15443edca2559ae3f3d04ff45481" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::SCCDetection&lt; GraphType &gt;::isInSCC</definition>
        <argsstring>(NodeID n)</argsstring>
        <name>isInSCC</name>
        <param>
          <type>NodeID</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="234" column="17" bodyfile="include/Util/SCC.h" bodystart="234" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_c_c_detection_1a6458c27c625add944fcb8a3ef7b536a6" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>GNODE</type>
        <definition>GNODE SVF::SCCDetection&lt; GraphType &gt;::Node</definition>
        <argsstring>(NodeID id) const</argsstring>
        <name>Node</name>
        <param>
          <type>NodeID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="239" column="18" bodyfile="include/Util/SCC.h" bodystart="239" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_c_c_detection_1a5fa111bb849052b8a753194cd0cd5e0c" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NodeID</type>
        <definition>NodeID SVF::SCCDetection&lt; GraphType &gt;::Node_Index</definition>
        <argsstring>(GNODE node) const</argsstring>
        <name>Node_Index</name>
        <param>
          <type>GNODE</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="244" column="19" bodyfile="include/Util/SCC.h" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_c_c_detection_1af799d7043e501e43e04e51fd4d6c6571" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::SCCDetection&lt; GraphType &gt;::visit</definition>
        <argsstring>(NodeID v)</argsstring>
        <name>visit</name>
        <param>
          <type>NodeID</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="249" column="10" bodyfile="include/Util/SCC.h" bodystart="249" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_c_c_detection_1a3323ba77ae690533a0edcaebe82e20f5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::SCCDetection&lt; GraphType &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SCC.h" line="295" column="10" bodyfile="include/Util/SCC.h" bodystart="295" bodyend="305"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/Util/SCC.h" line="54" column="1" bodyfile="include/Util/SCC.h" bodystart="55" bodyend="350"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a58b7ae8ed203311628dc5a84e1e79a5e" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>_D</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a2123596f26729d61b241cf468d8925d8" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>_graph</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a9105051438f60587df95a9dba618d008" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>_I</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a55e1ac9dff59ff78d02e8799d306215b" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>_NodeSCCAuxInfo</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a0e9ca6d916963160fb4ae9acec1c1fe9" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>_SS</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a0373c80345ffb147ba9a5f57e96d7745" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>_T</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1ac1274a90ddbea6f1f0b539710505d902" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>child_iterator</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a3323ba77ae690533a0edcaebe82e20f5" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>clear</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a123b5006a6da7053e5e357140da3c5a3" prot="public" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>find</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a1d0d98fd1286e71cfae50180cd2b1313" prot="public" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>find</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a457973fa38fad89bbd2dc41ba041703e" prot="public" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>getRepNodes</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a7d7b354d8a7ce69b27dc775ccd192a62" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>GNODE</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1ab3bdd1e73f95735a8f37566c3793bb36" prot="public" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>GNodeSCCInfo</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a56c28264d14062354e3272a4a993a1ec" prot="public" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>GNODESCCInfoMap</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a84fc3aef6f950471a539b7d9fa3c1289" prot="public" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>GNodeStack</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a1b8b57a3ea3740f36a19afc8bd42033d" prot="public" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>graph</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1aaee4b4afbfb6efa02c537529e3cebfef" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>GTraits</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a60b977d41c29aa6ea01b94be12792351" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>inSCC</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a5d699af73b1e7ad4e3a5f6d26b8b6d15" prot="public" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>isInCycle</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1aff6c15443edca2559ae3f3d04ff45481" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>isInSCC</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a6458c27c625add944fcb8a3ef7b536a6" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>Node</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a5fa111bb849052b8a753194cd0cd5e0c" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>Node_Index</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1abaf75ef45e8f5349b902dab063999ad8" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>node_iterator</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a4f954a92b432b96f63454b7db46b60e2" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>NodeID</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a7e9a12e188a93ea8e571bac4e49e2a6b" prot="public" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>NodeToNodeMap</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a0495f912a9084b21327f678b47ef7e07" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>rep</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1ac22aee5fdb22387b5bd0f612faef689c" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>rep</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a3a5fdc9330a657240f77199f5aee602d" prot="public" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>repNode</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a2b9605126ebb2abb1e16b3ccf99cf04b" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>repNodes</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a1bd915ba4079ddd5dd6e57a88129ffee" prot="public" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>SCCDetection</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1aafe9ae9d158480e6a04803b25b61083e" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>setInSCC</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1ad888a3dc94909823319384055896c84d" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>setVisited</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a6ab5eff6a576e6d8703c1ea29b7f425d" prot="public" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>subNodes</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1a6502c0a765ac1653474ffee651949f93" prot="public" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>topoNodeStack</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1af799d7043e501e43e04e51fd4d6c6571" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>visit</name></member>
      <member refid="class_s_v_f_1_1_s_c_c_detection_1aa7f342aa9281749d16bb377acf14c0d7" prot="private" virt="non-virtual"><scope>SVF::SCCDetection</scope><name>visited</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
