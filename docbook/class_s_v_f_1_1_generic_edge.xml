<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_generic_edge" xml:lang="en-US">
<title>SVF::GenericEdge&lt; NodeTy &gt; Class Template Reference</title>
<indexterm><primary>SVF::GenericEdge&lt; NodeTy &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;GenericGraph.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for SVF::GenericEdge&lt; NodeTy &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_generic_edge.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_s_v_f_1_1_generic_edge_1_1equal_g_edge">equalGEdge</link></para>

<para>Add the hash function for std::set (we also can overload operator&lt; to implement this) </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_edge_1aff95460d4b859e657a9198b7c5e5c736"/>typedef NodeTy <link linkend="_class_s_v_f_1_1_generic_edge_1aff95460d4b859e657a9198b7c5e5c736">NodeType</link></para>

<para>Node type. </para>
</listitem>
            <listitem><para>typedef u64_t <link linkend="_class_s_v_f_1_1_generic_edge_1aab8892b73370c32b48621cd1d0cce614">GEdgeFlag</link></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_edge_1a7eb93c9018c80057672a8ce71615dc0d"/>typedef s32_t <emphasis role="strong">GEdgeKind</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_edge_1a6764973569c281d483afab17a75cb4dc"/><link linkend="_class_s_v_f_1_1_generic_edge_1a6764973569c281d483afab17a75cb4dc">GenericEdge</link> (NodeTy *s, NodeTy *d, <link linkend="_class_s_v_f_1_1_generic_edge_1aab8892b73370c32b48621cd1d0cce614">GEdgeFlag</link> k)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_edge_1a548daea0cac6491de91d4840b7297741"/>virtual <link linkend="_class_s_v_f_1_1_generic_edge_1a548daea0cac6491de91d4840b7297741">~GenericEdge</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_edge_1ae6792506a0150a9400d635eceab7f9e7"/>NodeID <link linkend="_class_s_v_f_1_1_generic_edge_1ae6792506a0150a9400d635eceab7f9e7">getSrcID</link> () const</para>

<para>get methods of the components </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_edge_1ad9edb45e74ae675d9da82f5acf02d56e"/>NodeID <emphasis role="strong">getDstID</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_edge_1abe8525c542def8162b094c169a01993b"/>GEdgeKind <emphasis role="strong">getEdgeKind</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_edge_1ab47ca533c415841ef75456cbad439589"/><link linkend="_class_s_v_f_1_1_generic_edge_1aff95460d4b859e657a9198b7c5e5c736">NodeType</link> * <emphasis role="strong">getSrcNode</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_edge_1aeaa31a2c8479e831b36ce2e2582ceb86"/><link linkend="_class_s_v_f_1_1_generic_edge_1aff95460d4b859e657a9198b7c5e5c736">NodeType</link> * <emphasis role="strong">getDstNode</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_edge_1a88b2086dcebb60bc86bca0fb94f49fca"/>bool <emphasis role="strong">operator==</emphasis> (const <link linkend="_class_s_v_f_1_1_generic_edge">GenericEdge</link>&lt; <link linkend="_class_s_v_f_1_1_generic_edge_1aff95460d4b859e657a9198b7c5e5c736">NodeType</link> &gt; *rhs) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_edge_1af1c2fd4b5ef1d7b7605572bf2489c298"/>static constexpr unsigned char <link linkend="_class_s_v_f_1_1_generic_edge_1af1c2fd4b5ef1d7b7605572bf2489c298">EdgeKindMaskBits</link> = 8</para>

<para>We use the lower 8 bits to denote edge kind. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_generic_edge_1a93dec4c27088242a4b1b6aa82cea46b9"/>static constexpr u64_t <emphasis role="strong">EdgeKindMask</emphasis> = (~0ULL) &gt;&gt; (64 - <link linkend="_class_s_v_f_1_1_generic_edge_1af1c2fd4b5ef1d7b7605572bf2489c298">EdgeKindMaskBits</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;class NodeTy&gt;
class SVF::GenericEdge&lt; NodeTy &gt;</title></simplesect>


<para>Generic edge on the graph as base class </para>
</section>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_generic_edge_1aab8892b73370c32b48621cd1d0cce614"/>    <section>
    <title>GEdgeFlag</title>
<indexterm><primary>GEdgeFlag</primary><secondary>SVF::GenericEdge&lt; NodeTy &gt;</secondary></indexterm>
<indexterm><primary>SVF::GenericEdge&lt; NodeTy &gt;</primary><secondary>GEdgeFlag</secondary></indexterm>
<computeroutput>template&lt;class NodeTy &gt; </computeroutput><para><computeroutput>typedef u64_t <link linkend="_class_s_v_f_1_1_generic_edge">SVF::GenericEdge</link>&lt; NodeTy &gt;::<link linkend="_class_s_v_f_1_1_generic_edge_1aab8892b73370c32b48621cd1d0cce614">GEdgeFlag</link></computeroutput></para>
<para>Edge Flag Edge format as follows (from lowest bit): (1) 0-7 bits encode an edge kind (allow maximum 16 kinds) (2) 8-63 bits encode a callsite instruction </para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
include/Graphs/GenericGraph.h</section>
</section>
