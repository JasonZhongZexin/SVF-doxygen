<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_cxt_thread_stmt" xml:lang="en-US">
<title>SVF::CxtThreadStmt Class Reference</title>
<indexterm><primary>SVF::CxtThreadStmt</primary></indexterm>
<para>
<computeroutput>#include &lt;CxtStmt.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for SVF::CxtThreadStmt:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_cxt_thread_stmt.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_thread_stmt_1adeef75dbfd24665521931780c70aa5f9"/><link linkend="_class_s_v_f_1_1_cxt_thread_stmt_1adeef75dbfd24665521931780c70aa5f9">CxtThreadStmt</link> (NodeID t, const CallStrCxt &amp;c, const Instruction *f)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_thread_stmt_1ab5487e3f330bb18685281c5effcecfbb"/><link linkend="_class_s_v_f_1_1_cxt_thread_stmt_1ab5487e3f330bb18685281c5effcecfbb">CxtThreadStmt</link> (const <link linkend="_class_s_v_f_1_1_cxt_thread_stmt">CxtThreadStmt</link> &amp;ctm)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_thread_stmt_1ac0e7ead3d4c1eff31437d980c7527361"/>virtual <link linkend="_class_s_v_f_1_1_cxt_thread_stmt_1ac0e7ead3d4c1eff31437d980c7527361">~CxtThreadStmt</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_thread_stmt_1a3b8f641f2fb7ade7052cae1ee6463884"/>NodeID <link linkend="_class_s_v_f_1_1_cxt_thread_stmt_1a3b8f641f2fb7ade7052cae1ee6463884">getTid</link> () const</para>

<para>Return current context. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_s_v_f_1_1_cxt_thread_stmt_1affaa3bf793e1127a8333b6683ebb3fdd">operator&lt;</link> (const <link linkend="_class_s_v_f_1_1_cxt_thread_stmt">CxtThreadStmt</link> &amp;rhs) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_thread_stmt_1a894849e24d01f80463a207e0c8f2548f"/><link linkend="_class_s_v_f_1_1_cxt_thread_stmt">CxtThreadStmt</link> &amp; <link linkend="_class_s_v_f_1_1_cxt_thread_stmt_1a894849e24d01f80463a207e0c8f2548f">operator=</link> (const <link linkend="_class_s_v_f_1_1_cxt_thread_stmt">CxtThreadStmt</link> &amp;rhs)</para>

<para>Overloading operator=. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_thread_stmt_1af8f221ea17599dfb678922e1bad37f35"/>bool <link linkend="_class_s_v_f_1_1_cxt_thread_stmt_1af8f221ea17599dfb678922e1bad37f35">operator==</link> (const <link linkend="_class_s_v_f_1_1_cxt_thread_stmt">CxtThreadStmt</link> &amp;rhs) const</para>

<para>Overloading operator==. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_thread_stmt_1ab900fccf35773064aae491d552df3825"/>bool <link linkend="_class_s_v_f_1_1_cxt_thread_stmt_1ab900fccf35773064aae491d552df3825">operator!=</link> (const <link linkend="_class_s_v_f_1_1_cxt_thread_stmt">CxtThreadStmt</link> &amp;rhs) const</para>

<para>Overloading operator==. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_thread_stmt_1a735d71af28b26d9576f679e53141e303"/>void <link linkend="_class_s_v_f_1_1_cxt_thread_stmt_1a735d71af28b26d9576f679e53141e303">dump</link> () const</para>

<para>Dump <link linkend="_class_s_v_f_1_1_cxt_thread_stmt">CxtThreadStmt</link>. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Context-sensitive thread statement &lt;t,c,s&gt; </para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_cxt_thread_stmt_1affaa3bf793e1127a8333b6683ebb3fdd"/>    <section>
    <title>operator&lt;()</title>
<indexterm><primary>operator&lt;</primary><secondary>SVF::CxtThreadStmt</secondary></indexterm>
<indexterm><primary>SVF::CxtThreadStmt</primary><secondary>operator&lt;</secondary></indexterm>
<para><computeroutput>bool SVF::CxtThreadStmt::operator&lt; (const <link linkend="_class_s_v_f_1_1_cxt_thread_stmt">CxtThreadStmt</link> &amp; rhs) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Enable compare operator to avoid duplicated item insertion in map or set to be noted that two vectors can also overload operator() </para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
include/Util/CxtStmt.h</section>
</section>
