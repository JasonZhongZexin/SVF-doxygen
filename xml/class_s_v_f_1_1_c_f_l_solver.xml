<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_c_f_l_solver" kind="class" language="C++" prot="public">
    <compoundname>SVF::CFLSolver</compoundname>
    <derivedcompoundref refid="class_s_v_f_1_1_src_snk_d_d_a" prot="public" virt="non-virtual">SVF::SrcSnkDDA</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class GraphType</type>
      </param>
      <param>
        <type>class DPIm</type>
        <defval><ref refid="class_s_v_f_1_1_d_p_item" kindref="compound">DPItem</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_c_f_l_solver_1afdead1450dbc71d4430ab660733ff85c" prot="public" static="no">
        <type>llvm::GraphTraits&lt; GraphType &gt;</type>
        <definition>typedef llvm::GraphTraits&lt;GraphType&gt; SVF::CFLSolver&lt; GraphType, DPIm &gt;::GTraits</definition>
        <argsstring></argsstring>
        <name>GTraits</name>
        <briefdescription>
<para>Define the GTraits and node iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="49" column="31" bodyfile="include/Util/CFLSolver.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_c_f_l_solver_1a7a180d7878fc7b4c055fa72298398127" prot="public" static="no">
        <type>GTraits::NodeType</type>
        <definition>typedef GTraits::NodeType SVF::CFLSolver&lt; GraphType, DPIm &gt;::GNODE</definition>
        <argsstring></argsstring>
        <name>GNODE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="50" column="49" bodyfile="include/Util/CFLSolver.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_c_f_l_solver_1aaddd6c593ad39c117bd35ede711b9f36" prot="public" static="no">
        <type>GTraits::EdgeType</type>
        <definition>typedef GTraits::EdgeType SVF::CFLSolver&lt; GraphType, DPIm &gt;::GEDGE</definition>
        <argsstring></argsstring>
        <name>GEDGE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="51" column="49" bodyfile="include/Util/CFLSolver.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_c_f_l_solver_1a586cfb2dd110d1853e70e534e0f66624" prot="public" static="no">
        <type>GTraits::nodes_iterator</type>
        <definition>typedef GTraits::nodes_iterator SVF::CFLSolver&lt; GraphType, DPIm &gt;::node_iterator</definition>
        <argsstring></argsstring>
        <name>node_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="52" column="46" bodyfile="include/Util/CFLSolver.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_c_f_l_solver_1adf0b96a758a29d5c3c46fcc48081b62c" prot="public" static="no">
        <type>GTraits::ChildIteratorType</type>
        <definition>typedef GTraits::ChildIteratorType SVF::CFLSolver&lt; GraphType, DPIm &gt;::child_iterator</definition>
        <argsstring></argsstring>
        <name>child_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="53" column="49" bodyfile="include/Util/CFLSolver.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_c_f_l_solver_1ae507eecc97716000324820bb1a7a9573" prot="public" static="no">
        <type>llvm::GraphTraits&lt; llvm::Inverse&lt; GNODE * &gt; &gt;</type>
        <definition>typedef llvm::GraphTraits&lt;llvm::Inverse&lt;GNODE *&gt; &gt; SVF::CFLSolver&lt; GraphType, DPIm &gt;::InvGTraits</definition>
        <argsstring></argsstring>
        <name>InvGTraits</name>
        <briefdescription>
<para>Define inverse GTraits and note iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="56" column="31" bodyfile="include/Util/CFLSolver.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_c_f_l_solver_1a98613e4d455a53183d1f16a58de6244e" prot="public" static="no">
        <type>InvGTraits::ChildIteratorType</type>
        <definition>typedef InvGTraits::ChildIteratorType SVF::CFLSolver&lt; GraphType, DPIm &gt;::inv_child_iterator</definition>
        <argsstring></argsstring>
        <name>inv_child_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="57" column="52" bodyfile="include/Util/CFLSolver.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_c_f_l_solver_1a802e04eafce9adfd60506c44951c3d53" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_f_i_f_o_work_list" kindref="compound">FIFOWorkList</ref>&lt; DPIm &gt;</type>
        <definition>typedef FIFOWorkList&lt;DPIm&gt; SVF::CFLSolver&lt; GraphType, DPIm &gt;::WorkList</definition>
        <argsstring></argsstring>
        <name>WorkList</name>
        <briefdescription>
<para>Define worklist. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="60" column="26" bodyfile="include/Util/CFLSolver.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_c_f_l_solver_1a26e81753961ccb80b08d5c3ef7c4a141" prot="private" static="no" mutable="no">
        <type>GraphType</type>
        <definition>GraphType SVF::CFLSolver&lt; GraphType, DPIm &gt;::_graph</definition>
        <argsstring></argsstring>
        <name>_graph</name>
        <briefdescription>
<para>Graph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="177" column="15" bodyfile="include/Util/CFLSolver.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_c_f_l_solver_1a9d3cbcb9db049e3069b6553ab17ccf5b" prot="private" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_c_f_l_solver_1a802e04eafce9adfd60506c44951c3d53" kindref="member">WorkList</ref></type>
        <definition>WorkList SVF::CFLSolver&lt; GraphType, DPIm &gt;::worklist</definition>
        <argsstring></argsstring>
        <name>worklist</name>
        <briefdescription>
<para>Worklist for resolution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="180" column="14" bodyfile="include/Util/CFLSolver.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_s_v_f_1_1_c_f_l_solver_1ab339e69dd2f2aa2f98fb549e979838af" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::CFLSolver&lt; GraphType, DPIm &gt;::CFLSolver</definition>
        <argsstring>()</argsstring>
        <name>CFLSolver</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="65" column="5" bodyfile="include/Util/CFLSolver.h" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_f_l_solver_1ac37d5e6e81edcc0a6c53e02d7d343f5b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::CFLSolver&lt; GraphType, DPIm &gt;::~CFLSolver</definition>
        <argsstring>()</argsstring>
        <name>~CFLSolver</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="69" column="13" bodyfile="include/Util/CFLSolver.h" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_f_l_solver_1a9fc4cbe8985d4c25845d408ffcac13e4" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const GraphType</type>
        <definition>const GraphType SVF::CFLSolver&lt; GraphType, DPIm &gt;::graph</definition>
        <argsstring>() const</argsstring>
        <name>graph</name>
        <briefdescription>
<para>Get/Set graph methods. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="74" column="28" bodyfile="include/Util/CFLSolver.h" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_f_l_solver_1ae0a02179b2489f65988819666ec52a7c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::CFLSolver&lt; GraphType, DPIm &gt;::setGraph</definition>
        <argsstring>(GraphType g)</argsstring>
        <name>setGraph</name>
        <param>
          <type>GraphType</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="78" column="17" bodyfile="include/Util/CFLSolver.h" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_f_l_solver_1adaa8ca9296ec3e9b6ec544a105296d22" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>GNODE *</type>
        <definition>GNODE* SVF::CFLSolver&lt; GraphType, DPIm &gt;::getNode</definition>
        <argsstring>(NodeID id) const</argsstring>
        <name>getNode</name>
        <param>
          <type>NodeID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="84" column="18" bodyfile="include/Util/CFLSolver.h" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_f_l_solver_1a31199503d0ed7aff97d4620b3599dea6" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>NodeID</type>
        <definition>virtual NodeID SVF::CFLSolver&lt; GraphType, DPIm &gt;::getNodeIDFromItem</definition>
        <argsstring>(const DPIm &amp;item) const</argsstring>
        <name>getNodeIDFromItem</name>
        <param>
          <type>const DPIm &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="88" column="27" bodyfile="include/Util/CFLSolver.h" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_f_l_solver_1ac9dc4e29fde45a19d42987360ee5f528" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::CFLSolver&lt; GraphType, DPIm &gt;::forwardTraverse</definition>
        <argsstring>(DPIm &amp;it)</argsstring>
        <name>forwardTraverse</name>
        <param>
          <type>DPIm &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
<para>CFL forward traverse solve. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="93" column="18" bodyfile="include/Util/CFLSolver.h" bodystart="93" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_f_l_solver_1abf651315ae100f9d4df5d183f7d43c68" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::CFLSolver&lt; GraphType, DPIm &gt;::backwardTraverse</definition>
        <argsstring>(DPIm &amp;it)</argsstring>
        <name>backwardTraverse</name>
        <param>
          <type>DPIm &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
<para>CFL forward traverse solve. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="112" column="18" bodyfile="include/Util/CFLSolver.h" bodystart="112" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_f_l_solver_1a6d7361281bbf666a2f5da87f7ea869d2" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::CFLSolver&lt; GraphType, DPIm &gt;::FWProcessCurNode</definition>
        <argsstring>(const DPIm &amp;)</argsstring>
        <name>FWProcessCurNode</name>
        <param>
          <type>const DPIm &amp;</type>
        </param>
        <briefdescription>
<para>Process the DP item. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="132" column="18" bodyfile="include/Util/CFLSolver.h" bodystart="132" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_f_l_solver_1ab444cce6a5c75c7e6c65d47039e567a8" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::CFLSolver&lt; GraphType, DPIm &gt;::BWProcessCurNode</definition>
        <argsstring>(const DPIm &amp;)</argsstring>
        <name>BWProcessCurNode</name>
        <param>
          <type>const DPIm &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="135" column="18" bodyfile="include/Util/CFLSolver.h" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_f_l_solver_1a39b079c9b8a1b4570176028de79e85a4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::CFLSolver&lt; GraphType, DPIm &gt;::FWProcessOutgoingEdge</definition>
        <argsstring>(const DPIm &amp;item, GEDGE *edge)</argsstring>
        <name>FWProcessOutgoingEdge</name>
        <param>
          <type>const DPIm &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>GEDGE *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
<para>Propagation for the solving, to be implemented in the child class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="141" column="18" bodyfile="include/Util/CFLSolver.h" bodystart="141" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_f_l_solver_1a3d5550fbb149297022d5a1852f3229b3" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::CFLSolver&lt; GraphType, DPIm &gt;::BWProcessIncomingEdge</definition>
        <argsstring>(const DPIm &amp;item, GEDGE *edge)</argsstring>
        <name>BWProcessIncomingEdge</name>
        <param>
          <type>const DPIm &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>GEDGE *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="147" column="18" bodyfile="include/Util/CFLSolver.h" bodystart="147" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_f_l_solver_1a88f770b4762d44e50d72cd50bb504078" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DPIm</type>
        <definition>DPIm SVF::CFLSolver&lt; GraphType, DPIm &gt;::popFromWorklist</definition>
        <argsstring>()</argsstring>
        <name>popFromWorklist</name>
        <briefdescription>
<para>Worklist operations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="156" column="17" bodyfile="include/Util/CFLSolver.h" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_f_l_solver_1a28cd2677717b19c9cd8ab3c1c441d409" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::CFLSolver&lt; GraphType, DPIm &gt;::pushIntoWorklist</definition>
        <argsstring>(DPIm &amp;item)</argsstring>
        <name>pushIntoWorklist</name>
        <param>
          <type>DPIm &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="160" column="17" bodyfile="include/Util/CFLSolver.h" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_f_l_solver_1a4f35edfc7c4e4a35c9948ab5abd1a6ad" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::CFLSolver&lt; GraphType, DPIm &gt;::isWorklistEmpty</definition>
        <argsstring>()</argsstring>
        <name>isWorklistEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="164" column="17" bodyfile="include/Util/CFLSolver.h" bodystart="164" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_f_l_solver_1a435454f52e5be39c960052f1947b984d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::CFLSolver&lt; GraphType, DPIm &gt;::isInWorklist</definition>
        <argsstring>(DPIm &amp;item)</argsstring>
        <name>isInWorklist</name>
        <param>
          <type>DPIm &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/CFLSolver.h" line="168" column="17" bodyfile="include/Util/CFLSolver.h" bodystart="168" bodyend="171"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>SVF::DoubleFreeChecker</label>
        <link refid="class_s_v_f_1_1_double_free_checker"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>SVF::FileChecker</label>
        <link refid="class_s_v_f_1_1_file_checker"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SVF::LeakChecker</label>
        <link refid="class_s_v_f_1_1_leak_checker"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SVF::SrcSnkDDA&lt; SVFG *, CxtDPItem &gt;</label>
        <link refid="class_s_v_f_1_1_src_snk_d_d_a"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>SVF::CFLSolver&lt; GraphType, DPIm &gt;</label>
        <link refid="class_s_v_f_1_1_c_f_l_solver"/>
      </node>
    </inheritancegraph>
    <location file="include/Util/CFLSolver.h" line="44" column="1" bodyfile="include/Util/CFLSolver.h" bodystart="45" bodyend="182"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a26e81753961ccb80b08d5c3ef7c4a141" prot="private" virt="non-virtual"><scope>SVF::CFLSolver</scope><name>_graph</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1abf651315ae100f9d4df5d183f7d43c68" prot="protected" virt="virtual"><scope>SVF::CFLSolver</scope><name>backwardTraverse</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1ab444cce6a5c75c7e6c65d47039e567a8" prot="protected" virt="virtual"><scope>SVF::CFLSolver</scope><name>BWProcessCurNode</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a3d5550fbb149297022d5a1852f3229b3" prot="protected" virt="virtual"><scope>SVF::CFLSolver</scope><name>BWProcessIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1ab339e69dd2f2aa2f98fb549e979838af" prot="protected" virt="non-virtual"><scope>SVF::CFLSolver</scope><name>CFLSolver</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1adf0b96a758a29d5c3c46fcc48081b62c" prot="public" virt="non-virtual"><scope>SVF::CFLSolver</scope><name>child_iterator</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1ac9dc4e29fde45a19d42987360ee5f528" prot="protected" virt="virtual"><scope>SVF::CFLSolver</scope><name>forwardTraverse</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a6d7361281bbf666a2f5da87f7ea869d2" prot="protected" virt="virtual"><scope>SVF::CFLSolver</scope><name>FWProcessCurNode</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a39b079c9b8a1b4570176028de79e85a4" prot="protected" virt="virtual"><scope>SVF::CFLSolver</scope><name>FWProcessOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1aaddd6c593ad39c117bd35ede711b9f36" prot="public" virt="non-virtual"><scope>SVF::CFLSolver</scope><name>GEDGE</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1adaa8ca9296ec3e9b6ec544a105296d22" prot="protected" virt="non-virtual"><scope>SVF::CFLSolver</scope><name>getNode</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a31199503d0ed7aff97d4620b3599dea6" prot="protected" virt="virtual"><scope>SVF::CFLSolver</scope><name>getNodeIDFromItem</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a7a180d7878fc7b4c055fa72298398127" prot="public" virt="non-virtual"><scope>SVF::CFLSolver</scope><name>GNODE</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a9fc4cbe8985d4c25845d408ffcac13e4" prot="protected" virt="non-virtual"><scope>SVF::CFLSolver</scope><name>graph</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1afdead1450dbc71d4430ab660733ff85c" prot="public" virt="non-virtual"><scope>SVF::CFLSolver</scope><name>GTraits</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a98613e4d455a53183d1f16a58de6244e" prot="public" virt="non-virtual"><scope>SVF::CFLSolver</scope><name>inv_child_iterator</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1ae507eecc97716000324820bb1a7a9573" prot="public" virt="non-virtual"><scope>SVF::CFLSolver</scope><name>InvGTraits</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a435454f52e5be39c960052f1947b984d" prot="protected" virt="non-virtual"><scope>SVF::CFLSolver</scope><name>isInWorklist</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a4f35edfc7c4e4a35c9948ab5abd1a6ad" prot="protected" virt="non-virtual"><scope>SVF::CFLSolver</scope><name>isWorklistEmpty</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a586cfb2dd110d1853e70e534e0f66624" prot="public" virt="non-virtual"><scope>SVF::CFLSolver</scope><name>node_iterator</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a88f770b4762d44e50d72cd50bb504078" prot="protected" virt="non-virtual"><scope>SVF::CFLSolver</scope><name>popFromWorklist</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a28cd2677717b19c9cd8ab3c1c441d409" prot="protected" virt="non-virtual"><scope>SVF::CFLSolver</scope><name>pushIntoWorklist</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1ae0a02179b2489f65988819666ec52a7c" prot="protected" virt="non-virtual"><scope>SVF::CFLSolver</scope><name>setGraph</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a802e04eafce9adfd60506c44951c3d53" prot="public" virt="non-virtual"><scope>SVF::CFLSolver</scope><name>WorkList</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a9d3cbcb9db049e3069b6553ab17ccf5b" prot="private" virt="non-virtual"><scope>SVF::CFLSolver</scope><name>worklist</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1ac37d5e6e81edcc0a6c53e02d7d343f5b" prot="protected" virt="virtual"><scope>SVF::CFLSolver</scope><name>~CFLSolver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
