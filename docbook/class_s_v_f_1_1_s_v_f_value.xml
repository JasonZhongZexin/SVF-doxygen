<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_s_v_f_value" xml:lang="en-US">
<title>SVF::SVFValue Class Reference</title>
<indexterm><primary>SVF::SVFValue</primary></indexterm>
<para>Inheritance diagram for SVF::SVFValue:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_s_v_f_value.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_value_1afb50ea5aeea7a0608a3c9335aea6860e"/>enum <emphasis role="strong">SVFValKind</emphasis> { 
<emphasis role="strong">SVFVal</emphasis>
, <emphasis role="strong">SVFFunc</emphasis>
, <emphasis role="strong">SVFGlob</emphasis>
, <emphasis role="strong">SVFBB</emphasis>
, 
<emphasis role="strong">SVFInst</emphasis>
 }</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_value_1a7e98da47d88c46dfd2c7124c43f6a885"/>typedef s32_t <emphasis role="strong">GNodeK</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_value_1ac42927fed1c213852daceb902478d9c8"/><link linkend="_class_s_v_f_1_1_s_v_f_value_1ac42927fed1c213852daceb902478d9c8">SVFValue</link> (const std::string &amp;val, SVFValKind k)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_value_1a2ba3206a8461ef82713264e235128826"/>GNodeK <link linkend="_class_s_v_f_1_1_s_v_f_value_1a2ba3206a8461ef82713264e235128826">getKind</link> () const</para>

<para>Get the type of this <link linkend="_class_s_v_f_1_1_s_v_f_value">SVFValue</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_value_1abaa61e04b128feff7216d3ecdf4feefa"/>bool <link linkend="_class_s_v_f_1_1_s_v_f_value_1abaa61e04b128feff7216d3ecdf4feefa">operator()</link> (const <link linkend="_class_s_v_f_1_1_s_v_f_value">SVFValue</link> *lhs, const <link linkend="_class_s_v_f_1_1_s_v_f_value">SVFValue</link> *rhs) const</para>

<para>Add the hash function for std::set (we also can overload operator&lt; to implement this) </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_value_1aa171d1126f4ac00c3310d58d9b77c587"/>bool <emphasis role="strong">operator==</emphasis> (<link linkend="_class_s_v_f_1_1_s_v_f_value">SVFValue</link> *rhs) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_value_1ac64744d3e0c41be76ceef4b5715050b5"/>bool <emphasis role="strong">operator!=</emphasis> (<link linkend="_class_s_v_f_1_1_s_v_f_value">SVFValue</link> *rhs) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_value_1adc15c1f7a77158142156fba7524e89c9"/>const llvm::StringRef <emphasis role="strong">getName</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_value_1a50f77757ac9c37a9501eb48deccdfef1"/>const std::string &amp; <emphasis role="strong">getValue</emphasis> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_value_1a1f2c6271dfefc6db685569e6c0cbedf5"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_class_s_v_f_1_1_s_v_f_value">SVFValue</link> *node)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_value_1a149a1e1c616bb0b9a265c2279737a67a"/>llvm::raw_ostream &amp; <link linkend="_class_s_v_f_1_1_s_v_f_value_1a149a1e1c616bb0b9a265c2279737a67a">operator&lt;&lt;</link> (llvm::raw_ostream &amp;o, const <link linkend="_class_s_v_f_1_1_s_v_f_value">SVFValue</link> &amp;node)</para>

<para>Overloading operator &lt;&lt; for dumping <link linkend="_class_s_v_f_1_1_i_c_f_g">ICFG</link> node ID. </para>
</listitem>
        </itemizedlist>
</simplesect>
<para>
The documentation for this class was generated from the following file:</para>
include/Util/SVFBasicTypes.h</section>
