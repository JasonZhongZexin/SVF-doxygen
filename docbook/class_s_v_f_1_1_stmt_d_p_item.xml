<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_stmt_d_p_item" xml:lang="en-US">
<title>SVF::StmtDPItem&lt; LocCond &gt; Class Template Reference</title>
<indexterm><primary>SVF::StmtDPItem&lt; LocCond &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;DPItem.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for SVF::StmtDPItem&lt; LocCond &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_stmt_d_p_item.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_stmt_d_p_item_1aed9239e5558569f6e957e691fa1872d7"/><link linkend="_class_s_v_f_1_1_stmt_d_p_item_1aed9239e5558569f6e957e691fa1872d7">StmtDPItem</link> (NodeID c, const LocCond *locCond)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_stmt_d_p_item_1a3882dc175baaccfa1f811dcbfef98f71"/><link linkend="_class_s_v_f_1_1_stmt_d_p_item_1a3882dc175baaccfa1f811dcbfef98f71">StmtDPItem</link> (const <link linkend="_class_s_v_f_1_1_stmt_d_p_item">StmtDPItem</link> &amp;dps)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_stmt_d_p_item_1a710bee7fe8262d1fe8ed9c6160562abb"/>virtual <link linkend="_class_s_v_f_1_1_stmt_d_p_item_1a710bee7fe8262d1fe8ed9c6160562abb">~StmtDPItem</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_stmt_d_p_item_1a3616c94c4394b61c757ffcd39888d5b9"/>const LocCond * <link linkend="_class_s_v_f_1_1_stmt_d_p_item_1a3616c94c4394b61c757ffcd39888d5b9">getLoc</link> () const</para>

<para>Get context. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_stmt_d_p_item_1a9ba9ab1013a36530369aa6d684397f4f"/>void <link linkend="_class_s_v_f_1_1_stmt_d_p_item_1a9ba9ab1013a36530369aa6d684397f4f">setLoc</link> (const LocCond *l)</para>

<para>Set location. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_stmt_d_p_item_1a3feb4bc8e003cfdd30c1b2cfb2219efb"/>void <link linkend="_class_s_v_f_1_1_stmt_d_p_item_1a3feb4bc8e003cfdd30c1b2cfb2219efb">setLocVar</link> (const LocCond *l, NodeID v)</para>

<para>Set location and pointer id. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_s_v_f_1_1_stmt_d_p_item_1af92976dc7a8785165cefb047e742cdf6">operator&lt;</link> (const <link linkend="_class_s_v_f_1_1_stmt_d_p_item">StmtDPItem</link> &amp;rhs) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_stmt_d_p_item_1a072da7dc37fd3f9b7a79196394382499"/><link linkend="_class_s_v_f_1_1_stmt_d_p_item">StmtDPItem</link> &amp; <link linkend="_class_s_v_f_1_1_stmt_d_p_item_1a072da7dc37fd3f9b7a79196394382499">operator=</link> (const <link linkend="_class_s_v_f_1_1_stmt_d_p_item">StmtDPItem</link> &amp;rhs)</para>

<para>Overloading operator==. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_stmt_d_p_item_1afd63ae0d881101d6c61709b9ac25dbf8"/>bool <link linkend="_class_s_v_f_1_1_stmt_d_p_item_1afd63ae0d881101d6c61709b9ac25dbf8">operator==</link> (const <link linkend="_class_s_v_f_1_1_stmt_d_p_item">StmtDPItem</link> &amp;rhs) const</para>

<para>Overloading operator==. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_stmt_d_p_item_1ab89875a3b692ed348b1b28bb9a173254"/>bool <link linkend="_class_s_v_f_1_1_stmt_d_p_item_1ab89875a3b692ed348b1b28bb9a173254">operator!=</link> (const <link linkend="_class_s_v_f_1_1_stmt_d_p_item">StmtDPItem</link> &amp;rhs) const</para>

<para>Overloading operator!=. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_stmt_d_p_item_1a6cc1361dd5777cb4b93fb93c3899cfc7"/>void <emphasis role="strong">dump</emphasis> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_stmt_d_p_item_1a9e20ebd5ae8272a4aef74914098f97ef"/>const LocCond * <emphasis role="strong">curloc</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;class LocCond&gt;
class SVF::StmtDPItem&lt; LocCond &gt;</title></simplesect>


<para><link linkend="_class_s_v_f_1_1_flow_sensitive">FlowSensitive</link> <link linkend="_class_s_v_f_1_1_d_p_item">DPItem</link> </para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_stmt_d_p_item_1af92976dc7a8785165cefb047e742cdf6"/>    <section>
    <title>operator&lt;()</title>
<indexterm><primary>operator&lt;</primary><secondary>SVF::StmtDPItem&lt; LocCond &gt;</secondary></indexterm>
<indexterm><primary>SVF::StmtDPItem&lt; LocCond &gt;</primary><secondary>operator&lt;</secondary></indexterm>
<computeroutput>template&lt;class LocCond &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_s_v_f_1_1_stmt_d_p_item">SVF::StmtDPItem</link>&lt; LocCond &gt;::operator&lt; (const <link linkend="_class_s_v_f_1_1_stmt_d_p_item">StmtDPItem</link>&lt; LocCond &gt; &amp; rhs) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Enable compare operator to avoid duplicated item insertion in map or set to be noted that two vectors can also overload operator() </para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
include/Util/DPItem.h</section>
</section>
