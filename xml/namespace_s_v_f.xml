<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespace_s_v_f" kind="namespace" language="C++">
    <compoundname>SVF</compoundname>
    <innerclass refid="class_s_v_f_1_1_context_d_d_a" prot="public">SVF::ContextDDA</innerclass>
    <innerclass refid="class_s_v_f_1_1_d_d_a_client" prot="public">SVF::DDAClient</innerclass>
    <innerclass refid="class_s_v_f_1_1_funptr_d_d_a_client" prot="public">SVF::FunptrDDAClient</innerclass>
    <innerclass refid="class_s_v_f_1_1_alias_d_d_a_client" prot="public">SVF::AliasDDAClient</innerclass>
    <innerclass refid="class_s_v_f_1_1_d_d_a_pass" prot="public">SVF::DDAPass</innerclass>
    <innerclass refid="class_s_v_f_1_1_d_d_a_stat" prot="public">SVF::DDAStat</innerclass>
    <innerclass refid="class_s_v_f_1_1_d_d_a_v_f_solver" prot="public">SVF::DDAVFSolver</innerclass>
    <innerclass refid="class_s_v_f_1_1_flow_d_d_a" prot="public">SVF::FlowDDA</innerclass>
    <innerclass refid="class_s_v_f_1_1_constraint_graph" prot="public">SVF::ConstraintGraph</innerclass>
    <innerclass refid="class_s_v_f_1_1_constraint_edge" prot="public">SVF::ConstraintEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_addr_c_g_edge" prot="public">SVF::AddrCGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_copy_c_g_edge" prot="public">SVF::CopyCGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_store_c_g_edge" prot="public">SVF::StoreCGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_load_c_g_edge" prot="public">SVF::LoadCGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_gep_c_g_edge" prot="public">SVF::GepCGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_normal_gep_c_g_edge" prot="public">SVF::NormalGepCGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_variant_gep_c_g_edge" prot="public">SVF::VariantGepCGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_constraint_node" prot="public">SVF::ConstraintNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_external_p_a_g" prot="public">SVF::ExternalPAG</innerclass>
    <innerclass refid="class_s_v_f_1_1_generic_edge" prot="public">SVF::GenericEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_generic_node" prot="public">SVF::GenericNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_generic_graph" prot="public">SVF::GenericGraph</innerclass>
    <innerclass refid="class_s_v_f_1_1_i_c_f_g" prot="public">SVF::ICFG</innerclass>
    <innerclass refid="class_s_v_f_1_1_i_c_f_g_edge" prot="public">SVF::ICFGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_intra_c_f_g_edge" prot="public">SVF::IntraCFGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_call_c_f_g_edge" prot="public">SVF::CallCFGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_ret_c_f_g_edge" prot="public">SVF::RetCFGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_i_c_f_g_node" prot="public">SVF::ICFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_global_block_node" prot="public">SVF::GlobalBlockNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_intra_block_node" prot="public">SVF::IntraBlockNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_inter_block_node" prot="public">SVF::InterBlockNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_fun_entry_block_node" prot="public">SVF::FunEntryBlockNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_fun_exit_block_node" prot="public">SVF::FunExitBlockNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_call_block_node" prot="public">SVF::CallBlockNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_ret_block_node" prot="public">SVF::RetBlockNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_i_c_f_g_stat" prot="public">SVF::ICFGStat</innerclass>
    <innerclass refid="class_s_v_f_1_1_offline_cons_g" prot="public">SVF::OfflineConsG</innerclass>
    <innerclass refid="class_s_v_f_1_1_p_a_g" prot="public">SVF::PAG</innerclass>
    <innerclass refid="class_s_v_f_1_1_p_a_g_edge" prot="public">SVF::PAGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_addr_p_e" prot="public">SVF::AddrPE</innerclass>
    <innerclass refid="class_s_v_f_1_1_copy_p_e" prot="public">SVF::CopyPE</innerclass>
    <innerclass refid="class_s_v_f_1_1_cmp_p_e" prot="public">SVF::CmpPE</innerclass>
    <innerclass refid="class_s_v_f_1_1_binary_o_p_p_e" prot="public">SVF::BinaryOPPE</innerclass>
    <innerclass refid="class_s_v_f_1_1_unary_o_p_p_e" prot="public">SVF::UnaryOPPE</innerclass>
    <innerclass refid="class_s_v_f_1_1_store_p_e" prot="public">SVF::StorePE</innerclass>
    <innerclass refid="class_s_v_f_1_1_load_p_e" prot="public">SVF::LoadPE</innerclass>
    <innerclass refid="class_s_v_f_1_1_gep_p_e" prot="public">SVF::GepPE</innerclass>
    <innerclass refid="class_s_v_f_1_1_normal_gep_p_e" prot="public">SVF::NormalGepPE</innerclass>
    <innerclass refid="class_s_v_f_1_1_variant_gep_p_e" prot="public">SVF::VariantGepPE</innerclass>
    <innerclass refid="class_s_v_f_1_1_call_p_e" prot="public">SVF::CallPE</innerclass>
    <innerclass refid="class_s_v_f_1_1_ret_p_e" prot="public">SVF::RetPE</innerclass>
    <innerclass refid="class_s_v_f_1_1_t_d_fork_p_e" prot="public">SVF::TDForkPE</innerclass>
    <innerclass refid="class_s_v_f_1_1_t_d_join_p_e" prot="public">SVF::TDJoinPE</innerclass>
    <innerclass refid="class_s_v_f_1_1_p_a_g_node" prot="public">SVF::PAGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_val_p_n" prot="public">SVF::ValPN</innerclass>
    <innerclass refid="class_s_v_f_1_1_obj_p_n" prot="public">SVF::ObjPN</innerclass>
    <innerclass refid="class_s_v_f_1_1_gep_val_p_n" prot="public">SVF::GepValPN</innerclass>
    <innerclass refid="class_s_v_f_1_1_gep_obj_p_n" prot="public">SVF::GepObjPN</innerclass>
    <innerclass refid="class_s_v_f_1_1_f_i_obj_p_n" prot="public">SVF::FIObjPN</innerclass>
    <innerclass refid="class_s_v_f_1_1_ret_p_n" prot="public">SVF::RetPN</innerclass>
    <innerclass refid="class_s_v_f_1_1_var_arg_p_n" prot="public">SVF::VarArgPN</innerclass>
    <innerclass refid="class_s_v_f_1_1_dummy_val_p_n" prot="public">SVF::DummyValPN</innerclass>
    <innerclass refid="class_s_v_f_1_1_dummy_obj_p_n" prot="public">SVF::DummyObjPN</innerclass>
    <innerclass refid="class_s_v_f_1_1_clone_dummy_obj_p_n" prot="public">SVF::CloneDummyObjPN</innerclass>
    <innerclass refid="class_s_v_f_1_1_clone_gep_obj_p_n" prot="public">SVF::CloneGepObjPN</innerclass>
    <innerclass refid="class_s_v_f_1_1_clone_f_i_obj_p_n" prot="public">SVF::CloneFIObjPN</innerclass>
    <innerclass refid="class_s_v_f_1_1_p_t_a_call_graph_edge" prot="public">SVF::PTACallGraphEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_p_t_a_call_graph_node" prot="public">SVF::PTACallGraphNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_p_t_a_call_graph" prot="public">SVF::PTACallGraph</innerclass>
    <innerclass refid="class_s_v_f_1_1_s_v_f_g" prot="public">SVF::SVFG</innerclass>
    <innerclass refid="class_s_v_f_1_1_indirect_s_v_f_g_edge" prot="public">SVF::IndirectSVFGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_intra_ind_s_v_f_g_edge" prot="public">SVF::IntraIndSVFGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_call_ind_s_v_f_g_edge" prot="public">SVF::CallIndSVFGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_ret_ind_s_v_f_g_edge" prot="public">SVF::RetIndSVFGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_thread_m_h_p_ind_s_v_f_g_edge" prot="public">SVF::ThreadMHPIndSVFGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_m_r_s_v_f_g_node" prot="public">SVF::MRSVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_formal_i_n_s_v_f_g_node" prot="public">SVF::FormalINSVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_formal_o_u_t_s_v_f_g_node" prot="public">SVF::FormalOUTSVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_actual_i_n_s_v_f_g_node" prot="public">SVF::ActualINSVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_actual_o_u_t_s_v_f_g_node" prot="public">SVF::ActualOUTSVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_m_s_s_a_p_h_i_s_v_f_g_node" prot="public">SVF::MSSAPHISVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_intra_m_s_s_a_p_h_i_s_v_f_g_node" prot="public">SVF::IntraMSSAPHISVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node" prot="public">SVF::InterMSSAPHISVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_s_v_f_g_o_p_t" prot="public">SVF::SVFGOPT</innerclass>
    <innerclass refid="class_s_v_f_1_1_mem_s_s_a_stat" prot="public">SVF::MemSSAStat</innerclass>
    <innerclass refid="class_s_v_f_1_1_s_v_f_g_stat" prot="public">SVF::SVFGStat</innerclass>
    <innerclass refid="class_s_v_f_1_1_thread_fork_edge" prot="public">SVF::ThreadForkEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_thread_join_edge" prot="public">SVF::ThreadJoinEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_hare_par_for_edge" prot="public">SVF::HareParForEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_thread_call_graph" prot="public">SVF::ThreadCallGraph</innerclass>
    <innerclass refid="class_s_v_f_1_1_v_f_g" prot="public">SVF::VFG</innerclass>
    <innerclass refid="class_s_v_f_1_1_v_f_g_edge" prot="public">SVF::VFGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_direct_s_v_f_g_edge" prot="public">SVF::DirectSVFGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_intra_dir_s_v_f_g_edge" prot="public">SVF::IntraDirSVFGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_call_dir_s_v_f_g_edge" prot="public">SVF::CallDirSVFGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_ret_dir_s_v_f_g_edge" prot="public">SVF::RetDirSVFGEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_v_f_g_node" prot="public">SVF::VFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_stmt_v_f_g_node" prot="public">SVF::StmtVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_load_v_f_g_node" prot="public">SVF::LoadVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_store_v_f_g_node" prot="public">SVF::StoreVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_copy_v_f_g_node" prot="public">SVF::CopyVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_cmp_v_f_g_node" prot="public">SVF::CmpVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_binary_o_p_v_f_g_node" prot="public">SVF::BinaryOPVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_unary_o_p_v_f_g_node" prot="public">SVF::UnaryOPVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_gep_v_f_g_node" prot="public">SVF::GepVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_p_h_i_v_f_g_node" prot="public">SVF::PHIVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_intra_p_h_i_v_f_g_node" prot="public">SVF::IntraPHIVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_addr_v_f_g_node" prot="public">SVF::AddrVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_argument_v_f_g_node" prot="public">SVF::ArgumentVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_actual_parm_v_f_g_node" prot="public">SVF::ActualParmVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_formal_parm_v_f_g_node" prot="public">SVF::FormalParmVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_actual_ret_v_f_g_node" prot="public">SVF::ActualRetVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_formal_ret_v_f_g_node" prot="public">SVF::FormalRetVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_inter_p_h_i_v_f_g_node" prot="public">SVF::InterPHIVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_null_ptr_v_f_g_node" prot="public">SVF::NullPtrVFGNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_p_t_data" prot="public">SVF::PTData</innerclass>
    <innerclass refid="class_s_v_f_1_1_diff_p_t_data" prot="public">SVF::DiffPTData</innerclass>
    <innerclass refid="class_s_v_f_1_1_d_f_p_t_data" prot="public">SVF::DFPTData</innerclass>
    <innerclass refid="class_s_v_f_1_1_versioned_p_t_data" prot="public">SVF::VersionedPTData</innerclass>
    <innerclass refid="class_s_v_f_1_1_cond_var" prot="public">SVF::CondVar</innerclass>
    <innerclass refid="class_s_v_f_1_1_cond_std_set" prot="public">SVF::CondStdSet</innerclass>
    <innerclass refid="class_s_v_f_1_1_cond_points_to_set" prot="public">SVF::CondPointsToSet</innerclass>
    <innerclass refid="class_s_v_f_1_1_field_info" prot="public">SVF::FieldInfo</innerclass>
    <innerclass refid="class_s_v_f_1_1_location_set" prot="public">SVF::LocationSet</innerclass>
    <innerclass refid="class_s_v_f_1_1_st_info" prot="public">SVF::StInfo</innerclass>
    <innerclass refid="class_s_v_f_1_1_obj_type_info" prot="public">SVF::ObjTypeInfo</innerclass>
    <innerclass refid="class_s_v_f_1_1_mem_obj" prot="public">SVF::MemObj</innerclass>
    <innerclass refid="class_s_v_f_1_1_mutable_d_f_p_t_data" prot="public">SVF::MutableDFPTData</innerclass>
    <innerclass refid="class_s_v_f_1_1_mutable_p_t_data" prot="public">SVF::MutablePTData</innerclass>
    <innerclass refid="class_s_v_f_1_1_mutable_diff_p_t_data" prot="public">SVF::MutableDiffPTData</innerclass>
    <innerclass refid="class_s_v_f_1_1_inc_mutable_d_f_p_t_data" prot="public">SVF::IncMutableDFPTData</innerclass>
    <innerclass refid="class_s_v_f_1_1_mutable_versioned_p_t_data" prot="public">SVF::MutableVersionedPTData</innerclass>
    <innerclass refid="class_s_v_f_1_1_p_a_g_builder_from_file" prot="public">SVF::PAGBuilderFromFile</innerclass>
    <innerclass refid="class_s_v_f_1_1_pointer_analysis" prot="public">SVF::PointerAnalysis</innerclass>
    <innerclass refid="class_s_v_f_1_1_b_v_data_p_t_a_impl" prot="public">SVF::BVDataPTAImpl</innerclass>
    <innerclass refid="class_s_v_f_1_1_cond_p_t_a_impl" prot="public">SVF::CondPTAImpl</innerclass>
    <innerclass refid="class_s_v_f_1_1_p_t_a_stat" prot="public">SVF::PTAStat</innerclass>
    <innerclass refid="class_s_v_f_1_1_p_t_a_type" prot="public">SVF::PTAType</innerclass>
    <innerclass refid="class_s_v_f_1_1_type_set" prot="public">SVF::TypeSet</innerclass>
    <innerclass refid="class_s_v_f_1_1_type_system" prot="public">SVF::TypeSystem</innerclass>
    <innerclass refid="class_s_v_f_1_1_distinct_m_r_g" prot="public">SVF::DistinctMRG</innerclass>
    <innerclass refid="class_s_v_f_1_1_intra_disjoint_m_r_g" prot="public">SVF::IntraDisjointMRG</innerclass>
    <innerclass refid="class_s_v_f_1_1_inter_disjoint_m_r_g" prot="public">SVF::InterDisjointMRG</innerclass>
    <innerclass refid="class_s_v_f_1_1_mem_region" prot="public">SVF::MemRegion</innerclass>
    <innerclass refid="class_s_v_f_1_1_m_r_generator" prot="public">SVF::MRGenerator</innerclass>
    <innerclass refid="class_s_v_f_1_1_mem_s_s_a" prot="public">SVF::MemSSA</innerclass>
    <innerclass refid="class_s_v_f_1_1_m_r_ver" prot="public">SVF::MRVer</innerclass>
    <innerclass refid="class_s_v_f_1_1_m_s_s_a_m_u" prot="public">SVF::MSSAMU</innerclass>
    <innerclass refid="class_s_v_f_1_1_load_m_u" prot="public">SVF::LoadMU</innerclass>
    <innerclass refid="class_s_v_f_1_1_call_m_u" prot="public">SVF::CallMU</innerclass>
    <innerclass refid="class_s_v_f_1_1_ret_m_u" prot="public">SVF::RetMU</innerclass>
    <innerclass refid="class_s_v_f_1_1_m_s_s_a_d_e_f" prot="public">SVF::MSSADEF</innerclass>
    <innerclass refid="class_s_v_f_1_1_m_s_s_a_c_h_i" prot="public">SVF::MSSACHI</innerclass>
    <innerclass refid="class_s_v_f_1_1_store_c_h_i" prot="public">SVF::StoreCHI</innerclass>
    <innerclass refid="class_s_v_f_1_1_call_c_h_i" prot="public">SVF::CallCHI</innerclass>
    <innerclass refid="class_s_v_f_1_1_entry_c_h_i" prot="public">SVF::EntryCHI</innerclass>
    <innerclass refid="class_s_v_f_1_1_m_s_s_a_p_h_i" prot="public">SVF::MSSAPHI</innerclass>
    <innerclass refid="class_s_v_f_1_1_mem_s_s_a_d_f" prot="public">SVF::MemSSADF</innerclass>
    <innerclass refid="class_s_v_f_1_1_s_v_f_g_builder" prot="public">SVF::SVFGBuilder</innerclass>
    <innerclass refid="class_s_v_f_1_1_m_t_a_s_v_f_g_builder" prot="public">SVF::MTASVFGBuilder</innerclass>
    <innerclass refid="class_s_v_f_1_1_f_s_m_p_t_a" prot="public">SVF::FSMPTA</innerclass>
    <innerclass refid="class_s_v_f_1_1_lock_analysis" prot="public">SVF::LockAnalysis</innerclass>
    <innerclass refid="class_s_v_f_1_1_m_h_p" prot="public">SVF::MHP</innerclass>
    <innerclass refid="class_s_v_f_1_1_fork_join_analysis" prot="public">SVF::ForkJoinAnalysis</innerclass>
    <innerclass refid="class_s_v_f_1_1_m_t_a" prot="public">SVF::MTA</innerclass>
    <innerclass refid="class_s_v_f_1_1_m_t_a_annotator" prot="public">SVF::MTAAnnotator</innerclass>
    <innerclass refid="class_s_v_f_1_1_m_t_a_stat" prot="public">SVF::MTAStat</innerclass>
    <innerclass refid="class_s_v_f_1_1_p_c_g" prot="public">SVF::PCG</innerclass>
    <innerclass refid="class_s_v_f_1_1_t_c_t_edge" prot="public">SVF::TCTEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_t_c_t_node" prot="public">SVF::TCTNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_t_c_t" prot="public">SVF::TCT</innerclass>
    <innerclass refid="class_s_v_f_1_1_double_free_checker" prot="public">SVF::DoubleFreeChecker</innerclass>
    <innerclass refid="class_s_v_f_1_1_file_checker" prot="public">SVF::FileChecker</innerclass>
    <innerclass refid="class_s_v_f_1_1_leak_checker" prot="public">SVF::LeakChecker</innerclass>
    <innerclass refid="class_s_v_f_1_1_prog_slice" prot="public">SVF::ProgSlice</innerclass>
    <innerclass refid="class_s_v_f_1_1_saber_annotator" prot="public">SVF::SaberAnnotator</innerclass>
    <innerclass refid="class_s_v_f_1_1_saber_checker_a_p_i" prot="public">SVF::SaberCheckerAPI</innerclass>
    <innerclass refid="class_s_v_f_1_1_saber_s_v_f_g_builder" prot="public">SVF::SaberSVFGBuilder</innerclass>
    <innerclass refid="class_s_v_f_1_1_src_snk_d_d_a" prot="public">SVF::SrcSnkDDA</innerclass>
    <innerclass refid="class_s_v_f_1_1_break_constant_g_e_ps" prot="public">SVF::BreakConstantGEPs</innerclass>
    <innerclass refid="class_s_v_f_1_1_merge_function_rets" prot="public">SVF::MergeFunctionRets</innerclass>
    <innerclass refid="class_s_v_f_1_1_call_graph_builder" prot="public">SVF::CallGraphBuilder</innerclass>
    <innerclass refid="class_s_v_f_1_1_thread_call_graph_builder" prot="public">SVF::ThreadCallGraphBuilder</innerclass>
    <innerclass refid="class_s_v_f_1_1_c_h_edge" prot="public">SVF::CHEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_c_h_node" prot="public">SVF::CHNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_c_h_graph" prot="public">SVF::CHGraph</innerclass>
    <innerclass refid="class_s_v_f_1_1_common_c_h_graph" prot="public">SVF::CommonCHGraph</innerclass>
    <innerclass refid="class_s_v_f_1_1_p_t_a_s_c_e_v" prot="public">SVF::PTASCEV</innerclass>
    <innerclass refid="class_s_v_f_1_1_p_t_a_c_f_info_builder" prot="public">SVF::PTACFInfoBuilder</innerclass>
    <innerclass refid="class_s_v_f_1_1_iterated_dominance_frontier" prot="public">SVF::IteratedDominanceFrontier</innerclass>
    <innerclass refid="class_s_v_f_1_1_d_c_h_edge" prot="public">SVF::DCHEdge</innerclass>
    <innerclass refid="class_s_v_f_1_1_d_c_h_node" prot="public">SVF::DCHNode</innerclass>
    <innerclass refid="class_s_v_f_1_1_d_c_h_graph" prot="public">SVF::DCHGraph</innerclass>
    <innerclass refid="class_s_v_f_1_1_i_c_f_g_printer" prot="public">SVF::ICFGPrinter</innerclass>
    <innerclass refid="class_s_v_f_1_1_i_c_f_g_builder" prot="public">SVF::ICFGBuilder</innerclass>
    <innerclass refid="class_s_v_f_1_1_l_l_v_m_module_set" prot="public">SVF::LLVMModuleSet</innerclass>
    <innerclass refid="class_s_v_f_1_1_p_a_g_builder" prot="public">SVF::PAGBuilder</innerclass>
    <innerclass refid="class_s_v_f_1_1_symbol_table_info" prot="public">SVF::SymbolTableInfo</innerclass>
    <innerclass refid="class_s_v_f_1_1_loc_sym_table_info" prot="public">SVF::LocSymTableInfo</innerclass>
    <innerclass refid="class_s_v_f_1_1_loc_obj_type_info" prot="public">SVF::LocObjTypeInfo</innerclass>
    <innerclass refid="class_s_v_f_1_1_annotator" prot="public">SVF::Annotator</innerclass>
    <innerclass refid="class_s_v_f_1_1_s_v_f_function" prot="public">SVF::SVFFunction</innerclass>
    <innerclass refid="class_s_v_f_1_1_s_v_f_global" prot="public">SVF::SVFGlobal</innerclass>
    <innerclass refid="class_s_v_f_1_1_s_v_f_basic_block" prot="public">SVF::SVFBasicBlock</innerclass>
    <innerclass refid="class_s_v_f_1_1_s_v_f_instruction" prot="public">SVF::SVFInstruction</innerclass>
    <innerclass refid="class_s_v_f_1_1_c_f_l_solver" prot="public">SVF::CFLSolver</innerclass>
    <innerclass refid="class_s_v_f_1_1_bdd_cond_manager" prot="public">SVF::BddCondManager</innerclass>
    <innerclass refid="class_s_v_f_1_1_cxt_stmt" prot="public">SVF::CxtStmt</innerclass>
    <innerclass refid="class_s_v_f_1_1_cxt_thread_stmt" prot="public">SVF::CxtThreadStmt</innerclass>
    <innerclass refid="class_s_v_f_1_1_cxt_thread" prot="public">SVF::CxtThread</innerclass>
    <innerclass refid="class_s_v_f_1_1_cxt_proc" prot="public">SVF::CxtProc</innerclass>
    <innerclass refid="class_s_v_f_1_1_cxt_thread_proc" prot="public">SVF::CxtThreadProc</innerclass>
    <innerclass refid="class_s_v_f_1_1_d_p_item" prot="public">SVF::DPItem</innerclass>
    <innerclass refid="class_s_v_f_1_1_stmt_d_p_item" prot="public">SVF::StmtDPItem</innerclass>
    <innerclass refid="class_s_v_f_1_1_context_cond" prot="public">SVF::ContextCond</innerclass>
    <innerclass refid="class_s_v_f_1_1_cxt_stmt_d_p_item" prot="public">SVF::CxtStmtDPItem</innerclass>
    <innerclass refid="class_s_v_f_1_1_v_f_path_cond" prot="public">SVF::VFPathCond</innerclass>
    <innerclass refid="class_s_v_f_1_1_path_stmt_d_p_item" prot="public">SVF::PathStmtDPItem</innerclass>
    <innerclass refid="class_s_v_f_1_1_cxt_d_p_item" prot="public">SVF::CxtDPItem</innerclass>
    <innerclass refid="class_s_v_f_1_1_ext_a_p_i" prot="public">SVF::ExtAPI</innerclass>
    <innerclass refid="class_s_v_f_1_1_node_i_d_allocator" prot="public">SVF::NodeIDAllocator</innerclass>
    <innerclass refid="class_s_v_f_1_1_path_cond_allocator" prot="public">SVF::PathCondAllocator</innerclass>
    <innerclass refid="class_s_v_f_1_1_s_c_c_detection" prot="public">SVF::SCCDetection</innerclass>
    <innerclass refid="class_s_v_f_1_1_s_v_f_value" prot="public">SVF::SVFValue</innerclass>
    <innerclass refid="class_s_v_f_1_1_s_v_f_module" prot="public">SVF::SVFModule</innerclass>
    <innerclass refid="class_s_v_f_1_1_thread_a_p_i" prot="public">SVF::ThreadAPI</innerclass>
    <innerclass refid="class_s_v_f_1_1_type_based_heap_cloning" prot="public">SVF::TypeBasedHeapCloning</innerclass>
    <innerclass refid="class_s_v_f_1_1_list" prot="public">SVF::List</innerclass>
    <innerclass refid="class_s_v_f_1_1_f_i_f_o_work_list" prot="public">SVF::FIFOWorkList</innerclass>
    <innerclass refid="class_s_v_f_1_1_f_i_l_o_work_list" prot="public">SVF::FILOWorkList</innerclass>
    <innerclass refid="class_s_v_f_1_1_andersen_base" prot="public">SVF::AndersenBase</innerclass>
    <innerclass refid="class_s_v_f_1_1_andersen" prot="public">SVF::Andersen</innerclass>
    <innerclass refid="class_s_v_f_1_1_andersen_wave_diff" prot="public">SVF::AndersenWaveDiff</innerclass>
    <innerclass refid="class_s_v_f_1_1_andersen_wave_diff_with_type" prot="public">SVF::AndersenWaveDiffWithType</innerclass>
    <innerclass refid="class_s_v_f_1_1_andersen_l_c_d" prot="public">SVF::AndersenLCD</innerclass>
    <innerclass refid="class_s_v_f_1_1_andersen_h_c_d" prot="public">SVF::AndersenHCD</innerclass>
    <innerclass refid="class_s_v_f_1_1_andersen_h_l_c_d" prot="public">SVF::AndersenHLCD</innerclass>
    <innerclass refid="class_s_v_f_1_1_andersen_s_c_d" prot="public">SVF::AndersenSCD</innerclass>
    <innerclass refid="class_s_v_f_1_1_andersen_s_f_r" prot="public">SVF::AndersenSFR</innerclass>
    <innerclass refid="class_s_v_f_1_1_c_s_c" prot="public">SVF::CSC</innerclass>
    <innerclass refid="class_s_v_f_1_1_flow_sensitive" prot="public">SVF::FlowSensitive</innerclass>
    <innerclass refid="class_s_v_f_1_1_flow_sensitive_t_b_h_c" prot="public">SVF::FlowSensitiveTBHC</innerclass>
    <innerclass refid="class_s_v_f_1_1_steensgaard" prot="public">SVF::Steensgaard</innerclass>
    <innerclass refid="class_s_v_f_1_1_type_analysis" prot="public">SVF::TypeAnalysis</innerclass>
    <innerclass refid="class_s_v_f_1_1_versioned_flow_sensitive" prot="public">SVF::VersionedFlowSensitive</innerclass>
    <innerclass refid="class_s_v_f_1_1_w_p_a_f_s_solver" prot="public">SVF::WPAFSSolver</innerclass>
    <innerclass refid="class_s_v_f_1_1_w_p_a_s_c_c_solver" prot="public">SVF::WPASCCSolver</innerclass>
    <innerclass refid="class_s_v_f_1_1_w_p_a_minimum_solver" prot="public">SVF::WPAMinimumSolver</innerclass>
    <innerclass refid="class_s_v_f_1_1_w_p_a_pass" prot="public">SVF::WPAPass</innerclass>
    <innerclass refid="class_s_v_f_1_1_w_p_a_solver" prot="public">SVF::WPASolver</innerclass>
    <innerclass refid="class_s_v_f_1_1_andersen_stat" prot="public">SVF::AndersenStat</innerclass>
    <innerclass refid="class_s_v_f_1_1_flow_sensitive_stat" prot="public">SVF::FlowSensitiveStat</innerclass>
    <innerclass refid="class_s_v_f_1_1_versioned_flow_sensitive_stat" prot="public">SVF::VersionedFlowSensitiveStat</innerclass>
    <innerclass refid="class_s_v_f_1_1_lock_validator" prot="public">SVF::LockValidator</innerclass>
    <innerclass refid="class_s_v_f_1_1_m_h_p_validator" prot="public">SVF::MHPValidator</innerclass>
    <innernamespace refid="namespace_s_v_f_1_1cpp_util">SVF::cppUtil</innernamespace>
    <innernamespace refid="namespace_s_v_f_1_1_s_v_f_util">SVF::SVFUtil</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespace_s_v_f_1afe243912c982fde7d6beb4d046f9d42b" prot="public" static="no" strong="no">
        <type></type>
        <name>SYMTYPE</name>
        <enumvalue id="namespace_s_v_f_1afe243912c982fde7d6beb4d046f9d42bad7ca98768a7abe55ead61c5c3ff647e3" prot="public">
          <name>BlackHole</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_s_v_f_1afe243912c982fde7d6beb4d046f9d42ba63aceec1f561583962d854e7606810e5" prot="public">
          <name>ConstantObj</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_s_v_f_1afe243912c982fde7d6beb4d046f9d42babc8fcfa5a0cd7a104f3befc9c7a9491c" prot="public">
          <name>BlkPtr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_s_v_f_1afe243912c982fde7d6beb4d046f9d42ba21301438d5e1788db46a84e720e80a68" prot="public">
          <name>NullPtr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_s_v_f_1afe243912c982fde7d6beb4d046f9d42ba4981e1f7cdb8b22323295da5b8b774da" prot="public">
          <name>ValSym</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_s_v_f_1afe243912c982fde7d6beb4d046f9d42bad4df09c2efe5156a62b406355b9c5a12" prot="public">
          <name>ObjSym</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_s_v_f_1afe243912c982fde7d6beb4d046f9d42ba622005f7afcff31473d06cc847574dd7" prot="public">
          <name>RetSym</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_s_v_f_1afe243912c982fde7d6beb4d046f9d42ba6e29c1da8167e6692c1b2e8d588810f4" prot="public">
          <name>VarargSym</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Symbol types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MemModel.h" line="40" column="1" bodyfile="include/MemoryModel/MemModel.h" bodystart="41" bodyend="50"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespace_s_v_f_1aa612d67dfa9b0c2999eeef980ca6c893" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_cxt_stmt_d_p_item" kindref="compound">CxtStmtDPItem</ref>&lt; <ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">SVFGNode</ref> &gt;</type>
        <definition>typedef CxtStmtDPItem&lt;SVFGNode&gt; SVF::CxtLocDPItem</definition>
        <argsstring></argsstring>
        <name>CxtLocDPItem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/ContextDDA.h" line="20" column="23" bodyfile="include/DDA/ContextDDA.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1aa50ee8563f99ba1eb897301f55e9d855" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_stmt_d_p_item" kindref="compound">StmtDPItem</ref>&lt; <ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">SVFGNode</ref> &gt;</type>
        <definition>typedef StmtDPItem&lt;SVFGNode&gt; SVF::LocDPItem</definition>
        <argsstring></argsstring>
        <name>LocDPItem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/DDA/FlowDDA.h" line="19" column="20" bodyfile="include/DDA/FlowDDA.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a1d2b00b4b0ab475899488fc89b2bfe66" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_edge" kindref="compound">GenericEdge</ref>&lt; <ref refid="class_s_v_f_1_1_constraint_node" kindref="compound">ConstraintNode</ref> &gt;</type>
        <definition>typedef GenericEdge&lt;ConstraintNode&gt; SVF::GenericConsEdgeTy</definition>
        <argsstring></argsstring>
        <name>GenericConsEdgeTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Self-defined edge for constraint resolution including add/remove/re-target, but all the operations do not affect original <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> Edges </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsGEdge.h" line="47" column="21" bodyfile="include/Graphs/ConsGEdge.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a825a8805e4a16072031a18b8d553c5a2" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_node" kindref="compound">GenericNode</ref>&lt; <ref refid="class_s_v_f_1_1_constraint_node" kindref="compound">ConstraintNode</ref>, <ref refid="class_s_v_f_1_1_constraint_edge" kindref="compound">ConstraintEdge</ref> &gt;</type>
        <definition>typedef GenericNode&lt;ConstraintNode,ConstraintEdge&gt; SVF::GenericConsNodeTy</definition>
        <argsstring></argsstring>
        <name>GenericConsNodeTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constraint node </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsGNode.h" line="39" column="21" bodyfile="include/Graphs/ConsGNode.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1afe5e1b0e028b4cf0db9f2a9c758b03ed" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_graph" kindref="compound">GenericGraph</ref>&lt; <ref refid="class_s_v_f_1_1_i_c_f_g_node" kindref="compound">ICFGNode</ref>, <ref refid="class_s_v_f_1_1_i_c_f_g_edge" kindref="compound">ICFGEdge</ref> &gt;</type>
        <definition>typedef GenericGraph&lt;ICFGNode,ICFGEdge&gt; SVF::GenericICFGTy</definition>
        <argsstring></argsstring>
        <name>GenericICFGTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Interprocedural Control-Flow Graph (<ref refid="class_s_v_f_1_1_i_c_f_g" kindref="compound">ICFG</ref>) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ICFG.h" line="45" column="22" bodyfile="include/Graphs/ICFG.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a91e714a719b1e62e9b63103e9e6af404" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_edge" kindref="compound">GenericEdge</ref>&lt; <ref refid="class_s_v_f_1_1_i_c_f_g_node" kindref="compound">ICFGNode</ref> &gt;</type>
        <definition>typedef GenericEdge&lt;ICFGNode&gt; SVF::GenericICFGEdgeTy</definition>
        <argsstring></argsstring>
        <name>GenericICFGEdgeTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Interprocedural control-flow and value-flow edge, representing the control- and value-flow dependence between two nodes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ICFGEdge.h" line="41" column="21" bodyfile="include/Graphs/ICFGEdge.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1afc2824871ad4eb9b871c35ae28494cd3" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_node" kindref="compound">GenericNode</ref>&lt; <ref refid="class_s_v_f_1_1_i_c_f_g_node" kindref="compound">ICFGNode</ref>, <ref refid="class_s_v_f_1_1_i_c_f_g_edge" kindref="compound">ICFGEdge</ref> &gt;</type>
        <definition>typedef GenericNode&lt;ICFGNode, ICFGEdge&gt; SVF::GenericICFGNodeTy</definition>
        <argsstring></argsstring>
        <name>GenericICFGNodeTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Interprocedural control-flow graph node, representing different kinds of program statements including top-level pointers (<ref refid="class_s_v_f_1_1_val_p_n" kindref="compound">ValPN</ref>) and address-taken objects (<ref refid="class_s_v_f_1_1_obj_p_n" kindref="compound">ObjPN</ref>) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ICFGNode.h" line="52" column="21" bodyfile="include/Graphs/ICFGNode.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a7ad1b1990da305fb9a522857cef7d4b8" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_edge" kindref="compound">GenericEdge</ref>&lt; <ref refid="class_s_v_f_1_1_p_a_g_node" kindref="compound">PAGNode</ref> &gt;</type>
        <definition>typedef GenericEdge&lt;PAGNode&gt; SVF::GenericPAGEdgeTy</definition>
        <argsstring></argsstring>
        <name>GenericPAGEdgeTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGEdge.h" line="46" column="21" bodyfile="include/Graphs/PAGEdge.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a309503b57249377a51c8b3b2e633086d" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_node" kindref="compound">GenericNode</ref>&lt; <ref refid="class_s_v_f_1_1_p_a_g_node" kindref="compound">PAGNode</ref>, <ref refid="class_s_v_f_1_1_p_a_g_edge" kindref="compound">PAGEdge</ref> &gt;</type>
        <definition>typedef GenericNode&lt;PAGNode,PAGEdge&gt; SVF::GenericPAGNodeTy</definition>
        <argsstring></argsstring>
        <name>GenericPAGNodeTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="44" column="21" bodyfile="include/Graphs/PAGNode.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1acd909bf6784bb6e2178aa0f5d27da0ca" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_edge" kindref="compound">GenericEdge</ref>&lt; <ref refid="class_s_v_f_1_1_p_t_a_call_graph_node" kindref="compound">PTACallGraphNode</ref> &gt;</type>
        <definition>typedef GenericEdge&lt;PTACallGraphNode&gt; SVF::GenericCallGraphEdgeTy</definition>
        <argsstring></argsstring>
        <name>GenericCallGraphEdgeTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="50" column="21" bodyfile="include/Graphs/PTACallGraph.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a673ed8bf673a4c426a9d91aa8987e31c" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_node" kindref="compound">GenericNode</ref>&lt; <ref refid="class_s_v_f_1_1_p_t_a_call_graph_node" kindref="compound">PTACallGraphNode</ref>, <ref refid="class_s_v_f_1_1_p_t_a_call_graph_edge" kindref="compound">PTACallGraphEdge</ref> &gt;</type>
        <definition>typedef GenericNode&lt;PTACallGraphNode,PTACallGraphEdge&gt; SVF::GenericCallGraphNodeTy</definition>
        <argsstring></argsstring>
        <name>GenericCallGraphNodeTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="173" column="21" bodyfile="include/Graphs/PTACallGraph.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ab6fe492db79077a60254f8a03cfce180" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_graph" kindref="compound">GenericGraph</ref>&lt; <ref refid="class_s_v_f_1_1_p_t_a_call_graph_node" kindref="compound">PTACallGraphNode</ref>, <ref refid="class_s_v_f_1_1_p_t_a_call_graph_edge" kindref="compound">PTACallGraphEdge</ref> &gt;</type>
        <definition>typedef GenericGraph&lt;PTACallGraphNode,PTACallGraphEdge&gt; SVF::GenericCallGraphTy</definition>
        <argsstring></argsstring>
        <name>GenericCallGraphTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer Analysis Call Graph used internally for various pointer analysis </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PTACallGraph.h" line="217" column="22" bodyfile="include/Graphs/PTACallGraph.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1aa4745cf70b26e17d59752356f0b19dd9" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_v_f_g_edge" kindref="compound">VFGEdge</ref></type>
        <definition>typedef VFGEdge SVF::SVFGEdge</definition>
        <argsstring></argsstring>
        <name>SVFGEdge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFG.h" line="42" column="17" bodyfile="include/Graphs/SVFG.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a5dfa3fa5129bacdc0be0c051ccf386df" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">VFGNode</ref></type>
        <definition>typedef VFGNode SVF::SVFGNode</definition>
        <argsstring></argsstring>
        <name>SVFGNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFG.h" line="43" column="17" bodyfile="include/Graphs/SVFG.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a11c50c2f81327753b3ff3ffdbe356812" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_actual_parm_v_f_g_node" kindref="compound">ActualParmVFGNode</ref></type>
        <definition>typedef ActualParmVFGNode SVF::ActualParmSVFGNode</definition>
        <argsstring></argsstring>
        <name>ActualParmSVFGNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFG.h" line="44" column="27" bodyfile="include/Graphs/SVFG.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a77b8b8ca831e1eba3e47f2ca29667f67" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_actual_ret_v_f_g_node" kindref="compound">ActualRetVFGNode</ref></type>
        <definition>typedef ActualRetVFGNode SVF::ActualRetSVFGNode</definition>
        <argsstring></argsstring>
        <name>ActualRetSVFGNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFG.h" line="45" column="26" bodyfile="include/Graphs/SVFG.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ad466edced10faeafd48e96daf193b8a9" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_formal_parm_v_f_g_node" kindref="compound">FormalParmVFGNode</ref></type>
        <definition>typedef FormalParmVFGNode SVF::FormalParmSVFGNode</definition>
        <argsstring></argsstring>
        <name>FormalParmSVFGNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFG.h" line="46" column="27" bodyfile="include/Graphs/SVFG.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ae5987da3ffd5681e8ec4ef14ba54588e" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_formal_ret_v_f_g_node" kindref="compound">FormalRetVFGNode</ref></type>
        <definition>typedef FormalRetVFGNode SVF::FormalRetSVFGNode</definition>
        <argsstring></argsstring>
        <name>FormalRetSVFGNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFG.h" line="47" column="26" bodyfile="include/Graphs/SVFG.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1aeccd0bd024319173c1cda5ff1a79c5ae" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_null_ptr_v_f_g_node" kindref="compound">NullPtrVFGNode</ref></type>
        <definition>typedef NullPtrVFGNode SVF::NullPtrSVFGNode</definition>
        <argsstring></argsstring>
        <name>NullPtrSVFGNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFG.h" line="49" column="24" bodyfile="include/Graphs/SVFG.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a26bd4f89dc154b9c6d34b6a517777934" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_stmt_v_f_g_node" kindref="compound">StmtVFGNode</ref></type>
        <definition>typedef StmtVFGNode SVF::StmtSVFGNode</definition>
        <argsstring></argsstring>
        <name>StmtSVFGNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFG.h" line="50" column="21" bodyfile="include/Graphs/SVFG.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a959453cbb8ff2d852b526fd1ff74ce49" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_addr_v_f_g_node" kindref="compound">AddrVFGNode</ref></type>
        <definition>typedef AddrVFGNode SVF::AddrSVFGNode</definition>
        <argsstring></argsstring>
        <name>AddrSVFGNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFG.h" line="51" column="21" bodyfile="include/Graphs/SVFG.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ab98f7c9e6311e649cdfd5d2f3f8e59be" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_copy_v_f_g_node" kindref="compound">CopyVFGNode</ref></type>
        <definition>typedef CopyVFGNode SVF::CopySVFGNode</definition>
        <argsstring></argsstring>
        <name>CopySVFGNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFG.h" line="52" column="21" bodyfile="include/Graphs/SVFG.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a54c5725186e66ead6faf53c10a288714" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_store_v_f_g_node" kindref="compound">StoreVFGNode</ref></type>
        <definition>typedef StoreVFGNode SVF::StoreSVFGNode</definition>
        <argsstring></argsstring>
        <name>StoreSVFGNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFG.h" line="53" column="22" bodyfile="include/Graphs/SVFG.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a3ce49be3724e1e8423ccdfa726fbf6c8" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_load_v_f_g_node" kindref="compound">LoadVFGNode</ref></type>
        <definition>typedef LoadVFGNode SVF::LoadSVFGNode</definition>
        <argsstring></argsstring>
        <name>LoadSVFGNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFG.h" line="54" column="21" bodyfile="include/Graphs/SVFG.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a65a3be463427d1112a8b87f072f3d22f" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_gep_v_f_g_node" kindref="compound">GepVFGNode</ref></type>
        <definition>typedef GepVFGNode SVF::GepSVFGNode</definition>
        <argsstring></argsstring>
        <name>GepSVFGNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFG.h" line="55" column="20" bodyfile="include/Graphs/SVFG.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a71d4e214e049f02bf26537cba6328673" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_p_h_i_v_f_g_node" kindref="compound">PHIVFGNode</ref></type>
        <definition>typedef PHIVFGNode SVF::PHISVFGNode</definition>
        <argsstring></argsstring>
        <name>PHISVFGNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFG.h" line="56" column="20" bodyfile="include/Graphs/SVFG.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ad772e1586e369943f37c22641e93e941" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_intra_p_h_i_v_f_g_node" kindref="compound">IntraPHIVFGNode</ref></type>
        <definition>typedef IntraPHIVFGNode SVF::IntraPHISVFGNode</definition>
        <argsstring></argsstring>
        <name>IntraPHISVFGNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFG.h" line="57" column="25" bodyfile="include/Graphs/SVFG.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a0f7ff1d9a479df87241b45bb9c81d3ca" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_inter_p_h_i_v_f_g_node" kindref="compound">InterPHIVFGNode</ref></type>
        <definition>typedef InterPHIVFGNode SVF::InterPHISVFGNode</definition>
        <argsstring></argsstring>
        <name>InterPHISVFGNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFG.h" line="58" column="25" bodyfile="include/Graphs/SVFG.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ab4f1d8a6715e791c94970e6f87b18f8f" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_graph" kindref="compound">GenericGraph</ref>&lt; <ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">VFGNode</ref>, <ref refid="class_s_v_f_1_1_v_f_g_edge" kindref="compound">VFGEdge</ref> &gt;</type>
        <definition>typedef GenericGraph&lt;VFGNode,VFGEdge&gt; SVF::GenericVFGTy</definition>
        <argsstring></argsstring>
        <name>GenericVFGTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Interprocedural Control-Flow Graph (<ref refid="class_s_v_f_1_1_v_f_g" kindref="compound">VFG</ref>) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFG.h" line="47" column="22" bodyfile="include/Graphs/VFG.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a30dcaf83718f2652012f98b192dcf437" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_edge" kindref="compound">GenericEdge</ref>&lt; <ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">VFGNode</ref> &gt;</type>
        <definition>typedef GenericEdge&lt;VFGNode&gt; SVF::GenericVFGEdgeTy</definition>
        <argsstring></argsstring>
        <name>GenericVFGEdgeTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Interprocedural control-flow and value-flow edge, representing the control- and value-flow dependence between two nodes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGEdge.h" line="43" column="21" bodyfile="include/Graphs/VFGEdge.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a3b4bbc4b72e982a79c23fd3ec26410b6" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_node" kindref="compound">GenericNode</ref>&lt; <ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">VFGNode</ref>, <ref refid="class_s_v_f_1_1_v_f_g_edge" kindref="compound">VFGEdge</ref> &gt;</type>
        <definition>typedef GenericNode&lt;VFGNode,VFGEdge&gt; SVF::GenericVFGNodeTy</definition>
        <argsstring></argsstring>
        <name>GenericVFGNodeTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Interprocedural control-flow graph node, representing different kinds of program statements including top-level pointers (<ref refid="class_s_v_f_1_1_val_p_n" kindref="compound">ValPN</ref>) and address-taken objects (<ref refid="class_s_v_f_1_1_obj_p_n" kindref="compound">ObjPN</ref>) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGNode.h" line="47" column="21" bodyfile="include/Graphs/VFGNode.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a1ed5cfc8a00b2d3b90e74debabaa62a5" prot="public" static="no">
        <type>NodeID</type>
        <definition>typedef NodeID SVF::MRID</definition>
        <argsstring></argsstring>
        <name>MRID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/MemRegion.h" line="43" column="16" bodyfile="include/MSSA/MemRegion.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a0039280e908258b8e73779de51e9f63b" prot="public" static="no">
        <type>NodeID</type>
        <definition>typedef NodeID SVF::MRVERID</definition>
        <argsstring></argsstring>
        <name>MRVERID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/MemRegion.h" line="44" column="16" bodyfile="include/MSSA/MemRegion.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a39df0130e37e97db2ff7620bbb2a72f5" prot="public" static="no">
        <type>NodeID</type>
        <definition>typedef NodeID SVF::MRVERSION</definition>
        <argsstring></argsstring>
        <name>MRVERSION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/MemRegion.h" line="45" column="16" bodyfile="include/MSSA/MemRegion.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a07db688cc13384ddfddb1372612db205" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_edge" kindref="compound">GenericEdge</ref>&lt; <ref refid="class_s_v_f_1_1_t_c_t_node" kindref="compound">TCTNode</ref> &gt;</type>
        <definition>typedef GenericEdge&lt;TCTNode&gt; SVF::GenericTCTEdgeTy</definition>
        <argsstring></argsstring>
        <name>GenericTCTEdgeTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/TCT.h" line="28" column="21" bodyfile="include/MTA/TCT.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a115fc72b31d2ae72e60ebd9af1351e83" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_node" kindref="compound">GenericNode</ref>&lt; <ref refid="class_s_v_f_1_1_t_c_t_node" kindref="compound">TCTNode</ref>, <ref refid="class_s_v_f_1_1_t_c_t_edge" kindref="compound">TCTEdge</ref> &gt;</type>
        <definition>typedef GenericNode&lt;TCTNode, TCTEdge&gt; SVF::GenericTCTNodeTy</definition>
        <argsstring></argsstring>
        <name>GenericTCTNodeTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/TCT.h" line="64" column="21" bodyfile="include/MTA/TCT.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a8e1221553658c8b506c348534135ceaa" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_graph" kindref="compound">GenericGraph</ref>&lt; <ref refid="class_s_v_f_1_1_t_c_t_node" kindref="compound">TCTNode</ref>, <ref refid="class_s_v_f_1_1_t_c_t_edge" kindref="compound">TCTEdge</ref> &gt;</type>
        <definition>typedef GenericGraph&lt;TCTNode, TCTEdge&gt; SVF::GenericThreadCreateTreeTy</definition>
        <argsstring></argsstring>
        <name>GenericThreadCreateTreeTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer Analysis Call Graph used internally for various pointer analysis </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/TCT.h" line="114" column="22" bodyfile="include/MTA/TCT.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a6144ebf5a46ac5e8899044864caf92ba" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_c_f_l_solver" kindref="compound">CFLSolver</ref>&lt; <ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> *, <ref refid="class_s_v_f_1_1_cxt_d_p_item" kindref="compound">CxtDPItem</ref> &gt;</type>
        <definition>typedef CFLSolver&lt;SVFG*,CxtDPItem&gt; SVF::CFLSrcSnkSolver</definition>
        <argsstring></argsstring>
        <name>CFLSrcSnkSolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SABER/SrcSnkDDA.h" line="42" column="19" bodyfile="include/SABER/SrcSnkDDA.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a7cb629496a70d2dd22634405652e573a" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_edge" kindref="compound">GenericEdge</ref>&lt; <ref refid="class_s_v_f_1_1_c_h_node" kindref="compound">CHNode</ref> &gt;</type>
        <definition>typedef GenericEdge&lt;CHNode&gt; SVF::GenericCHEdgeTy</definition>
        <argsstring></argsstring>
        <name>GenericCHEdgeTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="44" column="21" bodyfile="include/SVF-FE/CHG.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a838ed37e84836101711c25a760eec57d" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_node" kindref="compound">GenericNode</ref>&lt; <ref refid="class_s_v_f_1_1_c_h_node" kindref="compound">CHNode</ref>, <ref refid="class_s_v_f_1_1_c_h_edge" kindref="compound">CHEdge</ref> &gt;</type>
        <definition>typedef GenericNode&lt;CHNode,CHEdge&gt; SVF::GenericCHNodeTy</definition>
        <argsstring></argsstring>
        <name>GenericCHNodeTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="71" column="21" bodyfile="include/SVF-FE/CHG.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1aa8bd37e4ec2e98c805a14adbf590b9dd" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_graph" kindref="compound">GenericGraph</ref>&lt; <ref refid="class_s_v_f_1_1_c_h_node" kindref="compound">CHNode</ref>, <ref refid="class_s_v_f_1_1_c_h_edge" kindref="compound">CHEdge</ref> &gt;</type>
        <definition>typedef GenericGraph&lt;CHNode,CHEdge&gt; SVF::GenericCHGraphTy</definition>
        <argsstring></argsstring>
        <name>GenericCHGraphTy</name>
        <briefdescription>
<para>class hierarchy graph </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="175" column="22" bodyfile="include/SVF-FE/CHG.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a53511f619c06836ee85acf12153810e2" prot="public" static="no">
        <type>Set&lt; const GlobalValue * &gt;</type>
        <definition>typedef Set&lt;const GlobalValue*&gt; SVF::VTableSet</definition>
        <argsstring></argsstring>
        <name>VTableSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CommonCHG.h" line="17" column="13" bodyfile="include/SVF-FE/CommonCHG.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ad2b487757f1e1a1d81073120fc1d49c7" prot="public" static="no">
        <type>Set&lt; const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> * &gt;</type>
        <definition>typedef Set&lt;const SVFFunction*&gt; SVF::VFunSet</definition>
        <argsstring></argsstring>
        <name>VFunSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CommonCHG.h" line="18" column="13" bodyfile="include/SVF-FE/CommonCHG.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a86863d104a3930b3a806935d92ddbf30" prot="public" static="no">
        <type>llvm::SMDiagnostic</type>
        <definition>typedef llvm::SMDiagnostic SVF::SMDiagnostic</definition>
        <argsstring></argsstring>
        <name>SMDiagnostic</name>
        <briefdescription>
<para>LLVM Basic classes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="71" column="28" bodyfile="include/Util/BasicTypes.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1affba423b674a0aba723e33101826e297" prot="public" static="no">
        <type>llvm::LLVMContext</type>
        <definition>typedef llvm::LLVMContext SVF::LLVMContext</definition>
        <argsstring></argsstring>
        <name>LLVMContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="72" column="27" bodyfile="include/Util/BasicTypes.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a1d008c0666c145622b81d427be64c52d" prot="public" static="no">
        <type>llvm::Type</type>
        <definition>typedef llvm::Type SVF::Type</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="73" column="20" bodyfile="include/Util/BasicTypes.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a5faee14fa1dd41447bc73ac365fe33c1" prot="public" static="no">
        <type>llvm::Function</type>
        <definition>typedef llvm::Function SVF::Function</definition>
        <argsstring></argsstring>
        <name>Function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="74" column="24" bodyfile="include/Util/BasicTypes.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a23bf614858f168b6ad76e0233cec9965" prot="public" static="no">
        <type>llvm::BasicBlock</type>
        <definition>typedef llvm::BasicBlock SVF::BasicBlock</definition>
        <argsstring></argsstring>
        <name>BasicBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="75" column="26" bodyfile="include/Util/BasicTypes.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a90b263fd2f541eca78135078114cabda" prot="public" static="no">
        <type>llvm::Value</type>
        <definition>typedef llvm::Value SVF::Value</definition>
        <argsstring></argsstring>
        <name>Value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="76" column="21" bodyfile="include/Util/BasicTypes.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a7875172ff434b2210eea7cecfbbd959e" prot="public" static="no">
        <type>llvm::Instruction</type>
        <definition>typedef llvm::Instruction SVF::Instruction</definition>
        <argsstring></argsstring>
        <name>Instruction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="77" column="27" bodyfile="include/Util/BasicTypes.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a150305e9f9de6ab51677e0971c1110c0" prot="public" static="no">
        <type>llvm::CallSite</type>
        <definition>typedef llvm::CallSite SVF::CallSite</definition>
        <argsstring></argsstring>
        <name>CallSite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="78" column="24" bodyfile="include/Util/BasicTypes.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1af157dc77830b6cc804338df7430cbbb3" prot="public" static="no">
        <type>llvm::GlobalObject</type>
        <definition>typedef llvm::GlobalObject SVF::GlobalObject</definition>
        <argsstring></argsstring>
        <name>GlobalObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="79" column="28" bodyfile="include/Util/BasicTypes.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a67f3f86344f028cacfbeb08caaf7bb0f" prot="public" static="no">
        <type>llvm::GlobalValue</type>
        <definition>typedef llvm::GlobalValue SVF::GlobalValue</definition>
        <argsstring></argsstring>
        <name>GlobalValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="80" column="27" bodyfile="include/Util/BasicTypes.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a09f5fa3bc44bf53612a085e3a611cc4e" prot="public" static="no">
        <type>llvm::GlobalVariable</type>
        <definition>typedef llvm::GlobalVariable SVF::GlobalVariable</definition>
        <argsstring></argsstring>
        <name>GlobalVariable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="81" column="30" bodyfile="include/Util/BasicTypes.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1aa7a770b5dd5cd0e37d06a1088f252906" prot="public" static="no">
        <type>llvm::Module</type>
        <definition>typedef llvm::Module SVF::Module</definition>
        <argsstring></argsstring>
        <name>Module</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="82" column="22" bodyfile="include/Util/BasicTypes.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a6c559fdb6e0c4e84c4e5b05a5cf90052" prot="public" static="no">
        <type>llvm::CallGraph</type>
        <definition>typedef llvm::CallGraph SVF::LLVMCallGraph</definition>
        <argsstring></argsstring>
        <name>LLVMCallGraph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="83" column="25" bodyfile="include/Util/BasicTypes.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1afc1b50355821e7299df03b026e36f1df" prot="public" static="no">
        <type>llvm::User</type>
        <definition>typedef llvm::User SVF::User</definition>
        <argsstring></argsstring>
        <name>User</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="84" column="20" bodyfile="include/Util/BasicTypes.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a334998718813a19a7697daf4ba282faf" prot="public" static="no">
        <type>llvm::Use</type>
        <definition>typedef llvm::Use SVF::Use</definition>
        <argsstring></argsstring>
        <name>Use</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="85" column="19" bodyfile="include/Util/BasicTypes.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1abf85e29310b2e4df8925d00a5c081314" prot="public" static="no">
        <type>llvm::Loop</type>
        <definition>typedef llvm::Loop SVF::Loop</definition>
        <argsstring></argsstring>
        <name>Loop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="86" column="20" bodyfile="include/Util/BasicTypes.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a77e088bfe47c0b0ddcbbe0693dec6fe5" prot="public" static="no">
        <type>llvm::LoopInfo</type>
        <definition>typedef llvm::LoopInfo SVF::LoopInfo</definition>
        <argsstring></argsstring>
        <name>LoopInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="87" column="24" bodyfile="include/Util/BasicTypes.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ae5853f7df76735b195ff93949ca4256b" prot="public" static="no">
        <type>llvm::UnifyFunctionExitNodes</type>
        <definition>typedef llvm::UnifyFunctionExitNodes SVF::UnifyFunctionExitNodes</definition>
        <argsstring></argsstring>
        <name>UnifyFunctionExitNodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="88" column="38" bodyfile="include/Util/BasicTypes.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ac226d84f86637126d17f6814632c8a90" prot="public" static="no">
        <type>llvm::ModulePass</type>
        <definition>typedef llvm::ModulePass SVF::ModulePass</definition>
        <argsstring></argsstring>
        <name>ModulePass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="89" column="26" bodyfile="include/Util/BasicTypes.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a73f84dcc6371f1503f6e7cec3387f9a2" prot="public" static="no">
        <type>llvm::AnalysisUsage</type>
        <definition>typedef llvm::AnalysisUsage SVF::AnalysisUsage</definition>
        <argsstring></argsstring>
        <name>AnalysisUsage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="90" column="29" bodyfile="include/Util/BasicTypes.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a424cc053c29ad7303699c529d1a2cc71" prot="public" static="no">
        <type>llvm::raw_ostream</type>
        <definition>typedef llvm::raw_ostream SVF::raw_ostream</definition>
        <argsstring></argsstring>
        <name>raw_ostream</name>
        <briefdescription>
<para>LLVM outputs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="93" column="27" bodyfile="include/Util/BasicTypes.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a726981481ac082dcda3e4921416b65a0" prot="public" static="no">
        <type>llvm::raw_string_ostream</type>
        <definition>typedef llvm::raw_string_ostream SVF::raw_string_ostream</definition>
        <argsstring></argsstring>
        <name>raw_string_ostream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="94" column="34" bodyfile="include/Util/BasicTypes.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a1c7c7ac12791c0ae386283c0a4f127ba" prot="public" static="no">
        <type>llvm::raw_fd_ostream</type>
        <definition>typedef llvm::raw_fd_ostream SVF::raw_fd_ostream</definition>
        <argsstring></argsstring>
        <name>raw_fd_ostream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="95" column="30" bodyfile="include/Util/BasicTypes.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a88fd7387fcf16caf70abe265cdcf90b9" prot="public" static="no">
        <type>llvm::StringRef</type>
        <definition>typedef llvm::StringRef SVF::StringRef</definition>
        <argsstring></argsstring>
        <name>StringRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="96" column="25" bodyfile="include/Util/BasicTypes.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1acde6a1d496f1b655088ccbe023820277" prot="public" static="no">
        <type>llvm::ToolOutputFile</type>
        <definition>typedef llvm::ToolOutputFile SVF::ToolOutputFile</definition>
        <argsstring></argsstring>
        <name>ToolOutputFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="97" column="30" bodyfile="include/Util/BasicTypes.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a2bf58575ac7d068e0f1a4cf953b9e6cb" prot="public" static="no">
        <type>llvm::StructType</type>
        <definition>typedef llvm::StructType SVF::StructType</definition>
        <argsstring></argsstring>
        <name>StructType</name>
        <briefdescription>
<para>LLVM types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="100" column="26" bodyfile="include/Util/BasicTypes.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a146d286041987860388da3d8bc85cee3" prot="public" static="no">
        <type>llvm::ArrayType</type>
        <definition>typedef llvm::ArrayType SVF::ArrayType</definition>
        <argsstring></argsstring>
        <name>ArrayType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="101" column="25" bodyfile="include/Util/BasicTypes.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1aa962cc1d782cc46553251e96b64a754b" prot="public" static="no">
        <type>llvm::PointerType</type>
        <definition>typedef llvm::PointerType SVF::PointerType</definition>
        <argsstring></argsstring>
        <name>PointerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="102" column="27" bodyfile="include/Util/BasicTypes.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a6ec0236303089a01fd9da36a8bb84e0a" prot="public" static="no">
        <type>llvm::FunctionType</type>
        <definition>typedef llvm::FunctionType SVF::FunctionType</definition>
        <argsstring></argsstring>
        <name>FunctionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="103" column="28" bodyfile="include/Util/BasicTypes.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a1eaed46fa67cf1a51e438c5f8f523418" prot="public" static="no">
        <type>llvm::VectorType</type>
        <definition>typedef llvm::VectorType SVF::VectorType</definition>
        <argsstring></argsstring>
        <name>VectorType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="104" column="26" bodyfile="include/Util/BasicTypes.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a773900ea3c75022657aac1abf59fa51b" prot="public" static="no">
        <type>llvm::MetadataAsValue</type>
        <definition>typedef llvm::MetadataAsValue SVF::MetadataAsValue</definition>
        <argsstring></argsstring>
        <name>MetadataAsValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="105" column="31" bodyfile="include/Util/BasicTypes.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a956458a8554bf734db1194f320fd4b4c" prot="public" static="no">
        <type>llvm::BlockAddress</type>
        <definition>typedef llvm::BlockAddress SVF::BlockAddress</definition>
        <argsstring></argsstring>
        <name>BlockAddress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="106" column="28" bodyfile="include/Util/BasicTypes.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a03db82b8a7914367024723dba4d6ca3c" prot="public" static="no">
        <type>llvm::DataLayout</type>
        <definition>typedef llvm::DataLayout SVF::DataLayout</definition>
        <argsstring></argsstring>
        <name>DataLayout</name>
        <briefdescription>
<para>LLVM data layout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="109" column="26" bodyfile="include/Util/BasicTypes.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a52c8654c221bb53a59f70ea3cb1e5c45" prot="public" static="no">
        <type>llvm::StructLayout</type>
        <definition>typedef llvm::StructLayout SVF::StructLayout</definition>
        <argsstring></argsstring>
        <name>StructLayout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="110" column="28" bodyfile="include/Util/BasicTypes.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ad09d8882474ef59b50d1c6a6d3ba0b59" prot="public" static="no">
        <type>llvm::SmallVector&lt; BasicBlock *, 8 &gt;</type>
        <definition>typedef llvm::SmallVector&lt;BasicBlock*, 8&gt; SVF::SmallBBVector</definition>
        <argsstring></argsstring>
        <name>SmallBBVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="111" column="27" bodyfile="include/Util/BasicTypes.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a2b28f48dde0a9a91d251e654ce1f9477" prot="public" static="no">
        <type>llvm::ConstantStruct</type>
        <definition>typedef llvm::ConstantStruct SVF::ConstantStruct</definition>
        <argsstring></argsstring>
        <name>ConstantStruct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="112" column="30" bodyfile="include/Util/BasicTypes.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a339bbddac9d9dffd5ef602200d34c403" prot="public" static="no">
        <type>llvm::MemoryLocation</type>
        <definition>typedef llvm::MemoryLocation SVF::MemoryLocation</definition>
        <argsstring></argsstring>
        <name>MemoryLocation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="113" column="30" bodyfile="include/Util/BasicTypes.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a58cdfbc4160cae08745b67844ac29801" prot="public" static="no">
        <type>llvm::Argument</type>
        <definition>typedef llvm::Argument SVF::Argument</definition>
        <argsstring></argsstring>
        <name>Argument</name>
        <briefdescription>
<para>LLVM Aliases and constants. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="116" column="24" bodyfile="include/Util/BasicTypes.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a7e230c0cba2e3a7c2e5a5f2ee7d88af9" prot="public" static="no">
        <type>llvm::Constant</type>
        <definition>typedef llvm::Constant SVF::Constant</definition>
        <argsstring></argsstring>
        <name>Constant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="117" column="24" bodyfile="include/Util/BasicTypes.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a7332f8059ea95472dcc231de884a5768" prot="public" static="no">
        <type>llvm::ConstantData</type>
        <definition>typedef llvm::ConstantData SVF::ConstantData</definition>
        <argsstring></argsstring>
        <name>ConstantData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="118" column="28" bodyfile="include/Util/BasicTypes.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a911dbaab38cb42deb9c195c7f687853d" prot="public" static="no">
        <type>llvm::ConstantExpr</type>
        <definition>typedef llvm::ConstantExpr SVF::ConstantExpr</definition>
        <argsstring></argsstring>
        <name>ConstantExpr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="119" column="28" bodyfile="include/Util/BasicTypes.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a7cbe1c6567039e72958fd70e423d3597" prot="public" static="no">
        <type>llvm::ConstantAggregate</type>
        <definition>typedef llvm::ConstantAggregate SVF::ConstantAggregate</definition>
        <argsstring></argsstring>
        <name>ConstantAggregate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="120" column="33" bodyfile="include/Util/BasicTypes.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a90f6c91ba7a3c31c84b5c25277d83fca" prot="public" static="no">
        <type>llvm::ConstantPointerNull</type>
        <definition>typedef llvm::ConstantPointerNull SVF::ConstantPointerNull</definition>
        <argsstring></argsstring>
        <name>ConstantPointerNull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="121" column="35" bodyfile="include/Util/BasicTypes.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a5ae718cba37d8e34d2946530dc098c8e" prot="public" static="no">
        <type>llvm::ConstantArray</type>
        <definition>typedef llvm::ConstantArray SVF::ConstantArray</definition>
        <argsstring></argsstring>
        <name>ConstantArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="122" column="29" bodyfile="include/Util/BasicTypes.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a0fd33072b099f61eaa642e94ed0c03fc" prot="public" static="no">
        <type>llvm::GlobalAlias</type>
        <definition>typedef llvm::GlobalAlias SVF::GlobalAlias</definition>
        <argsstring></argsstring>
        <name>GlobalAlias</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="123" column="27" bodyfile="include/Util/BasicTypes.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ae941b2925716d8ebe14bf190aa8dfd06" prot="public" static="no">
        <type>llvm::AliasResult</type>
        <definition>typedef llvm::AliasResult SVF::AliasResult</definition>
        <argsstring></argsstring>
        <name>AliasResult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="124" column="27" bodyfile="include/Util/BasicTypes.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a7e833aa9feaf931fb44fb1e3fd502a6c" prot="public" static="no">
        <type>llvm::ModRefInfo</type>
        <definition>typedef llvm::ModRefInfo SVF::ModRefInfo</definition>
        <argsstring></argsstring>
        <name>ModRefInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="125" column="26" bodyfile="include/Util/BasicTypes.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1adee4dc991998deed59f251fb5010d7db" prot="public" static="no">
        <type>llvm::AnalysisID</type>
        <definition>typedef llvm::AnalysisID SVF::AnalysisID</definition>
        <argsstring></argsstring>
        <name>AnalysisID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="126" column="26" bodyfile="include/Util/BasicTypes.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ad9ebd847ed5d901cd30b1cfcdaec3462" prot="public" static="no">
        <type>llvm::ConstantDataArray</type>
        <definition>typedef llvm::ConstantDataArray SVF::ConstantDataArray</definition>
        <argsstring></argsstring>
        <name>ConstantDataArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="127" column="33" bodyfile="include/Util/BasicTypes.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a3011dbac9102f044ad5f36a4ad3d4a71" prot="public" static="no">
        <type>llvm::NamedMDNode</type>
        <definition>typedef llvm::NamedMDNode SVF::NamedMDNode</definition>
        <argsstring></argsstring>
        <name>NamedMDNode</name>
        <briefdescription>
<para>LLVM metadata. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="130" column="27" bodyfile="include/Util/BasicTypes.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a28eec26ec8edaa5e96aecfeb01f6c0d4" prot="public" static="no">
        <type>llvm::MDString</type>
        <definition>typedef llvm::MDString SVF::MDString</definition>
        <argsstring></argsstring>
        <name>MDString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="131" column="24" bodyfile="include/Util/BasicTypes.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ad3d3cec1813411f039211c86236f7adb" prot="public" static="no">
        <type>llvm::MDNode</type>
        <definition>typedef llvm::MDNode SVF::MDNode</definition>
        <argsstring></argsstring>
        <name>MDNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="132" column="22" bodyfile="include/Util/BasicTypes.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a3bacb4f95c73e6d794901d01c6b65a83" prot="public" static="no">
        <type>llvm::AllocaInst</type>
        <definition>typedef llvm::AllocaInst SVF::AllocaInst</definition>
        <argsstring></argsstring>
        <name>AllocaInst</name>
        <briefdescription>
<para>LLVM Instructions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="136" column="26" bodyfile="include/Util/BasicTypes.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1adc8b60ca7d60cf6c81feae20e4a04c63" prot="public" static="no">
        <type>llvm::CallInst</type>
        <definition>typedef llvm::CallInst SVF::CallInst</definition>
        <argsstring></argsstring>
        <name>CallInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="137" column="24" bodyfile="include/Util/BasicTypes.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a56cb9d6d1e05f6c31bfe1a4045bc8b5f" prot="public" static="no">
        <type>llvm::InvokeInst</type>
        <definition>typedef llvm::InvokeInst SVF::InvokeInst</definition>
        <argsstring></argsstring>
        <name>InvokeInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="138" column="26" bodyfile="include/Util/BasicTypes.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ac6b6710585fc6667858ccfd4311b6ab5" prot="public" static="no">
        <type>llvm::CallBrInst</type>
        <definition>typedef llvm::CallBrInst SVF::CallBrInst</definition>
        <argsstring></argsstring>
        <name>CallBrInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="139" column="26" bodyfile="include/Util/BasicTypes.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ab696aab940eb187dc81217efe8649af5" prot="public" static="no">
        <type>llvm::StoreInst</type>
        <definition>typedef llvm::StoreInst SVF::StoreInst</definition>
        <argsstring></argsstring>
        <name>StoreInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="140" column="25" bodyfile="include/Util/BasicTypes.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a5a6e8ab900d5cd17ef72661006a7fbe0" prot="public" static="no">
        <type>llvm::LoadInst</type>
        <definition>typedef llvm::LoadInst SVF::LoadInst</definition>
        <argsstring></argsstring>
        <name>LoadInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="141" column="24" bodyfile="include/Util/BasicTypes.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ac8d4990439af7a2ecca7e15383119674" prot="public" static="no">
        <type>llvm::PHINode</type>
        <definition>typedef llvm::PHINode SVF::PHINode</definition>
        <argsstring></argsstring>
        <name>PHINode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="142" column="23" bodyfile="include/Util/BasicTypes.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ac4e93e1fec646ff222940a663843921b" prot="public" static="no">
        <type>llvm::GetElementPtrInst</type>
        <definition>typedef llvm::GetElementPtrInst SVF::GetElementPtrInst</definition>
        <argsstring></argsstring>
        <name>GetElementPtrInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="143" column="33" bodyfile="include/Util/BasicTypes.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a962e9a9044a46fc4bd2367384f6e0827" prot="public" static="no">
        <type>llvm::CastInst</type>
        <definition>typedef llvm::CastInst SVF::CastInst</definition>
        <argsstring></argsstring>
        <name>CastInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="144" column="24" bodyfile="include/Util/BasicTypes.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1afc50da46a6ea7c2cf61683bbec4d7c8d" prot="public" static="no">
        <type>llvm::BitCastInst</type>
        <definition>typedef llvm::BitCastInst SVF::BitCastInst</definition>
        <argsstring></argsstring>
        <name>BitCastInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="145" column="27" bodyfile="include/Util/BasicTypes.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ac7dcc6103dee3a0bbc2fd2e02716a154" prot="public" static="no">
        <type>llvm::ReturnInst</type>
        <definition>typedef llvm::ReturnInst SVF::ReturnInst</definition>
        <argsstring></argsstring>
        <name>ReturnInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="146" column="26" bodyfile="include/Util/BasicTypes.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1adefcb50414ea999d70cea5ccdbcb98d7" prot="public" static="no">
        <type>llvm::ConstantInt</type>
        <definition>typedef llvm::ConstantInt SVF::ConstantInt</definition>
        <argsstring></argsstring>
        <name>ConstantInt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="147" column="27" bodyfile="include/Util/BasicTypes.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ab7fac9d4a4839be445c89777e21bc307" prot="public" static="no">
        <type>llvm::SelectInst</type>
        <definition>typedef llvm::SelectInst SVF::SelectInst</definition>
        <argsstring></argsstring>
        <name>SelectInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="148" column="26" bodyfile="include/Util/BasicTypes.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a07578c424e9d3c07a54e65404a0a6abb" prot="public" static="no">
        <type>llvm::IntToPtrInst</type>
        <definition>typedef llvm::IntToPtrInst SVF::IntToPtrInst</definition>
        <argsstring></argsstring>
        <name>IntToPtrInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="149" column="28" bodyfile="include/Util/BasicTypes.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a5d875a9d726bb9f68a17efa528dec0b4" prot="public" static="no">
        <type>llvm::CmpInst</type>
        <definition>typedef llvm::CmpInst SVF::CmpInst</definition>
        <argsstring></argsstring>
        <name>CmpInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="150" column="23" bodyfile="include/Util/BasicTypes.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ac9a05dd7ab16e998625037aa242cd30f" prot="public" static="no">
        <type>llvm::BranchInst</type>
        <definition>typedef llvm::BranchInst SVF::BranchInst</definition>
        <argsstring></argsstring>
        <name>BranchInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="151" column="26" bodyfile="include/Util/BasicTypes.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a412280b134578905248ce0122c5db7c9" prot="public" static="no">
        <type>llvm::SwitchInst</type>
        <definition>typedef llvm::SwitchInst SVF::SwitchInst</definition>
        <argsstring></argsstring>
        <name>SwitchInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="152" column="26" bodyfile="include/Util/BasicTypes.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ace1fd4c32134018e2f6d5da193524986" prot="public" static="no">
        <type>llvm::ExtractValueInst</type>
        <definition>typedef llvm::ExtractValueInst SVF::ExtractValueInst</definition>
        <argsstring></argsstring>
        <name>ExtractValueInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="153" column="33" bodyfile="include/Util/BasicTypes.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a485b10fc29e76fdb6f31a56ebbde8f24" prot="public" static="no">
        <type>llvm::InsertValueInst</type>
        <definition>typedef llvm::InsertValueInst SVF::InsertValueInst</definition>
        <argsstring></argsstring>
        <name>InsertValueInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="154" column="31" bodyfile="include/Util/BasicTypes.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1aad5d26ab07a5d1314bdb8f54e0fcdb22" prot="public" static="no">
        <type>llvm::BinaryOperator</type>
        <definition>typedef llvm::BinaryOperator SVF::BinaryOperator</definition>
        <argsstring></argsstring>
        <name>BinaryOperator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="155" column="30" bodyfile="include/Util/BasicTypes.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a292a6e8c5b4f2023b5575879c57eca62" prot="public" static="no">
        <type>llvm::UnaryOperator</type>
        <definition>typedef llvm::UnaryOperator SVF::UnaryOperator</definition>
        <argsstring></argsstring>
        <name>UnaryOperator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="156" column="29" bodyfile="include/Util/BasicTypes.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a3d5581c375ee3fe856327dc648c379f0" prot="public" static="no">
        <type>llvm::PtrToIntInst</type>
        <definition>typedef llvm::PtrToIntInst SVF::PtrToIntInst</definition>
        <argsstring></argsstring>
        <name>PtrToIntInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="157" column="28" bodyfile="include/Util/BasicTypes.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1abcafc32093ff5ee038b5fcf6e4076ed4" prot="public" static="no">
        <type>llvm::VAArgInst</type>
        <definition>typedef llvm::VAArgInst SVF::VAArgInst</definition>
        <argsstring></argsstring>
        <name>VAArgInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="158" column="25" bodyfile="include/Util/BasicTypes.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1afb88c4d723dd7c51bdfc7ba5893cb356" prot="public" static="no">
        <type>llvm::ExtractElementInst</type>
        <definition>typedef llvm::ExtractElementInst SVF::ExtractElementInst</definition>
        <argsstring></argsstring>
        <name>ExtractElementInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="159" column="34" bodyfile="include/Util/BasicTypes.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a6b857824fb3c39ff6de953651260a326" prot="public" static="no">
        <type>llvm::InsertElementInst</type>
        <definition>typedef llvm::InsertElementInst SVF::InsertElementInst</definition>
        <argsstring></argsstring>
        <name>InsertElementInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="160" column="33" bodyfile="include/Util/BasicTypes.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a64e69f438b8c302c4cae27735319fa49" prot="public" static="no">
        <type>llvm::ShuffleVectorInst</type>
        <definition>typedef llvm::ShuffleVectorInst SVF::ShuffleVectorInst</definition>
        <argsstring></argsstring>
        <name>ShuffleVectorInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="161" column="33" bodyfile="include/Util/BasicTypes.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1afa513a3c76371907221ee2b1ef289c71" prot="public" static="no">
        <type>llvm::LandingPadInst</type>
        <definition>typedef llvm::LandingPadInst SVF::LandingPadInst</definition>
        <argsstring></argsstring>
        <name>LandingPadInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="162" column="30" bodyfile="include/Util/BasicTypes.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a8c685f6bff3a67bf7fe3557dbfa84caa" prot="public" static="no">
        <type>llvm::ResumeInst</type>
        <definition>typedef llvm::ResumeInst SVF::ResumeInst</definition>
        <argsstring></argsstring>
        <name>ResumeInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="163" column="26" bodyfile="include/Util/BasicTypes.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a8ac6a8ff90f47a93166fbdf15be2d721" prot="public" static="no">
        <type>llvm::UnreachableInst</type>
        <definition>typedef llvm::UnreachableInst SVF::UnreachableInst</definition>
        <argsstring></argsstring>
        <name>UnreachableInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="164" column="31" bodyfile="include/Util/BasicTypes.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a61f0d928e58d4f7e21616f770ae1080b" prot="public" static="no">
        <type>llvm::FenceInst</type>
        <definition>typedef llvm::FenceInst SVF::FenceInst</definition>
        <argsstring></argsstring>
        <name>FenceInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="165" column="25" bodyfile="include/Util/BasicTypes.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a582e3736a2bbb0540364c1693d831b49" prot="public" static="no">
        <type>llvm::AtomicCmpXchgInst</type>
        <definition>typedef llvm::AtomicCmpXchgInst SVF::AtomicCmpXchgInst</definition>
        <argsstring></argsstring>
        <name>AtomicCmpXchgInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="166" column="33" bodyfile="include/Util/BasicTypes.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a468154e0ab9e7be82afef1aa0a2fb9e0" prot="public" static="no">
        <type>llvm::AtomicRMWInst</type>
        <definition>typedef llvm::AtomicRMWInst SVF::AtomicRMWInst</definition>
        <argsstring></argsstring>
        <name>AtomicRMWInst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="167" column="29" bodyfile="include/Util/BasicTypes.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1af4912ad47e19060e53b665f73e0ee6ec" prot="public" static="no">
        <type>llvm::UndefValue</type>
        <definition>typedef llvm::UndefValue SVF::UndefValue</definition>
        <argsstring></argsstring>
        <name>UndefValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="168" column="26" bodyfile="include/Util/BasicTypes.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a9f1aca0384166e42d14e2608009ebc01" prot="public" static="no">
        <type>llvm::ScalarEvolutionWrapperPass</type>
        <definition>typedef llvm::ScalarEvolutionWrapperPass SVF::ScalarEvolutionWrapperPass</definition>
        <argsstring></argsstring>
        <name>ScalarEvolutionWrapperPass</name>
        <briefdescription>
<para>LLVM scalar evolution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="174" column="42" bodyfile="include/Util/BasicTypes.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ad8794eb3c00de3d3b5c5e43dded3fb42" prot="public" static="no">
        <type>llvm::ScalarEvolution</type>
        <definition>typedef llvm::ScalarEvolution SVF::ScalarEvolution</definition>
        <argsstring></argsstring>
        <name>ScalarEvolution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="175" column="31" bodyfile="include/Util/BasicTypes.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a4f7c400fbf2fa03db8cf61cb9a7dd3e8" prot="public" static="no">
        <type>llvm::SCEVAddRecExpr</type>
        <definition>typedef llvm::SCEVAddRecExpr SVF::SCEVAddRecExpr</definition>
        <argsstring></argsstring>
        <name>SCEVAddRecExpr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="176" column="30" bodyfile="include/Util/BasicTypes.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1abe745006fa40399d8a13613a3e0dfc63" prot="public" static="no">
        <type>llvm::SCEVConstant</type>
        <definition>typedef llvm::SCEVConstant SVF::SCEVConstant</definition>
        <argsstring></argsstring>
        <name>SCEVConstant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="177" column="28" bodyfile="include/Util/BasicTypes.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1aac5262378e41a3414a20cc9a41d4adc6" prot="public" static="no">
        <type>llvm::SCEV</type>
        <definition>typedef llvm::SCEV SVF::SCEV</definition>
        <argsstring></argsstring>
        <name>SCEV</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="178" column="20" bodyfile="include/Util/BasicTypes.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ab44d20f806be99699895260b14a942d7" prot="public" static="no">
        <type>llvm::DominanceFrontier</type>
        <definition>typedef llvm::DominanceFrontier SVF::DominanceFrontier</definition>
        <argsstring></argsstring>
        <name>DominanceFrontier</name>
        <briefdescription>
<para>LLVM Dominators. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="181" column="33" bodyfile="include/Util/BasicTypes.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1aecbb42b8e9d17fa0189c50dda9fd5fdd" prot="public" static="no">
        <type>llvm::DominatorTree</type>
        <definition>typedef llvm::DominatorTree SVF::DominatorTree</definition>
        <argsstring></argsstring>
        <name>DominatorTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="182" column="29" bodyfile="include/Util/BasicTypes.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ab34383ee87cd45eb485fa29db482ffef" prot="public" static="no">
        <type>llvm::PostDominatorTree</type>
        <definition>typedef llvm::PostDominatorTree SVF::PostDominatorTree</definition>
        <argsstring></argsstring>
        <name>PostDominatorTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="183" column="33" bodyfile="include/Util/BasicTypes.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a827d09974dc7bf0849f96823cc2fee89" prot="public" static="no">
        <type>llvm::DomTreeNode</type>
        <definition>typedef llvm::DomTreeNode SVF::DomTreeNode</definition>
        <argsstring></argsstring>
        <name>DomTreeNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="184" column="27" bodyfile="include/Util/BasicTypes.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1aefa7ddc97343be9e528108d0a52293de" prot="public" static="no">
        <type>llvm::DominanceFrontierBase&lt; BasicBlock, false &gt;</type>
        <definition>typedef llvm::DominanceFrontierBase&lt;BasicBlock, false&gt; SVF::DominanceFrontierBase</definition>
        <argsstring></argsstring>
        <name>DominanceFrontierBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="185" column="37" bodyfile="include/Util/BasicTypes.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a7f570d09953aa4ec60fd1d5f7f71b521" prot="public" static="no">
        <type>llvm::PostDominatorTreeWrapperPass</type>
        <definition>typedef llvm::PostDominatorTreeWrapperPass SVF::PostDominatorTreeWrapperPass</definition>
        <argsstring></argsstring>
        <name>PostDominatorTreeWrapperPass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="186" column="44" bodyfile="include/Util/BasicTypes.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a023d6e6043174fffaf29d75b38877ed0" prot="public" static="no">
        <type>llvm::LoopInfoWrapperPass</type>
        <definition>typedef llvm::LoopInfoWrapperPass SVF::LoopInfoWrapperPass</definition>
        <argsstring></argsstring>
        <name>LoopInfoWrapperPass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="187" column="35" bodyfile="include/Util/BasicTypes.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a255af6ff30782cb9a548feadb0fe7d6b" prot="public" static="no">
        <type>llvm::inst_iterator</type>
        <definition>typedef llvm::inst_iterator SVF::inst_iterator</definition>
        <argsstring></argsstring>
        <name>inst_iterator</name>
        <briefdescription>
<para>LLVM Iterators. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="190" column="29" bodyfile="include/Util/BasicTypes.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a3436a988bf80c021cd8022fb445b66d5" prot="public" static="no">
        <type>llvm::succ_const_iterator</type>
        <definition>typedef llvm::succ_const_iterator SVF::succ_const_iterator</definition>
        <argsstring></argsstring>
        <name>succ_const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="191" column="35" bodyfile="include/Util/BasicTypes.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a032e8478a7b6a8bb0b7755c98a7bce91" prot="public" static="no">
        <type>llvm::const_inst_iterator</type>
        <definition>typedef llvm::const_inst_iterator SVF::const_inst_iterator</definition>
        <argsstring></argsstring>
        <name>const_inst_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="192" column="35" bodyfile="include/Util/BasicTypes.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a5c943191dc4e242704943e5f594ae99e" prot="public" static="no">
        <type>llvm::const_pred_iterator</type>
        <definition>typedef llvm::const_pred_iterator SVF::const_pred_iterator</definition>
        <argsstring></argsstring>
        <name>const_pred_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="193" column="35" bodyfile="include/Util/BasicTypes.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1aa508c087703240dad69a9827e85ebd0b" prot="public" static="no">
        <type>llvm::gep_type_iterator</type>
        <definition>typedef llvm::gep_type_iterator SVF::gep_type_iterator</definition>
        <argsstring></argsstring>
        <name>gep_type_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="194" column="33" bodyfile="include/Util/BasicTypes.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a3b6e84470681a9f731a81e8cf54680cc" prot="public" static="no">
        <type><ref refid="classllvm_1_1generic__bridge__gep__type__iterator" kindref="compound">llvm::bridge_gep_iterator</ref></type>
        <definition>typedef llvm::bridge_gep_iterator SVF::bridge_gep_iterator</definition>
        <argsstring></argsstring>
        <name>bridge_gep_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="195" column="35" bodyfile="include/Util/BasicTypes.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a2eae2d6648dd6715421bd7af67d57637" prot="public" static="no">
        <type><ref refid="classllvm_1_1_graph_printer" kindref="compound">llvm::GraphPrinter</ref></type>
        <definition>typedef llvm::GraphPrinter SVF::GraphPrinter</definition>
        <argsstring></argsstring>
        <name>GraphPrinter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="196" column="28" bodyfile="include/Util/BasicTypes.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a94824519e439aeef1568d415b6f7331c" prot="public" static="no">
        <type>llvm::IRBuilder</type>
        <definition>typedef llvm::IRBuilder SVF::IRBuilder</definition>
        <argsstring></argsstring>
        <name>IRBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="197" column="10" bodyfile="include/Util/BasicTypes.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a3d9e7f32dc17fe8d40f8d6a011403b91" prot="public" static="no">
        <type>llvm::IntegerType</type>
        <definition>typedef llvm::IntegerType SVF::IntegerType</definition>
        <argsstring></argsstring>
        <name>IntegerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="198" column="27" bodyfile="include/Util/BasicTypes.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a5ae98f122c64b0114df2e5861b341321" prot="public" static="no">
        <type>llvm::DebugInfoFinder</type>
        <definition>typedef llvm::DebugInfoFinder SVF::DebugInfoFinder</definition>
        <argsstring></argsstring>
        <name>DebugInfoFinder</name>
        <briefdescription>
<para>LLVM debug information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="201" column="31" bodyfile="include/Util/BasicTypes.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ad127b0ad478640ede3d426e3a58d2632" prot="public" static="no">
        <type>llvm::DIType</type>
        <definition>typedef llvm::DIType SVF::DIType</definition>
        <argsstring></argsstring>
        <name>DIType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="202" column="22" bodyfile="include/Util/BasicTypes.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ada0513be7e25325325ccc9183aeca278" prot="public" static="no">
        <type>llvm::DIBasicType</type>
        <definition>typedef llvm::DIBasicType SVF::DIBasicType</definition>
        <argsstring></argsstring>
        <name>DIBasicType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="203" column="27" bodyfile="include/Util/BasicTypes.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1aded9b991c77acc5284ccead0739e84f1" prot="public" static="no">
        <type>llvm::DICompositeType</type>
        <definition>typedef llvm::DICompositeType SVF::DICompositeType</definition>
        <argsstring></argsstring>
        <name>DICompositeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="204" column="31" bodyfile="include/Util/BasicTypes.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a852e75c562139237fcc754c7461533e6" prot="public" static="no">
        <type>llvm::DIDerivedType</type>
        <definition>typedef llvm::DIDerivedType SVF::DIDerivedType</definition>
        <argsstring></argsstring>
        <name>DIDerivedType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="205" column="29" bodyfile="include/Util/BasicTypes.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a090e0791e8c200104ed3ab6bab157129" prot="public" static="no">
        <type>llvm::DISubroutineType</type>
        <definition>typedef llvm::DISubroutineType SVF::DISubroutineType</definition>
        <argsstring></argsstring>
        <name>DISubroutineType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="206" column="32" bodyfile="include/Util/BasicTypes.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a89c7208bfc0b57873dfa574f52050295" prot="public" static="no">
        <type>llvm::DISubprogram</type>
        <definition>typedef llvm::DISubprogram SVF::DISubprogram</definition>
        <argsstring></argsstring>
        <name>DISubprogram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="207" column="28" bodyfile="include/Util/BasicTypes.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a99bc1228f07429855c81a720be862dc6" prot="public" static="no">
        <type>llvm::DISubrange</type>
        <definition>typedef llvm::DISubrange SVF::DISubrange</definition>
        <argsstring></argsstring>
        <name>DISubrange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="208" column="26" bodyfile="include/Util/BasicTypes.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a758f3bee97ed46a719d64a2d4f2bc62d" prot="public" static="no">
        <type>llvm::DINode</type>
        <definition>typedef llvm::DINode SVF::DINode</definition>
        <argsstring></argsstring>
        <name>DINode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="209" column="22" bodyfile="include/Util/BasicTypes.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a0f825e73d115173b05ca54fb8ec65003" prot="public" static="no">
        <type>llvm::DINodeArray</type>
        <definition>typedef llvm::DINodeArray SVF::DINodeArray</definition>
        <argsstring></argsstring>
        <name>DINodeArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="210" column="27" bodyfile="include/Util/BasicTypes.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a9d3ee421789884473bfacfaa9ec007cc" prot="public" static="no">
        <type>llvm::DITypeRefArray</type>
        <definition>typedef llvm::DITypeRefArray SVF::DITypeRefArray</definition>
        <argsstring></argsstring>
        <name>DITypeRefArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="211" column="30" bodyfile="include/Util/BasicTypes.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ab3532a31724d8719d29aa4c3521ca215" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_cond_var" kindref="compound">CondVar</ref>&lt; <ref refid="class_s_v_f_1_1_context_cond" kindref="compound">ContextCond</ref> &gt;</type>
        <definition>typedef CondVar&lt; ContextCond &gt; SVF::CxtVar</definition>
        <argsstring></argsstring>
        <name>CxtVar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Context-, flow- sensitive <ref refid="class_s_v_f_1_1_d_p_item" kindref="compound">DPItem</ref></para>
<para>Context <ref refid="class_s_v_f_1_1_d_p_item" kindref="compound">DPItem</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="351" column="17" bodyfile="include/Util/DPItem.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ae23af66c8962f4a37da0a5a952bd137a" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CondStdSet</ref>&lt; <ref refid="namespace_s_v_f_1ab3532a31724d8719d29aa4c3521ca215" kindref="member">CxtVar</ref> &gt;</type>
        <definition>typedef CondStdSet&lt;CxtVar&gt; SVF::CxtPtSet</definition>
        <argsstring></argsstring>
        <name>CxtPtSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="352" column="20" bodyfile="include/Util/DPItem.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a4a4d1c207659cdb9efbcfd7a7af6d9cd" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_cond_var" kindref="compound">CondVar</ref>&lt; <ref refid="class_s_v_f_1_1_v_f_path_cond" kindref="compound">VFPathCond</ref> &gt;</type>
        <definition>typedef CondVar&lt;VFPathCond&gt; SVF::VFPathVar</definition>
        <argsstring></argsstring>
        <name>VFPathVar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Path-sensitive <ref refid="class_s_v_f_1_1_d_p_item" kindref="compound">DPItem</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="622" column="17" bodyfile="include/Util/DPItem.h" bodystart="622" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ab2dd5e7169f19030e124d09284ee50c1" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_cond_std_set" kindref="compound">CondStdSet</ref>&lt; <ref refid="namespace_s_v_f_1a4a4d1c207659cdb9efbcfd7a7af6d9cd" kindref="member">VFPathVar</ref> &gt;</type>
        <definition>typedef CondStdSet&lt;VFPathVar&gt; SVF::VFPathPtSet</definition>
        <argsstring></argsstring>
        <name>VFPathPtSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="623" column="20" bodyfile="include/Util/DPItem.h" bodystart="623" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ad42bff8d0a7d60a085aa32d10f4955af" prot="public" static="no">
        <type>unsigned</type>
        <definition>typedef unsigned SVF::u32_t</definition>
        <argsstring></argsstring>
        <name>u32_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="51" column="18" bodyfile="include/Util/SVFBasicTypes.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a366625858f450a1ea5f985a3c83e0f14" prot="public" static="no">
        <type>unsigned long long</type>
        <definition>typedef unsigned long long SVF::u64_t</definition>
        <argsstring></argsstring>
        <name>u64_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="52" column="28" bodyfile="include/Util/SVFBasicTypes.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a9b707002523ece2ac54ca893ee9a2d4e" prot="public" static="no">
        <type>signed</type>
        <definition>typedef signed SVF::s32_t</definition>
        <argsstring></argsstring>
        <name>s32_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="53" column="16" bodyfile="include/Util/SVFBasicTypes.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a2db29836a72e8d86e9baa6d8d55d2978" prot="public" static="no">
        <type>signed long</type>
        <definition>typedef signed long SVF::Size_t</definition>
        <argsstring></argsstring>
        <name>Size_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="54" column="21" bodyfile="include/Util/SVFBasicTypes.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a43a65e0d33af3c743294f7a1139d2301" prot="public" static="no">
        <type>u32_t</type>
        <definition>typedef u32_t SVF::NodeID</definition>
        <argsstring></argsstring>
        <name>NodeID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="56" column="15" bodyfile="include/Util/SVFBasicTypes.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ae71551d6a1fc300e0403297aa25ddf94" prot="public" static="no">
        <type>u32_t</type>
        <definition>typedef u32_t SVF::EdgeID</definition>
        <argsstring></argsstring>
        <name>EdgeID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="57" column="15" bodyfile="include/Util/SVFBasicTypes.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ad11fe2412b2182365a662ff0e4639b48" prot="public" static="no">
        <type>unsigned</type>
        <definition>typedef unsigned SVF::SymID</definition>
        <argsstring></argsstring>
        <name>SymID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="58" column="18" bodyfile="include/Util/SVFBasicTypes.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a03d88a0302bcd253387690f13f693f64" prot="public" static="no">
        <type>unsigned</type>
        <definition>typedef unsigned SVF::CallSiteID</definition>
        <argsstring></argsstring>
        <name>CallSiteID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="59" column="18" bodyfile="include/Util/SVFBasicTypes.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a10cddb090690c82a2aab31a480253d35" prot="public" static="no">
        <type>unsigned</type>
        <definition>typedef unsigned SVF::ThreadID</definition>
        <argsstring></argsstring>
        <name>ThreadID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="60" column="18" bodyfile="include/Util/SVFBasicTypes.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a9ec7a8dc63411ee3724a25a59191be0c" prot="public" static="no">
        <type>unsigned</type>
        <definition>typedef unsigned SVF::Version</definition>
        <argsstring></argsstring>
        <name>Version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="61" column="18" bodyfile="include/Util/SVFBasicTypes.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a740396763e377643790c8b803ab3e4ea" prot="public" static="no">
        <type>llvm::SparseBitVector</type>
        <definition>typedef llvm::SparseBitVector SVF::NodeBS</definition>
        <argsstring></argsstring>
        <name>NodeBS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="63" column="10" bodyfile="include/Util/SVFBasicTypes.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a0c6594b4bae7924369bb61943c1da4fb" prot="public" static="no">
        <type>NodeBS</type>
        <definition>typedef NodeBS SVF::PointsTo</definition>
        <argsstring></argsstring>
        <name>PointsTo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="64" column="16" bodyfile="include/Util/SVFBasicTypes.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a2b2887cf75225bc9127338b4cf30aa85" prot="public" static="no">
        <type>PointsTo</type>
        <definition>typedef PointsTo SVF::AliasSet</definition>
        <argsstring></argsstring>
        <name>AliasSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="65" column="18" bodyfile="include/Util/SVFBasicTypes.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1af739db846e47ba6b2fd15eaad31ab7fb" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Key</type>
          </param>
          <param>
            <type>typename Hash</type>
            <defval>std::hash&lt;Key&gt;</defval>
          </param>
          <param>
            <type>typename KeyEqual</type>
            <defval>std::equal_to&lt;Key&gt;</defval>
          </param>
          <param>
            <type>typename Allocator</type>
            <defval>std::allocator&lt;Key&gt;</defval>
          </param>
        </templateparamlist>
        <type>std::unordered_set&lt; Key, Hash, KeyEqual, Allocator &gt;</type>
        <definition>using SVF::Set = typedef std::unordered_set&lt;Key, Hash, KeyEqual, Allocator&gt;</definition>
        <argsstring></argsstring>
        <name>Set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="69" column="1" bodyfile="include/Util/SVFBasicTypes.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a8234d4b959abc9123993bcff4eee34c1" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Key</type>
          </param>
          <param>
            <type>typename Value</type>
          </param>
          <param>
            <type>typename Hash</type>
            <defval>std::hash&lt;Key&gt;</defval>
          </param>
          <param>
            <type>typename KeyEqual</type>
            <defval>std::equal_to&lt;Key&gt;</defval>
          </param>
          <param>
            <type>typename Allocator</type>
            <defval>std::allocator&lt;std::pair&lt;const Key, Value&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>std::unordered_map&lt; Key, Value, Hash, KeyEqual, Allocator &gt;</type>
        <definition>using SVF::Map = typedef std::unordered_map&lt;Key, Value, Hash, KeyEqual, Allocator&gt;</definition>
        <argsstring></argsstring>
        <name>Map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="74" column="1" bodyfile="include/Util/SVFBasicTypes.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a4f21e91ff8eaea5207afe5c60dbd78d7" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Key</type>
          </param>
          <param>
            <type>typename Compare</type>
            <defval>std::less&lt;Key&gt;</defval>
          </param>
          <param>
            <type>typename Allocator</type>
            <defval>std::allocator&lt;Key&gt;</defval>
          </param>
        </templateparamlist>
        <type>std::set&lt; Key, Compare, Allocator &gt;</type>
        <definition>using SVF::OrderedSet = typedef std::set&lt;Key, Compare, Allocator&gt;</definition>
        <argsstring></argsstring>
        <name>OrderedSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="77" column="1" bodyfile="include/Util/SVFBasicTypes.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1aedf0d6718ca176e0b9e17ab4b30729c6" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Key</type>
          </param>
          <param>
            <type>typename Value</type>
          </param>
          <param>
            <type>typename Compare</type>
            <defval>std::less&lt;Key&gt;</defval>
          </param>
          <param>
            <type>typename Allocator</type>
            <defval>std::allocator&lt;std::pair&lt;const Key, Value&gt;&gt;</defval>
          </param>
        </templateparamlist>
        <type>std::map&lt; Key, Value, Compare, Allocator &gt;</type>
        <definition>using SVF::OrderedMap = typedef std::map&lt;Key, Value, Compare, Allocator&gt;</definition>
        <argsstring></argsstring>
        <name>OrderedMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="81" column="1" bodyfile="include/Util/SVFBasicTypes.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1aa408bbe668ca1208beceae0f842079b4" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>unsigned</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>llvm::SmallVector&lt; T, N &gt;</type>
        <definition>using SVF::SmallVector = typedef llvm::SmallVector&lt;T, N&gt;</definition>
        <argsstring></argsstring>
        <name>SmallVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="84" column="1" bodyfile="include/Util/SVFBasicTypes.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1af15e78ec0ab5bf5328d0f8e90c74fe4b" prot="public" static="no">
        <type>std::pair&lt; NodeID, NodeID &gt;</type>
        <definition>typedef std::pair&lt;NodeID, NodeID&gt; SVF::NodePair</definition>
        <argsstring></argsstring>
        <name>NodePair</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="86" column="19" bodyfile="include/Util/SVFBasicTypes.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a32489632f53dce062ca2e8bff42c65cf" prot="public" static="no">
        <type>std::pair&lt; NodeID, Version &gt;</type>
        <definition>typedef std::pair&lt;NodeID, Version&gt; SVF::VersionedVar</definition>
        <argsstring></argsstring>
        <name>VersionedVar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="87" column="19" bodyfile="include/Util/SVFBasicTypes.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a3c2bd95727ec0d9c55c631b6617026c8" prot="public" static="no">
        <type>OrderedSet&lt; NodeID &gt;</type>
        <definition>typedef OrderedSet&lt;NodeID&gt; SVF::OrderedNodeSet</definition>
        <argsstring></argsstring>
        <name>OrderedNodeSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="88" column="20" bodyfile="include/Util/SVFBasicTypes.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a212231734fa43d5c7414137deaac7df3" prot="public" static="no">
        <type>Set&lt; NodeID &gt;</type>
        <definition>typedef Set&lt;NodeID&gt; SVF::NodeSet</definition>
        <argsstring></argsstring>
        <name>NodeSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="89" column="13" bodyfile="include/Util/SVFBasicTypes.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ac82022f3f81965c3ce9b26c299f537a7" prot="public" static="no">
        <type>Set&lt; NodePair &gt;</type>
        <definition>typedef Set&lt;NodePair&gt; SVF::NodePairSet</definition>
        <argsstring></argsstring>
        <name>NodePairSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="90" column="13" bodyfile="include/Util/SVFBasicTypes.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a56a7d652fccf3134748f3cb8e8334b76" prot="public" static="no">
        <type>Map&lt; NodePair, NodeID &gt;</type>
        <definition>typedef Map&lt;NodePair,NodeID&gt; SVF::NodePairMap</definition>
        <argsstring></argsstring>
        <name>NodePairMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="91" column="13" bodyfile="include/Util/SVFBasicTypes.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a39d27055a14d9d6363c668ee215a4676" prot="public" static="no">
        <type>std::vector&lt; NodeID &gt;</type>
        <definition>typedef std::vector&lt;NodeID&gt; SVF::NodeVector</definition>
        <argsstring></argsstring>
        <name>NodeVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="92" column="21" bodyfile="include/Util/SVFBasicTypes.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a4831992588252dc51c102e9e3f7d5e2e" prot="public" static="no">
        <type>std::vector&lt; EdgeID &gt;</type>
        <definition>typedef std::vector&lt;EdgeID&gt; SVF::EdgeVector</definition>
        <argsstring></argsstring>
        <name>EdgeVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="93" column="21" bodyfile="include/Util/SVFBasicTypes.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a1811127aebdb9c926e39d155e20b3dc0" prot="public" static="no">
        <type>std::stack&lt; NodeID &gt;</type>
        <definition>typedef std::stack&lt;NodeID&gt; SVF::NodeStack</definition>
        <argsstring></argsstring>
        <name>NodeStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="94" column="20" bodyfile="include/Util/SVFBasicTypes.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ab80cc7e84367e8c5a6a5a617880890f5" prot="public" static="no">
        <type>std::list&lt; NodeID &gt;</type>
        <definition>typedef std::list&lt;NodeID&gt; SVF::NodeList</definition>
        <argsstring></argsstring>
        <name>NodeList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="95" column="19" bodyfile="include/Util/SVFBasicTypes.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a35068c3650567d5051416db4aeb48e74" prot="public" static="no">
        <type>std::deque&lt; NodeID &gt;</type>
        <definition>typedef std::deque&lt;NodeID&gt; SVF::NodeDeque</definition>
        <argsstring></argsstring>
        <name>NodeDeque</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="96" column="20" bodyfile="include/Util/SVFBasicTypes.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a9893c2871f3e879e8e50c2ed157bc615" prot="public" static="no">
        <type>SmallVector&lt; u32_t, 16 &gt;</type>
        <definition>typedef SmallVector&lt;u32_t,16&gt; SVF::SmallVector16</definition>
        <argsstring></argsstring>
        <name>SmallVector16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="97" column="21" bodyfile="include/Util/SVFBasicTypes.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a5b2b380d8e5b1c790157dc4799d3f403" prot="public" static="no">
        <type>SmallVector&lt; u32_t, 8 &gt;</type>
        <definition>typedef SmallVector&lt;u32_t,8&gt; SVF::SmallVector8</definition>
        <argsstring></argsstring>
        <name>SmallVector8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="98" column="21" bodyfile="include/Util/SVFBasicTypes.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a0d2e17d5b07a50ed95e8f407cd6dd0be" prot="public" static="no">
        <type>NodeSet</type>
        <definition>typedef NodeSet SVF::EdgeSet</definition>
        <argsstring></argsstring>
        <name>EdgeSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="99" column="17" bodyfile="include/Util/SVFBasicTypes.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a542c6d5483bfc74fa58b45ad06b65960" prot="public" static="no">
        <type>SmallVector16</type>
        <definition>typedef SmallVector16 SVF::CallStrCxt</definition>
        <argsstring></argsstring>
        <name>CallStrCxt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="100" column="23" bodyfile="include/Util/SVFBasicTypes.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ad5ce5ddecac033fe5309cb929d8dea3a" prot="public" static="no">
        <type>llvm::StringMap&lt; u32_t &gt;</type>
        <definition>typedef llvm::StringMap&lt;u32_t&gt; SVF::StringMap</definition>
        <argsstring></argsstring>
        <name>StringMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/SVFBasicTypes.h" line="101" column="25" bodyfile="include/Util/SVFBasicTypes.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1ae9c142945ea31b6c70bceb93eb6f3ca4" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_w_p_a_solver" kindref="compound">WPASolver</ref>&lt; <ref refid="class_s_v_f_1_1_constraint_graph" kindref="compound">ConstraintGraph</ref> * &gt;</type>
        <definition>typedef WPASolver&lt; ConstraintGraph * &gt; SVF::WPAConstraintSolver</definition>
        <argsstring></argsstring>
        <name>WPAConstraintSolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Abstract class of inclusion-based Pointer Analysis</para>
<para>Equivalence-based Pointer Analysis </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/Andersen.h" line="49" column="19" bodyfile="include/WPA/Andersen.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a1f730acb8da8187da732631ca6bbff01" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_s_c_c_detection" kindref="compound">SCCDetection</ref>&lt; <ref refid="class_s_v_f_1_1_constraint_graph" kindref="compound">ConstraintGraph</ref> * &gt;</type>
        <definition>typedef SCCDetection&lt;ConstraintGraph *&gt; SVF::CGSCC</definition>
        <argsstring></argsstring>
        <name>CGSCC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/CSC.h" line="44" column="22" bodyfile="include/WPA/CSC.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_s_v_f_1a221270d70aa99a37738c0f919519a73d" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_w_p_a_f_s_solver" kindref="compound">WPAFSSolver</ref>&lt; <ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> * &gt;</type>
        <definition>typedef WPAFSSolver&lt;SVFG*&gt; SVF::WPASVFGFSSolver</definition>
        <argsstring></argsstring>
        <name>WPASVFGFSSolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flow sensitive whole program pointer analysis </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/FlowSensitive.h" line="46" column="21" bodyfile="include/WPA/FlowSensitive.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespace_s_v_f_1ac5a03512613828c2fab8930f38c2d485" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename S</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_s_v_f_1a424cc053c29ad7303699c529d1a2cc71" kindref="member">raw_ostream</ref> &amp;</type>
        <definition>raw_ostream&amp; SVF::operator&lt;&lt;</definition>
        <argsstring>(raw_ostream &amp;o, const std::pair&lt; F, S &gt; &amp;var)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="namespace_s_v_f_1a424cc053c29ad7303699c529d1a2cc71" kindref="member">raw_ostream</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const std::pair&lt; F, S &gt; &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/BasicTypes.h" line="289" column="1" bodyfile="include/Util/BasicTypes.h" bodystart="289" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="namespace_s_v_f_1a337004caecbb95ee62878728b41f31e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>llvm::cl::opt&lt; std::string &gt;</type>
        <definition>static llvm::cl::opt&lt;std::string&gt; SVF::nodeAllocStrat</definition>
        <argsstring>(&quot;node-alloc-strat&quot;, llvm::cl::init(SVF::NodeIDAllocator::userStrategyDense), llvm::cl::desc(&quot;Method of allocating (LLVM) values to node IDs [dense, debug]&quot;))</argsstring>
        <name>nodeAllocStrat</name>
        <param>
          <type>&quot;node-alloc-strat&quot;</type>
        </param>
        <param>
          <type>llvm::cl::init(<ref refid="class_s_v_f_1_1_node_i_d_allocator_1ac223b8eab03df7ccbbe0c37ac29f55ad" kindref="member">SVF::NodeIDAllocator::userStrategyDense</ref>)</type>
        </param>
        <param>
          <type>llvm::cl::desc(&quot;Method of allocating (LLVM) values to node IDs [dense, debug]&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Util/NodeIDAllocator.cpp" line="17" column="26" declfile="lib/Util/NodeIDAllocator.cpp" declline="17" declcolumn="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>for isBitcode </para>
    </briefdescription>
    <detaileddescription>
<para>Contains abstract classes for: <ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData</ref>: basic points-to data structure derived by all others. <ref refid="class_s_v_f_1_1_diff_p_t_data" kindref="compound">DiffPTData</ref>: <ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData</ref> which only propagates new changes, not entire points-to sets. <ref refid="class_s_v_f_1_1_d_f_p_t_data" kindref="compound">DFPTData</ref>: flow-sensitive <ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData</ref> as defined by Hardekopf and Lin (CGO &apos;11).</para>
<para>Hierarchy (square brackets indicate abstract class): <verbatim>  +------------&gt; [PTData] &lt;----------------+---------------------+
  |                 ^                      |                     |
  |                 |                      |                     |
</verbatim> <ref refid="class_s_v_f_1_1_mutable_p_t_data" kindref="compound">MutablePTData</ref> [<ref refid="class_s_v_f_1_1_diff_p_t_data" kindref="compound">DiffPTData</ref>] [<ref refid="class_s_v_f_1_1_d_f_p_t_data" kindref="compound">DFPTData</ref>] [<ref refid="class_s_v_f_1_1_versioned_p_t_data" kindref="compound">VersionedPTData</ref>] ^ ^ ^ | | | <ref refid="class_s_v_f_1_1_mutable_diff_p_t_data" kindref="compound">MutableDiffPTData</ref> <ref refid="class_s_v_f_1_1_mutable_d_f_p_t_data" kindref="compound">MutableDFPTData</ref> <ref refid="class_s_v_f_1_1_mutable_versioned_p_t_data" kindref="compound">MutableVersionedPTData</ref> ^ | <ref refid="class_s_v_f_1_1_inc_mutable_d_f_p_t_data" kindref="compound">IncMutableDFPTData</ref></para>
<para><ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData</ref> (<ref refid="_abstract_points_to_d_s_8h_source" kindref="compound">AbstractPointsToDS.h</ref>) implementations with a mutable backend. Each Key is given a points-to set which is itself updated till the analysis terminates. </para>
    </detaileddescription>
    <location file="include/DDA/ContextDDA.h" line="15" column="1"/>
  </compounddef>
</doxygen>
