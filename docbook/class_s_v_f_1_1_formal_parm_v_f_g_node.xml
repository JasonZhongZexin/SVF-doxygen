<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_formal_parm_v_f_g_node" xml:lang="en-US">
<title>SVF::FormalParmVFGNode Class Reference</title>
<indexterm><primary>SVF::FormalParmVFGNode</primary></indexterm>
<para>Inheritance diagram for SVF::FormalParmVFGNode:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_formal_parm_v_f_g_node.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_formal_parm_v_f_g_node_1a4f51e718a8519f6edcee627cdd51b272"/><link linkend="_class_s_v_f_1_1_formal_parm_v_f_g_node_1a4f51e718a8519f6edcee627cdd51b272">FormalParmVFGNode</link> (NodeID id, const <link linkend="_class_s_v_f_1_1_p_a_g_node">PAGNode</link> *n, const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *f)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_formal_parm_v_f_g_node_1ab1a9031c1fc5102e072b5035151c131c"/>const <link linkend="_class_s_v_f_1_1_p_a_g_node">PAGNode</link> * <link linkend="_class_s_v_f_1_1_formal_parm_v_f_g_node_1ab1a9031c1fc5102e072b5035151c131c">getParam</link> () const</para>

<para>Return parameter. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_formal_parm_v_f_g_node_1a18157f92fd96f786c8e1ebc4c9c00994"/>const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> * <link linkend="_class_s_v_f_1_1_formal_parm_v_f_g_node_1a18157f92fd96f786c8e1ebc4c9c00994">getFun</link> () const</para>

<para>Return function. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_formal_parm_v_f_g_node_1af0dfc7f8b58d5bc0e47c6ad17216cc1e"/>void <link linkend="_class_s_v_f_1_1_formal_parm_v_f_g_node_1af0dfc7f8b58d5bc0e47c6ad17216cc1e">addCallPE</link> (const <link linkend="_class_s_v_f_1_1_call_p_e">CallPE</link> *call)</para>

<para>Return call edge. </para>
</listitem>
        </itemizedlist>
</simplesect>
        <itemizedlist>
            <listitem><para>CallPESet::const_iterator <link linkend="_class_s_v_f_1_1_formal_parm_v_f_g_node_1ac2711b6bf2b27386def742aa0959ba35">callPEBegin</link> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_formal_parm_v_f_g_node_1ae9a11d1c9c646baecc4e510eb10fa515"/>CallPESet::const_iterator <emphasis role="strong">callPEEnd</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_formal_parm_v_f_g_node_1a5552cd32449249c1758ee8e222766b28"/>virtual const std::string <emphasis role="strong">toString</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_formal_parm_v_f_g_node_1af91ecca224b99cd6dd3b9b17ad0d8e6f"/>static bool <link linkend="_class_s_v_f_1_1_formal_parm_v_f_g_node_1af91ecca224b99cd6dd3b9b17ad0d8e6f">classof</link> (const <link linkend="_class_s_v_f_1_1_formal_parm_v_f_g_node">FormalParmVFGNode</link> *)</para>

<para>Methods for support type inquiry through isa, cast, and dyn_cast: </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_formal_parm_v_f_g_node_1ae4cac828eec4ac2f55ff9d580c855b34"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_class_s_v_f_1_1_v_f_g_node">VFGNode</link> *node)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_formal_parm_v_f_g_node_1ad53fc9b2922c6c0145864bce59991d54"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_class_s_v_f_1_1_argument_v_f_g_node">ArgumentVFGNode</link> *node)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_formal_parm_v_f_g_node_1a691dc39c5ed3f3fa1ea518b5ec802c60"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_namespace_s_v_f_1a3b4bbc4b72e982a79c23fd3ec26410b6">GenericVFGNodeTy</link> *node)</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_formal_parm_v_f_g_node_1ac2711b6bf2b27386def742aa0959ba35"/>    <section>
    <title>callPEBegin()</title>
<indexterm><primary>callPEBegin</primary><secondary>SVF::FormalParmVFGNode</secondary></indexterm>
<indexterm><primary>SVF::FormalParmVFGNode</primary><secondary>callPEBegin</secondary></indexterm>
<para><computeroutput>CallPESet::const_iterator SVF::FormalParmVFGNode::callPEBegin ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Call edge iterator </para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/Graphs/VFGNode.hlib/Graphs/VFG.cpp</section>
</section>
