<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_andersen_stat" kind="class" language="C++" prot="public">
    <compoundname>SVF::AndersenStat</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_p_t_a_stat" prot="public" virt="non-virtual">SVF::PTAStat</basecompoundref>
    <includes refid="_w_p_a_stat_8h" local="no">WPAStat.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_andersen_stat_1a8af8dd60987c4c99ea3727d9db87c187" prot="private" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_andersen_base" kindref="compound">AndersenBase</ref> *</type>
        <definition>AndersenBase* SVF::AndersenStat::pta</definition>
        <argsstring></argsstring>
        <name>pta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="53" column="18" bodyfile="include/WPA/WPAStat.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_andersen_stat_1a3f5739454b1f4e03b4388a4ba5730e15" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char * AndersenStat::CollapseTime</definition>
        <argsstring></argsstring>
        <name>CollapseTime</name>
        <initializer>= &quot;CollapseTime&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="56" column="23" bodyfile="include/WPA/WPAStat.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_andersen_stat_1a85960b98981d0514a72b40306a7f08d3" prot="public" static="yes" mutable="no">
        <type>u32_t</type>
        <definition>u32_t AndersenStat::_MaxPtsSize</definition>
        <argsstring></argsstring>
        <name>_MaxPtsSize</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="58" column="18" bodyfile="include/WPA/WPAStat.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_andersen_stat_1a6e58c88a4118d368955dee5bbb0ccd21" prot="public" static="yes" mutable="no">
        <type>u32_t</type>
        <definition>u32_t AndersenStat::_NumOfCycles</definition>
        <argsstring></argsstring>
        <name>_NumOfCycles</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="59" column="18" bodyfile="include/WPA/WPAStat.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_andersen_stat_1afbd6b36ac1b0addb902fe8eb5643df83" prot="public" static="yes" mutable="no">
        <type>u32_t</type>
        <definition>u32_t AndersenStat::_NumOfPWCCycles</definition>
        <argsstring></argsstring>
        <name>_NumOfPWCCycles</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="60" column="18" bodyfile="include/WPA/WPAStat.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_andersen_stat_1aa2e3a589d376de12a1cbfb0d1ebcacb9" prot="public" static="yes" mutable="no">
        <type>u32_t</type>
        <definition>u32_t AndersenStat::_NumOfNodesInCycles</definition>
        <argsstring></argsstring>
        <name>_NumOfNodesInCycles</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="61" column="18" bodyfile="include/WPA/WPAStat.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_andersen_stat_1ac16491cbf4bcd22dc1a8acd25db20e10" prot="public" static="yes" mutable="no">
        <type>u32_t</type>
        <definition>u32_t AndersenStat::_MaxNumOfNodesInSCC</definition>
        <argsstring></argsstring>
        <name>_MaxNumOfNodesInSCC</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="62" column="18" bodyfile="include/WPA/WPAStat.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_andersen_stat_1a38dfd00f384eea7899a29b2ec32a0ded" prot="public" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::AndersenStat::_NumOfNullPtr</definition>
        <argsstring></argsstring>
        <name>_NumOfNullPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="63" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_andersen_stat_1ab8f8152b5e6127f2d9bdcbd22083da67" prot="public" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::AndersenStat::_NumOfConstantPtr</definition>
        <argsstring></argsstring>
        <name>_NumOfConstantPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="64" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_andersen_stat_1a27d4e2bf145226f3c2b4d46fee2311e7" prot="public" static="no" mutable="no">
        <type>u32_t</type>
        <definition>u32_t SVF::AndersenStat::_NumOfBlackholePtr</definition>
        <argsstring></argsstring>
        <name>_NumOfBlackholePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="65" column="11" bodyfile="include/WPA/WPAStat.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_andersen_stat_1a257d814ef3983c4f513d37161d376719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AndersenStat::AndersenStat</definition>
        <argsstring>(AndersenBase *p)</argsstring>
        <name>AndersenStat</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_andersen_base" kindref="compound">AndersenBase</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="67" column="5" bodyfile="lib/WPA/AndersenStat.cpp" bodystart="48" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_andersen_stat_1a31c59fe771f44b32a7d58145eb44a971" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::AndersenStat::~AndersenStat</definition>
        <argsstring>()</argsstring>
        <name>~AndersenStat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="69" column="13" bodyfile="include/WPA/WPAStat.h" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_andersen_stat_1a66fee1c0ee5781152a2d489f8857ad43" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void AndersenStat::performStat</definition>
        <argsstring>()</argsstring>
        <name>performStat</name>
        <reimplements refid="class_s_v_f_1_1_p_t_a_stat_1acfed70588cf921694db35990ec3c7497">performStat</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start here </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="74" column="18" bodyfile="lib/WPA/AndersenStat.cpp" bodystart="273" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_andersen_stat_1ae35507bebe6a1a9a64ab379473c85cad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AndersenStat::collectCycleInfo</definition>
        <argsstring>(ConstraintGraph *consCG)</argsstring>
        <name>collectCycleInfo</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_graph" kindref="compound">ConstraintGraph</ref> *</type>
          <declname>consCG</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Collect cycle information </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="76" column="10" bodyfile="lib/WPA/AndersenStat.cpp" bodystart="59" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_andersen_stat_1a898f091cd9aeed4b0cf5b338b8a3b1d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AndersenStat::statNullPtr</definition>
        <argsstring>()</argsstring>
        <name>statNullPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stat null pointers </para>
        </detaileddescription>
        <inbodydescription>
<para>TODO: change the condition here to fetch the points-to set</para>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="78" column="10" bodyfile="lib/WPA/AndersenStat.cpp" bodystart="219" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_andersen_stat_1a5ad75166a80052f9e6fdd14ff7c8b948" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AndersenStat::constraintGraphStat</definition>
        <argsstring>()</argsstring>
        <name>constraintGraphStat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/WPAStat.h" line="80" column="10" bodyfile="lib/WPA/AndersenStat.cpp" bodystart="99" bodyend="215"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Statistics of <ref refid="class_s_v_f_1_1_andersen" kindref="compound">Andersen</ref>&apos;s analysis </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>SVF::PTAStat</label>
        <link refid="class_s_v_f_1_1_p_t_a_stat"/>
      </node>
      <node id="1">
        <label>SVF::AndersenStat</label>
        <link refid="class_s_v_f_1_1_andersen_stat"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>SVF::PTAStat</label>
        <link refid="class_s_v_f_1_1_p_t_a_stat"/>
      </node>
      <node id="1">
        <label>SVF::AndersenStat</label>
        <link refid="class_s_v_f_1_1_andersen_stat"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/WPA/WPAStat.h" line="49" column="1" bodyfile="include/WPA/WPAStat.h" bodystart="50" bodyend="81"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_andersen_stat_1ac16491cbf4bcd22dc1a8acd25db20e10" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>_MaxNumOfNodesInSCC</name></member>
      <member refid="class_s_v_f_1_1_andersen_stat_1a85960b98981d0514a72b40306a7f08d3" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>_MaxPtsSize</name></member>
      <member refid="class_s_v_f_1_1_andersen_stat_1a27d4e2bf145226f3c2b4d46fee2311e7" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>_NumOfBlackholePtr</name></member>
      <member refid="class_s_v_f_1_1_andersen_stat_1ab8f8152b5e6127f2d9bdcbd22083da67" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>_NumOfConstantPtr</name></member>
      <member refid="class_s_v_f_1_1_andersen_stat_1a6e58c88a4118d368955dee5bbb0ccd21" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>_NumOfCycles</name></member>
      <member refid="class_s_v_f_1_1_andersen_stat_1aa2e3a589d376de12a1cbfb0d1ebcacb9" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>_NumOfNodesInCycles</name></member>
      <member refid="class_s_v_f_1_1_andersen_stat_1a38dfd00f384eea7899a29b2ec32a0ded" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>_NumOfNullPtr</name></member>
      <member refid="class_s_v_f_1_1_andersen_stat_1afbd6b36ac1b0addb902fe8eb5643df83" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>_NumOfPWCCycles</name></member>
      <member refid="class_s_v_f_1_1_andersen_stat_1a257d814ef3983c4f513d37161d376719" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>AndersenStat</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1adb0edbe88a74e5e89921bcfafa4759c6" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>AveragePointsToSetSize</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a1649c9f893c5b9ec2d57a399bc050030" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>AverageTopLevPointsToSetSize</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a1772bc87370b5625f71edd4476277064" prot="public" virt="virtual"><scope>SVF::AndersenStat</scope><name>callgraphStat</name></member>
      <member refid="class_s_v_f_1_1_andersen_stat_1a3f5739454b1f4e03b4388a4ba5730e15" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>CollapseTime</name></member>
      <member refid="class_s_v_f_1_1_andersen_stat_1ae35507bebe6a1a9a64ab379473c85cad" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>collectCycleInfo</name></member>
      <member refid="class_s_v_f_1_1_andersen_stat_1a5ad75166a80052f9e6fdd14ff7c8b948" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>constraintGraphStat</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1afe854f7416ea408104721a083ee9fee0" prot="public" virt="virtual"><scope>SVF::AndersenStat</scope><name>endClk</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a267ba4aac2e7ceb65f008f9486d3d9f7" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>endTime</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1afa718535839a939e51afc0f8c1fbdac6" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>generalNumMap</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1aea47f02f3f56b089ba8ed45270e16eb4" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>getClk</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a5b4095f427c9c7b9ec0db497ba33baea" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>localVarInRecursion</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a68c8df7d9fbb4b34254857a432e5d5e8" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>markedClocksOnly</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ab754f7768ffcd6f232b8cdf0fef6fc4e" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>MaxNumOfNodesInSCC</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1af2b45aab2eee96a1cabba3025e4375a2" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>MaxPointsToSetSize</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1af6a6e3ea4c7f8e1c984bea8d5fb9a7c0" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>MaxStructSize</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ad1a7e7aec8f272017be7d0b6acda86a4" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumberOfFieldInsensitiveObj</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ab62eb21c7dc03f68b0509c31451b2e98" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumberOfFieldSensitiveObj</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ac5bf59a0a7a760c9fec5f22dedec5eb6" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfAddrs</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a6cbeca77d0681f7da28979cbd0f661b2" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfCalls</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ae74458d96423e4a7391fe8697d5a9a67" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfConstantObjs</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a97a8b662356fc89cdd2cb9463fa5578b" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfCopys</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ac518843a4148ecc45027ccc19a690c05" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfCycles</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a1745e5c3c026a130a70954da9c0074b1" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfFieldExpand</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ae9952b7456b5102113d1fee4d9d7801a" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfFunctionObjs</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a16f9bdb5387471d0bd825c4a9cbcb22e" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfGepFieldObjects</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a164249b9d35606387e628529c643d119" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfGepFieldPointers</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1acc5e4740e11cb6f9794723e5f61ab63b" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfGeps</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a57574c85a5a875a05ef83d3c916cf3e5" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfGlobalObjs</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a4aff48eaa2045ee619a8ea793a9234b8" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfHeapObjs</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a618707c52da086e04f5e7bff31794cf3" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfIndirectCallSites</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ad51d2bd924f049e440b3d0dd0d423524" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfIndirectEdgeSolved</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ae95fb0771a71ead27da79a45cac47a36" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfIterations</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a4aa7356142f51d942063be5a2910940f" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfLoads</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a5c09f41916e40d784a63e301584511f9" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfMemObjects</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1aea3e95097b3b9d326bef0d36f17e51a5" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfNodesInCycles</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a9014371b8ed95ab8135eed2a7fa945f1" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfNonPtrObjs</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a1211e1c7f16b715f32ecdef83f39a8c6" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfNullPointer</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1adb31b163f0cbb9d9ce207ef5d8c075fa" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfObjsHasConstArray</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a918051b1d0eb4f49c349352408cc9751" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfObjsHasConstStruct</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a78693e8bf93d712eb76c9d6dc0c45ae6" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfObjsHasVarArray</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a95edd35cec92fa4cacc8b59b5eecc827" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfObjsHasVarStruct</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a218748b401bdd3d5eebd45eea0026b12" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfPointers</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a0de03cdb382b353c6c1495c0f80cfe19" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfProcessedAddrs</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ad30b36fb1884d1ef0b01c3b36a245211" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfProcessedCopys</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1aaa9d98f868c0724cb57c6934e783d1e5" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfProcessedGeps</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a17531fa1df42df0b19191d61853380d9" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfProcessedLoads</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a5b9bc0e9dac6ac97199476f6b7ea1edf" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfProcessedStores</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1aefcc3638fac7034ab3542be8eb01ab58" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfPWCCycles</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a0a552611fcd20e1310290bdae404a514" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfReturns</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ad1731b88c24bb79728f62cd3e9c55699" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfSCCDetection</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a07a1db62ddba50bda787b2985ef8d135" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfSfr</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ae05503909688a17dc1f282d1d029d24e" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfStackObjs</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a656ad9980ff05af396ed6754c50916e7" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NumOfStores</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a7e8f9f9c1662822f3f8bd016db84e1e6" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>NUMStatMap</name></member>
      <member refid="class_s_v_f_1_1_andersen_stat_1a66fee1c0ee5781152a2d489f8857ad43" prot="public" virt="virtual"><scope>SVF::AndersenStat</scope><name>performStat</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1adef061d4454a1b1fb46efa4013d9a956" prot="public" virt="virtual"><scope>SVF::AndersenStat</scope><name>performStatPerQuery</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1aa5f455bfa79743b8e263431593d29bbf" prot="public" virt="virtual"><scope>SVF::AndersenStat</scope><name>printStat</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a7ce0630cfe41448bec002f03a176175d" prot="public" virt="virtual"><scope>SVF::AndersenStat</scope><name>printStatPerQuery</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a95a0a7861731072baeaf75354531875f" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>ProcessCopyGepTime</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1aeb6a52c31ecd004670e85f24b01d75d6" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>ProcessLoadStoreTime</name></member>
      <member refid="class_s_v_f_1_1_andersen_stat_1a8af8dd60987c4c99ea3727d9db87c187" prot="private" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>pta</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ac9b65b591200c16c420fbd26710b448f" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>PTAStat</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1afdb975520329be0c33cc7bdd51ba7031" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>PTNumStatMap</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ad4c1cf3750341f73987c37745f3bd2aa" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>SCCDetectionTime</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a8c4101e697057269def501d14a987287" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>SCCMergeTime</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a4ddc0ea34909863ca339fcbba2eef278" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>setMarkedClocksOnly</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a5524ff7901659f56e9de343992be8f3b" prot="public" virt="virtual"><scope>SVF::AndersenStat</scope><name>startClk</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a59e0fe6fa506f1cf319b5acaf9d28be9" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>startTime</name></member>
      <member refid="class_s_v_f_1_1_andersen_stat_1a898f091cd9aeed4b0cf5b338b8a3b1d3" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>statNullPtr</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a3724756ac0527ba3d199be32e38c6337" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>timeStatMap</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a28f304e7095f3843ca4cc017bc1f7b10" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>TIMEStatMap</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a25001a6d794d91056f37d954d9660910" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>TotalAnalysisTime</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a3afc0a36232a0388d8aa42c68219cb26" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>TotalNumOfEdges</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1ac0e0a1c49d33e02f5cc0f21565ce627d" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>TotalNumOfFieldObjects</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1acd9848f15aa359550e86c7b857df84ed" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>TotalNumOfObjects</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a1a4d418fd9e5413e7ffbbfe57f5e0560" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>TotalNumOfPointers</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a8aedfeb35f76e6d33135637156468894" prot="public" virt="non-virtual"><scope>SVF::AndersenStat</scope><name>UpdateCallGraphTime</name></member>
      <member refid="class_s_v_f_1_1_andersen_stat_1a31c59fe771f44b32a7d58145eb44a971" prot="public" virt="virtual"><scope>SVF::AndersenStat</scope><name>~AndersenStat</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_stat_1a1e5294c49b8bd8a850e938dccd5800a5" prot="public" virt="virtual"><scope>SVF::AndersenStat</scope><name>~PTAStat</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
