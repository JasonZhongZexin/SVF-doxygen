<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_cxt_stmt_d_p_item" xml:lang="en-US">
<title>SVF::CxtStmtDPItem&lt; LocCond &gt; Class Template Reference</title>
<indexterm><primary>SVF::CxtStmtDPItem&lt; LocCond &gt;</primary></indexterm>
<para>Inheritance diagram for SVF::CxtStmtDPItem&lt; LocCond &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_cxt_stmt_d_p_item.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_stmt_d_p_item_1a5c3bd4e8f26bfdc863baeb1241a557d1"/><link linkend="_class_s_v_f_1_1_cxt_stmt_d_p_item_1a5c3bd4e8f26bfdc863baeb1241a557d1">CxtStmtDPItem</link> (const <link linkend="_namespace_s_v_f_1ab3532a31724d8719d29aa4c3521ca215">CxtVar</link> &amp;var, const LocCond *locCond)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_stmt_d_p_item_1a595d44fa92f4ebef2fe789873fd357e0"/><link linkend="_class_s_v_f_1_1_cxt_stmt_d_p_item_1a595d44fa92f4ebef2fe789873fd357e0">CxtStmtDPItem</link> (const <link linkend="_class_s_v_f_1_1_cxt_stmt_d_p_item">CxtStmtDPItem</link>&lt; LocCond &gt; &amp;dps)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_stmt_d_p_item_1a18c4928c23037cdb34637ca16e1ac06d"/>virtual <link linkend="_class_s_v_f_1_1_cxt_stmt_d_p_item_1a18c4928c23037cdb34637ca16e1ac06d">~CxtStmtDPItem</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_stmt_d_p_item_1ab1098f5093419b62ea27a20933059270"/><link linkend="_namespace_s_v_f_1ab3532a31724d8719d29aa4c3521ca215">CxtVar</link> <link linkend="_class_s_v_f_1_1_cxt_stmt_d_p_item_1ab1098f5093419b62ea27a20933059270">getCondVar</link> () const</para>

<para>Get context var. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_stmt_d_p_item_1ace41c90e66f6a85f12ff67540ad9d594"/>const <link linkend="_class_s_v_f_1_1_context_cond">ContextCond</link> &amp; <link linkend="_class_s_v_f_1_1_cxt_stmt_d_p_item_1ace41c90e66f6a85f12ff67540ad9d594">getCond</link> () const</para>

<para>Get context. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_stmt_d_p_item_1a987f57970d633acc10aa3f3e69b68cb0"/><link linkend="_class_s_v_f_1_1_context_cond">ContextCond</link> &amp; <link linkend="_class_s_v_f_1_1_cxt_stmt_d_p_item_1a987f57970d633acc10aa3f3e69b68cb0">getCond</link> ()</para>

<para>Get context. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_stmt_d_p_item_1a3bb07147466d6ccb397616e1c09fc60b"/>bool <link linkend="_class_s_v_f_1_1_cxt_stmt_d_p_item_1a3bb07147466d6ccb397616e1c09fc60b">pushContext</link> (NodeID cxt)</para>

<para>Push context. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_stmt_d_p_item_1a35c0c0d5194983769e313d6e31b3d7ec"/>bool <link linkend="_class_s_v_f_1_1_cxt_stmt_d_p_item_1a35c0c0d5194983769e313d6e31b3d7ec">matchContext</link> (NodeID cxt)</para>

<para>Match context. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_s_v_f_1_1_cxt_stmt_d_p_item_1a307f95b6f22e0231a2da7b14a2db07cf">operator&lt;</link> (const <link linkend="_class_s_v_f_1_1_cxt_stmt_d_p_item">CxtStmtDPItem</link>&lt; LocCond &gt; &amp;rhs) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_stmt_d_p_item_1aef8f7d034bdd10730e3ff1a2ae52350c"/><link linkend="_class_s_v_f_1_1_cxt_stmt_d_p_item">CxtStmtDPItem</link>&lt; LocCond &gt; &amp; <link linkend="_class_s_v_f_1_1_cxt_stmt_d_p_item_1aef8f7d034bdd10730e3ff1a2ae52350c">operator=</link> (const <link linkend="_class_s_v_f_1_1_cxt_stmt_d_p_item">CxtStmtDPItem</link>&lt; LocCond &gt; &amp;rhs)</para>

<para>Overloading operator=. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_stmt_d_p_item_1a201619b723a5548029dd7402e06608e7"/>bool <link linkend="_class_s_v_f_1_1_cxt_stmt_d_p_item_1a201619b723a5548029dd7402e06608e7">operator==</link> (const <link linkend="_class_s_v_f_1_1_cxt_stmt_d_p_item">CxtStmtDPItem</link>&lt; LocCond &gt; &amp;rhs) const</para>

<para>Overloading operator==. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_stmt_d_p_item_1a2cab28448a57f568ac7c3ff43af0d60d"/>bool <link linkend="_class_s_v_f_1_1_cxt_stmt_d_p_item_1a2cab28448a57f568ac7c3ff43af0d60d">operator!=</link> (const <link linkend="_class_s_v_f_1_1_cxt_stmt_d_p_item">CxtStmtDPItem</link>&lt; LocCond &gt; &amp;rhs) const</para>

<para>Overloading operator==. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_stmt_d_p_item_1abc67c264dd262d25899e04f8d68e8a31"/>void <emphasis role="strong">dump</emphasis> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_cxt_stmt_d_p_item_1a307f95b6f22e0231a2da7b14a2db07cf"/>    <section>
    <title>operator&lt;()</title>
<indexterm><primary>operator&lt;</primary><secondary>SVF::CxtStmtDPItem&lt; LocCond &gt;</secondary></indexterm>
<indexterm><primary>SVF::CxtStmtDPItem&lt; LocCond &gt;</primary><secondary>operator&lt;</secondary></indexterm>
<computeroutput>template&lt;class LocCond &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_s_v_f_1_1_cxt_stmt_d_p_item">SVF::CxtStmtDPItem</link>&lt; LocCond &gt;::operator&lt; (const <link linkend="_class_s_v_f_1_1_cxt_stmt_d_p_item">CxtStmtDPItem</link>&lt; LocCond &gt; &amp; rhs) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Enable compare operator to avoid duplicated item insertion in map or set to be noted that two vectors can also overload operator() </para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
include/Util/DPItem.h</section>
</section>
