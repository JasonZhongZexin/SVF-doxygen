<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_diff_p_t_data" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>SVF::DiffPTData</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_p_t_data" prot="public" virt="non-virtual">SVF::PTData&lt; Key, Datum, Data &gt;</basecompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_mutable_diff_p_t_data" prot="public" virt="non-virtual">SVF::MutableDiffPTData&lt; Key, Datum, Data &gt;</derivedcompoundref>
    <includes refid="_abstract_points_to_d_s_8h" local="no">AbstractPointsToDS.h</includes>
    <templateparamlist>
      <param>
        <type>typename Key</type>
      </param>
      <param>
        <type>typename Datum</type>
      </param>
      <param>
        <type>typename Data</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="class_s_v_f_1_1_diff_p_t_data_1aad11ad25fc11ceaf6802eb39d2e01b6c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SVF::DiffPTData&lt; Key, Datum, Data &gt;::classof</definition>
        <argsstring>(const DiffPTData&lt; Key, Datum, Data &gt; *)</argsstring>
        <name>classof</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_diff_p_t_data" kindref="compound">DiffPTData</ref>&lt; Key, Datum, Data &gt; *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Methods to support type inquiry through isa, cast, and dyn_cast: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="127" column="24" bodyfile="include/MemoryModel/AbstractPointsToDS.h" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_diff_p_t_data_1a5385c9ebfc581e01c03df5b751fdac68" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SVF::DiffPTData&lt; Key, Datum, Data &gt;::classof</definition>
        <argsstring>(const PTData&lt; Key, Datum, Data &gt; *ptd)</argsstring>
        <name>classof</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData</ref>&lt; Key, Datum, Data &gt; *</type>
          <declname>ptd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="131" column="24" bodyfile="include/MemoryModel/AbstractPointsToDS.h" bodystart="131" bodyend="134"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_diff_p_t_data_1a4c686a448797c17d567d420a92471d83" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData</ref>&lt; Key, Datum, Data &gt;</type>
        <definition>typedef PTData&lt;Key, Datum, Data&gt; SVF::DiffPTData&lt; Key, Datum, Data &gt;::BasePTData</definition>
        <argsstring></argsstring>
        <name>BasePTData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="103" column="20" bodyfile="include/MemoryModel/AbstractPointsToDS.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_diff_p_t_data_1a9fdb53b644ca2c056ddc23891d1ed042" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848" kindref="member">BasePTData::PTDataTy</ref></type>
        <definition>typedef BasePTData::PTDataTy SVF::DiffPTData&lt; Key, Datum, Data &gt;::PTDataTy</definition>
        <argsstring></argsstring>
        <name>PTDataTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="104" column="43" bodyfile="include/MemoryModel/AbstractPointsToDS.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_diff_p_t_data_1a46c7a30c83c920fdd30e85987dd3fb7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::DiffPTData&lt; Key, Datum, Data &gt;::DiffPTData</definition>
        <argsstring>(bool reversePT=true, PTDataTy ty=PTDataTy::Diff)</argsstring>
        <name>DiffPTData</name>
        <param>
          <type>bool</type>
          <declname>reversePT</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848" kindref="member">PTDataTy</ref></type>
          <declname>ty</declname>
          <defval>PTDataTy::Diff</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="106" column="5" bodyfile="include/MemoryModel/AbstractPointsToDS.h" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_diff_p_t_data_1a0346f09d0d0c31d676c9041498052eb2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::DiffPTData&lt; Key, Datum, Data &gt;::~DiffPTData</definition>
        <argsstring>()</argsstring>
        <name>~DiffPTData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="108" column="13" bodyfile="include/MemoryModel/AbstractPointsToDS.h" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_diff_p_t_data_1a7abbdc7ba905339bdc2bf4af3cd285c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const Data &amp;</type>
        <definition>virtual const Data&amp; SVF::DiffPTData&lt; Key, Datum, Data &gt;::getDiffPts</definition>
        <argsstring>(Key &amp;var)=0</argsstring>
        <name>getDiffPts</name>
        <reimplementedby refid="class_s_v_f_1_1_mutable_diff_p_t_data_1a02b5b22e1e511a8af05008c57abfcea7">getDiffPts</reimplementedby>
        <param>
          <type>Key &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
<para>Get diff points to. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="111" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_diff_p_t_data_1aa072ff64b5b36236dc9808e64f2e9d9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool SVF::DiffPTData&lt; Key, Datum, Data &gt;::computeDiffPts</definition>
        <argsstring>(Key &amp;var, const Data &amp;all)=0</argsstring>
        <name>computeDiffPts</name>
        <reimplementedby refid="class_s_v_f_1_1_mutable_diff_p_t_data_1aef050de307f661efb60b62055aa8aacb">computeDiffPts</reimplementedby>
        <param>
          <type>Key &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>const Data &amp;</type>
          <declname>all</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute diff points to. Return TRUE if diff is not empty.<orderedlist>
<listitem><para>calculate diff: diff = all - propa.</para>
</listitem><listitem><para>update propagated pts: propa = all. </para>
</listitem></orderedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="116" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_diff_p_t_data_1a18e20bd7054b0aaea4b6ccacd251ce60" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void SVF::DiffPTData&lt; Key, Datum, Data &gt;::updatePropaPtsMap</definition>
        <argsstring>(Key &amp;src, Key &amp;dst)=0</argsstring>
        <name>updatePropaPtsMap</name>
        <reimplementedby refid="class_s_v_f_1_1_mutable_diff_p_t_data_1a0fbfcc44d33bb2a2f0abf50666ecc1c1">updatePropaPtsMap</reimplementedby>
        <param>
          <type>Key &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>Key &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update dst&apos;s propagated points-to set with src&apos;s. The final result is the intersection of these two sets. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="120" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_diff_p_t_data_1a479e6bf3caa96f6dc85f35f74eae2608" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void SVF::DiffPTData&lt; Key, Datum, Data &gt;::clearPropaPts</definition>
        <argsstring>(Key &amp;var)=0</argsstring>
        <name>clearPropaPts</name>
        <reimplementedby refid="class_s_v_f_1_1_mutable_diff_p_t_data_1a68fd5008ad20b4b41c52084b917395d3">clearPropaPts</reimplementedby>
        <param>
          <type>Key &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
<para>Clear propagated points-to set of var. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="123" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Abstract diff points-to data with cached information. This is an optimisation on top of the base points-to data structure. The points-to information is propagated incrementally only for the different parts. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>SVF::DiffPTData&lt; Key, Datum, Data &gt;</label>
        <link refid="class_s_v_f_1_1_diff_p_t_data"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SVF::PTData&lt; Key, Datum, Data &gt;</label>
        <link refid="class_s_v_f_1_1_p_t_data"/>
      </node>
      <node id="3">
        <label>SVF::MutableDiffPTData&lt; Key, Datum, Data &gt;</label>
        <link refid="class_s_v_f_1_1_mutable_diff_p_t_data"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>SVF::DiffPTData&lt; Key, Datum, Data &gt;</label>
        <link refid="class_s_v_f_1_1_diff_p_t_data"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SVF::PTData&lt; Key, Datum, Data &gt;</label>
        <link refid="class_s_v_f_1_1_p_t_data"/>
      </node>
    </collaborationgraph>
    <location file="include/MemoryModel/AbstractPointsToDS.h" line="100" column="1" bodyfile="include/MemoryModel/AbstractPointsToDS.h" bodystart="101" bodyend="136"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_p_t_data_1a1365146d19ee927f870a7384c0d1db6b" prot="public" virt="pure-virtual"><scope>SVF::DiffPTData</scope><name>addPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a48ea0972c2495007d758a0674fd958a0" prot="public" virt="non-virtual"><scope>SVF::DiffPTData</scope><name>Base</name></member>
      <member refid="class_s_v_f_1_1_diff_p_t_data_1a4c686a448797c17d567d420a92471d83" prot="public" virt="non-virtual"><scope>SVF::DiffPTData</scope><name>BasePTData</name></member>
      <member refid="class_s_v_f_1_1_diff_p_t_data_1aad11ad25fc11ceaf6802eb39d2e01b6c" prot="public" virt="non-virtual"><scope>SVF::DiffPTData</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_diff_p_t_data_1a5385c9ebfc581e01c03df5b751fdac68" prot="public" virt="non-virtual"><scope>SVF::DiffPTData</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a3cdec1f0be962716508d3922dce058d5" prot="public" virt="pure-virtual"><scope>SVF::DiffPTData</scope><name>clear</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a4a27923265487dac1eede5a57cc0c9a5" prot="public" virt="pure-virtual"><scope>SVF::DiffPTData</scope><name>clearFullPts</name></member>
      <member refid="class_s_v_f_1_1_diff_p_t_data_1a479e6bf3caa96f6dc85f35f74eae2608" prot="public" virt="pure-virtual"><scope>SVF::DiffPTData</scope><name>clearPropaPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a2ee28cb51800a57a7646d72f1b92e6ac" prot="public" virt="pure-virtual"><scope>SVF::DiffPTData</scope><name>clearPts</name></member>
      <member refid="class_s_v_f_1_1_diff_p_t_data_1aa072ff64b5b36236dc9808e64f2e9d9b" prot="public" virt="pure-virtual"><scope>SVF::DiffPTData</scope><name>computeDiffPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a9fd234f8ac4f0615ef1bc2f9c02e00ab" prot="public" virt="non-virtual"><scope>SVF::DiffPTData</scope><name>DataFlow</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a12db671c6effedfcd48f3a390a3cea39" prot="public" virt="non-virtual"><scope>SVF::DiffPTData</scope><name>Diff</name></member>
      <member refid="class_s_v_f_1_1_diff_p_t_data_1a46c7a30c83c920fdd30e85987dd3fb7c" prot="public" virt="non-virtual"><scope>SVF::DiffPTData</scope><name>DiffPTData</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1affb0e613229679f926c52c37b3c141ea" prot="public" virt="pure-virtual"><scope>SVF::DiffPTData</scope><name>dumpPTData</name></member>
      <member refid="class_s_v_f_1_1_diff_p_t_data_1a7abbdc7ba905339bdc2bf4af3cd285c9" prot="public" virt="pure-virtual"><scope>SVF::DiffPTData</scope><name>getDiffPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a22b25cb7e65dd9989dbb4c1819d68dee" prot="public" virt="non-virtual"><scope>SVF::DiffPTData</scope><name>getPTDTY</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a86a93186b51b6ce9dccffecad8381281" prot="public" virt="pure-virtual"><scope>SVF::DiffPTData</scope><name>getPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a5ac0805846fb6bac6c58c0fefb106c5f" prot="public" virt="pure-virtual"><scope>SVF::DiffPTData</scope><name>getRevPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a85136c4ad93cefd1d2371cc92aa2423d" prot="public" virt="non-virtual"><scope>SVF::DiffPTData</scope><name>IncMutDataFlow</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1ae53ed7301014b43bf1d215208a702a8b" prot="public" virt="non-virtual"><scope>SVF::DiffPTData</scope><name>KeySet</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848ad89e3219f31ba0f1424c1a219565b7b0" prot="public" virt="non-virtual"><scope>SVF::DiffPTData</scope><name>MutBase</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a13666448dbecfb781405aff71a674d4e" prot="public" virt="non-virtual"><scope>SVF::DiffPTData</scope><name>MutDataFlow</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a31e94f61c6e2166b4c205fe03a4e912d" prot="public" virt="non-virtual"><scope>SVF::DiffPTData</scope><name>MutDiff</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a97fea46c57fe00f026da2cd3f510e785" prot="public" virt="non-virtual"><scope>SVF::DiffPTData</scope><name>MutVersioned</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a4481e26740c77bd69239552badf85614" prot="public" virt="non-virtual"><scope>SVF::DiffPTData</scope><name>PTData</name></member>
      <member refid="class_s_v_f_1_1_diff_p_t_data_1a9fdb53b644ca2c056ddc23891d1ed042" prot="public" virt="non-virtual"><scope>SVF::DiffPTData</scope><name>PTDataTy</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a11120561456b00e1a6210e5105e8f718" prot="protected" virt="non-virtual"><scope>SVF::DiffPTData</scope><name>ptdTy</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1aea15e71384244f3ad556e9924a1d0d21" prot="protected" virt="non-virtual"><scope>SVF::DiffPTData</scope><name>rev</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a482eda0b2ea6a8e1326ee1a0c25c1fdc" prot="public" virt="pure-virtual"><scope>SVF::DiffPTData</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1ab378c0f2171f6de9b8aa076b43f88e89" prot="public" virt="pure-virtual"><scope>SVF::DiffPTData</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_diff_p_t_data_1a18e20bd7054b0aaea4b6ccacd251ce60" prot="public" virt="pure-virtual"><scope>SVF::DiffPTData</scope><name>updatePropaPtsMap</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a4fcfbbd2f9f50444a49c4cc4065b0aeb" prot="public" virt="non-virtual"><scope>SVF::DiffPTData</scope><name>Versioned</name></member>
      <member refid="class_s_v_f_1_1_diff_p_t_data_1a0346f09d0d0c31d676c9041498052eb2" prot="public" virt="virtual"><scope>SVF::DiffPTData</scope><name>~DiffPTData</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a982153a8d2300d18549a7a6c4235c52d" prot="public" virt="virtual"><scope>SVF::DiffPTData</scope><name>~PTData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
