<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_path_stmt_d_p_item" kind="class" language="C++" prot="public">
    <compoundname>SVF::PathStmtDPItem</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_stmt_d_p_item" prot="public" virt="non-virtual">SVF::StmtDPItem&lt; LocCond &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>class LocCond</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_path_stmt_d_p_item_1a9092ac46745ceac6c9d9e7e560df6e86" prot="public" static="no">
        <type><ref refid="struct_dd_node" kindref="compound">VFPathCond::PathCond</ref></type>
        <definition>typedef VFPathCond::PathCond SVF::PathStmtDPItem&lt; LocCond &gt;::PathCond</definition>
        <argsstring></argsstring>
        <name>PathCond</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="631" column="34" bodyfile="include/Util/DPItem.h" bodystart="631" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_path_stmt_d_p_item_1a33758a06ff628da74639bbdc348882c4" prot="private" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_v_f_path_cond" kindref="compound">VFPathCond</ref></type>
        <definition>VFPathCond SVF::PathStmtDPItem&lt; LocCond &gt;::vfpath</definition>
        <argsstring></argsstring>
        <name>vfpath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="629" column="16" bodyfile="include/Util/DPItem.h" bodystart="629" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_path_stmt_d_p_item_1aaa18b09d9000c59ed45d25af4865864d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::PathStmtDPItem&lt; LocCond &gt;::PathStmtDPItem</definition>
        <argsstring>(const VFPathVar &amp;var, const LocCond *locCond)</argsstring>
        <name>PathStmtDPItem</name>
        <param>
          <type>const <ref refid="namespace_s_v_f_1a4a4d1c207659cdb9efbcfd7a7af6d9cd" kindref="member">VFPathVar</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>const LocCond *</type>
          <declname>locCond</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="634" column="5" bodyfile="include/Util/DPItem.h" bodystart="634" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_path_stmt_d_p_item_1a0f2d575defc85aca8c3f85353edba685" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::PathStmtDPItem&lt; LocCond &gt;::PathStmtDPItem</definition>
        <argsstring>(const PathStmtDPItem&lt; LocCond &gt; &amp;dps)</argsstring>
        <name>PathStmtDPItem</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_path_stmt_d_p_item" kindref="compound">PathStmtDPItem</ref>&lt; LocCond &gt; &amp;</type>
          <declname>dps</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="639" column="5" bodyfile="include/Util/DPItem.h" bodystart="639" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_path_stmt_d_p_item_1adbe4b6f0f18f74661be01a17892aa839" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::PathStmtDPItem&lt; LocCond &gt;::~PathStmtDPItem</definition>
        <argsstring>()</argsstring>
        <name>~PathStmtDPItem</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="644" column="13" bodyfile="include/Util/DPItem.h" bodystart="644" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_path_stmt_d_p_item_1a4058ed62b866451b5ced665619ddcf56" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_s_v_f_1a4a4d1c207659cdb9efbcfd7a7af6d9cd" kindref="member">VFPathVar</ref></type>
        <definition>VFPathVar SVF::PathStmtDPItem&lt; LocCond &gt;::getCondVar</definition>
        <argsstring>() const</argsstring>
        <name>getCondVar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="647" column="22" bodyfile="include/Util/DPItem.h" bodystart="647" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_path_stmt_d_p_item_1a529f51d30556e6f67a33b7d05e651816" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_s_v_f_1_1_v_f_path_cond" kindref="compound">VFPathCond</ref> &amp;</type>
        <definition>const VFPathCond&amp; SVF::PathStmtDPItem&lt; LocCond &gt;::getCond</definition>
        <argsstring>() const</argsstring>
        <name>getCond</name>
        <briefdescription>
<para>Get value-flow paths. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="653" column="29" bodyfile="include/Util/DPItem.h" bodystart="653" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_path_stmt_d_p_item_1af96b78bbeb1f16d94f18e19c35672d28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_v_f_path_cond" kindref="compound">VFPathCond</ref> &amp;</type>
        <definition>VFPathCond&amp; SVF::PathStmtDPItem&lt; LocCond &gt;::getCond</definition>
        <argsstring>()</argsstring>
        <name>getCond</name>
        <briefdescription>
<para>Get value-flow paths. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="658" column="23" bodyfile="include/Util/DPItem.h" bodystart="658" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_path_stmt_d_p_item_1a9220414ecc6e629fd09a194185c4deea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::PathStmtDPItem&lt; LocCond &gt;::addVFPath</definition>
        <argsstring>(PathCondAllocator *allocator, PathCond *c, NodeID from, NodeID to)</argsstring>
        <name>addVFPath</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_path_cond_allocator" kindref="compound">PathCondAllocator</ref> *</type>
          <declname>allocator</declname>
        </param>
        <param>
          <type><ref refid="struct_dd_node" kindref="compound">PathCond</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>NodeID</type>
          <declname>from</declname>
        </param>
        <param>
          <type>NodeID</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Add a value-flow path (avoid adding duplicated paths) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="663" column="17" bodyfile="include/Util/DPItem.h" bodystart="663" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_path_stmt_d_p_item_1ae5bfef4e7759545ad15145504b84a897" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::PathStmtDPItem&lt; LocCond &gt;::pushContext</definition>
        <argsstring>(NodeID cxt)</argsstring>
        <name>pushContext</name>
        <param>
          <type>NodeID</type>
          <declname>cxt</declname>
        </param>
        <briefdescription>
<para>Push context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="668" column="17" bodyfile="include/Util/DPItem.h" bodystart="668" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_path_stmt_d_p_item_1a4a82650fe9bf2f655e4b7178ba063eda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::PathStmtDPItem&lt; LocCond &gt;::matchContext</definition>
        <argsstring>(NodeID cxt)</argsstring>
        <name>matchContext</name>
        <param>
          <type>NodeID</type>
          <declname>cxt</declname>
        </param>
        <briefdescription>
<para>Match context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="673" column="10" bodyfile="include/Util/DPItem.h" bodystart="673" bodyend="676"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_path_stmt_d_p_item_1a8df1b3200bf3385aeb793966ff51ee75" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::PathStmtDPItem&lt; LocCond &gt;::operator&lt;</definition>
        <argsstring>(const PathStmtDPItem&lt; LocCond &gt; &amp;rhs) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_path_stmt_d_p_item" kindref="compound">PathStmtDPItem</ref>&lt; LocCond &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable compare operator to avoid duplicated item insertion in map or set to be noted that two vectors can also overload operator() </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="680" column="12" bodyfile="include/Util/DPItem.h" bodystart="680" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_path_stmt_d_p_item_1a36ff7567d47e3818d79ede424f736817" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_path_stmt_d_p_item" kindref="compound">PathStmtDPItem</ref>&lt; LocCond &gt; &amp;</type>
        <definition>PathStmtDPItem&lt;LocCond&gt;&amp; SVF::PathStmtDPItem&lt; LocCond &gt;::operator=</definition>
        <argsstring>(const PathStmtDPItem&lt; LocCond &gt; &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_path_stmt_d_p_item" kindref="compound">PathStmtDPItem</ref>&lt; LocCond &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Overloading operator=. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="690" column="27" bodyfile="include/Util/DPItem.h" bodystart="690" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_path_stmt_d_p_item_1a5b7d6a8d8e14845a94611474c53fadaa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::PathStmtDPItem&lt; LocCond &gt;::operator==</definition>
        <argsstring>(const PathStmtDPItem&lt; LocCond &gt; &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_path_stmt_d_p_item" kindref="compound">PathStmtDPItem</ref>&lt; LocCond &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Overloading operator==. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="700" column="17" bodyfile="include/Util/DPItem.h" bodystart="700" bodyend="703"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_path_stmt_d_p_item_1a886e2443efb35d18b92186a83875c7c9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::PathStmtDPItem&lt; LocCond &gt;::operator!=</definition>
        <argsstring>(const PathStmtDPItem&lt; LocCond &gt; &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_path_stmt_d_p_item" kindref="compound">PathStmtDPItem</ref>&lt; LocCond &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Overloading operator!=. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="705" column="17" bodyfile="include/Util/DPItem.h" bodystart="705" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_path_stmt_d_p_item_1ad1ba1dd2dbe5041840f72e4fcff08216" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::PathStmtDPItem&lt; LocCond &gt;::dump</definition>
        <argsstring>() const</argsstring>
        <name>dump</name>
        <briefdescription>
<para>Dump dpm info. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="710" column="17" bodyfile="include/Util/DPItem.h" bodystart="710" bodyend="714"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>SVF::PathStmtDPItem&lt; LocCond &gt;</label>
        <link refid="class_s_v_f_1_1_path_stmt_d_p_item"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SVF::DPItem</label>
        <link refid="class_s_v_f_1_1_d_p_item"/>
      </node>
      <node id="2">
        <label>SVF::StmtDPItem&lt; LocCond &gt;</label>
        <link refid="class_s_v_f_1_1_stmt_d_p_item"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>SVF::PathStmtDPItem&lt; LocCond &gt;</label>
        <link refid="class_s_v_f_1_1_path_stmt_d_p_item"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SVF::DPItem</label>
        <link refid="class_s_v_f_1_1_d_p_item"/>
      </node>
      <node id="2">
        <label>SVF::StmtDPItem&lt; LocCond &gt;</label>
        <link refid="class_s_v_f_1_1_stmt_d_p_item"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/Util/DPItem.h" line="626" column="1" bodyfile="include/Util/DPItem.h" bodystart="627" bodyend="715"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_path_stmt_d_p_item_1a9220414ecc6e629fd09a194185c4deea" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>addVFPath</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a82d2a11fb456192ec88fcb5ffe239d80" prot="protected" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>cur</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a9e20ebd5ae8272a4aef74914098f97ef" prot="protected" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>curloc</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1ac5dbe11ebf512e6dccdfa1eceba04fe8" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>DPItem</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a715b7de4a392d8c389e611e27f8b9184" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>DPItem</name></member>
      <member refid="class_s_v_f_1_1_path_stmt_d_p_item_1ad1ba1dd2dbe5041840f72e4fcff08216" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>dump</name></member>
      <member refid="class_s_v_f_1_1_path_stmt_d_p_item_1a529f51d30556e6f67a33b7d05e651816" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>getCond</name></member>
      <member refid="class_s_v_f_1_1_path_stmt_d_p_item_1af96b78bbeb1f16d94f18e19c35672d28" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>getCond</name></member>
      <member refid="class_s_v_f_1_1_path_stmt_d_p_item_1a4058ed62b866451b5ced665619ddcf56" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>getCondVar</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a03a90eca842c0e83d874902103f6fdb2" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>getCurNodeID</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a3616c94c4394b61c757ffcd39888d5b9" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>getLoc</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1af9d8f95249190e164131dc19b6db1b67" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>getMaxBudget</name></member>
      <member refid="class_s_v_f_1_1_path_stmt_d_p_item_1a4a82650fe9bf2f655e4b7178ba063eda" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>matchContext</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a5dbb0e6010b38c5b937ff06cb40cd0ef" prot="protected" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>maximumBudget</name></member>
      <member refid="class_s_v_f_1_1_path_stmt_d_p_item_1a886e2443efb35d18b92186a83875c7c9" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>operator!=</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1ab89875a3b692ed348b1b28bb9a173254" prot="public" virt="non-virtual" ambiguityscope="SVF::StmtDPItem::"><scope>SVF::PathStmtDPItem</scope><name>operator!=</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1add804064ca2bfaa16bcc25503698a1ea" prot="public" virt="non-virtual" ambiguityscope="SVF::DPItem::"><scope>SVF::PathStmtDPItem</scope><name>operator!=</name></member>
      <member refid="class_s_v_f_1_1_path_stmt_d_p_item_1a8df1b3200bf3385aeb793966ff51ee75" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>operator&lt;</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1af92976dc7a8785165cefb047e742cdf6" prot="public" virt="non-virtual" ambiguityscope="SVF::StmtDPItem::"><scope>SVF::PathStmtDPItem</scope><name>operator&lt;</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a639c757076141a14bedc26c73f875ffe" prot="public" virt="non-virtual" ambiguityscope="SVF::DPItem::"><scope>SVF::PathStmtDPItem</scope><name>operator&lt;</name></member>
      <member refid="class_s_v_f_1_1_path_stmt_d_p_item_1a36ff7567d47e3818d79ede424f736817" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>operator=</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a072da7dc37fd3f9b7a79196394382499" prot="public" virt="non-virtual" ambiguityscope="SVF::StmtDPItem::"><scope>SVF::PathStmtDPItem</scope><name>operator=</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a10226d37dfef045bec9f7cfb78315440" prot="public" virt="non-virtual" ambiguityscope="SVF::DPItem::"><scope>SVF::PathStmtDPItem</scope><name>operator=</name></member>
      <member refid="class_s_v_f_1_1_path_stmt_d_p_item_1a5b7d6a8d8e14845a94611474c53fadaa" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>operator==</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1afd63ae0d881101d6c61709b9ac25dbf8" prot="public" virt="non-virtual" ambiguityscope="SVF::StmtDPItem::"><scope>SVF::PathStmtDPItem</scope><name>operator==</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1ad67fcd340351360555b0cb88f57b183a" prot="public" virt="non-virtual" ambiguityscope="SVF::DPItem::"><scope>SVF::PathStmtDPItem</scope><name>operator==</name></member>
      <member refid="class_s_v_f_1_1_path_stmt_d_p_item_1a9092ac46745ceac6c9d9e7e560df6e86" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>PathCond</name></member>
      <member refid="class_s_v_f_1_1_path_stmt_d_p_item_1aaa18b09d9000c59ed45d25af4865864d" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>PathStmtDPItem</name></member>
      <member refid="class_s_v_f_1_1_path_stmt_d_p_item_1a0f2d575defc85aca8c3f85353edba685" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>PathStmtDPItem</name></member>
      <member refid="class_s_v_f_1_1_path_stmt_d_p_item_1ae5bfef4e7759545ad15145504b84a897" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>pushContext</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a5fbde30cae2cb09bd9dc9a6969ea4b90" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>setCurNodeID</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a9ba9ab1013a36530369aa6d684397f4f" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>setLoc</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a3feb4bc8e003cfdd30c1b2cfb2219efb" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>setLocVar</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a687ef8944ccb55b826508c47ea5b9240" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>setMaxBudget</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1aed9239e5558569f6e957e691fa1872d7" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>StmtDPItem</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a3882dc175baaccfa1f811dcbfef98f71" prot="public" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>StmtDPItem</name></member>
      <member refid="class_s_v_f_1_1_path_stmt_d_p_item_1a33758a06ff628da74639bbdc348882c4" prot="private" virt="non-virtual"><scope>SVF::PathStmtDPItem</scope><name>vfpath</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a1df86140eee6015369836d20d509f14d" prot="public" virt="virtual"><scope>SVF::PathStmtDPItem</scope><name>~DPItem</name></member>
      <member refid="class_s_v_f_1_1_path_stmt_d_p_item_1adbe4b6f0f18f74661be01a17892aa839" prot="public" virt="virtual"><scope>SVF::PathStmtDPItem</scope><name>~PathStmtDPItem</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a710bee7fe8262d1fe8ed9c6160562abb" prot="public" virt="virtual"><scope>SVF::PathStmtDPItem</scope><name>~StmtDPItem</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
