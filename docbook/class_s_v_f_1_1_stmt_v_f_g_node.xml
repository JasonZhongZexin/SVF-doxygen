<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_stmt_v_f_g_node" xml:lang="en-US">
<title>SVF::StmtVFGNode Class Reference</title>
<indexterm><primary>SVF::StmtVFGNode</primary></indexterm>
<para>
<computeroutput>#include &lt;VFGNode.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for SVF::StmtVFGNode:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_stmt_v_f_g_node.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_stmt_v_f_g_node_1a03c4e0a31d2377ef4ffe46fe183ccd9d"/><link linkend="_class_s_v_f_1_1_stmt_v_f_g_node_1a03c4e0a31d2377ef4ffe46fe183ccd9d">StmtVFGNode</link> (NodeID id, const <link linkend="_class_s_v_f_1_1_p_a_g_edge">PAGEdge</link> *e, <link linkend="_class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75">VFGNodeK</link> k)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_stmt_v_f_g_node_1a88d856dc04d922dc553bc2eae31e88a6"/>bool <link linkend="_class_s_v_f_1_1_stmt_v_f_g_node_1a88d856dc04d922dc553bc2eae31e88a6">isPTANode</link> () const</para>

<para>Whether this node is used for pointer analysis. Both src and dst PAGNodes are of ptr type. </para>
</listitem>
        </itemizedlist>
</simplesect>
        <itemizedlist>
            <listitem><para>const <link linkend="_class_s_v_f_1_1_p_a_g_edge">PAGEdge</link> * <link linkend="_class_s_v_f_1_1_stmt_v_f_g_node_1a4dd7615f42971da9b6ec1dc04f0ec4e6">getPAGEdge</link> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_stmt_v_f_g_node_1a791a01f5d3528f8a8bf19369b5c61c37"/>NodeID <emphasis role="strong">getPAGSrcNodeID</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_stmt_v_f_g_node_1a04986961ad507be9fcf141ab51787da8"/>NodeID <emphasis role="strong">getPAGDstNodeID</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_stmt_v_f_g_node_1a837da5917c31e14aa51c6fa3e2640849"/><link linkend="_class_s_v_f_1_1_p_a_g_node">PAGNode</link> * <emphasis role="strong">getPAGSrcNode</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_stmt_v_f_g_node_1a8ba0e783f7fcbfa7cbd1d3a709ffa07f"/><link linkend="_class_s_v_f_1_1_p_a_g_node">PAGNode</link> * <emphasis role="strong">getPAGDstNode</emphasis> () const</para>
</listitem>
            <listitem><para>const Instruction * <link linkend="_class_s_v_f_1_1_stmt_v_f_g_node_1aae94dd9031a6662d509627e602aef532">getInst</link> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_stmt_v_f_g_node_1af81c18c3575d81ef43df3829b7913037"/>virtual const std::string <emphasis role="strong">toString</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_stmt_v_f_g_node_1ade2eb6475fdc3d2fa107c9adf508b72a"/>static bool <link linkend="_class_s_v_f_1_1_stmt_v_f_g_node_1ade2eb6475fdc3d2fa107c9adf508b72a">classof</link> (const <link linkend="_class_s_v_f_1_1_stmt_v_f_g_node">StmtVFGNode</link> *)</para>

<para>Methods for support type inquiry through isa, cast, and dyn_cast: </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_stmt_v_f_g_node_1a07b6320e6b57de790737585ad7e0dfc9"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_class_s_v_f_1_1_v_f_g_node">VFGNode</link> *node)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_stmt_v_f_g_node_1a52b07152246113f9b55a9bcacf92e1b4"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_namespace_s_v_f_1a3b4bbc4b72e982a79c23fd3ec26410b6">GenericVFGNodeTy</link> *node)</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para><link linkend="_class_s_v_f_1_1_i_c_f_g">ICFG</link> node stands for a program statement </para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_stmt_v_f_g_node_1aae94dd9031a6662d509627e602aef532"/>    <section>
    <title>getInst()</title>
<indexterm><primary>getInst</primary><secondary>SVF::StmtVFGNode</secondary></indexterm>
<indexterm><primary>SVF::StmtVFGNode</primary><secondary>getInst</secondary></indexterm>
<para><computeroutput>const Instruction* SVF::StmtVFGNode::getInst ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>should return a valid instruction unless it is a global <link linkend="_class_s_v_f_1_1_p_a_g_edge">PAGEdge</link></para>
    </section><anchor xml:id="_class_s_v_f_1_1_stmt_v_f_g_node_1a4dd7615f42971da9b6ec1dc04f0ec4e6"/>    <section>
    <title>getPAGEdge()</title>
<indexterm><primary>getPAGEdge</primary><secondary>SVF::StmtVFGNode</secondary></indexterm>
<indexterm><primary>SVF::StmtVFGNode</primary><secondary>getPAGEdge</secondary></indexterm>
<para><computeroutput>const <link linkend="_class_s_v_f_1_1_p_a_g_edge">PAGEdge</link>* SVF::StmtVFGNode::getPAGEdge ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para><link linkend="_class_s_v_f_1_1_p_a_g_node">PAGNode</link> and <link linkend="_class_s_v_f_1_1_p_a_g_edge">PAGEdge</link> </para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/Graphs/VFGNode.hlib/Graphs/VFG.cpp</section>
</section>
