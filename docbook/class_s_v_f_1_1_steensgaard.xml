<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_steensgaard" xml:lang="en-US">
<title>SVF::Steensgaard Class Reference</title>
<indexterm><primary>SVF::Steensgaard</primary></indexterm>
<para>Inheritance diagram for SVF::Steensgaard:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_steensgaard.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_steensgaard_1a7f975fd9a694f4b06bab8f3deef9d60b"/>typedef Map&lt; NodeID, NodeID &gt; <emphasis role="strong">NodeToEquivClassMap</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_steensgaard_1a45d49eef110e3bc15509a2020be38453"/>typedef Map&lt; NodeID, Set&lt; NodeID &gt; &gt; <emphasis role="strong">NodeToSubsMap</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_steensgaard_1a787495338e9a838fabc0c59f3313b915"/><link linkend="_class_s_v_f_1_1_steensgaard_1a787495338e9a838fabc0c59f3313b915">Steensgaard</link> (<link linkend="_class_s_v_f_1_1_p_a_g">PAG</link> *_pag)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_s_v_f_1_1_steensgaard_1a966faa0548fe76d81a50339fffdd24c8">solveWorklist</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_s_v_f_1_1_steensgaard_1ada542b3e393f23938d37e479008e8cc0">processAllAddr</link> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_steensgaard_1a191e77e62916d868b2af730264e26dd8"/>void <link linkend="_class_s_v_f_1_1_steensgaard_1a191e77e62916d868b2af730264e26dd8">ecUnion</link> (NodeID id, NodeID ec)</para>

<para>merge node into equiv class and merge node&apos;s pts into ec&apos;s pts </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_steensgaard_1adbcb9af660ab9bb0202bd32342280486"/>virtual const PointsTo &amp; <link linkend="_class_s_v_f_1_1_steensgaard_1adbcb9af660ab9bb0202bd32342280486">getPts</link> (NodeID id)</para>

<para>Operation of points-to set. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_steensgaard_1a61524c5a3521939b1546c78c68730c20"/>virtual bool <link linkend="_class_s_v_f_1_1_steensgaard_1a61524c5a3521939b1546c78c68730c20">unionPts</link> (NodeID id, const PointsTo &amp;target)</para>

<para>pts(id) = pts(id) U target </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_steensgaard_1afcb7f051f50b65a09ec2bc065bb70735"/>virtual bool <link linkend="_class_s_v_f_1_1_steensgaard_1afcb7f051f50b65a09ec2bc065bb70735">unionPts</link> (NodeID id, NodeID ptd)</para>

<para>pts(id) = pts(id) U pts(ptd) </para>
</listitem>
            <listitem><para>NodeID <link linkend="_class_s_v_f_1_1_steensgaard_1a27ddab65b4597520dcb8216ef3d69ae2">getECNode</link> (NodeID id) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_steensgaard_1a0062b174cb8fd6027bebcdd71b717b2f"/>void <emphasis role="strong">setEC</emphasis> (NodeID node, NodeID rep)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_steensgaard_1a95ed4be99e201058cb6d994250d2629f"/>Set&lt; NodeID &gt; &amp; <emphasis role="strong">getSubNodes</emphasis> (NodeID id)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_steensgaard_1abcb15d923ebbf289672b54b6f0963e03"/>void <emphasis role="strong">addSubNode</emphasis> (NodeID node, NodeID sub)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_steensgaard_1a33714348b5ed79d579039014f3092b87"/>static <link linkend="_class_s_v_f_1_1_steensgaard">Steensgaard</link> * <link linkend="_class_s_v_f_1_1_steensgaard_1a33714348b5ed79d579039014f3092b87">createSteensgaard</link> (<link linkend="_class_s_v_f_1_1_p_a_g">PAG</link> *_pag)</para>

<para>Create an singleton instance. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_steensgaard_1a375a16c7538866fcebfecf228f7ee63d"/>static void <emphasis role="strong">releaseSteensgaard</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_steensgaard_1a7e7493bd144746edb4fbe1292e8ba55f"/>static bool <link linkend="_class_s_v_f_1_1_steensgaard_1a7e7493bd144746edb4fbe1292e8ba55f">classof</link> (const <link linkend="_class_s_v_f_1_1_steensgaard">Steensgaard</link> *)</para>

<para>Methods for support type inquiry through isa, cast, and dyn_cast: </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_steensgaard_1acfd677c395809baea0a32f59646beb0f"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_class_s_v_f_1_1_andersen_base">AndersenBase</link> *pta)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_steensgaard_1a69daef869bfaaf0dfa2dccaf575dd9a0"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_class_s_v_f_1_1_pointer_analysis">PointerAnalysis</link> *pta)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_steensgaard_1a27ddab65b4597520dcb8216ef3d69ae2"/>    <section>
    <title>getECNode()</title>
<indexterm><primary>getECNode</primary><secondary>SVF::Steensgaard</secondary></indexterm>
<indexterm><primary>SVF::Steensgaard</primary><secondary>getECNode</secondary></indexterm>
<para><computeroutput>NodeID SVF::Steensgaard::getECNode (NodeID id) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>API for equivalence class operations Every constraint node maps to an unique equivalence class EC An equivalence class has a set of sub constraint nodes. </para>
    </section><anchor xml:id="_class_s_v_f_1_1_steensgaard_1ada542b3e393f23938d37e479008e8cc0"/>    <section>
    <title>processAllAddr()</title>
<indexterm><primary>processAllAddr</primary><secondary>SVF::Steensgaard</secondary></indexterm>
<indexterm><primary>SVF::Steensgaard</primary><secondary>processAllAddr</secondary></indexterm>
<para><computeroutput>void Steensgaard::processAllAddr ( )</computeroutput></para>
<para>Process address edges </para>
    </section><anchor xml:id="_class_s_v_f_1_1_steensgaard_1a966faa0548fe76d81a50339fffdd24c8"/>    <section>
    <title>solveWorklist()</title>
<indexterm><primary>solveWorklist</primary><secondary>SVF::Steensgaard</secondary></indexterm>
<indexterm><primary>SVF::Steensgaard</primary><secondary>solveWorklist</secondary></indexterm>
<para><computeroutput>void Steensgaard::solveWorklist ( )<computeroutput>[virtual]</computeroutput></computeroutput></para>
<para><link linkend="_class_s_v_f_1_1_steensgaard">Steensgaard</link> analysis </para>

<para>foreach ptd \in pts(p)</para>

<para>*p = q : EC(o) == EC(q)</para>

<para>q = p : EC(q) == EC(p)</para>

<para>q = &amp;p-&gt;f : EC(q) == EC(p)</para>
<para>
Reimplemented from <link linkend="_class_s_v_f_1_1_w_p_a_solver">SVF::WPASolver&lt; GraphType &gt;</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/WPA/Steensgaard.hlib/WPA/Steensgaard.cpp</section>
</section>
