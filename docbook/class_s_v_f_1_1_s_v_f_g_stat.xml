<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_s_v_f_g_stat" xml:lang="en-US">
<title>SVF::SVFGStat Class Reference</title>
<indexterm><primary>SVF::SVFGStat</primary></indexterm>
<para>Inheritance diagram for SVF::SVFGStat:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_s_v_f_g_stat.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1aee5ecd6a92c40e1e27197869028689c4"/>typedef Set&lt; const <link linkend="_class_s_v_f_1_1_v_f_g_node">SVFGNode</link> * &gt; <emphasis role="strong">SVFGNodeSet</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1afeddbe4020e9b3c928856c2dc86af838"/>typedef OrderedSet&lt; const <link linkend="_class_s_v_f_1_1_v_f_g_edge">SVFGEdge</link> * &gt; <emphasis role="strong">SVFGEdgeSet</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1a149edd19cd5adafec13cbb49c590f0a8"/>typedef <link linkend="_class_s_v_f_1_1_s_c_c_detection">SCCDetection</link>&lt; <link linkend="_class_s_v_f_1_1_s_v_f_g">SVFG</link> * &gt; <emphasis role="strong">SVFGSCC</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_s_v_f_1_1_s_v_f_g_stat_1ae61d5bd92ef495a0f6c2f9dedac3da03">SVFGStat</link> (<link linkend="_class_s_v_f_1_1_s_v_f_g">SVFG</link> *g)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1ab11b1fbef2bd7cfc9bf8e1b993dbfa11"/>virtual void <emphasis role="strong">performStat</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1a67e0f3d1eb1cf8bf6dda57b602d6dac7"/>virtual void <emphasis role="strong">printStat</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1a87d5e8ec0e13416cff36a18644a5b94f"/>virtual void <emphasis role="strong">performSCCStat</emphasis> (SVFGEdgeSet insensitiveCalRetEdges)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1a169d75c0fd09f69d86939d84db67e590"/>void <emphasis role="strong">dirVFEdgeStart</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1abef8f1d89413ed3c6e67dcd2b81729d8"/>void <emphasis role="strong">dirVFEdgeEnd</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1adcb30427bb220dc122ad22030e10eb21"/>void <emphasis role="strong">indVFEdgeStart</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1a8b3b9a211f410e67e8fd1a79d3db9023"/>void <emphasis role="strong">indVFEdgeEnd</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1a2e4aac52fdc2fd119847afbeba634de9"/>void <emphasis role="strong">TLVFNodeStart</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1a17e479f0258291998369a2eb325ba3d7"/>void <emphasis role="strong">TLVFNodeEnd</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1a4bf9a39b93b7254f627dd393b9f2b82c"/>void <emphasis role="strong">ATVFNodeStart</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1aa39231c3d81fa87cdb6089f17bc35af8"/>void <emphasis role="strong">ATVFNodeEnd</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1acb80953b39ce247679242df4f042ab79"/>void <emphasis role="strong">sfvgOptStart</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1aaec3a7f29b3ded0c971d57376d2779ff"/>void <emphasis role="strong">sfvgOptEnd</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1a59585ec387e8cc30a85eeec99a97e968"/>void <emphasis role="strong">addToSources</emphasis> (const <link linkend="_class_s_v_f_1_1_v_f_g_node">SVFGNode</link> *node)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1add8a63f5e0f0057ce07d3992355ce3fa"/>void <emphasis role="strong">addToSinks</emphasis> (const <link linkend="_class_s_v_f_1_1_v_f_g_node">SVFGNode</link> *node)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1aee8cb3fa54e882bba54bf557bbc5e1a3"/>void <emphasis role="strong">addToForwardSlice</emphasis> (const <link linkend="_class_s_v_f_1_1_v_f_g_node">SVFGNode</link> *node)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1a54e61121cdfac31e336cd79fa0513419"/>void <emphasis role="strong">addToBackwardSlice</emphasis> (const <link linkend="_class_s_v_f_1_1_v_f_g_node">SVFGNode</link> *node)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1adc6a5c3e430bdf942f1462e101ac6917"/>bool <emphasis role="strong">inForwardSlice</emphasis> (const <link linkend="_class_s_v_f_1_1_v_f_g_node">SVFGNode</link> *node) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1a6e68486e02db81cbbedc942ace3e9590"/>bool <emphasis role="strong">inBackwardSlice</emphasis> (const <link linkend="_class_s_v_f_1_1_v_f_g_node">SVFGNode</link> *node) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1a72c93b86e95bdbe32ade33f7264f4c0a"/>bool <emphasis role="strong">isSource</emphasis> (const <link linkend="_class_s_v_f_1_1_v_f_g_node">SVFGNode</link> *node) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1ae905f0d64db3039f8fd3c117c4624e31"/>bool <emphasis role="strong">isSink</emphasis> (const <link linkend="_class_s_v_f_1_1_v_f_g_node">SVFGNode</link> *node) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_s_v_f_g_stat_1ae61d5bd92ef495a0f6c2f9dedac3da03"/>    <section>
    <title>SVFGStat()</title>
<indexterm><primary>SVFGStat</primary><secondary>SVF::SVFGStat</secondary></indexterm>
<indexterm><primary>SVF::SVFGStat</primary><secondary>SVFGStat</secondary></indexterm>
<para><computeroutput>SVFGStat::SVFGStat (<link linkend="_class_s_v_f_1_1_s_v_f_g">SVFG</link> * g)</computeroutput></para>
<para>Constructor </para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/Graphs/SVFGStat.hlib/Graphs/SVFGStat.cpp</section>
</section>
