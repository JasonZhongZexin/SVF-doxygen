<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structstd_1_1hash_3_01const_01_s_v_f_1_1_cond_var_3_01_cond_01_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>std::hash&lt; const SVF::CondVar&lt; Cond &gt; &gt;</compoundname>
    <includes refid="_conditional_p_t_8h" local="no">ConditionalPT.h</includes>
    <templateparamlist>
      <param>
        <type>typename Cond</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structstd_1_1hash_3_01const_01_s_v_f_1_1_cond_var_3_01_cond_01_4_01_4_1ae66ac1a976e498f88e382988f17b4df5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t std::hash&lt; const SVF::CondVar&lt; Cond &gt; &gt;::operator()</definition>
        <argsstring>(const SVF::CondVar&lt; Cond &gt; &amp;cv) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_cond_var" kindref="compound">SVF::CondVar</ref>&lt; Cond &gt; &amp;</type>
          <declname>cv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/ConditionalPT.h" line="845" column="12" bodyfile="include/MemoryModel/ConditionalPT.h" bodystart="845" bodyend="849"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Specialise hash for CondVar. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/MemoryModel/ConditionalPT.h" line="843" column="1" bodyfile="include/MemoryModel/ConditionalPT.h" bodystart="844" bodyend="850"/>
    <listofallmembers>
      <member refid="structstd_1_1hash_3_01const_01_s_v_f_1_1_cond_var_3_01_cond_01_4_01_4_1ae66ac1a976e498f88e382988f17b4df5" prot="public" virt="non-virtual"><scope>std::hash&lt; const SVF::CondVar&lt; Cond &gt; &gt;</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
