<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_st_info" kind="class" language="C++" prot="public">
    <compoundname>SVF::StInfo</compoundname>
    <includes refid="_mem_model_8h" local="no">MemModel.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_st_info_1a77c94c0ab75b2d5af2132ff8e082cefe" prot="private" static="no" mutable="no">
        <type>std::vector&lt; u32_t &gt;</type>
        <definition>std::vector&lt;u32_t&gt; SVF::StInfo::fldIdxVec</definition>
        <argsstring></argsstring>
        <name>fldIdxVec</name>
        <briefdescription>
<para>flattened field indices of a struct </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MemModel.h" line="60" column="17" bodyfile="include/MemoryModel/MemModel.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_st_info_1a33065d23c63a3a1919ad53a5e4f38f4a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; u32_t &gt;</type>
        <definition>std::vector&lt;u32_t&gt; SVF::StInfo::foffset</definition>
        <argsstring></argsstring>
        <name>foffset</name>
        <briefdescription>
<para>flattened field offsets of of a struct </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MemModel.h" line="62" column="17" bodyfile="include/MemoryModel/MemModel.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_st_info_1a08e0988d4cc980a1bfe8d8af5fdafbb4" prot="private" static="no" mutable="no">
        <type>Map&lt; u32_t, const llvm::Type * &gt;</type>
        <definition>Map&lt;u32_t, const llvm::Type*&gt; SVF::StInfo::fldIdx2TypeMap</definition>
        <argsstring></argsstring>
        <name>fldIdx2TypeMap</name>
        <briefdescription>
<para>Types of all fields of a struct. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MemModel.h" line="64" column="9" bodyfile="include/MemoryModel/MemModel.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_st_info_1a2fc773eac63f959c78957dc407cccaa2" prot="private" static="no" mutable="no">
        <type>Map&lt; u32_t, const llvm::Type * &gt;</type>
        <definition>Map&lt;u32_t, const llvm::Type*&gt; SVF::StInfo::offset2TypeMap</definition>
        <argsstring></argsstring>
        <name>offset2TypeMap</name>
        <briefdescription>
<para>Types of all fields of a struct. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MemModel.h" line="66" column="9" bodyfile="include/MemoryModel/MemModel.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_st_info_1ae4b2805df04f7fd4ea636460f8048a88" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_s_v_f_1_1_field_info" kindref="compound">FieldInfo</ref> &gt;</type>
        <definition>std::vector&lt;FieldInfo&gt; SVF::StInfo::finfo</definition>
        <argsstring></argsstring>
        <name>finfo</name>
        <briefdescription>
<para>All field infos after flattening a struct. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MemModel.h" line="68" column="17" bodyfile="include/MemoryModel/MemModel.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_st_info_1a4cd926bd095254dd287f1cf26e02483e" prot="private" static="yes" mutable="no">
        <type>u32_t</type>
        <definition>u32_t StInfo::maxFieldLimit</definition>
        <argsstring></argsstring>
        <name>maxFieldLimit</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Max field limit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MemModel.h" line="71" column="18" bodyfile="include/MemoryModel/MemModel.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_st_info_1a72dd2114d61e1489676a524b83ebb5ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::StInfo::StInfo</definition>
        <argsstring>()</argsstring>
        <name>StInfo</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MemModel.h" line="75" column="5" bodyfile="include/MemoryModel/MemModel.h" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_st_info_1a1fa88b6bfbbd648df1b15f11d61578ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::StInfo::~StInfo</definition>
        <argsstring>()</argsstring>
        <name>~StInfo</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MemModel.h" line="79" column="5" bodyfile="include/MemoryModel/MemModel.h" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_st_info_1a913afa9bbdeb9cc54b0a9b9a062c0979" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const llvm::Type *</type>
        <definition>const llvm::Type* SVF::StInfo::getFieldTypeWithFldIdx</definition>
        <argsstring>(u32_t fldIdx)</argsstring>
        <name>getFieldTypeWithFldIdx</name>
        <param>
          <type>u32_t</type>
          <declname>fldIdx</declname>
        </param>
        <briefdescription>
<para>Get method for fields of a struct. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MemModel.h" line="95" column="29" bodyfile="include/MemoryModel/MemModel.h" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_st_info_1aed0d6af756950fa2db4f56c9ffe76355" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const llvm::Type *</type>
        <definition>const llvm::Type* SVF::StInfo::getFieldTypeWithByteOffset</definition>
        <argsstring>(u32_t offset)</argsstring>
        <name>getFieldTypeWithByteOffset</name>
        <param>
          <type>u32_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MemModel.h" line="99" column="29" bodyfile="include/MemoryModel/MemModel.h" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_st_info_1a219b42bae46d10dbeab28c6fd922dd68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; u32_t &gt; &amp;</type>
        <definition>std::vector&lt;u32_t&gt;&amp; SVF::StInfo::getFieldIdxVec</definition>
        <argsstring>()</argsstring>
        <name>getFieldIdxVec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MemModel.h" line="103" column="24" bodyfile="include/MemoryModel/MemModel.h" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_st_info_1a25a1d7b04738c9e3b60654992b897385" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; u32_t &gt; &amp;</type>
        <definition>std::vector&lt;u32_t&gt;&amp; SVF::StInfo::getFieldOffsetVec</definition>
        <argsstring>()</argsstring>
        <name>getFieldOffsetVec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MemModel.h" line="107" column="24" bodyfile="include/MemoryModel/MemModel.h" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_st_info_1a9bb25646a735d612cf777394fa3ba5d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_s_v_f_1_1_field_info" kindref="compound">FieldInfo</ref> &gt; &amp;</type>
        <definition>std::vector&lt;FieldInfo&gt;&amp; SVF::StInfo::getFlattenFieldInfoVec</definition>
        <argsstring>()</argsstring>
        <name>getFlattenFieldInfoVec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MemModel.h" line="111" column="24" bodyfile="include/MemoryModel/MemModel.h" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_st_info_1ac8483f7707339d3ba53fa2ae0127ec98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::StInfo::addFldWithType</definition>
        <argsstring>(u32_t fldIdx, u32_t offset, const llvm::Type *type)</argsstring>
        <name>addFldWithType</name>
        <param>
          <type>u32_t</type>
          <declname>fldIdx</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const llvm::Type *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Add field (index and offset) with its corresponding type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MemModel.h" line="118" column="17" bodyfile="include/MemoryModel/MemModel.h" bodystart="118" bodyend="124"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_s_v_f_1_1_st_info_1aed9399cfe3ace00289f2a5265df80199" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void SVF::StInfo::setMaxFieldLimit</definition>
        <argsstring>(u32_t limit)</argsstring>
        <name>setMaxFieldLimit</name>
        <param>
          <type>u32_t</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MemModel.h" line="83" column="24" bodyfile="include/MemoryModel/MemModel.h" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_st_info_1ad6e599717952f8ccc2771cd72254b6b2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>u32_t</type>
        <definition>static u32_t SVF::StInfo::getMaxFieldLimit</definition>
        <argsstring>()</argsstring>
        <name>getMaxFieldLimit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MemModel.h" line="88" column="25" bodyfile="include/MemoryModel/MemModel.h" bodystart="88" bodyend="91"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Struct information </para>
    </detaileddescription>
    <location file="include/MemoryModel/MemModel.h" line="55" column="1" bodyfile="include/MemoryModel/MemModel.h" bodystart="56" bodyend="125"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_st_info_1ac8483f7707339d3ba53fa2ae0127ec98" prot="public" virt="non-virtual"><scope>SVF::StInfo</scope><name>addFldWithType</name></member>
      <member refid="class_s_v_f_1_1_st_info_1ae4b2805df04f7fd4ea636460f8048a88" prot="private" virt="non-virtual"><scope>SVF::StInfo</scope><name>finfo</name></member>
      <member refid="class_s_v_f_1_1_st_info_1a08e0988d4cc980a1bfe8d8af5fdafbb4" prot="private" virt="non-virtual"><scope>SVF::StInfo</scope><name>fldIdx2TypeMap</name></member>
      <member refid="class_s_v_f_1_1_st_info_1a77c94c0ab75b2d5af2132ff8e082cefe" prot="private" virt="non-virtual"><scope>SVF::StInfo</scope><name>fldIdxVec</name></member>
      <member refid="class_s_v_f_1_1_st_info_1a33065d23c63a3a1919ad53a5e4f38f4a" prot="private" virt="non-virtual"><scope>SVF::StInfo</scope><name>foffset</name></member>
      <member refid="class_s_v_f_1_1_st_info_1a219b42bae46d10dbeab28c6fd922dd68" prot="public" virt="non-virtual"><scope>SVF::StInfo</scope><name>getFieldIdxVec</name></member>
      <member refid="class_s_v_f_1_1_st_info_1a25a1d7b04738c9e3b60654992b897385" prot="public" virt="non-virtual"><scope>SVF::StInfo</scope><name>getFieldOffsetVec</name></member>
      <member refid="class_s_v_f_1_1_st_info_1aed0d6af756950fa2db4f56c9ffe76355" prot="public" virt="non-virtual"><scope>SVF::StInfo</scope><name>getFieldTypeWithByteOffset</name></member>
      <member refid="class_s_v_f_1_1_st_info_1a913afa9bbdeb9cc54b0a9b9a062c0979" prot="public" virt="non-virtual"><scope>SVF::StInfo</scope><name>getFieldTypeWithFldIdx</name></member>
      <member refid="class_s_v_f_1_1_st_info_1a9bb25646a735d612cf777394fa3ba5d6" prot="public" virt="non-virtual"><scope>SVF::StInfo</scope><name>getFlattenFieldInfoVec</name></member>
      <member refid="class_s_v_f_1_1_st_info_1ad6e599717952f8ccc2771cd72254b6b2" prot="public" virt="non-virtual"><scope>SVF::StInfo</scope><name>getMaxFieldLimit</name></member>
      <member refid="class_s_v_f_1_1_st_info_1a4cd926bd095254dd287f1cf26e02483e" prot="private" virt="non-virtual"><scope>SVF::StInfo</scope><name>maxFieldLimit</name></member>
      <member refid="class_s_v_f_1_1_st_info_1a2fc773eac63f959c78957dc407cccaa2" prot="private" virt="non-virtual"><scope>SVF::StInfo</scope><name>offset2TypeMap</name></member>
      <member refid="class_s_v_f_1_1_st_info_1aed9399cfe3ace00289f2a5265df80199" prot="public" virt="non-virtual"><scope>SVF::StInfo</scope><name>setMaxFieldLimit</name></member>
      <member refid="class_s_v_f_1_1_st_info_1a72dd2114d61e1489676a524b83ebb5ac" prot="public" virt="non-virtual"><scope>SVF::StInfo</scope><name>StInfo</name></member>
      <member refid="class_s_v_f_1_1_st_info_1a1fa88b6bfbbd648df1b15f11d61578ed" prot="public" virt="non-virtual"><scope>SVF::StInfo</scope><name>~StInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
