<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_ext_a_p_i" xml:lang="en-US">
<title>SVF::ExtAPI Class Reference</title>
<indexterm><primary>SVF::ExtAPI</primary></indexterm>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_ext_a_p_i_1aaf94c82d98f8ed1514ee49c9881a4094"/>enum <emphasis role="strong">extf_t</emphasis> { 
<emphasis role="strong">EFT_NOOP</emphasis> = 0
, <emphasis role="strong">EFT_ALLOC</emphasis>
, <emphasis role="strong">EFT_REALLOC</emphasis>
, <emphasis role="strong">EFT_FREE</emphasis>
, 
<emphasis role="strong">EFT_NOSTRUCT_ALLOC</emphasis>
, <emphasis role="strong">EFT_STAT</emphasis>
, <emphasis role="strong">EFT_STAT2</emphasis>
, <emphasis role="strong">EFT_L_A0</emphasis>
, 
<emphasis role="strong">EFT_L_A1</emphasis>
, <emphasis role="strong">EFT_L_A2</emphasis>
, <emphasis role="strong">EFT_L_A8</emphasis>
, <emphasis role="strong">EFT_L_A0__A0R_A1</emphasis>
, 
<emphasis role="strong">EFT_L_A0__A0R_A1R</emphasis>
, <emphasis role="strong">EFT_A1R_A0R</emphasis>
, <emphasis role="strong">EFT_A3R_A1R_NS</emphasis>
, <emphasis role="strong">EFT_A1R_A0</emphasis>
, 
<emphasis role="strong">EFT_A2R_A1</emphasis>
, <emphasis role="strong">EFT_A4R_A1</emphasis>
, <emphasis role="strong">EFT_L_A0__A2R_A0</emphasis>
, <emphasis role="strong">EFT_L_A0__A1_A0</emphasis>
, 
<emphasis role="strong">EFT_A0R_NEW</emphasis>
, <emphasis role="strong">EFT_A1R_NEW</emphasis>
, <emphasis role="strong">EFT_A2R_NEW</emphasis>
, <emphasis role="strong">EFT_A4R_NEW</emphasis>
, 
<emphasis role="strong">EFT_A11R_NEW</emphasis>
, <emphasis role="strong">EFT_STD_RB_TREE_INSERT_AND_REBALANCE</emphasis>
, <emphasis role="strong">EFT_STD_RB_TREE_INCREMENT</emphasis>
, <emphasis role="strong">EFT_STD_LIST_HOOK</emphasis>
, 
<emphasis role="strong">CPP_EFT_A0R_A1</emphasis>
, <emphasis role="strong">CPP_EFT_A0R_A1R</emphasis>
, <emphasis role="strong">CPP_EFT_A1R</emphasis>
, <emphasis role="strong">EFT_CXA_BEGIN_CATCH</emphasis>
, 
<emphasis role="strong">CPP_EFT_DYNAMIC_CAST</emphasis>
, <emphasis role="strong">EFT_OTHER</emphasis>
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_ext_a_p_i_1a90b433cf855adcf34c6ef7f7e5be62b1"/>extf_t <emphasis role="strong">get_type</emphasis> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *F) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_ext_a_p_i_1ae439994d7a92c4cb3bf5c9fa80fa31e8"/>bool <emphasis role="strong">has_static</emphasis> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *F) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_ext_a_p_i_1aab5731ba773144c7cbb5609e9b807eae"/>bool <emphasis role="strong">has_static2</emphasis> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *F) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_ext_a_p_i_1a9ac1ce8f2796d1e70005c6999c9772de"/>bool <emphasis role="strong">is_alloc</emphasis> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *F) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_ext_a_p_i_1add48f7a9bcb7227727969e944ffe3fc8"/>bool <emphasis role="strong">is_arg_alloc</emphasis> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *F) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_ext_a_p_i_1a090df490c65fab16ec9fa5431e13361e"/>int <emphasis role="strong">get_alloc_arg_pos</emphasis> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *F) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_ext_a_p_i_1a235ef40373e36583004eb6d289ce63f9"/>bool <emphasis role="strong">no_struct_alloc</emphasis> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *F) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_ext_a_p_i_1af09ae44b9311d3dfd9eafd41da8c31be"/>bool <emphasis role="strong">is_dealloc</emphasis> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *F) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_ext_a_p_i_1a82439c0d4f80b2d3a4da3a4d090c69dc"/>bool <emphasis role="strong">is_noop</emphasis> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *F) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_ext_a_p_i_1a070e7da81158d8948a4dbc06a0ec3cfe"/>bool <emphasis role="strong">is_realloc</emphasis> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *F) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_ext_a_p_i_1ad1481f542d0a4bf67052ee897b165847"/>bool <emphasis role="strong">is_ext</emphasis> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *F)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_ext_a_p_i_1a86508e03ca1c2e37fc9414cb2335c3ec"/>static <link linkend="_class_s_v_f_1_1_ext_a_p_i">ExtAPI</link> * <link linkend="_class_s_v_f_1_1_ext_a_p_i_1a86508e03ca1c2e37fc9414cb2335c3ec">getExtAPI</link> ()</para>

<para>Singleton design here to make sure we only have one instance during whole analysis. </para>
</listitem>
        </itemizedlist>
</simplesect>
<para>
The documentation for this class was generated from the following files:</para>
include/Util/ExtAPI.hlib/Util/ExtAPI.cpp</section>
