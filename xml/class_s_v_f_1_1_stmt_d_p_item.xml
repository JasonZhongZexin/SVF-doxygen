<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_stmt_d_p_item" kind="class" language="C++" prot="public">
    <compoundname>SVF::StmtDPItem</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_d_p_item" prot="public" virt="non-virtual">SVF::DPItem</basecompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_cxt_stmt_d_p_item" prot="public" virt="non-virtual">SVF::CxtStmtDPItem&lt; LocCond &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_path_stmt_d_p_item" prot="public" virt="non-virtual">SVF::PathStmtDPItem&lt; LocCond &gt;</derivedcompoundref>
    <includes refid="_d_p_item_8h" local="no">DPItem.h</includes>
    <templateparamlist>
      <param>
        <type>class LocCond</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_stmt_d_p_item_1a9e20ebd5ae8272a4aef74914098f97ef" prot="protected" static="no" mutable="no">
        <type>const LocCond *</type>
        <definition>const LocCond* SVF::StmtDPItem&lt; LocCond &gt;::curloc</definition>
        <argsstring></argsstring>
        <name>curloc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="124" column="19" bodyfile="include/Util/DPItem.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_stmt_d_p_item_1aed9239e5558569f6e957e691fa1872d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::StmtDPItem&lt; LocCond &gt;::StmtDPItem</definition>
        <argsstring>(NodeID c, const LocCond *locCond)</argsstring>
        <name>StmtDPItem</name>
        <param>
          <type>NodeID</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const LocCond *</type>
          <declname>locCond</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="128" column="5" bodyfile="include/Util/DPItem.h" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_stmt_d_p_item_1a3882dc175baaccfa1f811dcbfef98f71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::StmtDPItem&lt; LocCond &gt;::StmtDPItem</definition>
        <argsstring>(const StmtDPItem &amp;dps)</argsstring>
        <name>StmtDPItem</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_stmt_d_p_item" kindref="compound">StmtDPItem</ref> &amp;</type>
          <declname>dps</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="132" column="5" bodyfile="include/Util/DPItem.h" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_stmt_d_p_item_1a710bee7fe8262d1fe8ed9c6160562abb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::StmtDPItem&lt; LocCond &gt;::~StmtDPItem</definition>
        <argsstring>()</argsstring>
        <name>~StmtDPItem</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="137" column="13" bodyfile="include/Util/DPItem.h" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_stmt_d_p_item_1a3616c94c4394b61c757ffcd39888d5b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const LocCond *</type>
        <definition>const LocCond* SVF::StmtDPItem&lt; LocCond &gt;::getLoc</definition>
        <argsstring>() const</argsstring>
        <name>getLoc</name>
        <briefdescription>
<para>Get context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="141" column="26" bodyfile="include/Util/DPItem.h" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_stmt_d_p_item_1a9ba9ab1013a36530369aa6d684397f4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::StmtDPItem&lt; LocCond &gt;::setLoc</definition>
        <argsstring>(const LocCond *l)</argsstring>
        <name>setLoc</name>
        <param>
          <type>const LocCond *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Set location. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="146" column="17" bodyfile="include/Util/DPItem.h" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_stmt_d_p_item_1a3feb4bc8e003cfdd30c1b2cfb2219efb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::StmtDPItem&lt; LocCond &gt;::setLocVar</definition>
        <argsstring>(const LocCond *l, NodeID v)</argsstring>
        <name>setLocVar</name>
        <param>
          <type>const LocCond *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>NodeID</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Set location and pointer id. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="151" column="17" bodyfile="include/Util/DPItem.h" bodystart="151" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_stmt_d_p_item_1af92976dc7a8785165cefb047e742cdf6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::StmtDPItem&lt; LocCond &gt;::operator&lt;</definition>
        <argsstring>(const StmtDPItem &amp;rhs) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_stmt_d_p_item" kindref="compound">StmtDPItem</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable compare operator to avoid duplicated item insertion in map or set to be noted that two vectors can also overload operator() </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="158" column="12" bodyfile="include/Util/DPItem.h" bodystart="158" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_stmt_d_p_item_1a072da7dc37fd3f9b7a79196394382499" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_stmt_d_p_item" kindref="compound">StmtDPItem</ref> &amp;</type>
        <definition>StmtDPItem&amp; SVF::StmtDPItem&lt; LocCond &gt;::operator=</definition>
        <argsstring>(const StmtDPItem &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_stmt_d_p_item" kindref="compound">StmtDPItem</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Overloading operator==. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="166" column="23" bodyfile="include/Util/DPItem.h" bodystart="166" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_stmt_d_p_item_1afd63ae0d881101d6c61709b9ac25dbf8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::StmtDPItem&lt; LocCond &gt;::operator==</definition>
        <argsstring>(const StmtDPItem &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_stmt_d_p_item" kindref="compound">StmtDPItem</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Overloading operator==. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="176" column="17" bodyfile="include/Util/DPItem.h" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_stmt_d_p_item_1ab89875a3b692ed348b1b28bb9a173254" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::StmtDPItem&lt; LocCond &gt;::operator!=</definition>
        <argsstring>(const StmtDPItem &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_stmt_d_p_item" kindref="compound">StmtDPItem</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Overloading operator!=. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="181" column="17" bodyfile="include/Util/DPItem.h" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_stmt_d_p_item_1a6cc1361dd5777cb4b93fb93c3899cfc7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::StmtDPItem&lt; LocCond &gt;::dump</definition>
        <argsstring>() const</argsstring>
        <name>dump</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="185" column="17" bodyfile="include/Util/DPItem.h" bodystart="185" bodyend="188"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_s_v_f_1_1_flow_sensitive" kindref="compound">FlowSensitive</ref> <ref refid="class_s_v_f_1_1_d_p_item" kindref="compound">DPItem</ref> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>SVF::PathStmtDPItem&lt; LocCond &gt;</label>
        <link refid="class_s_v_f_1_1_path_stmt_d_p_item"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SVF::DPItem</label>
        <link refid="class_s_v_f_1_1_d_p_item"/>
      </node>
      <node id="3">
        <label>SVF::CxtStmtDPItem&lt; LocCond &gt;</label>
        <link refid="class_s_v_f_1_1_cxt_stmt_d_p_item"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>SVF::StmtDPItem&lt; LocCond &gt;</label>
        <link refid="class_s_v_f_1_1_stmt_d_p_item"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>SVF::DPItem</label>
        <link refid="class_s_v_f_1_1_d_p_item"/>
      </node>
      <node id="1">
        <label>SVF::StmtDPItem&lt; LocCond &gt;</label>
        <link refid="class_s_v_f_1_1_stmt_d_p_item"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/Util/DPItem.h" line="119" column="1" bodyfile="include/Util/DPItem.h" bodystart="120" bodyend="189"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_d_p_item_1a82d2a11fb456192ec88fcb5ffe239d80" prot="protected" virt="non-virtual"><scope>SVF::StmtDPItem</scope><name>cur</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a9e20ebd5ae8272a4aef74914098f97ef" prot="protected" virt="non-virtual"><scope>SVF::StmtDPItem</scope><name>curloc</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1ac5dbe11ebf512e6dccdfa1eceba04fe8" prot="public" virt="non-virtual"><scope>SVF::StmtDPItem</scope><name>DPItem</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a715b7de4a392d8c389e611e27f8b9184" prot="public" virt="non-virtual"><scope>SVF::StmtDPItem</scope><name>DPItem</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a6cc1361dd5777cb4b93fb93c3899cfc7" prot="public" virt="non-virtual"><scope>SVF::StmtDPItem</scope><name>dump</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a03a90eca842c0e83d874902103f6fdb2" prot="public" virt="non-virtual"><scope>SVF::StmtDPItem</scope><name>getCurNodeID</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a3616c94c4394b61c757ffcd39888d5b9" prot="public" virt="non-virtual"><scope>SVF::StmtDPItem</scope><name>getLoc</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1af9d8f95249190e164131dc19b6db1b67" prot="public" virt="non-virtual"><scope>SVF::StmtDPItem</scope><name>getMaxBudget</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a5dbb0e6010b38c5b937ff06cb40cd0ef" prot="protected" virt="non-virtual"><scope>SVF::StmtDPItem</scope><name>maximumBudget</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1ab89875a3b692ed348b1b28bb9a173254" prot="public" virt="non-virtual"><scope>SVF::StmtDPItem</scope><name>operator!=</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1add804064ca2bfaa16bcc25503698a1ea" prot="public" virt="non-virtual" ambiguityscope="SVF::DPItem::"><scope>SVF::StmtDPItem</scope><name>operator!=</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1af92976dc7a8785165cefb047e742cdf6" prot="public" virt="non-virtual"><scope>SVF::StmtDPItem</scope><name>operator&lt;</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a639c757076141a14bedc26c73f875ffe" prot="public" virt="non-virtual" ambiguityscope="SVF::DPItem::"><scope>SVF::StmtDPItem</scope><name>operator&lt;</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a072da7dc37fd3f9b7a79196394382499" prot="public" virt="non-virtual"><scope>SVF::StmtDPItem</scope><name>operator=</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a10226d37dfef045bec9f7cfb78315440" prot="public" virt="non-virtual" ambiguityscope="SVF::DPItem::"><scope>SVF::StmtDPItem</scope><name>operator=</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1afd63ae0d881101d6c61709b9ac25dbf8" prot="public" virt="non-virtual"><scope>SVF::StmtDPItem</scope><name>operator==</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1ad67fcd340351360555b0cb88f57b183a" prot="public" virt="non-virtual" ambiguityscope="SVF::DPItem::"><scope>SVF::StmtDPItem</scope><name>operator==</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a5fbde30cae2cb09bd9dc9a6969ea4b90" prot="public" virt="non-virtual"><scope>SVF::StmtDPItem</scope><name>setCurNodeID</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a9ba9ab1013a36530369aa6d684397f4f" prot="public" virt="non-virtual"><scope>SVF::StmtDPItem</scope><name>setLoc</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a3feb4bc8e003cfdd30c1b2cfb2219efb" prot="public" virt="non-virtual"><scope>SVF::StmtDPItem</scope><name>setLocVar</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a687ef8944ccb55b826508c47ea5b9240" prot="public" virt="non-virtual"><scope>SVF::StmtDPItem</scope><name>setMaxBudget</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1aed9239e5558569f6e957e691fa1872d7" prot="public" virt="non-virtual"><scope>SVF::StmtDPItem</scope><name>StmtDPItem</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a3882dc175baaccfa1f811dcbfef98f71" prot="public" virt="non-virtual"><scope>SVF::StmtDPItem</scope><name>StmtDPItem</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a1df86140eee6015369836d20d509f14d" prot="public" virt="virtual"><scope>SVF::StmtDPItem</scope><name>~DPItem</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a710bee7fe8262d1fe8ed9c6160562abb" prot="public" virt="virtual"><scope>SVF::StmtDPItem</scope><name>~StmtDPItem</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
