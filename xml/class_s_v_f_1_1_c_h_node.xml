<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_c_h_node" kind="class" language="C++" prot="public">
    <compoundname>SVF::CHNode</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_generic_node" prot="public" virt="non-virtual">SVF::GenericNode&lt; CHNode, CHEdge &gt;</basecompoundref>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_s_v_f_1_1_c_h_node_1a7111a3971f9f03e32bfd291a783d43b4" prot="public" static="no" strong="no">
        <type></type>
        <name>CLASSATTR</name>
        <enumvalue id="class_s_v_f_1_1_c_h_node_1a7111a3971f9f03e32bfd291a783d43b4ab530567d5ba09c9c579aef964aef8f81" prot="public">
          <name>PURE_ABSTRACT</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_c_h_node_1a7111a3971f9f03e32bfd291a783d43b4afd6d851b22e741690f0736b4858d81a5" prot="public">
          <name>MULTI_INHERITANCE</name>
          <initializer>= 0x2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_c_h_node_1a7111a3971f9f03e32bfd291a783d43b4a330331556c568fcd60c9df6df2c1281d" prot="public">
          <name>TEMPLATE</name>
          <initializer>= 0x04</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="75" column="5" bodyfile="include/SVF-FE/CHG.h" bodystart="76" bodyend="80"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_c_h_node_1aa4af6538c9994ec54a7b82691f846a31" prot="public" static="no">
        <type>std::vector&lt; const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> * &gt;</type>
        <definition>typedef std::vector&lt;const SVFFunction*&gt; SVF::CHNode::FuncVector</definition>
        <argsstring></argsstring>
        <name>FuncVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="82" column="25" bodyfile="include/SVF-FE/CHG.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_c_h_node_1a08a717043e8b8c3d87742f0ecd3a3cc1" prot="private" static="no" mutable="no">
        <type>const GlobalValue *</type>
        <definition>const GlobalValue* SVF::CHNode::vtable</definition>
        <argsstring></argsstring>
        <name>vtable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="156" column="23" bodyfile="include/SVF-FE/CHG.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_c_h_node_1ac7c18617b768a2988cf4eff7e849f397" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SVF::CHNode::className</definition>
        <argsstring></argsstring>
        <name>className</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="157" column="17" bodyfile="include/SVF-FE/CHG.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_c_h_node_1a6844c89f715979709dc52d4854373e72" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t SVF::CHNode::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="158" column="12" bodyfile="include/SVF-FE/CHG.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_c_h_node_1a00f850f87a7dbf0c984b0df3ec06657f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> * &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;const SVFFunction*&gt; &gt; SVF::CHNode::virtualFunctionVectors</definition>
        <argsstring></argsstring>
        <name>virtualFunctionVectors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="171" column="17" bodyfile="include/SVF-FE/CHG.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_c_h_node_1a1f2c496e378d01841e4dc164942dc145" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::CHNode::CHNode</definition>
        <argsstring>(const std::string name, NodeID i=0, GNodeK k=0)</argsstring>
        <name>CHNode</name>
        <param>
          <type>const std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>NodeID</type>
          <declname>i</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_generic_node_1a363b90ab02cce2ebc3ede8e5b7cc141c" kindref="member">GNodeK</ref></type>
          <declname>k</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="84" column="5" bodyfile="include/SVF-FE/CHG.h" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_h_node_1aff05589899b58112119af68df5d1997e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::CHNode::~CHNode</definition>
        <argsstring>()</argsstring>
        <name>~CHNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="88" column="5" bodyfile="include/SVF-FE/CHG.h" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_h_node_1af6e71c1a932464b1b615fc177f5af089" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SVF::CHNode::getName</definition>
        <argsstring>() const</argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="91" column="17" bodyfile="include/SVF-FE/CHG.h" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_h_node_1ab3755d804852b8a98bdf8cd0171f3a2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::CHNode::setFlag</definition>
        <argsstring>(CLASSATTR mask)</argsstring>
        <name>setFlag</name>
        <param>
          <type>CLASSATTR</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="97" column="17" bodyfile="include/SVF-FE/CHG.h" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_h_node_1aebcbd36a7efc0dbe9b3c3f680ef033e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::CHNode::hasFlag</definition>
        <argsstring>(CLASSATTR mask) const</argsstring>
        <name>hasFlag</name>
        <param>
          <type>CLASSATTR</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="101" column="17" bodyfile="include/SVF-FE/CHG.h" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_h_node_1abac89987927dadd53dd646eae540a024" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::CHNode::setPureAbstract</definition>
        <argsstring>()</argsstring>
        <name>setPureAbstract</name>
        <briefdescription>
<para>Attribute. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="109" column="17" bodyfile="include/SVF-FE/CHG.h" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_h_node_1a5d751a3a0d88c0de374bfeb526051440" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::CHNode::setMultiInheritance</definition>
        <argsstring>()</argsstring>
        <name>setMultiInheritance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="113" column="17" bodyfile="include/SVF-FE/CHG.h" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_h_node_1a00343177422c8d84d707432d0c483438" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::CHNode::setTemplate</definition>
        <argsstring>()</argsstring>
        <name>setTemplate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="117" column="17" bodyfile="include/SVF-FE/CHG.h" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_h_node_1a268ccdfb486cc2efa8581ee7a3b5af39" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::CHNode::isPureAbstract</definition>
        <argsstring>() const</argsstring>
        <name>isPureAbstract</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="121" column="17" bodyfile="include/SVF-FE/CHG.h" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_h_node_1a224a394537fae62e64cf62a0d4fdd430" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::CHNode::isMultiInheritance</definition>
        <argsstring>() const</argsstring>
        <name>isMultiInheritance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="125" column="17" bodyfile="include/SVF-FE/CHG.h" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_h_node_1aff23fda93401c60422a4a5a08d77d749" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::CHNode::isTemplate</definition>
        <argsstring>() const</argsstring>
        <name>isTemplate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="129" column="17" bodyfile="include/SVF-FE/CHG.h" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_h_node_1a8c51571df92b5e152cc42e9aaf712dc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::CHNode::addVirtualFunctionVector</definition>
        <argsstring>(FuncVector vfuncvec)</argsstring>
        <name>addVirtualFunctionVector</name>
        <param>
          <type>FuncVector</type>
          <declname>vfuncvec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="135" column="10" bodyfile="include/SVF-FE/CHG.h" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_h_node_1a5df1cf4d51bf3406d188c96bc9aae0af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; FuncVector &gt; &amp;</type>
        <definition>const std::vector&lt;FuncVector&gt;&amp; SVF::CHNode::getVirtualFunctionVectors</definition>
        <argsstring>() const</argsstring>
        <name>getVirtualFunctionVectors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="139" column="23" bodyfile="include/SVF-FE/CHG.h" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_h_node_1a1abfdc91ec77cab40d6894f471f0733d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CHNode::getVirtualFunctions</definition>
        <argsstring>(u32_t idx, FuncVector &amp;virtualFunctions) const</argsstring>
        <name>getVirtualFunctions</name>
        <param>
          <type>u32_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>FuncVector &amp;</type>
          <declname>virtualFunctions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="143" column="10" bodyfile="lib/SVF-FE/CHG.cpp" bodystart="71" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_h_node_1a600b63dac83e526c933c141d4e2bcc0c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const GlobalValue *</type>
        <definition>const GlobalValue* SVF::CHNode::getVTable</definition>
        <argsstring>() const</argsstring>
        <name>getVTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="145" column="23" bodyfile="include/SVF-FE/CHG.h" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_h_node_1a2c31580f1cf43fbdd01a07b6f9f6b04e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::CHNode::setVTable</definition>
        <argsstring>(const GlobalValue *vtbl)</argsstring>
        <name>setVTable</name>
        <param>
          <type>const GlobalValue *</type>
          <declname>vtbl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/CHG.h" line="150" column="10" bodyfile="include/SVF-FE/CHG.h" bodystart="150" bodyend="153"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>SVF::CHNode</label>
        <link refid="class_s_v_f_1_1_c_h_node"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GenericCHNodeTy</label>
        <link refid="class_s_v_f_1_1_generic_node"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>SVF::CHNode</label>
        <link refid="class_s_v_f_1_1_c_h_node"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GenericCHNodeTy</label>
        <link refid="class_s_v_f_1_1_generic_node"/>
      </node>
    </collaborationgraph>
    <location file="include/SVF-FE/CHG.h" line="72" column="1" bodyfile="include/SVF-FE/CHG.h" bodystart="73" bodyend="172"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_generic_node_1a93d217b0c9fd8008a2989ca2b4f3fbfb" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>addIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ae74283fbc788665296a69e56f334557b" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>addOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1a8c51571df92b5e152cc42e9aaf712dc9" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>addVirtualFunctionVector</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1a1f2c496e378d01841e4dc164942dc145" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>CHNode</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1a7111a3971f9f03e32bfd291a783d43b4" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>CLASSATTR</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1ac7c18617b768a2988cf4eff7e849f397" prot="private" virt="non-virtual"><scope>SVF::CHNode</scope><name>className</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ab6dc1ae41ae23b383f8add474caa7429" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>const_iterator</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a4ab1f2e5db301e4a37215905a22e6476" prot="public" virt="virtual"><scope>SVF::CHNode</scope><name>directInEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ab331402aed245c33bad841df2bc21f7b" prot="public" virt="virtual"><scope>SVF::CHNode</scope><name>directInEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a19599627ba095b5452373284deab7f6c" prot="public" virt="virtual"><scope>SVF::CHNode</scope><name>directInEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1aa7be9ff204bf85bc3bf2fa4e078fcab2" prot="public" virt="virtual"><scope>SVF::CHNode</scope><name>directInEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1aa0e258d3a92dae367f2809a6f16c80db" prot="public" virt="virtual"><scope>SVF::CHNode</scope><name>directOutEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1acfae7a2809931cbd62b6f47c4813510d" prot="public" virt="virtual"><scope>SVF::CHNode</scope><name>directOutEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a5950d69d4ba6c2122dd06b93911e4992" prot="public" virt="virtual"><scope>SVF::CHNode</scope><name>directOutEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a7f914b128f7839483efc9ad56834e7c2" prot="public" virt="virtual"><scope>SVF::CHNode</scope><name>directOutEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a458c626543431b4314f5f4f532eb51de" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>EdgeType</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1a6844c89f715979709dc52d4854373e72" prot="private" virt="non-virtual"><scope>SVF::CHNode</scope><name>flags</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1aa4af6538c9994ec54a7b82691f846a31" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>FuncVector</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a03c6da4a73c47f84f5c5b47252bc339a" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>GEdgeSetTy</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1acdca5baae3e9e4208a60322fec9c9d3f" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>GenericNode</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ac3e55ef37aefb411ea4c87b1aa3b1895" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>getId</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1afc8b5f86d7795b6a0dfc0687d942d79b" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>getInEdges</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1af6e71c1a932464b1b615fc177f5af089" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>getName</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a391e996d695b114530120723da1d003e" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>getNodeKind</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a2d9cd758d6f8c5189d9b90b74f43e009" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>getOutEdges</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1a1abfdc91ec77cab40d6894f471f0733d" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>getVirtualFunctions</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1a5df1cf4d51bf3406d188c96bc9aae0af" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>getVirtualFunctionVectors</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1a600b63dac83e526c933c141d4e2bcc0c" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>getVTable</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a363b90ab02cce2ebc3ede8e5b7cc141c" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>GNodeK</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1aebcbd36a7efc0dbe9b3c3f680ef033e7" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>hasFlag</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a06a7373b11143e709784de784fa476fe" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>hasIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1add6b6b3bd45a9460335c5db9eda821b8" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>hasIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a0931220d7a38e03f206cbdc6465d32ad" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>hasOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1aa0c40cb708b39300b3cb7354194e4993" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>hasOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ae5b113921530eee6afe58a65d8e5b3a7" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>InEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a7c0ff80b1c0ae8b76fc620f21495ca39" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>InEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1afe6a7b286d9af4992f41b59612fd2900" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>InEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a0118fbeb2b314dcdcb53c56a2a13ab07" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>InEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1a224a394537fae62e64cf62a0d4fdd430" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>isMultiInheritance</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1a268ccdfb486cc2efa8581ee7a3b5af39" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>isPureAbstract</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1aff23fda93401c60422a4a5a08d77d749" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>isTemplate</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a2f5471985dfe62bc9ded830a693ab153" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>iterator</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1a7111a3971f9f03e32bfd291a783d43b4afd6d851b22e741690f0736b4858d81a5" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>MULTI_INHERITANCE</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ad63e862eb1d1369bd69318fe698e4a22" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>NodeType</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1aa4f103330118c8976bf95e4bf53416eb" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>OutEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a50219c203fb5a8a44fe22428699f26e7" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>OutEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a19a3366fd8a58290d0c740c46c3dcb3d" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>OutEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ace88b6c7561f61f747ff08f61e2c18bc" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>OutEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1a7111a3971f9f03e32bfd291a783d43b4ab530567d5ba09c9c579aef964aef8f81" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>PURE_ABSTRACT</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a56dff05dc2b3c5664d3b8fc1c6c927d5" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>removeIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a7c6192cb176bda3fad1819711302e468" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>removeOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1ab3755d804852b8a98bdf8cd0171f3a2f" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>setFlag</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1a5d751a3a0d88c0de374bfeb526051440" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>setMultiInheritance</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1abac89987927dadd53dd646eae540a024" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>setPureAbstract</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1a00343177422c8d84d707432d0c483438" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>setTemplate</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1a2c31580f1cf43fbdd01a07b6f9f6b04e" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>setVTable</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1a7111a3971f9f03e32bfd291a783d43b4a330331556c568fcd60c9df6df2c1281d" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>TEMPLATE</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1a00f850f87a7dbf0c984b0df3ec06657f" prot="private" virt="non-virtual"><scope>SVF::CHNode</scope><name>virtualFunctionVectors</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1a08a717043e8b8c3d87742f0ecd3a3cc1" prot="private" virt="non-virtual"><scope>SVF::CHNode</scope><name>vtable</name></member>
      <member refid="class_s_v_f_1_1_c_h_node_1aff05589899b58112119af68df5d1997e" prot="public" virt="non-virtual"><scope>SVF::CHNode</scope><name>~CHNode</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a48a8d05b81b5c8099c3f3d1f2c4983a9" prot="public" virt="virtual"><scope>SVF::CHNode</scope><name>~GenericNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
