<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_loc_sym_table_info" kind="class" language="C++" prot="public">
    <compoundname>SVF::LocSymTableInfo</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_symbol_table_info" prot="public" virt="non-virtual">SVF::SymbolTableInfo</basecompoundref>
    <includes refid="_symbol_table_info_8h" local="no">SymbolTableInfo.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_loc_sym_table_info_1a6ae1ada9c99ceb53fb41f3b59696423e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::LocSymTableInfo::LocSymTableInfo</definition>
        <argsstring>()</argsstring>
        <name>LocSymTableInfo</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/SymbolTableInfo.h" line="461" column="5" bodyfile="include/SVF-FE/SymbolTableInfo.h" bodystart="461" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_loc_sym_table_info_1ae1789cb25f50fbce3fc44a14a2cf124d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::LocSymTableInfo::~LocSymTableInfo</definition>
        <argsstring>()</argsstring>
        <name>~LocSymTableInfo</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/SymbolTableInfo.h" line="465" column="13" bodyfile="include/SVF-FE/SymbolTableInfo.h" bodystart="465" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_loc_sym_table_info_1a4aa6bf984692e879ad12806d35a6d2be" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool LocSymTableInfo::computeGepOffset</definition>
        <argsstring>(const User *V, LocationSet &amp;ls)</argsstring>
        <name>computeGepOffset</name>
        <reimplements refid="class_s_v_f_1_1_symbol_table_info_1a86b742ca197b3505b3246d6bed2484db">computeGepOffset</reimplements>
        <param>
          <type>const User *</type>
          <declname>V</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_location_set" kindref="compound">LocationSet</ref> &amp;</type>
          <declname>ls</declname>
        </param>
        <briefdescription>
<para>Compute gep offset. </para>
        </briefdescription>
        <detaileddescription>
<para>Compute gep offset </para>
        </detaileddescription>
        <inbodydescription>
<para>variant offset</para>
        </inbodydescription>
        <location file="include/SVF-FE/SymbolTableInfo.h" line="469" column="18" bodyfile="lib/MemoryModel/MemModel.cpp" bodystart="305" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_loc_sym_table_info_1a81763320f531da09014b4f5019dc8144" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_s_v_f_1_1_location_set" kindref="compound">LocationSet</ref></type>
        <definition>LocationSet LocSymTableInfo::getModulusOffset</definition>
        <argsstring>(const MemObj *obj, const LocationSet &amp;ls)</argsstring>
        <name>getModulusOffset</name>
        <reimplements refid="class_s_v_f_1_1_symbol_table_info_1a480a7565dcb5d9a94f4b0ffb44b127ee">getModulusOffset</reimplements>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_mem_obj" kindref="compound">MemObj</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_location_set" kindref="compound">LocationSet</ref> &amp;</type>
          <declname>ls</declname>
        </param>
        <briefdescription>
<para>Given an offset from a Gep Instruction, return it modulus offset by considering memory layout. </para>
        </briefdescription>
        <detaileddescription>
<para>Given <ref refid="class_s_v_f_1_1_location_set" kindref="compound">LocationSet</ref> from a Gep Instruction, return a new <ref refid="class_s_v_f_1_1_location_set" kindref="compound">LocationSet</ref> which matches the field information of this <ref refid="class_s_v_f_1_1_obj_type_info" kindref="compound">ObjTypeInfo</ref> by considering memory layout </para>
        </detaileddescription>
        <inbodydescription>
<para>Find an appropriate field for this <ref refid="class_s_v_f_1_1_location_set" kindref="compound">LocationSet</ref></para>
<para>This location set represent one object</para>
<para>if the offset is negative, it&apos;s possible that we&apos;re looking for an obj node out of range of current struct. Make the offset positive so we can still get a node within current struct to represent this obj.</para>
<para>This location set represents multiple objects</para>
        </inbodydescription>
        <location file="include/SVF-FE/SymbolTableInfo.h" line="471" column="25" bodyfile="lib/MemoryModel/MemModel.cpp" bodystart="493" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_loc_sym_table_info_1a1b4b45547634b0c68c363ce21870e610" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LocSymTableInfo::verifyStructSize</definition>
        <argsstring>(StInfo *stInfo, u32_t structSize)</argsstring>
        <name>verifyStructSize</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_st_info" kindref="compound">StInfo</ref> *</type>
          <declname>stInfo</declname>
          <defname>stinfo</defname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>structSize</declname>
        </param>
        <briefdescription>
<para>Verify struct size construction. </para>
        </briefdescription>
        <detaileddescription>
<para>Verify struct size </para>
        </detaileddescription>
        <inbodydescription>
<para>Please note this verify may not be complete as different machine has different alignment mechanism</para>
        </inbodydescription>
        <location file="include/SVF-FE/SymbolTableInfo.h" line="474" column="10" bodyfile="lib/MemoryModel/MemModel.cpp" bodystart="577" bodyend="591"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_s_v_f_1_1_loc_sym_table_info_1aedca0dbfb8641cefe68d547e3f4d62e8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void LocSymTableInfo::collectStructInfo</definition>
        <argsstring>(const StructType *T)</argsstring>
        <name>collectStructInfo</name>
        <reimplements refid="class_s_v_f_1_1_symbol_table_info_1ab5297b79a02d8afce647a8b61bdab804">collectStructInfo</reimplements>
        <param>
          <type>const <ref refid="namespace_s_v_f_1a2bf58575ac7d068e0f1a4cf953b9e6cb" kindref="member">StructType</ref> *</type>
          <declname>T</declname>
        </param>
        <briefdescription>
<para>Collect the struct info. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/SymbolTableInfo.h" line="478" column="18" bodyfile="lib/MemoryModel/MemModel.cpp" bodystart="443" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_loc_sym_table_info_1a45b52cb8f8634ecf8bfb33f8e71bb82f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void LocSymTableInfo::collectArrayInfo</definition>
        <argsstring>(const ArrayType *T)</argsstring>
        <name>collectArrayInfo</name>
        <reimplements refid="class_s_v_f_1_1_symbol_table_info_1aea1c4ec32c307feb5da455a41cc51b5e">collectArrayInfo</reimplements>
        <param>
          <type>const ArrayType *</type>
          <declname>T</declname>
        </param>
        <briefdescription>
<para>Collect the array info. </para>
        </briefdescription>
        <detaileddescription>
<para>Collect array information </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/SymbolTableInfo.h" line="480" column="18" bodyfile="lib/MemoryModel/MemModel.cpp" bodystart="400" bodyend="437"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Bytes/bits-level modeling of memory locations to handle weakly type languages. (declared with one type but accessed as another) Abstract memory objects are created according to the static allocated size. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>SVF::SymbolTableInfo</label>
        <link refid="class_s_v_f_1_1_symbol_table_info"/>
      </node>
      <node id="1">
        <label>SVF::LocSymTableInfo</label>
        <link refid="class_s_v_f_1_1_loc_sym_table_info"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>SVF::SymbolTableInfo</label>
        <link refid="class_s_v_f_1_1_symbol_table_info"/>
      </node>
      <node id="1">
        <label>SVF::LocSymTableInfo</label>
        <link refid="class_s_v_f_1_1_loc_sym_table_info"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/SVF-FE/SymbolTableInfo.h" line="456" column="1" bodyfile="include/SVF-FE/SymbolTableInfo.h" bodystart="457" bodyend="481"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a05ca2987d9f8716c24e489bec53502f4" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>blackholeSymID</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a1689fa03795200b501ae3887906e7e72" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>blkPtrSymID</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a74481bb26d77d8c8bca91efd3e23c08e" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>buildMemModel</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a1b5fe6a59527983c80906261190fc864" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>CallSiteSet</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a52fa7c8a2c7064b415f373fdea0fdf69" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>CallSiteToIDMapTy</name></member>
      <member refid="class_s_v_f_1_1_loc_sym_table_info_1a45b52cb8f8634ecf8bfb33f8e71bb82f" prot="protected" virt="virtual"><scope>SVF::LocSymTableInfo</scope><name>collectArrayInfo</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1af639e9bc59f5fb9a6bf1748ef0d07d5e" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>collectObj</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1ae4a7d078322e99af965193c82b357239" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>collectRet</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1abf7567c655499d6744de8df689c11fad" prot="protected" virt="virtual"><scope>SVF::LocSymTableInfo</scope><name>collectSimpleTypeInfo</name></member>
      <member refid="class_s_v_f_1_1_loc_sym_table_info_1aedca0dbfb8641cefe68d547e3f4d62e8" prot="protected" virt="virtual"><scope>SVF::LocSymTableInfo</scope><name>collectStructInfo</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a7c422651a6cb299b0c94a2e4597fbe7c" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>collectSym</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1aa99cab5480116905dd41ab0ad24b9462" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>collectTypeInfo</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a135ec0f7574d4bcb4bc411ce5775f1f5" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>collectVal</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1ae1fe33260d2a2d21f2c33aaf1b58fee3" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>collectVararg</name></member>
      <member refid="class_s_v_f_1_1_loc_sym_table_info_1a4aa6bf984692e879ad12806d35a6d2be" prot="public" virt="virtual"><scope>SVF::LocSymTableInfo</scope><name>computeGepOffset</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1ab582424fdb6d9674c1bd4466cdfbe497" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>constantSymID</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a6d14f88dbbb3190fd37b4cf4e1b6e032" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>createBlkOrConstantObj</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a2fede86948eeb07aacfed2575ea329d1" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>createDummyObj</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1ada2191cb0e3798ba29aa442dca762290" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>FunToIDMapTy</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a6243a2a002784b2ee1f0b1cfe9d3ea0f" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getBaseTypeAndFlattenedFields</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1aebf96274e1ad2a523981487839a3025e" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getBlkObj</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1adc8e9a6cd5d27391beb1a88706e77a77" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getCallSiteSet</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a661eb9ff1839c3af942517808414202b" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getConstantObj</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a5fad3e11fbba831ed0940fb715e7dc2d" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getDataLayout</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1abfad1554a3803ff131f2a8682f329354" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getFattenFieldIdxVec</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a5ff8a2f4afdb2cc26be0430f0310815b" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getFattenFieldOffsetVec</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1ac26583169a343e7a9f751e4ec60f7b3d" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getFields</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1aed11023ad3dfe7c5f5c559e2f2b23e23" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getFlattenFieldInfoVec</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a1e2a66bd0cd01ff957ac50b22a2a8735" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getGlobalRep</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1abc7e567209010286a68634c700d76cca" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getMaxStructSize</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a89e9c6da843e5eef25c51afd5d0937e5" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getModelConstants</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a40387a4893ae5caf58d6f786533d2f44" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getModule</name></member>
      <member refid="class_s_v_f_1_1_loc_sym_table_info_1a81763320f531da09014b4f5019dc8144" prot="public" virt="virtual"><scope>SVF::LocSymTableInfo</scope><name>getModulusOffset</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a65f49178a948380c2d6105178509a906" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getObj</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1afca5a68d1825326e3ec6302ce0afee66" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getObjSym</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a294a42ee0bc466104fb96a3136c34bd2" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getOrigSubTypeWithByteOffset</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1aa203d9bb3c3e567ff49a2beb19631de2" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getOrigSubTypeWithFldInx</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1afc8b0b6aea972f34a0c099b75114b81e" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getRetSym</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a90bca8ff906ea48fb5e3a69da463ccab" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getStructInfo</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a075a16b154514e282fcdd6f116a99e43" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getStructInfoIter</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a7dda4943de0ed174a1d20fcdfde6c61c" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getTotalSymNum</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1af4239ff717303dee25f1f4ba60070f9e" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getTypeSizeInBytes</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1ada63ac47515daa4402914083058baec8" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getTypeSizeInBytes</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1aec7ee137f828c9d61a11df7fc2241161" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getValSym</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1aec3fd21a11f760ca8684e390c6948f02" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>getVarargSym</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1ad92842613ac245ad06875a012a5549ab" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>handleCE</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a4d616d922793e1d74bb4143f2d72bf10" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>handleGlobalCE</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a005df6b86f4058114bf7a336e73e63df" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>handleGlobalInitializerCE</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1acbcd5035240fab0b809c3334a27159ae" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>hasValSym</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a5af399ccac6ec809ade8f778379027bb" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>IDToCallSiteMapTy</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a0371b60485199175b011cf3a42b404aa" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>IDToMemMapTy</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a929a20dc8f2eb4d82e93938b8339d697" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>idToObjMap</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a9353c7d2c0d6ae7dc495911b1ce24e06" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>IDToSymTyMapTy</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1ab15112d3900f28525848cbe5fad37deb" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>isBlackholeSym</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1ad9cdb21e20182f3bc95f04bbb97712f3" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>isBlkObj</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a2fc4bfb83b71a4c14e16168382cb8f5d" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>isBlkObjOrConstantObj</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1acba43b6e9cdf07afaf3d30351aa8df7c" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>isBlkPtr</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a704b917b1e1dbaf9cd758fa9acc1083b" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>isConstantObj</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a61bda1c1c52fb765d0027d8141d35c35" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>isConstantObjSym</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1ad095e4a569d399cadc03ce864f61c394" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>isNullPtr</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a65a7e9d6d238a04291cb7d0aa15ece90" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>isNullPtrSym</name></member>
      <member refid="class_s_v_f_1_1_loc_sym_table_info_1a6ae1ada9c99ceb53fb41f3b59696423e" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>LocSymTableInfo</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a4e33a01e203f07a8154af6ee65f5ba46" prot="protected" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>maxStruct</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1abb8550c9ef856e45cb7675c3796f9a35" prot="protected" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>maxStSize</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1adaed6e68c2f53260ed4c4fc38b5c4721" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>nullPtrSymID</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a3f9612f32c651220386beb0514f8fcff" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>objSyms</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1aa40ff2fcaba3d4297d63269b74738737" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>printFlattenFields</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a9f8d99c761f3c7108d797b3702fcbfec" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>releaseSymbolInfo</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1aafd4da7cef6387bb974abe20185b7b96" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>retSyms</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a4decfc9e7f5dc096d7bfa42d6965763d" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>setModelConstants</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a267169023fc4f8dd66b145f7231fec11" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>SymbolInfo</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1aff272bc1d00f2e57b7677d1826a31237" prot="protected" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>SymbolTableInfo</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a71a7084f88f2b303381c89769b53573a" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>totalSymNum</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1ad8b9fa0a4e4b91efb80586e692bd0dcd" prot="protected" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>typeToFieldInfo</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a9c9a9da876d41ab48e55f25efc266494" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>TypeToFieldInfoMap</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a8f3cb8a1db34dd692ee04561f4edeebf" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>valSyms</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a03a11c48d748990ddac1ac5866ecb48e" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>ValueToIDMapTy</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1ac449cd925dc05758c990179c0748e1d5" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>varargSyms</name></member>
      <member refid="class_s_v_f_1_1_loc_sym_table_info_1a1b4b45547634b0c68c363ce21870e610" prot="public" virt="non-virtual"><scope>SVF::LocSymTableInfo</scope><name>verifyStructSize</name></member>
      <member refid="class_s_v_f_1_1_loc_sym_table_info_1ae1789cb25f50fbce3fc44a14a2cf124d" prot="public" virt="virtual"><scope>SVF::LocSymTableInfo</scope><name>~LocSymTableInfo</name></member>
      <member refid="class_s_v_f_1_1_symbol_table_info_1a6efac0ae8ebf2865067136675be5a340" prot="public" virt="virtual"><scope>SVF::LocSymTableInfo</scope><name>~SymbolTableInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
