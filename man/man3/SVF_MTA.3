.TH "SVF::MTA" 3 "Sun Feb 14 2021" "SVF" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SVF::MTA
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <MTA\&.h>\fP
.PP
Inherits ModulePass\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef Set< const LoadInst * > \fBLoadSet\fP"
.br
.ti -1c
.RI "typedef Set< const StoreInst * > \fBStoreSet\fP"
.br
.ti -1c
.RI "typedef Map< const Function *, ScalarEvolution * > \fBFunToSEMap\fP"
.br
.ti -1c
.RI "typedef Map< const Function *, LoopInfo * > \fBFunToLoopInfoMap\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMTA\fP ()"
.br
.RI "Constructor\&. "
.ti -1c
.RI "virtual \fB~MTA\fP ()"
.br
.RI "Destructor\&. "
.ti -1c
.RI "virtual bool \fBrunOnModule\fP (Module &module)"
.br
.RI "We start the pass here\&. "
.ti -1c
.RI "virtual bool \fBrunOnModule\fP (\fBSVFModule\fP *module)"
.br
.RI "We start the pass here\&. "
.ti -1c
.RI "virtual \fBMHP\fP * \fBcomputeMHP\fP (\fBSVFModule\fP *module)"
.br
.RI "Compute \fBMHP\fP\&. "
.ti -1c
.RI "virtual \fBLockAnalysis\fP * \fBcomputeLocksets\fP (\fBTCT\fP *tct)"
.br
.RI "Compute locksets\&. "
.ti -1c
.RI "virtual void \fBdetect\fP (\fBSVFModule\fP *module)"
.br
.RI "Perform detection\&. "
.ti -1c
.RI "virtual StringRef \fBgetPassName\fP () const"
.br
.RI "Pass name\&. "
.ti -1c
.RI "void \fBdump\fP (Module &module, \fBMHP\fP *mhp, \fBLockAnalysis\fP *lsa)"
.br
.ti -1c
.RI "virtual void \fBgetAnalysisUsage\fP (AnalysisUsage &au) const"
.br
.RI "Get analysis usage\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static ScalarEvolution * \fBgetSE\fP (const Function *F)"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static char \fBID\fP = 0"
.br
.RI "Pass ID\&. "
.ti -1c
.RI "static ModulePass * \fBmodulePass\fP = NULL"
.br
.in -1c
.SH "Detailed Description"
.PP 
Base data race detector 
.SH "Member Function Documentation"
.PP 
.SS "\fBLockAnalysis\fP * MTA::computeLocksets (\fBTCT\fP * tct)\fC [virtual]\fP"

.PP
Compute locksets\&. Compute lock sets 
.SS "virtual void SVF::MTA::getAnalysisUsage (AnalysisUsage & au) const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Get analysis usage\&. do not intend to change the IR in this pass,
.SS "bool MTA::runOnModule (\fBSVFModule\fP * module)\fC [virtual]\fP"

.PP
We start the pass here\&. Perform data race detection 

.SH "Author"
.PP 
Generated automatically by Doxygen for SVF from the source code\&.
