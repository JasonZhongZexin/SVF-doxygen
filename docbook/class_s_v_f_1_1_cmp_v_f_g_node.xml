<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_cmp_v_f_g_node" xml:lang="en-US">
<title>SVF::CmpVFGNode Class Reference</title>
<indexterm><primary>SVF::CmpVFGNode</primary></indexterm>
<para>
<computeroutput>#include &lt;VFGNode.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for SVF::CmpVFGNode:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_cmp_v_f_g_node.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cmp_v_f_g_node_1a0db4ada3c366c811962415454a859b22"/>typedef Map&lt; u32_t, const <link linkend="_class_s_v_f_1_1_p_a_g_node">PAGNode</link> * &gt; <emphasis role="strong">OPVers</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cmp_v_f_g_node_1ae7029edffae3f64899bf640fc0842258"/><link linkend="_class_s_v_f_1_1_cmp_v_f_g_node_1ae7029edffae3f64899bf640fc0842258">CmpVFGNode</link> (NodeID id, const <link linkend="_class_s_v_f_1_1_p_a_g_node">PAGNode</link> *r)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cmp_v_f_g_node_1a62a87f7ee66c51302e093bbaf5d0901b"/>const <link linkend="_class_s_v_f_1_1_p_a_g_node">PAGNode</link> * <link linkend="_class_s_v_f_1_1_cmp_v_f_g_node_1a62a87f7ee66c51302e093bbaf5d0901b">getOpVer</link> (u32_t pos) const</para>

<para>Operands at a BinaryNode. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cmp_v_f_g_node_1a41bcdd6b46a31c8d15533342478dc236"/>void <emphasis role="strong">setOpVer</emphasis> (u32_t pos, const <link linkend="_class_s_v_f_1_1_p_a_g_node">PAGNode</link> *node)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cmp_v_f_g_node_1aa972ecfb264d447fecf0326037bbccbe"/>const <link linkend="_class_s_v_f_1_1_p_a_g_node">PAGNode</link> * <emphasis role="strong">getRes</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cmp_v_f_g_node_1ad95b04c10a54b38344863e6552fc7775"/>u32_t <emphasis role="strong">getOpVerNum</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cmp_v_f_g_node_1a78fb624f0ca9ff16e6a8e5fd1c384904"/>OPVers::const_iterator <emphasis role="strong">opVerBegin</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cmp_v_f_g_node_1ae5ba94ffae500168f0e5c1b1ce78af9c"/>OPVers::const_iterator <emphasis role="strong">opVerEnd</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cmp_v_f_g_node_1ae40d4e4aea7aad6afda10cf3d6715952"/>virtual const std::string <emphasis role="strong">toString</emphasis> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cmp_v_f_g_node_1ab1248b063654318677471fb10af16fd7"/>static bool <link linkend="_class_s_v_f_1_1_cmp_v_f_g_node_1ab1248b063654318677471fb10af16fd7">classof</link> (const <link linkend="_class_s_v_f_1_1_cmp_v_f_g_node">CmpVFGNode</link> *)</para>

<para>Methods for support type inquiry through isa, cast, and dyn_cast: </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cmp_v_f_g_node_1a3230ae3a4a7f10e0486f000b92b87713"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_class_s_v_f_1_1_v_f_g_node">VFGNode</link> *node)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cmp_v_f_g_node_1add2c095c6ae13c5d7a72f4551c2490a2"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_namespace_s_v_f_1a3b4bbc4b72e982a79c23fd3ec26410b6">GenericVFGNodeTy</link> *node)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cmp_v_f_g_node_1a9a358028cf15ba49b410e0c2a1fafe7c"/>const <link linkend="_class_s_v_f_1_1_p_a_g_node">PAGNode</link> * <emphasis role="strong">res</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cmp_v_f_g_node_1aae30d80fd848d62467476d21c691573c"/>OPVers <emphasis role="strong">opVers</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para><link linkend="_class_s_v_f_1_1_v_f_g_node">VFGNode</link> for compare instruction, e.g., bool b = (a!=c); </para>
<para>
The documentation for this class was generated from the following files:</para>
include/Graphs/VFGNode.hlib/Graphs/VFG.cpp</section>
</section>
