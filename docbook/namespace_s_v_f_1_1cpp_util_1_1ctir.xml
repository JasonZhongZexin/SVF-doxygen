<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespace_s_v_f_1_1cpp_util_1_1ctir" xml:lang="en-US">
<title>SVF::cppUtil::ctir Namespace Reference</title>
<indexterm><primary>SVF::cppUtil::ctir</primary></indexterm>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>const std::string <link linkend="_namespace_s_v_f_1_1cpp_util_1_1ctir_1a0cd5347bc8043d4306e66a4a96005ace">derefMDName</link> = &quot;ctir&quot;</para>
</listitem>
            <listitem><para>const std::string <link linkend="_namespace_s_v_f_1_1cpp_util_1_1ctir_1aa4630844aa25aa4801659304a2552058">vtMDName</link> = &quot;ctir.vt&quot;</para>
</listitem>
            <listitem><para>const std::string <link linkend="_namespace_s_v_f_1_1cpp_util_1_1ctir_1a02b3f4190d325c921922c25e319dc8d9">vtInitMDName</link> = &quot;ctir.vt.init&quot;</para>
</listitem>
            <listitem><para><anchor xml:id="_namespace_s_v_f_1_1cpp_util_1_1ctir_1a05c7c51164928786d70713094db7f3f3"/>const uint32_t <link linkend="_namespace_s_v_f_1_1cpp_util_1_1ctir_1a05c7c51164928786d70713094db7f3f3">moduleFlagValue</link> = 1</para>

<para>Value we expect a ctir-annotated module to have. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Constants pertaining to CTir, for C and C++. TODO: move helper functions here too? </para>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_namespace_s_v_f_1_1cpp_util_1_1ctir_1a0cd5347bc8043d4306e66a4a96005ace"/>    <section>
    <title>derefMDName</title>
<indexterm><primary>derefMDName</primary><secondary>SVF::cppUtil::ctir</secondary></indexterm>
<indexterm><primary>SVF::cppUtil::ctir</primary><secondary>derefMDName</secondary></indexterm>
<para><computeroutput>const std::string SVF::cppUtil::ctir::derefMDName = &quot;ctir&quot;</computeroutput></para>
<para>On loads, stores, GEPs representing dereferences, and calls representing virtual calls. (The static type.) </para>
    </section><anchor xml:id="_namespace_s_v_f_1_1cpp_util_1_1ctir_1a02b3f4190d325c921922c25e319dc8d9"/>    <section>
    <title>vtInitMDName</title>
<indexterm><primary>vtInitMDName</primary><secondary>SVF::cppUtil::ctir</secondary></indexterm>
<indexterm><primary>SVF::cppUtil::ctir</primary><secondary>vtInitMDName</secondary></indexterm>
<para><computeroutput>const std::string SVF::cppUtil::ctir::vtInitMDName = &quot;ctir.vt.init&quot;</computeroutput></para>
<para>On the bitcast of <computeroutput>this</computeroutput> to i8*. (The class the constructor it corresponds to.) </para>
    </section><anchor xml:id="_namespace_s_v_f_1_1cpp_util_1_1ctir_1aa4630844aa25aa4801659304a2552058"/>    <section>
    <title>vtMDName</title>
<indexterm><primary>vtMDName</primary><secondary>SVF::cppUtil::ctir</secondary></indexterm>
<indexterm><primary>SVF::cppUtil::ctir</primary><secondary>vtMDName</secondary></indexterm>
<para><computeroutput>const std::string SVF::cppUtil::ctir::vtMDName = &quot;ctir.vt&quot;</computeroutput></para>
<para>On the (global) virtual table itself. (The class it corresponds to.) </para>
</section>
</section>
</section>
