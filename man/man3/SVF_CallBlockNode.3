.TH "SVF::CallBlockNode" 3 "Sun Feb 14 2021" "SVF" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SVF::CallBlockNode
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ICFGNode\&.h>\fP
.PP
Inherits \fBSVF::InterBlockNode\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef std::vector< const \fBPAGNode\fP * > \fBActualParmVFGNodeVec\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCallBlockNode\fP (NodeID id, const Instruction *c)"
.br
.ti -1c
.RI "const Instruction * \fBgetCallSite\fP () const"
.br
.RI "Return callsite\&. "
.ti -1c
.RI "const \fBRetBlockNode\fP * \fBgetRetBlockNode\fP () const"
.br
.RI "Return callsite\&. "
.ti -1c
.RI "void \fBsetRetBlockNode\fP (const \fBRetBlockNode\fP *r)"
.br
.RI "Return callsite\&. "
.ti -1c
.RI "const \fBSVFFunction\fP * \fBgetCaller\fP () const"
.br
.RI "Return callsite\&. "
.ti -1c
.RI "const BasicBlock * \fBgetParent\fP () const"
.br
.RI "Return Basic Block\&. "
.ti -1c
.RI "bool \fBisIndirectCall\fP () const"
.br
.RI "Return true if this is an indirect call\&. "
.ti -1c
.RI "const ActualParmVFGNodeVec & \fBgetActualParms\fP () const"
.br
.RI "Return the set of actual parameters\&. "
.ti -1c
.RI "void \fBaddActualParms\fP (const \fBPAGNode\fP *ap)"
.br
.RI "Add actual parameters\&. "
.ti -1c
.RI "virtual const std::string \fBtoString\fP () const"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static bool \fBclassof\fP (const \fBCallBlockNode\fP *)"
.br
.RI "Methods for support type inquiry through isa, cast, and dyn_cast: "
.ti -1c
.RI "static bool \fBclassof\fP (const \fBICFGNode\fP *node)"
.br
.ti -1c
.RI "static bool \fBclassof\fP (const \fBInterBlockNode\fP *node)"
.br
.ti -1c
.RI "static bool \fBclassof\fP (const \fBGenericICFGNodeTy\fP *node)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Call \fBICFGNode\fP containing a set of ActualParmVFGNodes at a callsite 

.SH "Author"
.PP 
Generated automatically by Doxygen for SVF from the source code\&.
