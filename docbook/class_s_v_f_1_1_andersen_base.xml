<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_andersen_base" xml:lang="en-US">
<title>SVF::AndersenBase Class Reference</title>
<indexterm><primary>SVF::AndersenBase</primary></indexterm>
<para>Inheritance diagram for SVF::AndersenBase:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_andersen_base.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1a16f177cfcb4a203a55c954c05125f267"/><link linkend="_class_s_v_f_1_1_andersen_base_1a16f177cfcb4a203a55c954c05125f267">AndersenBase</link> (<link linkend="_class_s_v_f_1_1_p_a_g">PAG</link> *_pag, <link linkend="_class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85">PTATY</link> type=<link linkend="_class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85a9a25374fb6d2218c6c59de0482548f49">Andersen_BASE</link>, bool alias_check=true)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1abd9b91b2cfe1e30ab3bdb6ac26466c1f"/>virtual <link linkend="_class_s_v_f_1_1_andersen_base_1abd9b91b2cfe1e30ab3bdb6ac26466c1f">~AndersenBase</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_s_v_f_1_1_andersen_base_1a6d1ff3396814a118ce3d200157426cd3">analyze</link> ()</para>

<para><link linkend="_class_s_v_f_1_1_andersen">Andersen</link> analysis. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_s_v_f_1_1_andersen_base_1a4d3496c305281d7fb423db21e38cf690">initialize</link> ()</para>

<para>Initialize analysis. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_s_v_f_1_1_andersen_base_1a099dad1149eb2e3f8068ef23870005a8">finalize</link> ()</para>

<para>Finalize analysis. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1aaec5125db063f8c1e7431ac7fe7a70f2"/><link linkend="_class_s_v_f_1_1_constraint_graph">ConstraintGraph</link> * <link linkend="_class_s_v_f_1_1_andersen_base_1aaec5125db063f8c1e7431ac7fe7a70f2">getConstraintGraph</link> ()</para>

<para>Get constraint graph. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1a566830d0c7a1f5cd967bb8f2ab168f8d"/>void <link linkend="_class_s_v_f_1_1_andersen_base_1a566830d0c7a1f5cd967bb8f2ab168f8d">printStat</link> ()</para>

<para>dump statistics </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1afa4d710b093a6c7a33cb1aef823781f0"/>static bool <link linkend="_class_s_v_f_1_1_andersen_base_1afa4d710b093a6c7a33cb1aef823781f0">classof</link> (const <link linkend="_class_s_v_f_1_1_andersen_base">AndersenBase</link> *)</para>

<para>Methods for support type inquiry through isa, cast, and dyn_cast: </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1a0167fa7b59571c07b2cbec08905f6629"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_class_s_v_f_1_1_pointer_analysis">PointerAnalysis</link> *pta)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1a70e60ce2e6f4cfd575c6f5c974ca1081"/>static Size_t <link linkend="_class_s_v_f_1_1_andersen_base_1a70e60ce2e6f4cfd575c6f5c974ca1081">numOfProcessedAddr</link> = 0</para>

<para>Statistics. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1a9d7b6e602e1764f76583824dddebf985"/>static Size_t <link linkend="_class_s_v_f_1_1_andersen_base_1a9d7b6e602e1764f76583824dddebf985">numOfProcessedCopy</link> = 0</para>

<para>Number of processed Addr edge. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1a25de7638a692832f0d4727815ff270f6"/>static Size_t <link linkend="_class_s_v_f_1_1_andersen_base_1a25de7638a692832f0d4727815ff270f6">numOfProcessedGep</link> = 0</para>

<para>Number of processed Copy edge. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1a5f1b0711583aa8947dfb4619658f1904"/>static Size_t <link linkend="_class_s_v_f_1_1_andersen_base_1a5f1b0711583aa8947dfb4619658f1904">numOfProcessedLoad</link> = 0</para>

<para>Number of processed Gep edge. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1ae18183a5d8ebd46fcdb9246bd643b150"/>static Size_t <link linkend="_class_s_v_f_1_1_andersen_base_1ae18183a5d8ebd46fcdb9246bd643b150">numOfProcessedStore</link> = 0</para>

<para>Number of processed Load edge. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1aa31bc83cdeaa30dd0975976e29a5be12"/>static Size_t <link linkend="_class_s_v_f_1_1_andersen_base_1aa31bc83cdeaa30dd0975976e29a5be12">numOfSfrs</link> = 0</para>

<para>Number of processed Store edge. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1ad21fc4e60abc4e6030880f8197e1c93f"/>static Size_t <emphasis role="strong">numOfFieldExpand</emphasis> = 0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1a6da6e1231a46fde6925493045b8b2490"/>static Size_t <emphasis role="strong">numOfSCCDetection</emphasis> = 0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1a6b7d0e57f741c446d0bf178939960143"/>static double <emphasis role="strong">timeOfSCCDetection</emphasis> = 0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1a02c5a50b214d36921e1404784e76704d"/>static double <emphasis role="strong">timeOfSCCMerges</emphasis> = 0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1ad40b196c2c699bd115529b806d20de25"/>static double <emphasis role="strong">timeOfCollapse</emphasis> = 0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1abdc249ea291d0247f6b91a8fcc7df341"/>static Size_t <emphasis role="strong">AveragePointsToSetSize</emphasis> = 0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1a7cfafe54d564c9401f435362d44d3f9c"/>static Size_t <emphasis role="strong">MaxPointsToSetSize</emphasis> = 0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1aae14de6fbca9280d8d0290326aa493f0"/>static double <emphasis role="strong">timeOfProcessCopyGep</emphasis> = 0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1a9fe738f1e11c80006d540f246a80bfdf"/>static double <emphasis role="strong">timeOfProcessLoadStore</emphasis> = 0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1a2afb49f513c9534fd051117b59dc056b"/>static double <emphasis role="strong">timeOfUpdateCallGraph</emphasis> = 0</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_base_1ae21e38a06a4397d11cdd17b0f8f282fd"/><link linkend="_class_s_v_f_1_1_constraint_graph">ConstraintGraph</link> * <link linkend="_class_s_v_f_1_1_andersen_base_1ae21e38a06a4397d11cdd17b0f8f282fd">consCG</link></para>

<para>Constraint Graph. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_andersen_base_1a6d1ff3396814a118ce3d200157426cd3"/>    <section>
    <title>analyze()</title>
<indexterm><primary>analyze</primary><secondary>SVF::AndersenBase</secondary></indexterm>
<indexterm><primary>SVF::AndersenBase</primary><secondary>analyze</secondary></indexterm>
<para><computeroutput>void AndersenBase::analyze ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para><link linkend="_class_s_v_f_1_1_andersen">Andersen</link> analysis. </para>
</para>

<para><link linkend="_class_s_v_f_1_1_andersen">Andersen</link> analysis </para>

<para>Initialization for the Solver</para>
<para>
Implements <link linkend="_class_s_v_f_1_1_pointer_analysis_1ae1e217dc18be0ce70bee5ad930cb54c6">SVF::PointerAnalysis</link>.</para>
<para>
Reimplemented in <link linkend="_class_s_v_f_1_1_type_analysis_1a6073fc43443ceba8d77212ba04e483ef">SVF::TypeAnalysis</link>.</para>
    </section><anchor xml:id="_class_s_v_f_1_1_andersen_base_1a099dad1149eb2e3f8068ef23870005a8"/>    <section>
    <title>finalize()</title>
<indexterm><primary>finalize</primary><secondary>SVF::AndersenBase</secondary></indexterm>
<indexterm><primary>SVF::AndersenBase</primary><secondary>finalize</secondary></indexterm>
<para><computeroutput>void AndersenBase::finalize (void )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Finalize analysis. </para>
</para>

<para>Finalize analysis </para>

<para>dump constraint graph if PAGDotGraph flag is enabled</para>
<para>
Reimplemented from <link linkend="_class_s_v_f_1_1_pointer_analysis_1a118dabc50024b5cd91095814ade47166">SVF::PointerAnalysis</link>.</para>
<para>
Reimplemented in <link linkend="_class_s_v_f_1_1_type_analysis_1a8efef079c8b33e2215f92ac3629789e6">SVF::TypeAnalysis</link>, and <link linkend="_class_s_v_f_1_1_andersen_1ad90c8cf193bd81870ce8dd88c9580e2c">SVF::Andersen</link>.</para>
    </section><anchor xml:id="_class_s_v_f_1_1_andersen_base_1a4d3496c305281d7fb423db21e38cf690"/>    <section>
    <title>initialize()</title>
<indexterm><primary>initialize</primary><secondary>SVF::AndersenBase</secondary></indexterm>
<indexterm><primary>SVF::AndersenBase</primary><secondary>initialize</secondary></indexterm>
<para><computeroutput>void AndersenBase::initialize ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Initialize analysis. </para>
</para>

<para>Initilize analysis </para>

<para>Build <link linkend="_class_s_v_f_1_1_p_a_g">PAG</link></para>

<para>Build Constraint Graph</para>

<para>Create statistic class</para>
<para>
Reimplemented from <link linkend="_class_s_v_f_1_1_pointer_analysis_1a431ec4f85eb0f029e5740b92fd9ceb32">SVF::PointerAnalysis</link>.</para>
<para>
Reimplemented in <link linkend="_class_s_v_f_1_1_type_analysis_1a34177236a41f7a2b432243062f829985">SVF::TypeAnalysis</link>, <link linkend="_class_s_v_f_1_1_andersen_s_f_r_1a3b255068b3ea53041af94fd373a53bd4">SVF::AndersenSFR</link>, <link linkend="_class_s_v_f_1_1_andersen_h_l_c_d_1a5926080868429040f5142843f01a2a5c">SVF::AndersenHLCD</link>, <link linkend="_class_s_v_f_1_1_andersen_h_c_d_1aaac9cac7fc5696adb585abd9d67f8c14">SVF::AndersenHCD</link>, and <link linkend="_class_s_v_f_1_1_andersen_1a20617a69c112ad423b1b5021e48a8548">SVF::Andersen</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/WPA/Andersen.hlib/WPA/Andersen.cpp</section>
</section>
