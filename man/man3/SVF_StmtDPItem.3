.TH "SVF::StmtDPItem< LocCond >" 3 "Sun Feb 14 2021" "SVF" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SVF::StmtDPItem< LocCond >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <DPItem\&.h>\fP
.PP
Inherits \fBSVF::DPItem\fP\&.
.PP
Inherited by \fBSVF::CxtStmtDPItem< LocCond >\fP, and \fBSVF::PathStmtDPItem< LocCond >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBStmtDPItem\fP (NodeID c, const LocCond *locCond)"
.br
.RI "Constructor\&. "
.ti -1c
.RI "\fBStmtDPItem\fP (const \fBStmtDPItem\fP &dps)"
.br
.RI "Copy constructor\&. "
.ti -1c
.RI "virtual \fB~StmtDPItem\fP ()"
.br
.RI "Destructor\&. "
.ti -1c
.RI "const LocCond * \fBgetLoc\fP () const"
.br
.RI "Get context\&. "
.ti -1c
.RI "void \fBsetLoc\fP (const LocCond *l)"
.br
.RI "Set location\&. "
.ti -1c
.RI "void \fBsetLocVar\fP (const LocCond *l, NodeID v)"
.br
.RI "Set location and pointer id\&. "
.ti -1c
.RI "bool \fBoperator<\fP (const \fBStmtDPItem\fP &rhs) const"
.br
.ti -1c
.RI "\fBStmtDPItem\fP & \fBoperator=\fP (const \fBStmtDPItem\fP &rhs)"
.br
.RI "Overloading operator==\&. "
.ti -1c
.RI "bool \fBoperator==\fP (const \fBStmtDPItem\fP &rhs) const"
.br
.RI "Overloading operator==\&. "
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBStmtDPItem\fP &rhs) const"
.br
.RI "Overloading operator!=\&. "
.ti -1c
.RI "void \fBdump\fP () const"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "const LocCond * \fBcurloc\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 

.SS "template<class LocCond>
.br
class SVF::StmtDPItem< LocCond >"
\fBFlowSensitive\fP \fBDPItem\fP 
.SH "Member Function Documentation"
.PP 
.SS "template<class LocCond > bool \fBSVF::StmtDPItem\fP< LocCond >::operator< (const \fBStmtDPItem\fP< LocCond > & rhs) const\fC [inline]\fP"
Enable compare operator to avoid duplicated item insertion in map or set to be noted that two vectors can also overload operator() 

.SH "Author"
.PP 
Generated automatically by Doxygen for SVF from the source code\&.
