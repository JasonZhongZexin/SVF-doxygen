<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_c_s_c" kind="class" language="C++" prot="public">
    <compoundname>SVF::CSC</compoundname>
    <includes refid="_c_s_c_8h" local="no">CSC.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_c_s_c_1a3fb06a0c1d3960c32e52ff485417035c" prot="public" static="no">
        <type>Map&lt; NodeID, NodeID &gt;</type>
        <definition>typedef Map&lt;NodeID, NodeID&gt; SVF::CSC::IdToIdMap</definition>
        <argsstring></argsstring>
        <name>IdToIdMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/CSC.h" line="52" column="17" bodyfile="include/WPA/CSC.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_c_s_c_1a0490b9998987d245ee6e56bc68db4f1e" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_f_i_l_o_work_list" kindref="compound">FILOWorkList</ref>&lt; NodeID &gt;</type>
        <definition>typedef FILOWorkList&lt;NodeID&gt; SVF::CSC::WorkStack</definition>
        <argsstring></argsstring>
        <name>WorkStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/CSC.h" line="53" column="26" bodyfile="include/WPA/CSC.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_c_s_c_1a8e740b5d0f02c66c09fec3f65a54d1c2" prot="public" static="no">
        <type>IdToIdMap::iterator</type>
        <definition>typedef IdToIdMap::iterator SVF::CSC::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/CSC.h" line="54" column="42" bodyfile="include/WPA/CSC.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_c_s_c_1a549a0a410b1ca9eeb22c05dd93761560" prot="private" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_constraint_graph" kindref="compound">ConstraintGraph</ref> *</type>
        <definition>ConstraintGraph* SVF::CSC::_consG</definition>
        <argsstring></argsstring>
        <name>_consG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/CSC.h" line="57" column="21" bodyfile="include/WPA/CSC.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_c_s_c_1ad6639daea8a19a920c88af332a420d00" prot="private" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_s_c_c_detection" kindref="compound">CGSCC</ref> *</type>
        <definition>CGSCC* SVF::CSC::_scc</definition>
        <argsstring></argsstring>
        <name>_scc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/CSC.h" line="58" column="11" bodyfile="include/WPA/CSC.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_c_s_c_1af58e474ee7605663fd04fce58dc029d1" prot="private" static="no" mutable="no">
        <type>NodeID</type>
        <definition>NodeID SVF::CSC::_I</definition>
        <argsstring></argsstring>
        <name>_I</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/CSC.h" line="60" column="12" bodyfile="include/WPA/CSC.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_c_s_c_1a0eaf3a742fb8003b031528ee7c1c4799" prot="private" static="no" mutable="no">
        <type>IdToIdMap</type>
        <definition>IdToIdMap SVF::CSC::_D</definition>
        <argsstring></argsstring>
        <name>_D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/CSC.h" line="61" column="15" bodyfile="include/WPA/CSC.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_c_s_c_1a44dbda27203499770ed1315366218c51" prot="private" static="no" mutable="no">
        <type>NodeStack</type>
        <definition>NodeStack SVF::CSC::_S</definition>
        <argsstring></argsstring>
        <name>_S</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/CSC.h" line="62" column="15" bodyfile="include/WPA/CSC.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_c_s_c_1a98bf29b1b9a1ffee14fe65a7f6b56672" prot="private" static="no" mutable="no">
        <type>NodeSet</type>
        <definition>NodeSet SVF::CSC::_visited</definition>
        <argsstring></argsstring>
        <name>_visited</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/CSC.h" line="63" column="13" bodyfile="include/WPA/CSC.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_c_s_c_1a4ffb05984b0509d97ec713fc6bfc4b6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::CSC::CSC</definition>
        <argsstring>(ConstraintGraph *g, CGSCC *c)</argsstring>
        <name>CSC</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_graph" kindref="compound">ConstraintGraph</ref> *</type>
          <declname>g</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_s_c_c_detection" kindref="compound">CGSCC</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/CSC.h" line="68" column="5" bodyfile="include/WPA/CSC.h" bodystart="68" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_s_c_1a049dc6bd348b1108a8a9726d50a4f280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSC::find</definition>
        <argsstring>(NodeStack &amp;candidates)</argsstring>
        <name>find</name>
        <param>
          <type>NodeStack &amp;</type>
          <declname>candidates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/CSC.h" line="71" column="10" bodyfile="lib/WPA/CSC.cpp" bodystart="49" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_s_c_1ae2cf80e57c85add6e68bf282e833e0e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSC::visit</definition>
        <argsstring>(NodeID nodeId, Size_t _w)</argsstring>
        <name>visit</name>
        <param>
          <type>NodeID</type>
          <declname>nodeId</declname>
        </param>
        <param>
          <type>Size_t</type>
          <declname>_w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/CSC.h" line="72" column="10" bodyfile="lib/WPA/CSC.cpp" bodystart="76" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_s_c_1ac531556d88bedad2717aacc6575bfedd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CSC::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/CSC.h" line="73" column="10" bodyfile="lib/WPA/CSC.cpp" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_s_c_1a2913a7a83deae0b91f1f42dc45c4f3b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::CSC::isVisited</definition>
        <argsstring>(NodeID nId)</argsstring>
        <name>isVisited</name>
        <param>
          <type>NodeID</type>
          <declname>nId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/CSC.h" line="75" column="10" bodyfile="include/WPA/CSC.h" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_c_s_c_1adac02224ec722f0cf1954d7a484bd11e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::CSC::setVisited</definition>
        <argsstring>(NodeID nId)</argsstring>
        <name>setVisited</name>
        <param>
          <type>NodeID</type>
          <declname>nId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/WPA/CSC.h" line="80" column="10" bodyfile="include/WPA/CSC.h" bodystart="80" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>class <ref refid="class_s_v_f_1_1_c_s_c" kindref="compound">CSC</ref>: cycle stride calculation </para>
    </detaileddescription>
    <location file="include/WPA/CSC.h" line="49" column="1" bodyfile="include/WPA/CSC.h" bodystart="50" bodyend="91"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_c_s_c_1a549a0a410b1ca9eeb22c05dd93761560" prot="private" virt="non-virtual"><scope>SVF::CSC</scope><name>_consG</name></member>
      <member refid="class_s_v_f_1_1_c_s_c_1a0eaf3a742fb8003b031528ee7c1c4799" prot="private" virt="non-virtual"><scope>SVF::CSC</scope><name>_D</name></member>
      <member refid="class_s_v_f_1_1_c_s_c_1af58e474ee7605663fd04fce58dc029d1" prot="private" virt="non-virtual"><scope>SVF::CSC</scope><name>_I</name></member>
      <member refid="class_s_v_f_1_1_c_s_c_1a44dbda27203499770ed1315366218c51" prot="private" virt="non-virtual"><scope>SVF::CSC</scope><name>_S</name></member>
      <member refid="class_s_v_f_1_1_c_s_c_1ad6639daea8a19a920c88af332a420d00" prot="private" virt="non-virtual"><scope>SVF::CSC</scope><name>_scc</name></member>
      <member refid="class_s_v_f_1_1_c_s_c_1a98bf29b1b9a1ffee14fe65a7f6b56672" prot="private" virt="non-virtual"><scope>SVF::CSC</scope><name>_visited</name></member>
      <member refid="class_s_v_f_1_1_c_s_c_1ac531556d88bedad2717aacc6575bfedd" prot="public" virt="non-virtual"><scope>SVF::CSC</scope><name>clear</name></member>
      <member refid="class_s_v_f_1_1_c_s_c_1a4ffb05984b0509d97ec713fc6bfc4b6e" prot="public" virt="non-virtual"><scope>SVF::CSC</scope><name>CSC</name></member>
      <member refid="class_s_v_f_1_1_c_s_c_1a049dc6bd348b1108a8a9726d50a4f280" prot="public" virt="non-virtual"><scope>SVF::CSC</scope><name>find</name></member>
      <member refid="class_s_v_f_1_1_c_s_c_1a3fb06a0c1d3960c32e52ff485417035c" prot="public" virt="non-virtual"><scope>SVF::CSC</scope><name>IdToIdMap</name></member>
      <member refid="class_s_v_f_1_1_c_s_c_1a2913a7a83deae0b91f1f42dc45c4f3b2" prot="public" virt="non-virtual"><scope>SVF::CSC</scope><name>isVisited</name></member>
      <member refid="class_s_v_f_1_1_c_s_c_1a8e740b5d0f02c66c09fec3f65a54d1c2" prot="public" virt="non-virtual"><scope>SVF::CSC</scope><name>iterator</name></member>
      <member refid="class_s_v_f_1_1_c_s_c_1adac02224ec722f0cf1954d7a484bd11e" prot="public" virt="non-virtual"><scope>SVF::CSC</scope><name>setVisited</name></member>
      <member refid="class_s_v_f_1_1_c_s_c_1ae2cf80e57c85add6e68bf282e833e0e7" prot="public" virt="non-virtual"><scope>SVF::CSC</scope><name>visit</name></member>
      <member refid="class_s_v_f_1_1_c_s_c_1a0490b9998987d245ee6e56bc68db4f1e" prot="public" virt="non-virtual"><scope>SVF::CSC</scope><name>WorkStack</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
