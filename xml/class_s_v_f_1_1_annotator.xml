<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_annotator" kind="class" language="C++" prot="public">
    <compoundname>SVF::Annotator</compoundname>
    <derivedcompoundref refid="class_s_v_f_1_1_m_t_a_annotator" prot="public" virt="non-virtual">SVF::MTAAnnotator</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_saber_annotator" prot="public" virt="non-virtual">SVF::SaberAnnotator</derivedcompoundref>
    <includes refid="_annotator_8h" local="no">Annotator.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_annotator_1a01900f5ada5948361cc18857aee26744" prot="protected" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* SVF::Annotator::SB_SLICESOURCE</definition>
        <argsstring></argsstring>
        <name>SB_SLICESOURCE</name>
        <briefdescription>
<para>Saber annotations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Annotator.h" line="174" column="16" bodyfile="include/Util/Annotator.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_annotator_1a3edacb8703c74abf42c4a29761a3437f" prot="protected" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* SVF::Annotator::SB_SLICESINK</definition>
        <argsstring></argsstring>
        <name>SB_SLICESINK</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Annotator.h" line="175" column="16" bodyfile="include/Util/Annotator.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_annotator_1ac58473072d90baa6dc377b45f18d0da5" prot="protected" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* SVF::Annotator::SB_FESIBLE</definition>
        <argsstring></argsstring>
        <name>SB_FESIBLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Annotator.h" line="176" column="16" bodyfile="include/Util/Annotator.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_annotator_1a556138c152d52921d6f0a709a826a93a" prot="protected" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* SVF::Annotator::SB_INFESIBLE</definition>
        <argsstring></argsstring>
        <name>SB_INFESIBLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Annotator.h" line="177" column="16" bodyfile="include/Util/Annotator.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_annotator_1af220da6fe6fc879d15cc34ab397c5ba1" prot="protected" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* SVF::Annotator::DR_NOT_CHECK</definition>
        <argsstring></argsstring>
        <name>DR_NOT_CHECK</name>
        <briefdescription>
<para>Race Detection annotations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Annotator.h" line="182" column="16" bodyfile="include/Util/Annotator.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_annotator_1a64fa6f1cac79c47c66b16ac29d2ac3f4" prot="protected" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* SVF::Annotator::DR_CHECK</definition>
        <argsstring></argsstring>
        <name>DR_CHECK</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Annotator.h" line="183" column="16" bodyfile="include/Util/Annotator.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_annotator_1aa72e6952df50b5b36f0e0fed4024055f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::Annotator::Annotator</definition>
        <argsstring>()</argsstring>
        <name>Annotator</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Annotator.h" line="25" column="5" bodyfile="include/Util/Annotator.h" bodystart="25" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_annotator_1a77ae10cccf9eeece8adf7dd00821e836" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::Annotator::~Annotator</definition>
        <argsstring>()</argsstring>
        <name>~Annotator</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Annotator.h" line="37" column="13" bodyfile="include/Util/Annotator.h" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_annotator_1a3fb284999931900d92e60104980648ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::Annotator::hasSBSourceFlag</definition>
        <argsstring>(Instruction *inst) const</argsstring>
        <name>hasSBSourceFlag</name>
        <param>
          <type>Instruction *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>SB Has flag methods. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Annotator.h" line="44" column="17" bodyfile="include/Util/Annotator.h" bodystart="44" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_annotator_1acbb2e202ab3fb864e70eac6b41c3899e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::Annotator::hasSBSinkFlag</definition>
        <argsstring>(Instruction *inst) const</argsstring>
        <name>hasSBSinkFlag</name>
        <param>
          <type>Instruction *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Annotator.h" line="49" column="17" bodyfile="include/Util/Annotator.h" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_annotator_1ad78f6de28e5474614f16707e1c599f48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::Annotator::hasDRNotCheckFlag</definition>
        <argsstring>(Instruction *inst) const</argsstring>
        <name>hasDRNotCheckFlag</name>
        <param>
          <type>Instruction *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Race Detection Has flag methods. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Annotator.h" line="58" column="17" bodyfile="include/Util/Annotator.h" bodystart="58" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_annotator_1a11d7bfcb525e4fb74e3031dd9a2635fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::Annotator::hasDRNotCheckFlag</definition>
        <argsstring>(const Instruction *inst) const</argsstring>
        <name>hasDRNotCheckFlag</name>
        <param>
          <type>const Instruction *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Annotator.h" line="67" column="17" bodyfile="include/Util/Annotator.h" bodystart="67" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_annotator_1a6e958c20d7809545b026eb5246444711" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::Annotator::hasDRCheckFlag</definition>
        <argsstring>(Instruction *inst) const</argsstring>
        <name>hasDRCheckFlag</name>
        <param>
          <type>Instruction *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Annotator.h" line="77" column="17" bodyfile="include/Util/Annotator.h" bodystart="77" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_annotator_1abc2d4a40ac8a0d70428b5066266f861c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::Annotator::hasDRCheckFlag</definition>
        <argsstring>(const Instruction *inst) const</argsstring>
        <name>hasDRCheckFlag</name>
        <param>
          <type>const Instruction *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Annotator.h" line="86" column="17" bodyfile="include/Util/Annotator.h" bodystart="86" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_annotator_1ad1424270d91f70dee1461b6301ce8091" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::Annotator::addMDTag</definition>
        <argsstring>(Instruction *inst, std::string str)</argsstring>
        <name>addMDTag</name>
        <param>
          <type>Instruction *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Simple add/remove meta data information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Annotator.h" line="99" column="17" bodyfile="include/Util/Annotator.h" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_annotator_1a35dabd3a84615e730b34f568623ad8f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::Annotator::removeMDTag</definition>
        <argsstring>(Instruction *inst, std::string str)</argsstring>
        <name>removeMDTag</name>
        <param>
          <type>Instruction *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Annotator.h" line="103" column="17" bodyfile="include/Util/Annotator.h" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_annotator_1ade321f69e1a727f1be15860e01effa43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::Annotator::addMDTag</definition>
        <argsstring>(Instruction *inst, Value *val, std::string str)</argsstring>
        <name>addMDTag</name>
        <param>
          <type>Instruction *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type>Value *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>manipulate llvm meta data on instructions for a specific value </para>
        </briefdescription>
        <detaileddescription>
<para>add flag to llvm metadata </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Annotator.h" line="112" column="17" bodyfile="include/Util/Annotator.h" bodystart="112" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_annotator_1a676a5c9b425e13f17fa73879c72787a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::Annotator::removeMDTag</definition>
        <argsstring>(Instruction *inst, Value *val, std::string str)</argsstring>
        <name>removeMDTag</name>
        <param>
          <type>Instruction *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type>Value *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>remove flag from llvm metadata </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/Annotator.h" line="130" column="17" bodyfile="include/Util/Annotator.h" bodystart="130" bodyend="142"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_s_v_f_1_1_annotator_1a1a21ded1623d10fddb4048ae314e6722" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::Annotator::evalMDTag</definition>
        <argsstring>(const Instruction *inst, const Value *val, std::string str, std::vector&lt; Value * &gt; &amp;) const</argsstring>
        <name>evalMDTag</name>
        <param>
          <type>const Instruction *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type>const Value *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>str</declname>
        </param>
        <param>
          <type>std::vector&lt; Value * &gt; &amp;</type>
        </param>
        <briefdescription>
<para>evaluate llvm metadata </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>When mdNode has operands and value is not null</para>
        </inbodydescription>
        <location file="include/Util/Annotator.h" line="148" column="17" bodyfile="include/Util/Annotator.h" bodystart="148" bodyend="168"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Program annotator to write meta data information on LLVM IR </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>SVF::SaberAnnotator</label>
        <link refid="class_s_v_f_1_1_saber_annotator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>SVF::Annotator</label>
        <link refid="class_s_v_f_1_1_annotator"/>
      </node>
      <node id="2">
        <label>SVF::MTAAnnotator</label>
        <link refid="class_s_v_f_1_1_m_t_a_annotator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="include/Util/Annotator.h" line="20" column="1" bodyfile="include/Util/Annotator.h" bodystart="21" bodyend="185"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_annotator_1ad1424270d91f70dee1461b6301ce8091" prot="public" virt="non-virtual"><scope>SVF::Annotator</scope><name>addMDTag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1ade321f69e1a727f1be15860e01effa43" prot="public" virt="non-virtual"><scope>SVF::Annotator</scope><name>addMDTag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1aa72e6952df50b5b36f0e0fed4024055f" prot="public" virt="non-virtual"><scope>SVF::Annotator</scope><name>Annotator</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a64fa6f1cac79c47c66b16ac29d2ac3f4" prot="protected" virt="non-virtual"><scope>SVF::Annotator</scope><name>DR_CHECK</name></member>
      <member refid="class_s_v_f_1_1_annotator_1af220da6fe6fc879d15cc34ab397c5ba1" prot="protected" virt="non-virtual"><scope>SVF::Annotator</scope><name>DR_NOT_CHECK</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a1a21ded1623d10fddb4048ae314e6722" prot="private" virt="non-virtual"><scope>SVF::Annotator</scope><name>evalMDTag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a6e958c20d7809545b026eb5246444711" prot="public" virt="non-virtual"><scope>SVF::Annotator</scope><name>hasDRCheckFlag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1abc2d4a40ac8a0d70428b5066266f861c" prot="public" virt="non-virtual"><scope>SVF::Annotator</scope><name>hasDRCheckFlag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1ad78f6de28e5474614f16707e1c599f48" prot="public" virt="non-virtual"><scope>SVF::Annotator</scope><name>hasDRNotCheckFlag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a11d7bfcb525e4fb74e3031dd9a2635fe" prot="public" virt="non-virtual"><scope>SVF::Annotator</scope><name>hasDRNotCheckFlag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1acbb2e202ab3fb864e70eac6b41c3899e" prot="public" virt="non-virtual"><scope>SVF::Annotator</scope><name>hasSBSinkFlag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a3fb284999931900d92e60104980648ef" prot="public" virt="non-virtual"><scope>SVF::Annotator</scope><name>hasSBSourceFlag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a35dabd3a84615e730b34f568623ad8f5" prot="public" virt="non-virtual"><scope>SVF::Annotator</scope><name>removeMDTag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a676a5c9b425e13f17fa73879c72787a6" prot="public" virt="non-virtual"><scope>SVF::Annotator</scope><name>removeMDTag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1ac58473072d90baa6dc377b45f18d0da5" prot="protected" virt="non-virtual"><scope>SVF::Annotator</scope><name>SB_FESIBLE</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a556138c152d52921d6f0a709a826a93a" prot="protected" virt="non-virtual"><scope>SVF::Annotator</scope><name>SB_INFESIBLE</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a3edacb8703c74abf42c4a29761a3437f" prot="protected" virt="non-virtual"><scope>SVF::Annotator</scope><name>SB_SLICESINK</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a01900f5ada5948361cc18857aee26744" prot="protected" virt="non-virtual"><scope>SVF::Annotator</scope><name>SB_SLICESOURCE</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a77ae10cccf9eeece8adf7dd00821e836" prot="public" virt="virtual"><scope>SVF::Annotator</scope><name>~Annotator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
