<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_f_i_l_o_work_list" xml:lang="en-US">
<title>SVF::FILOWorkList&lt; Data &gt; Class Template Reference</title>
<indexterm><primary>SVF::FILOWorkList&lt; Data &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;WorkList.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_f_i_l_o_work_list_1a071a624c91def82a4bbbf3806c7b7eea"/>bool <emphasis role="strong">empty</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_f_i_l_o_work_list_1ac072af7d7a6d3abad17b779445286e7e"/>bool <emphasis role="strong">find</emphasis> (Data data) const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_s_v_f_1_1_f_i_l_o_work_list_1a342e5498a91c6a8796fe0e93064a02c8">push</link> (Data data)</para>
</listitem>
            <listitem><para>Data <link linkend="_class_s_v_f_1_1_f_i_l_o_work_list_1a3fd9acb6d09fd142bfd402fdf8cac93b">pop</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_s_v_f_1_1_f_i_l_o_work_list_1a97265eb340b48436c39f77f4095693fb">clear</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;class Data&gt;
class SVF::FILOWorkList&lt; Data &gt;</title></simplesect>


<para>Worlist with &quot;first in last out&quot; order. New nodes will be pushed at back and popped from back. Elements in the list are unique as they&apos;re recorded by Set. </para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_f_i_l_o_work_list_1a97265eb340b48436c39f77f4095693fb"/>    <section>
    <title>clear()</title>
<indexterm><primary>clear</primary><secondary>SVF::FILOWorkList&lt; Data &gt;</secondary></indexterm>
<indexterm><primary>SVF::FILOWorkList&lt; Data &gt;</primary><secondary>clear</secondary></indexterm>
<computeroutput>template&lt;class Data &gt; </computeroutput><para><computeroutput>void <link linkend="_class_s_v_f_1_1_f_i_l_o_work_list">SVF::FILOWorkList</link>&lt; Data &gt;::clear ( )<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Clear all the data </para>
    </section><anchor xml:id="_class_s_v_f_1_1_f_i_l_o_work_list_1a3fd9acb6d09fd142bfd402fdf8cac93b"/>    <section>
    <title>pop()</title>
<indexterm><primary>pop</primary><secondary>SVF::FILOWorkList&lt; Data &gt;</secondary></indexterm>
<indexterm><primary>SVF::FILOWorkList&lt; Data &gt;</primary><secondary>pop</secondary></indexterm>
<computeroutput>template&lt;class Data &gt; </computeroutput><para><computeroutput>Data <link linkend="_class_s_v_f_1_1_f_i_l_o_work_list">SVF::FILOWorkList</link>&lt; Data &gt;::pop ( )<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Pop a data from the END of work list. </para>
    </section><anchor xml:id="_class_s_v_f_1_1_f_i_l_o_work_list_1a342e5498a91c6a8796fe0e93064a02c8"/>    <section>
    <title>push()</title>
<indexterm><primary>push</primary><secondary>SVF::FILOWorkList&lt; Data &gt;</secondary></indexterm>
<indexterm><primary>SVF::FILOWorkList&lt; Data &gt;</primary><secondary>push</secondary></indexterm>
<computeroutput>template&lt;class Data &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_s_v_f_1_1_f_i_l_o_work_list">SVF::FILOWorkList</link>&lt; Data &gt;::push (Data data)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Push a data into the work list. </para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
include/Util/WorkList.h</section>
</section>
