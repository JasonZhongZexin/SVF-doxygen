<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_d_d_a_v_f_solver_8h" kind="file" language="C++">
    <compoundname>DDAVFSolver.h</compoundname>
    <includes refid="_d_d_a_stat_8h" local="yes">DDA/DDAStat.h</includes>
    <includes refid="_s_v_f_g_builder_8h" local="yes">MSSA/SVFGBuilder.h</includes>
    <includes refid="_andersen_8h" local="yes">WPA/Andersen.h</includes>
    <includes refid="_s_c_c_8h" local="yes">Util/SCC.h</includes>
    <includes local="no">algorithm</includes>
    <includedby refid="_context_d_d_a_8h" local="yes">include/DDA/ContextDDA.h</includedby>
    <includedby refid="_flow_d_d_a_8h" local="yes">include/DDA/FlowDDA.h</includedby>
    <incdepgraph>
      <node id="73">
        <label>SVF-FE/CPPUtil.h</label>
        <link refid="_c_p_p_util_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>list</label>
      </node>
      <node id="69">
        <label>MemoryModel/LocationSet.h</label>
        <link refid="_location_set_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>Graphs/PAG.h</label>
        <link refid="_p_a_g_8h_source"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>MSSA/MSSAMuChi.h</label>
        <link refid="_m_s_s_a_mu_chi_8h_source"/>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>WPA/WPASolver.h</label>
        <link refid="_w_p_a_solver_8h_source"/>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>MemoryModel/ConditionalPT.h</label>
        <link refid="_conditional_p_t_8h_source"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>Util/Casting.h</label>
        <link refid="_casting_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>system_error</label>
      </node>
      <node id="65">
        <label>MemoryModel/PointerAnalysis.h</label>
        <link refid="_pointer_analysis_8h_source"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>llvm/IR/IRBuilder.h</label>
      </node>
      <node id="52">
        <label>llvm/ADT/GraphTraits.h</label>
      </node>
      <node id="63">
        <label>Graphs/VFGNode.h</label>
        <link refid="_v_f_g_node_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>Util/NodeIDAllocator.h</label>
        <link refid="_node_i_d_allocator_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>cudd.h</label>
        <link refid="cudd_8h_source"/>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>llvm/Bitcode/BitcodeReader.h</label>
      </node>
      <node id="87">
        <label>assert.h</label>
      </node>
      <node id="34">
        <label>llvm/ADT/SmallVector.h</label>
      </node>
      <node id="108">
        <label>Graphs/SVFGNode.h</label>
        <link refid="_s_v_f_g_node_8h_source"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>llvm/IR/InstVisitor.h</label>
      </node>
      <node id="8">
        <label>llvm/Support/CommandLine.h</label>
      </node>
      <node id="7">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="80">
        <label>SVF-FE/LLVMUtil.h</label>
        <link refid="_l_l_v_m_util_8h_source"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>llvm/Analysis/ScalarEvolutionExpressions.h</label>
      </node>
      <node id="85">
        <label>Graphs/ICFG.h</label>
        <link refid="_i_c_f_g_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>Util/PathCondAllocator.h</label>
        <link refid="_path_cond_allocator_8h_source"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>Util/ThreadAPI.h</label>
        <link refid="_thread_a_p_i_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>mtr.h</label>
        <link refid="mtr_8h_source"/>
      </node>
      <node id="40">
        <label>llvm/ADT/StringExtras.h</label>
      </node>
      <node id="90">
        <label>Util/Conditions.h</label>
        <link refid="_conditions_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>Util/SVFUtil.h</label>
        <link refid="_s_v_f_util_8h_source"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>PAGEdge.h</label>
        <link refid="_p_a_g_edge_8h_source"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>MemoryModel/PTAStat.h</label>
        <link refid="_p_t_a_stat_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>cassert</label>
      </node>
      <node id="116">
        <label>WPA/WPAFSSolver.h</label>
        <link refid="_w_p_a_f_s_solver_8h_source"/>
        <childnode refid="117" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>Graphs/GenericGraph.h</label>
        <link refid="_generic_graph_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Util/BasicTypes.h</label>
        <link refid="_basic_types_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>Graphs/ConsGNode.h</label>
        <link refid="_cons_g_node_8h_source"/>
      </node>
      <node id="97">
        <label>st.h</label>
        <link refid="st_8h_source"/>
      </node>
      <node id="58">
        <label>string</label>
      </node>
      <node id="92">
        <label>CUDD/cuddInt.h</label>
        <link refid="cudd_int_8h_source"/>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>WPA/FlowSensitive.h</label>
        <link refid="_flow_sensitive_8h_source"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>MemoryModel/MutablePointsToDS.h</label>
        <link refid="_mutable_points_to_d_s_8h_source"/>
      </node>
      <node id="101">
        <label>Util/SCC.h</label>
        <link refid="_s_c_c_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>map</label>
      </node>
      <node id="41">
        <label>llvm/Analysis/AliasAnalysis.h</label>
      </node>
      <node id="120">
        <label>Graphs/ConsGEdge.h</label>
        <link refid="_cons_g_edge_8h_source"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>unordered_set</label>
      </node>
      <node id="100">
        <label>Graphs/PTACallGraph.h</label>
        <link refid="_p_t_a_call_graph_8h_source"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>MemoryModel/AbstractPointsToDS.h</label>
        <link refid="_abstract_points_to_d_s_8h_source"/>
      </node>
      <node id="1">
        <label>include/DDA/DDAVFSolver.h</label>
        <link refid="_d_d_a_v_f_solver_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>MSSA/SVFGBuilder.h</label>
        <link refid="_s_v_f_g_builder_8h_source"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>Util/ExtAPI.h</label>
        <link refid="_ext_a_p_i_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>llvm/IR/User.h</label>
      </node>
      <node id="6">
        <label>llvm/ADT/SparseBitVector.h</label>
      </node>
      <node id="122">
        <label>Graphs/OfflineConsG.h</label>
        <link refid="_offline_cons_g_8h_source"/>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>limits.h</label>
      </node>
      <node id="39">
        <label>llvm/Analysis/ScalarEvolution.h</label>
      </node>
      <node id="53">
        <label>llvm/Support/GraphWriter.h</label>
      </node>
      <node id="62">
        <label>Graphs/VFG.h</label>
        <link refid="_v_f_g_8h_source"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>Graphs/SVFG.h</label>
        <link refid="_s_v_f_g_8h_source"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>MSSA/MemSSA.h</label>
        <link refid="_mem_s_s_a_8h_source"/>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>llvm/Support/Compiler.h</label>
      </node>
      <node id="74">
        <label>Util/SVFModule.h</label>
        <link refid="_s_v_f_module_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>Graphs/ConsG.h</label>
        <link refid="_cons_g_8h_source"/>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>MemoryModel/MemModel.h</label>
        <link refid="_mem_model_8h_source"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>epd.h</label>
        <link refid="epd_8h_source"/>
      </node>
      <node id="79">
        <label>SVF-FE/SymbolTableInfo.h</label>
        <link refid="_symbol_table_info_8h_source"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>DDA/DDAStat.h</label>
        <link refid="_d_d_a_stat_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>llvm/Support/type_traits.h</label>
      </node>
      <node id="23">
        <label>llvm/IR/GetElementPtrTypeIterator.h</label>
      </node>
      <node id="86">
        <label>Util/WorkList.h</label>
        <link refid="_work_list_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>MSSA/MemRegion.h</label>
        <link refid="_mem_region_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>Graphs/VFGEdge.h</label>
        <link refid="_v_f_g_edge_8h_source"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>stack</label>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
      <node id="22">
        <label>llvm/ADT/PointerIntPair.h</label>
      </node>
      <node id="26">
        <label>llvm/Support/ToolOutputFile.h</label>
      </node>
      <node id="55">
        <label>llvm/Transforms/Utils/Local.h</label>
      </node>
      <node id="77">
        <label>PAGNode.h</label>
        <link refid="_p_a_g_node_8h_source"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>llvm/ADT/StringMap.h</label>
      </node>
      <node id="64">
        <label>MemoryModel/PointerAnalysisImpl.h</label>
        <link refid="_pointer_analysis_impl_8h_source"/>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>llvm/IR/Operator.h</label>
      </node>
      <node id="75">
        <label>time.h</label>
      </node>
      <node id="93">
        <label>math.h</label>
      </node>
      <node id="106">
        <label>llvm/Transforms/IPO/PassManagerBuilder.h</label>
      </node>
      <node id="83">
        <label>llvm/Support/JSON.h</label>
      </node>
      <node id="50">
        <label>llvm/Analysis/PostDominators.h</label>
      </node>
      <node id="88">
        <label>cstdlib</label>
      </node>
      <node id="57">
        <label>iostream</label>
      </node>
      <node id="56">
        <label>llvm/IR/DebugInfo.h</label>
      </node>
      <node id="49">
        <label>llvm/Analysis/DominanceFrontier.h</label>
      </node>
      <node id="17">
        <label>deque</label>
      </node>
      <node id="76">
        <label>Graphs/ICFGEdge.h</label>
        <link refid="_i_c_f_g_edge_8h_source"/>
      </node>
      <node id="15">
        <label>unordered_map</label>
      </node>
      <node id="47">
        <label>llvm/IRReader/IRReader.h</label>
      </node>
      <node id="5">
        <label>Util/SVFBasicTypes.h</label>
        <link refid="_s_v_f_basic_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>llvm/Support/FileSystem.h</label>
      </node>
      <node id="43">
        <label>llvm/IR/GlobalVariable.h</label>
      </node>
      <node id="48">
        <label>llvm/Transforms/Utils/UnifyFunctionExitNodes.h</label>
      </node>
      <node id="114">
        <label>WPA/WPAStat.h</label>
        <link refid="_w_p_a_stat_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>Graphs/ICFGNode.h</label>
        <link refid="_i_c_f_g_node_8h_source"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>Graphs/SVFGOPT.h</label>
        <link refid="_s_v_f_g_o_p_t_8h_source"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>WPA/Andersen.h</label>
        <link refid="_andersen_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>WPA/VersionedFlowSensitive.h</label>
        <link refid="_versioned_flow_sensitive_8h_source"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>llvm/Bitcode/BitcodeWriter.h</label>
      </node>
      <node id="33">
        <label>type_traits</label>
      </node>
      <node id="12">
        <label>set</label>
      </node>
      <node id="123">
        <label>algorithm</label>
      </node>
      <node id="105">
        <label>llvm/IR/LegacyPassManager.h</label>
      </node>
      <node id="91">
        <label>stdio.h</label>
      </node>
      <node id="19">
        <label>llvm/IR/DerivedTypes.h</label>
      </node>
      <node id="44">
        <label>llvm/Support/SourceMgr.h</label>
      </node>
      <node id="35">
        <label>llvm/IR/Instructions.h</label>
      </node>
      <node id="104">
        <label>SVF-FE/DataFlowUtil.h</label>
        <link refid="_data_flow_util_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>SVF-FE/GEPTypeBridgeIterator.h</label>
        <link refid="_g_e_p_type_bridge_iterator_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>SVF-FE/LLVMModule.h</label>
        <link refid="_l_l_v_m_module_8h_source"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>memory</label>
      </node>
      <node id="24">
        <label>Graphs/GraphPrinter.h</label>
        <link refid="_graph_printer_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>llvm/IR/CallSite.h</label>
      </node>
      <node id="109">
        <label>Graphs/SVFGEdge.h</label>
        <link refid="_s_v_f_g_edge_8h_source"/>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>llvm/IR/InstIterator.h</label>
      </node>
      <node id="42">
        <label>llvm/Analysis/CallGraph.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/DDA/DDAVFSolver.h</label>
        <link refid="_d_d_a_v_f_solver_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/DDA/FlowDDA.h</label>
        <link refid="_flow_d_d_a_8h_source"/>
      </node>
      <node id="2">
        <label>include/DDA/ContextDDA.h</label>
        <link refid="_context_d_d_a_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_s_v_f_1_1_d_d_a_v_f_solver" prot="public">SVF::DDAVFSolver</innerclass>
    <innernamespace refid="namespace_s_v_f">SVF</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>DDAVFSolver.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Jul<sp/>3,<sp/>2014</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Yulei<sp/>Sui</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VALUEFLOWDDA_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VALUEFLOWDDA_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;DDA/DDAStat.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MSSA/SVFGBuilder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;WPA/Andersen.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Util/SCC.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_s_v_f" kindref="compound">SVF</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CVar,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CPtSet,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DPIm&gt;</highlight></codeline>
<codeline lineno="24" refid="class_s_v_f_1_1_d_d_a_v_f_solver" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver" kindref="compound">DDAVFSolver</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_s_v_f_1_1_d_d_a_stat" kindref="compound">DDAStat</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_s_c_c_detection" kindref="compound">SCCDetection&lt;SVFG*&gt;</ref><sp/><ref refid="class_s_v_f_1_1_s_c_c_detection" kindref="compound">SVFGSCC</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_s_c_c_detection" kindref="compound">SCCDetection&lt;PTACallGraph*&gt;</ref><sp/><ref refid="class_s_v_f_1_1_s_c_c_detection" kindref="compound">CallGraphSCC</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PTACallGraphEdge::CallInstSet<sp/>CallInstSet;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PAG::CallSiteSet<sp/>CallSiteSet;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>OrderedSet&lt;DPIm&gt;<sp/>DPTItemSet;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>OrderedMap&lt;DPIm,<sp/>CPtSet&gt;<sp/>DPImToCPtSetMap;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>OrderedMap&lt;DPIm,CVar&gt;<sp/>DPMToCVarMap;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>OrderedMap&lt;DPIm,DPIm&gt;<sp/>DPMToDPMMap;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>OrderedMap&lt;NodeID,<sp/>DPTItemSet&gt;<sp/>LocToDPMVecMap;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>OrderedSet&lt;const<sp/>SVFGEdge*<sp/>&gt;<sp/>ConstSVFGEdgeSet;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>SVFGEdge::SVFGEdgeSetTy<sp/>SVFGEdgeSet;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>OrderedMap&lt;const<sp/>SVFGNode*,<sp/>DPTItemSet&gt;<sp/>StoreToPMSetMap;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7ee96b513074c283d23434590ce15e7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7ee96b513074c283d23434590ce15e7d" kindref="member">DDAVFSolver</ref>():<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1afdecfbacc64cb8d694268aa73ec8a7b6" kindref="member">outOfBudgetQuery</ref>(false),<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af08857f907caa32c090eed2c1b404729" kindref="member">_pag</ref>(NULL),<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a74d83f06e8fc0ecedc1e1846030c99c6" kindref="member">_svfg</ref>(NULL),<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa1d1b6e8cc23f0a6d3935cbe4f02cbdf" kindref="member">_ander</ref>(NULL),<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1abf24080617c6a74abed9f0bb0bc9c0c5" kindref="member">_callGraph</ref>(NULL),<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a4c307d486756daa1e79595b1e9edc40a" kindref="member">_callGraphSCC</ref>(NULL),<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a54f5d4972238ae69f19c9da3b9f51644" kindref="member">_svfgSCC</ref>(NULL),<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae40c7bad663e0fa07dee4be3d1794ff2" kindref="member">ddaStat</ref>(NULL)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a211f2f0c572d5085d22c2cb40341b606" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a211f2f0c572d5085d22c2cb40341b606" kindref="member">~DDAVFSolver</ref>()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa1d1b6e8cc23f0a6d3935cbe4f02cbdf" kindref="member">_ander</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AndersenWaveDiff::releaseAndersenWaveDiff();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa1d1b6e8cc23f0a6d3935cbe4f02cbdf" kindref="member">_ander</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a74d83f06e8fc0ecedc1e1846030c99c6" kindref="member">_svfg</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DDASVFGBuilder::releaseDDASVFG();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a74d83f06e8fc0ecedc1e1846030c99c6" kindref="member">_svfg</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a54f5d4972238ae69f19c9da3b9f51644" kindref="member">_svfgSCC</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a54f5d4972238ae69f19c9da3b9f51644" kindref="member">_svfgSCC</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a54f5d4972238ae69f19c9da3b9f51644" kindref="member">_svfgSCC</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1abf24080617c6a74abed9f0bb0bc9c0c5" kindref="member">_callGraph</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a4c307d486756daa1e79595b1e9edc40a" kindref="member">_callGraphSCC</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a73bbf4f763316e8d5db62d163da35a18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>NodeBS&amp;<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a73bbf4f763316e8d5db62d163da35a18" kindref="member">getCandidateQueries</ref>()</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae0e78fafb7eec0fbc1a02d24547335e9" kindref="member">candidateQueries</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ad7d92fad8606d5512786a7b7a08930e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>DPIm<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ad7d92fad8606d5512786a7b7a08930e2" kindref="member">getDPIm</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVar&amp;<sp/>var,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">SVFGNode</ref>*<sp/>loc)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="74"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DPIm<sp/>dpm(var,loc);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dpm;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a99764ee5bc19378795fe464e9036e78b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a99764ee5bc19378795fe464e9036e78b" kindref="member">unionDDAPts</ref>(CPtSet&amp;<sp/>pts,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CPtSet&amp;<sp/>targetPts)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pts<sp/>|=<sp/>targetPts);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae7949e141978474f3b6cb510bacafa37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae7949e141978474f3b6cb510bacafa37" kindref="member">unionDDAPts</ref>(DPIm<sp/>dpm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CPtSet&amp;<sp/>targetPts)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CPtSet&amp;<sp/>pts<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7b35588de00e322afd742041bf735571" kindref="member">isTopLevelPtrStmt</ref>(dpm.getLoc())<sp/>?<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a2d6df8149b45d719e22fc505df94171a" kindref="member">dpmToTLCPtSetMap</ref>[dpm]<sp/>:<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a2565bf8dcacb22350dc1dc98ec7595f2" kindref="member">dpmToADCPtSetMap</ref>[dpm];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pts<sp/>|=<sp/>targetPts;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a5a8632a957fce63f186dd8b657566dd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a5a8632a957fce63f186dd8b657566dd2" kindref="member">addDDAPts</ref>(CPtSet&amp;<sp/>pts,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVar&amp;<sp/>var)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pts.set(var);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acb7980c7e0d1d8ad6abab0b80831d2a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref>*<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acb7980c7e0d1d8ad6abab0b80831d2a9" kindref="member">getSVFG</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="96"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a74d83f06e8fc0ecedc1e1846030c99c6" kindref="member">_svfg</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a1fdd7c0efa8f0506edfba2da8f2b3cc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_s_c_c_detection" kindref="compound">SVFGSCC</ref>*<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a1fdd7c0efa8f0506edfba2da8f2b3cc0" kindref="member">getSVFGSCC</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="101"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a54f5d4972238ae69f19c9da3b9f51644" kindref="member">_svfgSCC</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dump<sp/>cptsSet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dumpCPtSet(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CPtSet&amp;<sp/>cpts)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="106"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CPtSet::iterator<sp/>it<sp/>=<sp/>cpts.begin(),<sp/>eit<sp/>=<sp/>cpts.end();<sp/>it!=eit;<sp/>++it)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/>(*it)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a52737dd41c63404ef91691154aa250ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CPtSet&amp;<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a52737dd41c63404ef91691154aa250ce" kindref="member">findPT</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isbkVisited(dpm))</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CPtSet&amp;<sp/>cpts<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae31e9281e4f1e0585fdf328b7339e1bf" kindref="member">getCachedPointsTo</ref>(dpm);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,<sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>already<sp/>backward<sp/>visited<sp/>dpm:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,<sp/>dpm.dump());</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,<sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>return<sp/>points-to:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,<sp/>dumpCPtSet(cpts));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cpts;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,<sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>backward<sp/>visit<sp/>dpm:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,<sp/>dpm.dump());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7112ce6145be0855f8b035bb0d8a331c" kindref="member">markbkVisited</ref>(dpm);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addDpmToLoc(dpm);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(testOutOfBudget(dpm)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CPtSet<sp/>pts;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a99f631cf1bc438e3f08f7f935e98e38d" kindref="member">handleSingleStatement</ref>(dpm,<sp/>pts);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateCachedPointsTo(dpm,<sp/>pts);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae31e9281e4f1e0585fdf328b7339e1bf" kindref="member">getCachedPointsTo</ref>(dpm);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="147" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a99f631cf1bc438e3f08f7f935e98e38d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a99f631cf1bc438e3f08f7f935e98e38d" kindref="member">handleSingleStatement</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm,<sp/>CPtSet&amp;<sp/>pts)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1afcc074be34dd0c45418ff16b3d9d4192" kindref="member">resolveFunPtr</ref>(dpm);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">SVFGNode</ref>*<sp/>node<sp/>=<sp/>dpm.getLoc();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SVFUtil::isa&lt;AddrSVFGNode&gt;(node))</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acfe7d961caac8f0f558881a9a006b1fa" kindref="member">handleAddr</ref>(pts,dpm,SVFUtil::cast&lt;AddrSVFGNode&gt;(node));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SVFUtil::isa&lt;CopySVFGNode&gt;(node)<sp/>||<sp/>SVFUtil::isa&lt;PHISVFGNode&gt;(node)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>SVFUtil::isa&lt;ActualParmSVFGNode&gt;(node)<sp/>||<sp/>SVFUtil::isa&lt;FormalParmSVFGNode&gt;(node)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>SVFUtil::isa&lt;ActualRetSVFGNode&gt;(node)<sp/>||<sp/>SVFUtil::isa&lt;FormalRetSVFGNode&gt;(node)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>SVFUtil::isa&lt;NullPtrSVFGNode&gt;(node))</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7a6af30f30f32d55fc910f2ae4909791" kindref="member">backtraceAlongDirectVF</ref>(pts,dpm);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SVFUtil::isa&lt;GepSVFGNode&gt;(node))</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CPtSet<sp/>gepPts;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7a6af30f30f32d55fc910f2ae4909791" kindref="member">backtraceAlongDirectVF</ref>(gepPts,dpm);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a99764ee5bc19378795fe464e9036e78b" kindref="member">unionDDAPts</ref>(pts,<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ab10a34efa1acb6125ea32cf7a8cf919f" kindref="member">processGepPts</ref>(SVFUtil::cast&lt;GepSVFGNode&gt;(node),gepPts));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SVFUtil::isa&lt;LoadSVFGNode&gt;(node))</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CPtSet<sp/>loadpts;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acd694c2092adf8c516d1aba5f798cec7" kindref="member">startNewPTCompFromLoadSrc</ref>(loadpts,dpm);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CPtSet::iterator<sp/>it<sp/>=<sp/>loadpts.begin(),<sp/>eit<sp/>=<sp/>loadpts.end();<sp/>it!=eit;<sp/>++it)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a040bc02742836b0a6d46ce3c3e89fa46" kindref="member">backtraceAlongIndirectVF</ref>(pts,<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ac4cb0b666d68d135c5e385bfc880fd67" kindref="member">getDPImWithOldCond</ref>(dpm,*it,node));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SVFUtil::isa&lt;StoreSVFGNode&gt;(node))</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a345e5379f53b618adef014aa6887bfe7" kindref="member">isMustAlias</ref>(getLoadDpm(dpm),dpm))</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,<sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;+++must<sp/>alias<sp/>for<sp/>load<sp/>and<sp/>store:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,<sp/>getLoadDpm(dpm).dump());</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,<sp/>dpm.dump());</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,<sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;+++\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOSTAT(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae40c7bad663e0fa07dee4be3d1794ff2" kindref="member">ddaStat</ref>-&gt;_NumOfMustAliases++);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backtraceToStoreSrc(pts,dpm);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CPtSet<sp/>storepts;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startNewPTCompFromStoreDst(storepts,dpm);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CPtSet::iterator<sp/>it<sp/>=<sp/>storepts.begin(),<sp/>eit<sp/>=<sp/>storepts.end();<sp/>it!=eit;<sp/>++it)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ace35b8247204d9806ca1a4f01bff2364" kindref="member">propagateViaObj</ref>(*it,getLoadCVar(dpm)))</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backtraceToStoreSrc(pts,<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ac4cb0b666d68d135c5e385bfc880fd67" kindref="member">getDPImWithOldCond</ref>(dpm,*it,node));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a94bcddbc7b9ccecb3fbb693b13372785" kindref="member">isStrongUpdate</ref>(storepts,SVFUtil::cast&lt;StoreSVFGNode&gt;(node)))</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,<sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;backward<sp/>strong<sp/>update<sp/>for<sp/>obj<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dpm.getCurNodeID()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOSTAT(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aeb6b56cf3d140d251b0524eb5cbd6dce" kindref="member">addSUStat</ref>(dpm,node);)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOSTAT(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7d0775354df32f293e98578ed071d33c" kindref="member">rmSUStat</ref>(dpm,node);)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a040bc02742836b0a6d46ce3c3e89fa46" kindref="member">backtraceAlongIndirectVF</ref>(pts,<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ac4cb0b666d68d135c5e385bfc880fd67" kindref="member">getDPImWithOldCond</ref>(dpm,*it,node));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a040bc02742836b0a6d46ce3c3e89fa46" kindref="member">backtraceAlongIndirectVF</ref>(pts,dpm);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SVFUtil::isa&lt;MRSVFGNode&gt;(node))</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a040bc02742836b0a6d46ce3c3e89fa46" kindref="member">backtraceAlongIndirectVF</ref>(pts,dpm);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;unexpected<sp/>kind<sp/>of<sp/>SVFG<sp/>nodes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a8c5220108a65fa281959529cb1e9cc57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a8c5220108a65fa281959529cb1e9cc57" kindref="member">reCompute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVFGEdgeSet<sp/>newIndirectEdges;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af08857f907caa32c090eed2c1b404729" kindref="member">_pag</ref>-&gt;isFunPtr(dpm.getCurNodeID()))</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CallSiteSet&amp;<sp/>csSet<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af08857f907caa32c090eed2c1b404729" kindref="member">_pag</ref>-&gt;getIndCallSites(dpm.getCurNodeID());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(CallSiteSet::const_iterator<sp/>it<sp/>=<sp/>csSet.begin(),<sp/>eit<sp/>=<sp/>csSet.end();<sp/>it!=eit;<sp/>++it)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a4f63b6b3a06633675ae99667cbaa6cdc" kindref="member">updateCallGraphAndSVFG</ref>(dpm,<sp/>(*it),newIndirectEdges);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!newIndirectEdges.empty())</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a4c307d486756daa1e79595b1e9edc40a" kindref="member">_callGraphSCC</ref>-&gt;find();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ace037388135f272365cee2e87844bfba" kindref="member">reComputeForEdges</ref>(dpm,newIndirectEdges,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVFGEdgeSet<sp/>edgeSet(dpm.getLoc()-&gt;getOutEdges());</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ace037388135f272365cee2e87844bfba" kindref="member">reComputeForEdges</ref>(dpm,edgeSet,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ace037388135f272365cee2e87844bfba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ace037388135f272365cee2e87844bfba" kindref="member">reComputeForEdges</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SVFGEdgeSet&amp;<sp/>edgeSet,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>indirectCall<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(SVFGNode::const_iterator<sp/>it<sp/>=<sp/>edgeSet.begin(),<sp/>eit<sp/>=<sp/>edgeSet.end();<sp/>it<sp/>!=<sp/>eit;<sp/>++it)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_v_f_g_edge" kindref="compound">SVFGEdge</ref>*<sp/>edge<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">SVFGNode</ref>*<sp/>dst<sp/>=<sp/>edge-&gt;getDstNode();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LocToDPMVecMap::const_iterator<sp/>locIt<sp/>=<sp/>getLocToDPMVecMap().find(dst-&gt;<ref refid="class_s_v_f_1_1_generic_node_1ac3e55ef37aefb411ea4c87b1aa3b1895" kindref="member">getId</ref>());</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(locIt<sp/>==<sp/>getLocToDPMVecMap().end())</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DPTItemSet<sp/>dpmSet(locIt-&gt;second.begin(),<sp/>locIt-&gt;second.end());</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DPTItemSet::const_iterator<sp/>it<sp/>=<sp/>dpmSet.begin(),eit<sp/>=<sp/>dpmSet.end();<sp/>it!=eit;<sp/>++it)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dstDpm<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!indirectCall<sp/>&amp;&amp;<sp/>SVFUtil::isa&lt;IndirectSVFGEdge&gt;(edge)<sp/>&amp;&amp;<sp/>!SVFUtil::isa&lt;LoadSVFGNode&gt;(edge-&gt;getDstNode()))</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dstDpm.getCurNodeID()<sp/>==<sp/>dpm.getCurNodeID())</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>Recompute,<sp/>forward<sp/>from<sp/>:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,<sp/>dpm.dump());</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOSTAT(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae40c7bad663e0fa07dee4be3d1794ff2" kindref="member">ddaStat</ref>-&gt;_NumOfStepInCycle++);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clearbkVisited(dstDpm);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a52737dd41c63404ef91691154aa250ce" kindref="member">findPT</ref>(dstDpm);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(indirectCall)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>Recompute<sp/>for<sp/>indirect<sp/>call<sp/>from<sp/>:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>Recompute<sp/>forward<sp/>from<sp/>:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,<sp/>dpm.dump());</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOSTAT(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae40c7bad663e0fa07dee4be3d1794ff2" kindref="member">ddaStat</ref>-&gt;_NumOfStepInCycle++);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clearbkVisited(dstDpm);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a52737dd41c63404ef91691154aa250ce" kindref="member">findPT</ref>(dstDpm);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af2a0732401e5904ebf81878d3ffe0675" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af2a0732401e5904ebf81878d3ffe0675" kindref="member">buildSVFG</ref>(<ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref>*<sp/>pag)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa1d1b6e8cc23f0a6d3935cbe4f02cbdf" kindref="member">_ander</ref><sp/>=<sp/><ref refid="class_s_v_f_1_1_andersen_wave_diff_1a74134978db1c0d9c71122bc63f4b73c1" kindref="member">AndersenWaveDiff::createAndersenWaveDiff</ref>(pag);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a74d83f06e8fc0ecedc1e1846030c99c6" kindref="member">_svfg</ref><sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a0d563fe8b016b27a58f5b054fec9c38a" kindref="member">svfgBuilder</ref>.buildPTROnlySVFGWithoutOPT(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa1d1b6e8cc23f0a6d3935cbe4f02cbdf" kindref="member">_ander</ref>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af08857f907caa32c090eed2c1b404729" kindref="member">_pag</ref><sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a74d83f06e8fc0ecedc1e1846030c99c6" kindref="member">_svfg</ref>-&gt;<ref refid="class_s_v_f_1_1_v_f_g_1a560e0d31a6a9ba4c2b0ac540c233fef1" kindref="member">getPAG</ref>();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1afe518d3d7f8051de5b9860f2460aa1b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1afe518d3d7f8051de5b9860f2460aa1b7" kindref="member">resetQuery</ref>()</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1afdecfbacc64cb8d694268aa73ec8a7b6" kindref="member">outOfBudgetQuery</ref>)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ab60c701f1881d88aa4440991fb972638" kindref="member">OOBResetVisited</ref>();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa724698d499615bce7caf8f312b746a7" kindref="member">locToDpmSetMap</ref>.clear();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a9d8959dfee05685cd74d0d7a78069692" kindref="member">dpmToloadDpmMap</ref>.clear();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a6d62420837fe0c7814fc4da68a91eda4" kindref="member">loadToPTCVarMap</ref>.clear();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1afdecfbacc64cb8d694268aa73ec8a7b6" kindref="member">outOfBudgetQuery</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae40c7bad663e0fa07dee4be3d1794ff2" kindref="member">ddaStat</ref>-&gt;_NumOfStep<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ab60c701f1881d88aa4440991fb972638" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ab60c701f1881d88aa4440991fb972638" kindref="member">OOBResetVisited</ref>()</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LocToDPMVecMap::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa724698d499615bce7caf8f312b746a7" kindref="member">locToDpmSetMap</ref>.begin(),eit<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa724698d499615bce7caf8f312b746a7" kindref="member">locToDpmSetMap</ref>.end();<sp/>it!=eit;<sp/>++it)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DPTItemSet<sp/>dpmSet(it-&gt;second.begin(),<sp/>it-&gt;second.end());</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DPTItemSet::const_iterator<sp/>dit<sp/>=<sp/>dpmSet.begin(),deit=dpmSet.end();<sp/>dit!=deit;<sp/>++dit)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isOutOfBudgetDpm(*dit)==</highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clearbkVisited(*dit);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a55803a2d30137b5ad15c5afeec7c6b28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">SVFGNode</ref>*<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a55803a2d30137b5ad15c5afeec7c6b28" kindref="member">getDefSVFGNode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_p_a_g_node" kindref="compound">PAGNode</ref>*<sp/>pagNode)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="320"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acb7980c7e0d1d8ad6abab0b80831d2a9" kindref="member">getSVFG</ref>()-&gt;<ref refid="class_s_v_f_1_1_s_v_f_g_1a8e7a945f4266e8dc7dcfff2ad6494bfb" kindref="member">getDefSVFGNode</ref>(pagNode);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a040bc02742836b0a6d46ce3c3e89fa46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a040bc02742836b0a6d46ce3c3e89fa46" kindref="member">backtraceAlongIndirectVF</ref>(CPtSet&amp;<sp/>pts,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>oldDpm)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">SVFGNode</ref>*<sp/>node<sp/>=<sp/>oldDpm.getLoc();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NodeID<sp/>obj<sp/>=<sp/>oldDpm.getCurNodeID();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af08857f907caa32c090eed2c1b404729" kindref="member">_pag</ref>-&gt;isConstantObj(obj)<sp/>||<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af08857f907caa32c090eed2c1b404729" kindref="member">_pag</ref>-&gt;isNonPointerObj(obj))</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SVFGEdgeSet<sp/>edgeSet(node-&gt;getInEdges());</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(SVFGNode::const_iterator<sp/>it<sp/>=<sp/>edgeSet.begin(),<sp/>eit<sp/>=<sp/>edgeSet.end();<sp/>it<sp/>!=<sp/>eit;<sp/>++it)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_indirect_s_v_f_g_edge" kindref="compound">IndirectSVFGEdge</ref>*<sp/>indirEdge<sp/>=<sp/>SVFUtil::dyn_cast&lt;IndirectSVFGEdge&gt;(*it))</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PointsTo&amp;<sp/>guard<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">PointsTo&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(indirEdge-&gt;getPointsTo());</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(guard.test(obj))</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,<sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t\t==backtrace<sp/>indirectVF<sp/>svfgNode<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indirEdge-&gt;getDstID()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>--&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>indirEdge-&gt;getSrcID()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af6a6243b497df5fdab9f658b9add9c8a" kindref="member">backwardPropDpm</ref>(pts,oldDpm.getCurNodeID(),oldDpm,indirEdge);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7a6af30f30f32d55fc910f2ae4909791" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7a6af30f30f32d55fc910f2ae4909791" kindref="member">backtraceAlongDirectVF</ref>(CPtSet&amp;<sp/>pts,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>oldDpm)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">SVFGNode</ref>*<sp/>node<sp/>=<sp/>oldDpm.getLoc();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SVFGEdgeSet<sp/>edgeSet(node-&gt;getInEdges());</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(SVFGNode::const_iterator<sp/>it<sp/>=<sp/>edgeSet.begin(),<sp/>eit<sp/>=<sp/>edgeSet.end();<sp/>it<sp/>!=<sp/>eit;<sp/>++it)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_direct_s_v_f_g_edge" kindref="compound">DirectSVFGEdge</ref>*<sp/>dirEdge<sp/>=<sp/>SVFUtil::dyn_cast&lt;DirectSVFGEdge&gt;(*it))</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,<sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t\t==backtrace<sp/>directVF<sp/>svfgNode<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirEdge-&gt;getDstID()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>--&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dirEdge-&gt;getSrcID()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">SVFGNode</ref>*<sp/>srcNode<sp/>=<sp/>dirEdge-&gt;getSrcNode();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af6a6243b497df5fdab9f658b9add9c8a" kindref="member">backwardPropDpm</ref>(pts,<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acb7980c7e0d1d8ad6abab0b80831d2a9" kindref="member">getSVFG</ref>()-&gt;getLHSTopLevPtr(srcNode)-&gt;getId(),oldDpm,dirEdge);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acd694c2092adf8c516d1aba5f798cec7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acd694c2092adf8c516d1aba5f798cec7" kindref="member">startNewPTCompFromLoadSrc</ref>(CPtSet&amp;<sp/>pts,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>oldDpm)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_load_v_f_g_node" kindref="compound">LoadSVFGNode</ref>*<sp/>load<sp/>=<sp/>SVFUtil::cast&lt;LoadSVFGNode&gt;(oldDpm.getLoc());</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">SVFGNode</ref>*<sp/>loadSrc<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a55803a2d30137b5ad15c5afeec7c6b28" kindref="member">getDefSVFGNode</ref>(load-&gt;getPAGSrcNode());</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,<sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;!##start<sp/>new<sp/>computation<sp/>from<sp/>loadSrc<sp/>svfgNode<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>load-&gt;<ref refid="class_s_v_f_1_1_generic_node_1ac3e55ef37aefb411ea4c87b1aa3b1895" kindref="member">getId</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>--&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>loadSrc-&gt;<ref refid="class_s_v_f_1_1_generic_node_1ac3e55ef37aefb411ea4c87b1aa3b1895" kindref="member">getId</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_v_f_g_edge" kindref="compound">SVFGEdge</ref>*<sp/>edge<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acb7980c7e0d1d8ad6abab0b80831d2a9" kindref="member">getSVFG</ref>()-&gt;<ref refid="class_s_v_f_1_1_s_v_f_g_1a60271ab47e0736f515a2267fd5c38b09" kindref="member">getSVFGEdge</ref>(loadSrc,load,SVFGEdge::IntraDirectVF);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(edge<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Edge<sp/>not<sp/>found!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af6a6243b497df5fdab9f658b9add9c8a" kindref="member">backwardPropDpm</ref>(pts,load-&gt;getPAGSrcNodeID(),oldDpm,edge);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startNewPTCompFromStoreDst(CPtSet&amp;<sp/>pts,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>oldDpm)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_store_v_f_g_node" kindref="compound">StoreSVFGNode</ref>*<sp/>store<sp/>=<sp/>SVFUtil::cast&lt;StoreSVFGNode&gt;(oldDpm.getLoc());</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">SVFGNode</ref>*<sp/>storeDst<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a55803a2d30137b5ad15c5afeec7c6b28" kindref="member">getDefSVFGNode</ref>(store-&gt;getPAGDstNode());</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,<sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;!##start<sp/>new<sp/>computation<sp/>from<sp/>storeDst<sp/>svfgNode<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>store-&gt;<ref refid="class_s_v_f_1_1_generic_node_1ac3e55ef37aefb411ea4c87b1aa3b1895" kindref="member">getId</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>--&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>storeDst-&gt;<ref refid="class_s_v_f_1_1_generic_node_1ac3e55ef37aefb411ea4c87b1aa3b1895" kindref="member">getId</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_v_f_g_edge" kindref="compound">SVFGEdge</ref>*<sp/>edge<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acb7980c7e0d1d8ad6abab0b80831d2a9" kindref="member">getSVFG</ref>()-&gt;<ref refid="class_s_v_f_1_1_s_v_f_g_1a60271ab47e0736f515a2267fd5c38b09" kindref="member">getSVFGEdge</ref>(storeDst,store,SVFGEdge::IntraDirectVF);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(edge<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Edge<sp/>not<sp/>found!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af6a6243b497df5fdab9f658b9add9c8a" kindref="member">backwardPropDpm</ref>(pts,store-&gt;getPAGDstNodeID(),oldDpm,edge);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>backtraceToStoreSrc(CPtSet&amp;<sp/>pts,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>oldDpm)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StoreSVFGNode*<sp/>store<sp/>=<sp/>SVFUtil::cast&lt;StoreSVFGNode&gt;(oldDpm.getLoc());</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SVFGNode*<sp/>storeSrc<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a55803a2d30137b5ad15c5afeec7c6b28" kindref="member">getDefSVFGNode</ref>(store-&gt;getPAGSrcNode());</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,<sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;++backtrace<sp/>to<sp/>storeSrc<sp/>from<sp/>svfgNode<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>getLoadDpm(oldDpm).getLoc()-&gt;getId()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>store-&gt;getId()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>storeSrc-&gt;getId()<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SVFGEdge*<sp/>edge<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acb7980c7e0d1d8ad6abab0b80831d2a9" kindref="member">getSVFG</ref>()-&gt;<ref refid="class_s_v_f_1_1_s_v_f_g_1a60271ab47e0736f515a2267fd5c38b09" kindref="member">getSVFGEdge</ref>(storeSrc,store,SVFGEdge::IntraDirectVF);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(edge<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Edge<sp/>not<sp/>found!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af6a6243b497df5fdab9f658b9add9c8a" kindref="member">backwardPropDpm</ref>(pts,store-&gt;getPAGSrcNodeID(),oldDpm,edge);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"></codeline>
<codeline lineno="398" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af6a6243b497df5fdab9f658b9add9c8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af6a6243b497df5fdab9f658b9add9c8a" kindref="member">backwardPropDpm</ref>(CPtSet&amp;<sp/>pts,<sp/>NodeID<sp/>ptr,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>oldDpm,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_v_f_g_edge" kindref="compound">SVFGEdge</ref>*<sp/>edge)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DPIm<sp/>dpm(oldDpm);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dpm.setLocVar(edge-&gt;getSrcNode(),ptr);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOTIMESTAT(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start<sp/>=<sp/><ref refid="class_s_v_f_1_1_p_t_a_stat_1aea47f02f3f56b089ba8ed45270e16eb4" kindref="member">DDAStat::getClk</ref>());</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a601282325e55badc15f3ba9141816af5" kindref="member">handleBKCondition</ref>(dpm,edge)==</highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOTIMESTAT(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae40c7bad663e0fa07dee4be3d1794ff2" kindref="member">ddaStat</ref>-&gt;_TotalTimeOfBKCondition<sp/>+=<sp/><ref refid="class_s_v_f_1_1_p_t_a_stat_1aea47f02f3f56b089ba8ed45270e16eb4" kindref="member">DDAStat::getClk</ref>()<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBOUT(DDDA,<sp/>SVFUtil::outs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t!!!<sp/>infeasible<sp/>path<sp/>svfgNode:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>edge-&gt;getDstID()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>--|<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>edge-&gt;<ref refid="class_s_v_f_1_1_generic_edge_1ae6792506a0150a9400d635eceab7f9e7" kindref="member">getSrcID</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOSTAT(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae40c7bad663e0fa07dee4be3d1794ff2" kindref="member">ddaStat</ref>-&gt;_NumOfInfeasiblePath++);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SVFUtil::isa&lt;IndirectSVFGEdge&gt;(edge))</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a1cd1023bca18db16bc54e622c881e494" kindref="member">addLoadDpmAndCVar</ref>(dpm,getLoadDpm(oldDpm),getLoadCVar(oldDpm));</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOSTAT(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae40c7bad663e0fa07dee4be3d1794ff2" kindref="member">ddaStat</ref>-&gt;_NumOfDPM++);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a99764ee5bc19378795fe464e9036e78b" kindref="member">unionDDAPts</ref>(pts,<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a52737dd41c63404ef91691154aa250ce" kindref="member">findPT</ref>(dpm));</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a345e5379f53b618adef014aa6887bfe7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a345e5379f53b618adef014aa6887bfe7" kindref="member">isMustAlias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a94bcddbc7b9ccecb3fbb693b13372785" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a94bcddbc7b9ccecb3fbb693b13372785" kindref="member">isStrongUpdate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CPtSet&amp;<sp/>dstCPSet,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_store_v_f_g_node" kindref="compound">StoreSVFGNode</ref>*<sp/>store)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dstCPSet.count()<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CPtSet::iterator<sp/>it<sp/>=<sp/>dstCPSet.begin();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVar&amp;<sp/>var<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Strong<sp/>update<sp/>can<sp/>be<sp/>made<sp/>if<sp/>this<sp/>points-to<sp/>target<sp/>is<sp/>not<sp/>heap,<sp/>array<sp/>or<sp/>field-insensitive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a645c7d0637b49e139898016ff652e1f3" kindref="member">isHeapCondMemObj</ref>(var,store)<sp/>&amp;&amp;<sp/>!isArrayCondMemObj(var)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!isFieldInsenCondMemObj(var)<sp/>&amp;&amp;<sp/>!<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a20cadb651b41343437e135e985c4e566" kindref="member">isLocalCVarInRecursion</ref>(var))</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a20cadb651b41343437e135e985c4e566" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a20cadb651b41343437e135e985c4e566" kindref="member">isLocalCVarInRecursion</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVar&amp;<sp/>var)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="444"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NodeID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a3fa002d4ba4194ffde62ecbdd361a24d" kindref="member">getPtrNodeID</ref>(var);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_mem_obj" kindref="compound">MemObj</ref>*<sp/>obj<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af08857f907caa32c090eed2c1b404729" kindref="member">_pag</ref>-&gt;<ref refid="class_s_v_f_1_1_p_a_g_1a2b288fce8efa1b0b1b620efec2c96eb6" kindref="member">getObject</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(obj<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;object<sp/>not<sp/>found!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj-&gt;isStack())</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_s_v_f_1a3bacb4f95c73e6d794901d01c6b65a83" kindref="member">AllocaInst</ref>*<sp/>local<sp/>=<sp/>SVFUtil::dyn_cast&lt;AllocaInst&gt;(obj-&gt;<ref refid="class_s_v_f_1_1_mem_obj_1ae952c8b6b92c6cbef9494a83b411a60f" kindref="member">getRefVal</ref>()))</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref>*<sp/>fun<sp/>=<sp/>LLVMModuleSet::getLLVMModuleSet()-&gt;getSVFFunction(local-&gt;getFunction());</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a4c307d486756daa1e79595b1e9edc40a" kindref="member">_callGraphSCC</ref>-&gt;<ref refid="class_s_v_f_1_1_s_c_c_detection_1a5d699af73b1e7ad4e3a5f6d26b8b6d15" kindref="member">isInCycle</ref>(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1abf24080617c6a74abed9f0bb0bc9c0c5" kindref="member">_callGraph</ref>-&gt;<ref refid="class_s_v_f_1_1_p_t_a_call_graph_1aaab54c670518d9d6790707f76ea76aa1" kindref="member">getCallGraphNode</ref>(fun)-&gt;<ref refid="class_s_v_f_1_1_generic_node_1ac3e55ef37aefb411ea4c87b1aa3b1895" kindref="member">getId</ref>());</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ace35b8247204d9806ca1a4f01bff2364" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ace35b8247204d9806ca1a4f01bff2364" kindref="member">propagateViaObj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVar&amp;<sp/>storeObj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVar&amp;<sp/>loadObj)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a3fa002d4ba4194ffde62ecbdd361a24d" kindref="member">getPtrNodeID</ref>(storeObj)<sp/>==<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a3fa002d4ba4194ffde62ecbdd361a24d" kindref="member">getPtrNodeID</ref>(loadObj))</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1afcc074be34dd0c45418ff16b3d9d4192" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1afcc074be34dd0c45418ff16b3d9d4192" kindref="member">resolveFunPtr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref>*<sp/>cbn=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acb7980c7e0d1d8ad6abab0b80831d2a9" kindref="member">getSVFG</ref>()-&gt;isCallSiteRetSVFGNode(dpm.getLoc()))</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af08857f907caa32c090eed2c1b404729" kindref="member">_pag</ref>-&gt;isIndirectCallSites(cbn))</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NodeID<sp/>funPtr<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af08857f907caa32c090eed2c1b404729" kindref="member">_pag</ref>-&gt;getFunPtr(cbn);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DPIm<sp/>funPtrDpm(dpm);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>funPtrDpm.setLocVar(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acb7980c7e0d1d8ad6abab0b80831d2a9" kindref="member">getSVFG</ref>()-&gt;<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a55803a2d30137b5ad15c5afeec7c6b28" kindref="member">getDefSVFGNode</ref>(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af08857f907caa32c090eed2c1b404729" kindref="member">_pag</ref>-&gt;<ref refid="class_s_v_f_1_1_p_a_g_1a3aa1c92eb8a6fab72996964de80f19ac" kindref="member">getPAGNode</ref>(funPtr)),funPtr);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a52737dd41c63404ef91691154aa250ce" kindref="member">findPT</ref>(funPtrDpm);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref>*<sp/>fun<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acb7980c7e0d1d8ad6abab0b80831d2a9" kindref="member">getSVFG</ref>()-&gt;isFunEntrySVFGNode(dpm.getLoc()))</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CallInstSet<sp/>csSet;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa1d1b6e8cc23f0a6d3935cbe4f02cbdf" kindref="member">_ander</ref>-&gt;<ref refid="class_s_v_f_1_1_pointer_analysis_1a7c9b7e5fe37ae31ba84d167945ca57df" kindref="member">getPTACallGraph</ref>()-&gt;<ref refid="class_s_v_f_1_1_p_t_a_call_graph_1a9a4b0c6672288b9201ab254b4c49548d" kindref="member">getIndCallSitesInvokingCallee</ref>(fun,csSet);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(CallInstSet::const_iterator<sp/>it<sp/>=<sp/>csSet.begin(),<sp/>eit<sp/>=<sp/>csSet.end();<sp/>it!=eit;<sp/>++it)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NodeID<sp/>funPtr<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af08857f907caa32c090eed2c1b404729" kindref="member">_pag</ref>-&gt;getFunPtr(*it);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DPIm<sp/>funPtrDpm(dpm);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>funPtrDpm.setLocVar(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acb7980c7e0d1d8ad6abab0b80831d2a9" kindref="member">getSVFG</ref>()-&gt;<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a55803a2d30137b5ad15c5afeec7c6b28" kindref="member">getDefSVFGNode</ref>(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af08857f907caa32c090eed2c1b404729" kindref="member">_pag</ref>-&gt;<ref refid="class_s_v_f_1_1_p_a_g_1a3aa1c92eb8a6fab72996964de80f19ac" kindref="member">getPAGNode</ref>(funPtr)),funPtr);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a52737dd41c63404ef91691154aa250ce" kindref="member">findPT</ref>(funPtrDpm);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>NodeID<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a3fa002d4ba4194ffde62ecbdd361a24d" kindref="member">getPtrNodeID</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVar&amp;<sp/>var)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="498" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ab10a34efa1acb6125ea32cf7a8cf919f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>CPtSet<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ab10a34efa1acb6125ea32cf7a8cf919f" kindref="member">processGepPts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_gep_v_f_g_node" kindref="compound">GepSVFGNode</ref>*<sp/>gep,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CPtSet&amp;<sp/>srcPts)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="500" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acfe7d961caac8f0f558881a9a006b1fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acfe7d961caac8f0f558881a9a006b1fa" kindref="member">handleAddr</ref>(CPtSet&amp;<sp/>pts,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_addr_v_f_g_node" kindref="compound">AddrSVFGNode</ref>*<sp/>addr)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="502" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a38f5a6b666b2a427d55f1217f9c5595f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>CPtSet<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a38f5a6b666b2a427d55f1217f9c5595f" kindref="member">getConservativeCPts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="504" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a601282325e55badc15f3ba9141816af5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a601282325e55badc15f3ba9141816af5" kindref="member">handleBKCondition</ref>(DPIm&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_v_f_g_edge" kindref="compound">SVFGEdge</ref>*)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a4f63b6b3a06633675ae99667cbaa6cdc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a4f63b6b3a06633675ae99667cbaa6cdc" kindref="member">updateCallGraphAndSVFG</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref>*,<sp/>SVFGEdgeSet&amp;)<sp/>{}</highlight></codeline>
<codeline lineno="511"></codeline>
<codeline lineno="513"></codeline>
<codeline lineno="514" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7112ce6145be0855f8b035bb0d8a331c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7112ce6145be0855f8b035bb0d8a331c" kindref="member">markbkVisited</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm)</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a63d04c3af4529d0e0f82acd76ed57f6c" kindref="member">backwardVisited</ref>.insert(dpm);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isbkVisited(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a63d04c3af4529d0e0f82acd76ed57f6c" kindref="member">backwardVisited</ref>.find(dpm)!=<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a63d04c3af4529d0e0f82acd76ed57f6c" kindref="member">backwardVisited</ref>.end();</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearbkVisited(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm)</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a63d04c3af4529d0e0f82acd76ed57f6c" kindref="member">backwardVisited</ref>.find(dpm)!=<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a63d04c3af4529d0e0f82acd76ed57f6c" kindref="member">backwardVisited</ref>.end()<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;dpm<sp/>not<sp/>found!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a63d04c3af4529d0e0f82acd76ed57f6c" kindref="member">backwardVisited</ref>.erase(dpm);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"></codeline>
<codeline lineno="530"></codeline>
<codeline lineno="531" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae31e9281e4f1e0585fdf328b7339e1bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CPtSet&amp;<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae31e9281e4f1e0585fdf328b7339e1bf" kindref="member">getCachedPointsTo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7b35588de00e322afd742041bf735571" kindref="member">isTopLevelPtrStmt</ref>(dpm.getLoc()))</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getCachedTLPointsTo(dpm);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getCachedADPointsTo(dpm);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateCachedPointsTo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CPtSet&amp;<sp/>pts)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a99764ee5bc19378795fe464e9036e78b" kindref="member">unionDDAPts</ref>(dpm,<sp/>pts))</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOSTAT(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start<sp/>=<sp/><ref refid="class_s_v_f_1_1_p_t_a_stat_1aea47f02f3f56b089ba8ed45270e16eb4" kindref="member">DDAStat::getClk</ref>());</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a8c5220108a65fa281959529cb1e9cc57" kindref="member">reCompute</ref>(dpm);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOSTAT(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae40c7bad663e0fa07dee4be3d1794ff2" kindref="member">ddaStat</ref>-&gt;_AnaTimeCyclePerQuery<sp/>+=<sp/><ref refid="class_s_v_f_1_1_p_t_a_stat_1aea47f02f3f56b089ba8ed45270e16eb4" kindref="member">DDAStat::getClk</ref>()<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CPtSet&amp;<sp/>getCachedTLPointsTo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a2d6df8149b45d719e22fc505df94171a" kindref="member">dpmToTLCPtSetMap</ref>[dpm];</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CPtSet&amp;<sp/>getCachedADPointsTo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a2565bf8dcacb22350dc1dc98ec7595f2" kindref="member">dpmToADCPtSetMap</ref>[dpm];</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"></codeline>
<codeline lineno="558" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7b35588de00e322afd742041bf735571" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7b35588de00e322afd742041bf735571" kindref="member">isTopLevelPtrStmt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">SVFGNode</ref>*<sp/>stmt)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SVFUtil::isa&lt;StoreSVFGNode&gt;(stmt)<sp/>||<sp/>SVFUtil::isa&lt;MRSVFGNode&gt;(stmt))</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ac4cb0b666d68d135c5e385bfc880fd67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>DPIm<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ac4cb0b666d68d135c5e385bfc880fd67" kindref="member">getDPImWithOldCond</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>oldDpm,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVar&amp;<sp/>var,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">SVFGNode</ref>*<sp/>loc)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DPIm<sp/>dpm(oldDpm);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dpm.setLocVar(loc,<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a3fa002d4ba4194ffde62ecbdd361a24d" kindref="member">getPtrNodeID</ref>(var));</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SVFUtil::isa&lt;StoreSVFGNode&gt;(loc))</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a1cd1023bca18db16bc54e622c881e494" kindref="member">addLoadDpmAndCVar</ref>(dpm,getLoadDpm(oldDpm),var);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SVFUtil::isa&lt;LoadSVFGNode&gt;(loc))</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a1cd1023bca18db16bc54e622c881e494" kindref="member">addLoadDpmAndCVar</ref>(dpm,oldDpm,var);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOSTAT(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae40c7bad663e0fa07dee4be3d1794ff2" kindref="member">ddaStat</ref>-&gt;_NumOfDPM++);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dpm;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aba0ec611a5cfd096ac0b8b11e0bd5580" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aba0ec611a5cfd096ac0b8b11e0bd5580" kindref="member">SVFGSCCDetection</ref>()</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a54f5d4972238ae69f19c9da3b9f51644" kindref="member">_svfgSCC</ref>==NULL)</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a54f5d4972238ae69f19c9da3b9f51644" kindref="member">_svfgSCC</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_s_c_c_detection" kindref="compound">SVFGSCC</ref>(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acb7980c7e0d1d8ad6abab0b80831d2a9" kindref="member">getSVFG</ref>());</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a54f5d4972238ae69f19c9da3b9f51644" kindref="member">_svfgSCC</ref>-&gt;find();</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a1583ed2eb1d4b88dc2a5b4c0b6842496" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>NodeID<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a1583ed2eb1d4b88dc2a5b4c0b6842496" kindref="member">getSVFGSCCRepNode</ref>(NodeID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a54f5d4972238ae69f19c9da3b9f51644" kindref="member">_svfgSCC</ref>-&gt;<ref refid="class_s_v_f_1_1_s_c_c_detection_1a3a5fdc9330a657240f77199f5aee602d" kindref="member">repNode</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1add7daee4a0ecae479a5ab015130c8c93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1add7daee4a0ecae479a5ab015130c8c93" kindref="member">isSVFGNodeInCycle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">SVFGNode</ref>*<sp/>node)</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a54f5d4972238ae69f19c9da3b9f51644" kindref="member">_svfgSCC</ref>-&gt;<ref refid="class_s_v_f_1_1_s_c_c_detection_1a5d699af73b1e7ad4e3a5f6d26b8b6d15" kindref="member">isInCycle</ref>(node-&gt;<ref refid="class_s_v_f_1_1_generic_node_1ac3e55ef37aefb411ea4c87b1aa3b1895" kindref="member">getId</ref>());</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a034e3c8b2eec00aee9de439dfeeda332" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a034e3c8b2eec00aee9de439dfeeda332" kindref="member">edgeInSVFGSCC</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_v_f_g_edge" kindref="compound">SVFGEdge</ref>*<sp/>edge)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a1583ed2eb1d4b88dc2a5b4c0b6842496" kindref="member">getSVFGSCCRepNode</ref>(edge-&gt;<ref refid="class_s_v_f_1_1_generic_edge_1ae6792506a0150a9400d635eceab7f9e7" kindref="member">getSrcID</ref>())<sp/>==<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a1583ed2eb1d4b88dc2a5b4c0b6842496" kindref="member">getSVFGSCCRepNode</ref>(edge-&gt;getDstID()));</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1afc2b0eeb1d5d5f292690f3c949217c38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1afc2b0eeb1d5d5f292690f3c949217c38" kindref="member">setCallGraph</ref><sp/>(<ref refid="class_s_v_f_1_1_p_t_a_call_graph" kindref="compound">PTACallGraph</ref>*<sp/>cg)</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1abf24080617c6a74abed9f0bb0bc9c0c5" kindref="member">_callGraph</ref><sp/>=<sp/>cg;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1abd652b2627f68d7d4f8bf3bdb20ce975" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1abd652b2627f68d7d4f8bf3bdb20ce975" kindref="member">setCallGraphSCC</ref><sp/>(<ref refid="class_s_v_f_1_1_s_c_c_detection" kindref="compound">CallGraphSCC</ref>*<sp/>scc)</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a4c307d486756daa1e79595b1e9edc40a" kindref="member">_callGraphSCC</ref><sp/>=<sp/>scc;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"></codeline>
<codeline lineno="616" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a645c7d0637b49e139898016ff652e1f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a645c7d0637b49e139898016ff652e1f3" kindref="member">isHeapCondMemObj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVar&amp;<sp/>var,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_store_v_f_g_node" kindref="compound">StoreSVFGNode</ref>*)</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_mem_obj" kindref="compound">MemObj</ref>*<sp/>mem<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af08857f907caa32c090eed2c1b404729" kindref="member">_pag</ref>-&gt;<ref refid="class_s_v_f_1_1_p_a_g_1a2b288fce8efa1b0b1b620efec2c96eb6" kindref="member">getObject</ref>(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a3fa002d4ba4194ffde62ecbdd361a24d" kindref="member">getPtrNodeID</ref>(var));</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mem<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;memory<sp/>object<sp/>is<sp/>null??&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mem-&gt;isHeap();</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isArrayCondMemObj(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVar&amp;<sp/>var)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="624"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_mem_obj" kindref="compound">MemObj</ref>*<sp/>mem<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af08857f907caa32c090eed2c1b404729" kindref="member">_pag</ref>-&gt;<ref refid="class_s_v_f_1_1_p_a_g_1a2b288fce8efa1b0b1b620efec2c96eb6" kindref="member">getObject</ref>(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a3fa002d4ba4194ffde62ecbdd361a24d" kindref="member">getPtrNodeID</ref>(var));</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mem<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;memory<sp/>object<sp/>is<sp/>null??&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mem-&gt;isArray();</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFieldInsenCondMemObj(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVar&amp;<sp/>var)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="630"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MemObj*<sp/>mem<sp/>=<sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af08857f907caa32c090eed2c1b404729" kindref="member">_pag</ref>-&gt;getBaseObj(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a3fa002d4ba4194ffde62ecbdd361a24d" kindref="member">getPtrNodeID</ref>(var));</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mem-&gt;<ref refid="class_s_v_f_1_1_mem_obj_1a9d50a00ff608df21f50b3b2823128901" kindref="member">isFieldInsensitive</ref>();</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="637"></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LocToDPMVecMap&amp;<sp/>getLocToDPMVecMap()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="639"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa724698d499615bce7caf8f312b746a7" kindref="member">locToDpmSetMap</ref>;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPTItemSet&amp;<sp/>getDpmSetAtLoc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SVFGNode*<sp/>loc)</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa724698d499615bce7caf8f312b746a7" kindref="member">locToDpmSetMap</ref>[loc-&gt;getId()];</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addDpmToLoc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa724698d499615bce7caf8f312b746a7" kindref="member">locToDpmSetMap</ref>[dpm.getLoc()-&gt;getId()].insert(dpm);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeDpmFromLoc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(dpm<sp/>==<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa724698d499615bce7caf8f312b746a7" kindref="member">locToDpmSetMap</ref>[dpm.getLoc()].back()<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;dpm<sp/>not<sp/>match<sp/>with<sp/>the<sp/>end<sp/>of<sp/>vector&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa724698d499615bce7caf8f312b746a7" kindref="member">locToDpmSetMap</ref>[dpm.getLoc()-&gt;getId()].erase(dpm);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="658"></codeline>
<codeline lineno="659" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a1cd1023bca18db16bc54e622c881e494" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a1cd1023bca18db16bc54e622c881e494" kindref="member">addLoadDpmAndCVar</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>loadDpm,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVar&amp;<sp/>loadVar)</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addLoadCVar(dpm,loadVar);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a4725013a7617645e1418ed670d4837b5" kindref="member">addLoadDpm</ref>(dpm,loadDpm);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a4725013a7617645e1418ed670d4837b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a4725013a7617645e1418ed670d4837b5" kindref="member">addLoadDpm</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>loadDpm)</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DPMToDPMMap::iterator<sp/>it<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a9d8959dfee05685cd74d0d7a78069692" kindref="member">dpmToloadDpmMap</ref>.find(dpm);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it!=<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a9d8959dfee05685cd74d0d7a78069692" kindref="member">dpmToloadDpmMap</ref>.end())</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second<sp/>=<sp/>loadDpm;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a9d8959dfee05685cd74d0d7a78069692" kindref="member">dpmToloadDpmMap</ref>.insert(std::make_pair(dpm,loadDpm));</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>getLoadDpm(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="674"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DPMToDPMMap::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a9d8959dfee05685cd74d0d7a78069692" kindref="member">dpmToloadDpmMap</ref>.find(dpm);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(it!=<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a9d8959dfee05685cd74d0d7a78069692" kindref="member">dpmToloadDpmMap</ref>.end()<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>found??&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addLoadCVar(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVar&amp;<sp/>loadVar)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DPMToCVarMap::iterator<sp/>it<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a6d62420837fe0c7814fc4da68a91eda4" kindref="member">loadToPTCVarMap</ref>.find(dpm);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it!=<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a6d62420837fe0c7814fc4da68a91eda4" kindref="member">loadToPTCVarMap</ref>.end())</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second<sp/>=<sp/>loadVar;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a6d62420837fe0c7814fc4da68a91eda4" kindref="member">loadToPTCVarMap</ref>.insert(std::make_pair(dpm,loadVar));</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CVar&amp;<sp/>getLoadCVar(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="688"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DPMToCVarMap::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a6d62420837fe0c7814fc4da68a91eda4" kindref="member">loadToPTCVarMap</ref>.find(dpm);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(it!=<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a6d62420837fe0c7814fc4da68a91eda4" kindref="member">loadToPTCVarMap</ref>.end()<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>found??&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>AndersenWaveDiff*<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ac39860015b45b9af6351d0343f8983bb" kindref="member">getAndersenAnalysis</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="696"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa1d1b6e8cc23f0a6d3935cbe4f02cbdf" kindref="member">_ander</ref>;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a9005f1f0e4a808838276ff44b300f96d" kindref="member">handleOutOfBudgetDpm</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm)<sp/>{}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>testOutOfBudget(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm)</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1afdecfbacc64cb8d694268aa73ec8a7b6" kindref="member">outOfBudgetQuery</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(++<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae40c7bad663e0fa07dee4be3d1794ff2" kindref="member">ddaStat</ref>-&gt;_NumOfStep<sp/>&gt;<sp/>DPIm::getMaxBudget())</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1afdecfbacc64cb8d694268aa73ec8a7b6" kindref="member">outOfBudgetQuery</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isOutOfBudgetDpm(dpm)<sp/>||<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1afdecfbacc64cb8d694268aa73ec8a7b6" kindref="member">outOfBudgetQuery</ref>;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isOutOfBudgetQuery()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="711"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1afdecfbacc64cb8d694268aa73ec8a7b6" kindref="member">outOfBudgetQuery</ref>;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addOutOfBudgetDpm(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm)</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aad57a954473f3099188cf8c8fba87880" kindref="member">outOfBudgetDpms</ref>.insert(dpm);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isOutOfBudgetDpm(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="719"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aad57a954473f3099188cf8c8fba87880" kindref="member">outOfBudgetDpms</ref>.find(dpm)<sp/>!=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aad57a954473f3099188cf8c8fba87880" kindref="member">outOfBudgetDpms</ref>.end();</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"></codeline>
<codeline lineno="725" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1adcb641eec4f620effdb3f61a46429f40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_stat" kindref="compound">DDAStat</ref>*<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1adcb641eec4f620effdb3f61a46429f40" kindref="member">setDDAStat</ref>(<ref refid="class_s_v_f_1_1_d_d_a_stat" kindref="compound">DDAStat</ref>*<sp/>s)</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae40c7bad663e0fa07dee4be3d1794ff2" kindref="member">ddaStat</ref><sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae40c7bad663e0fa07dee4be3d1794ff2" kindref="member">ddaStat</ref>;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aeb6b56cf3d140d251b0524eb5cbd6dce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aeb6b56cf3d140d251b0524eb5cbd6dce" kindref="member">addSUStat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">SVFGNode</ref>*<sp/>node)</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af66895278f0ecbc882f9e4f43ef9c8a8" kindref="member">storeToDPMs</ref>[node].insert(dpm).second)</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae40c7bad663e0fa07dee4be3d1794ff2" kindref="member">ddaStat</ref>-&gt;_NumOfStrongUpdates++;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae40c7bad663e0fa07dee4be3d1794ff2" kindref="member">ddaStat</ref>-&gt;_StrongUpdateStores.set(node-&gt;<ref refid="class_s_v_f_1_1_generic_node_1ac3e55ef37aefb411ea4c87b1aa3b1895" kindref="member">getId</ref>());</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="740" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7d0775354df32f293e98578ed071d33c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a7d0775354df32f293e98578ed071d33c" kindref="member">rmSUStat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DPIm&amp;<sp/>dpm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">SVFGNode</ref>*<sp/>node)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DPTItemSet&amp;<sp/>dpmSet<sp/>=<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af66895278f0ecbc882f9e4f43ef9c8a8" kindref="member">storeToDPMs</ref>[node];</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dpmSet.erase(dpm))</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae40c7bad663e0fa07dee4be3d1794ff2" kindref="member">ddaStat</ref>-&gt;_NumOfStrongUpdates--;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dpmSet.empty())</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae40c7bad663e0fa07dee4be3d1794ff2" kindref="member">ddaStat</ref>-&gt;_StrongUpdateStores.reset(node-&gt;<ref refid="class_s_v_f_1_1_generic_node_1ac3e55ef37aefb411ea4c87b1aa3b1895" kindref="member">getId</ref>());</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1afdecfbacc64cb8d694268aa73ec8a7b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1afdecfbacc64cb8d694268aa73ec8a7b6" kindref="member">outOfBudgetQuery</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="752" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af08857f907caa32c090eed2c1b404729" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref>*<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af08857f907caa32c090eed2c1b404729" kindref="member">_pag</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="753" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a74d83f06e8fc0ecedc1e1846030c99c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref>*<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a74d83f06e8fc0ecedc1e1846030c99c6" kindref="member">_svfg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="754" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa1d1b6e8cc23f0a6d3935cbe4f02cbdf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_andersen_wave_diff" kindref="compound">AndersenWaveDiff</ref>*<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa1d1b6e8cc23f0a6d3935cbe4f02cbdf" kindref="member">_ander</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="755" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae0e78fafb7eec0fbc1a02d24547335e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>NodeBS<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae0e78fafb7eec0fbc1a02d24547335e9" kindref="member">candidateQueries</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="756" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1abf24080617c6a74abed9f0bb0bc9c0c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_p_t_a_call_graph" kindref="compound">PTACallGraph</ref>*<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1abf24080617c6a74abed9f0bb0bc9c0c5" kindref="member">_callGraph</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="757" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a4c307d486756daa1e79595b1e9edc40a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_s_c_c_detection" kindref="compound">CallGraphSCC</ref>*<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a4c307d486756daa1e79595b1e9edc40a" kindref="member">_callGraphSCC</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="758" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a54f5d4972238ae69f19c9da3b9f51644" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_s_c_c_detection" kindref="compound">SVFGSCC</ref>*<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a54f5d4972238ae69f19c9da3b9f51644" kindref="member">_svfgSCC</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="759" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a63d04c3af4529d0e0f82acd76ed57f6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DPTItemSet<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a63d04c3af4529d0e0f82acd76ed57f6c" kindref="member">backwardVisited</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="760" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a2d6df8149b45d719e22fc505df94171a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DPImToCPtSetMap<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a2d6df8149b45d719e22fc505df94171a" kindref="member">dpmToTLCPtSetMap</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="761" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a2565bf8dcacb22350dc1dc98ec7595f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DPImToCPtSetMap<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a2565bf8dcacb22350dc1dc98ec7595f2" kindref="member">dpmToADCPtSetMap</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="762" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa724698d499615bce7caf8f312b746a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>LocToDPMVecMap<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aa724698d499615bce7caf8f312b746a7" kindref="member">locToDpmSetMap</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="763" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a9d8959dfee05685cd74d0d7a78069692" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DPMToDPMMap<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a9d8959dfee05685cd74d0d7a78069692" kindref="member">dpmToloadDpmMap</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="764" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a6d62420837fe0c7814fc4da68a91eda4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DPMToCVarMap<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a6d62420837fe0c7814fc4da68a91eda4" kindref="member">loadToPTCVarMap</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="765" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aad57a954473f3099188cf8c8fba87880" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DPTItemSet<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aad57a954473f3099188cf8c8fba87880" kindref="member">outOfBudgetDpms</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="766" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af66895278f0ecbc882f9e4f43ef9c8a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>StoreToPMSetMap<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1af66895278f0ecbc882f9e4f43ef9c8a8" kindref="member">storeToDPMs</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="767" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae40c7bad663e0fa07dee4be3d1794ff2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_d_d_a_stat" kindref="compound">DDAStat</ref>*<sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1ae40c7bad663e0fa07dee4be3d1794ff2" kindref="member">ddaStat</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="768" refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a0d563fe8b016b27a58f5b054fec9c38a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_s_v_f_g_builder" kindref="compound">SVFGBuilder</ref><sp/><ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1a0d563fe8b016b27a58f5b054fec9c38a" kindref="member">svfgBuilder</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="769"><highlight class="normal">};</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>namespace<sp/>SVF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>VALUEFLOWDDA_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/DDA/DDAVFSolver.h"/>
  </compounddef>
</doxygen>
