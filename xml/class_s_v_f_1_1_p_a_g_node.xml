<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_p_a_g_node" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>SVF::PAGNode</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_generic_node" prot="public" virt="non-virtual">SVF::GenericNode&lt; PAGNode, PAGEdge &gt;</basecompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_obj_p_n" prot="public" virt="non-virtual">SVF::ObjPN</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_ret_p_n" prot="public" virt="non-virtual">SVF::RetPN</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_val_p_n" prot="public" virt="non-virtual">SVF::ValPN</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_var_arg_p_n" prot="public" virt="non-virtual">SVF::VarArgPN</derivedcompoundref>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfd" prot="public" static="no" strong="no">
        <type></type>
        <name>PNODEK</name>
        <enumvalue id="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfda3ec7c7a77326c63c845463e36d278698" prot="public">
          <name>ValNode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfda3de3216997f81d0d1e8c91a844e33137" prot="public">
          <name>ObjNode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfda02baa6f73696007a1ed47262491bd26b" prot="public">
          <name>RetNode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfda8712271278d9fa8a8445f785e6816e8c" prot="public">
          <name>VarargNode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfdab1e9c79d90d28d638f13717e71786bfa" prot="public">
          <name>GepValNode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfda568cd7813242fb6b6fc7a5bf24e99925" prot="public">
          <name>GepObjNode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfda727e569faa3b18cd01afe78b81f86d22" prot="public">
          <name>FIObjNode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfdaa82b7fff975b0513e429eaeb18866e6e" prot="public">
          <name>DummyValNode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfdad90c3ebe36773e94bcc116ab221a134b" prot="public">
          <name>DummyObjNode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfda4b4c88fe6b73ec2f09441e7abd4766c6" prot="public">
          <name>CloneGepObjNode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfda988291beb55638d5558be338c3771c31" prot="public">
          <name>CloneFIObjNode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfda2b633e41b4f1515ba25862f0bae0165c" prot="public">
          <name>CloneDummyObjNode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Nine kinds of <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> nodes ValNode: llvm pointer value ObjNode: memory object RetNode: unique return node Vararg: unique node for vararg parameter GepValNode: tempory gep value node for field sensitivity GepValNode: tempory gep obj node for field sensitivity FIObjNode: for field insensitive analysis DummyValNode and DummyObjNode: for non-llvm-value node Clone*Node: objects created by TBHC. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="59" column="5" bodyfile="include/Graphs/PAGNode.h" bodystart="60" bodyend="73"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_p_a_g_node_1a8662a272081441af5440af58c975b85e" prot="protected" static="no" mutable="no">
        <type>const Value *</type>
        <definition>const Value* SVF::PAGNode::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
<para>value of this <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> node </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="77" column="17" bodyfile="include/Graphs/PAGNode.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_p_a_g_node_1ac8376fa2a820a692cbeb82d5d350b34f" prot="protected" static="no" mutable="no">
        <type>PAGEdge::PAGKindToEdgeSetMapTy</type>
        <definition>PAGEdge::PAGKindToEdgeSetMapTy SVF::PAGNode::InEdgeKindToSetMap</definition>
        <argsstring></argsstring>
        <name>InEdgeKindToSetMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="78" column="36" bodyfile="include/Graphs/PAGNode.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_p_a_g_node_1aa829bcee6e9456ccc895b72f52fae409" prot="protected" static="no" mutable="no">
        <type>PAGEdge::PAGKindToEdgeSetMapTy</type>
        <definition>PAGEdge::PAGKindToEdgeSetMapTy SVF::PAGNode::OutEdgeKindToSetMap</definition>
        <argsstring></argsstring>
        <name>OutEdgeKindToSetMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="79" column="36" bodyfile="include/Graphs/PAGNode.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_p_a_g_node_1ae0e9f3bb2dccd6fe6be5e1f5fbb29066" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SVF::PAGNode::isTLPointer</definition>
        <argsstring></argsstring>
        <name>isTLPointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="80" column="10" bodyfile="include/Graphs/PAGNode.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_p_a_g_node_1a56df156ef784fe2c23691cd6e176e030" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SVF::PAGNode::isATPointer</definition>
        <argsstring></argsstring>
        <name>isATPointer</name>
        <briefdescription>
<para>top-level pointer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="81" column="10" bodyfile="include/Graphs/PAGNode.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1a37d3c3aef0c5bd7a5d0d516438673800" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PAGNode::PAGNode</definition>
        <argsstring>(const Value *val, NodeID i, PNODEK k)</argsstring>
        <name>PAGNode</name>
        <param>
          <type>const Value *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>NodeID</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfd" kindref="member">PNODEK</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>address-taken pointer </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor</para>
<para><ref refid="class_s_v_f_1_1_p_a_g_node" kindref="compound">PAGNode</ref> constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="85" column="5" bodyfile="lib/Graphs/PAG.cpp" bodystart="956" bodyend="1002"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1ab93588b44f5824f4caa9f954e2c1d0cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::PAGNode::~PAGNode</definition>
        <argsstring>()</argsstring>
        <name>~PAGNode</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="87" column="13" bodyfile="include/Graphs/PAGNode.h" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1a45be6b7b2f1f9754ea47e511e65d46ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Value *</type>
        <definition>const Value* SVF::PAGNode::getValue</definition>
        <argsstring>() const</argsstring>
        <name>getValue</name>
        <briefdescription>
<para>Get/has methods of the components. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="93" column="24" bodyfile="include/Graphs/PAGNode.h" bodystart="93" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1ab7ff5a1cfd0701997b23bf7be781ecf3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const Type *</type>
        <definition>virtual const Type* SVF::PAGNode::getType</definition>
        <argsstring>() const</argsstring>
        <name>getType</name>
        <reimplementedby refid="class_s_v_f_1_1_obj_p_n_1ab414eff6a3057b570109081a93fa6539">getType</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_gep_val_p_n_1aae597b40c984a5a0226d630f7564cefb">getType</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_gep_obj_p_n_1a685d6a3464890ba08d8d018ce2e8e3ff">getType</reimplementedby>
        <briefdescription>
<para>Return type of the value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="102" column="31" bodyfile="include/Graphs/PAGNode.h" bodystart="102" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1a071f592f2b811c136db5e05a6169aa99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::PAGNode::hasValue</definition>
        <argsstring>() const</argsstring>
        <name>hasValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="109" column="17" bodyfile="include/Graphs/PAGNode.h" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1afa5f1f6b3b7ffff2c417d58db7ef6bc2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::PAGNode::isPointer</definition>
        <argsstring>() const</argsstring>
        <name>isPointer</name>
        <briefdescription>
<para>Whether it is a pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="114" column="25" bodyfile="include/Graphs/PAGNode.h" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1a983d2d9a8ea6fd5be14af55cf22c65ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::PAGNode::isTopLevelPtr</definition>
        <argsstring>() const</argsstring>
        <name>isTopLevelPtr</name>
        <briefdescription>
<para>Whether it is a top-level pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="119" column="17" bodyfile="include/Graphs/PAGNode.h" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1ad0e27b2330a0811ca63dc79fd7972714" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::PAGNode::isAddressTakenPtr</definition>
        <argsstring>() const</argsstring>
        <name>isAddressTakenPtr</name>
        <briefdescription>
<para>Whether it is an address-taken pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="124" column="17" bodyfile="include/Graphs/PAGNode.h" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1ac50befb2bed2a5298248bec277632b2e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::PAGNode::isConstantData</definition>
        <argsstring>() const</argsstring>
        <name>isConstantData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether it is constant data, i.e., &quot;0&quot;, &quot;1.001&quot;, &quot;str&quot; or llvm&apos;s metadata, i.e., metadata !4087 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="130" column="17" bodyfile="include/Graphs/PAGNode.h" bodystart="130" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1a32174f36da4ceeecd0f094b2f8321598" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const std::string</type>
        <definition>virtual const std::string SVF::PAGNode::getValueName</definition>
        <argsstring>() const =0</argsstring>
        <name>getValueName</name>
        <reimplementedby refid="class_s_v_f_1_1_val_p_n_1a6894944b680cfd7a45b1582169517d54">getValueName</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_obj_p_n_1a7500f73cb499a5aa0d828075b179b709">getValueName</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_gep_val_p_n_1a2ca8cf54bf67f76db2acd05cf7dcf1d1">getValueName</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_gep_obj_p_n_1a498b7ee3cf8d26fa18062f2bae0749c5">getValueName</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_f_i_obj_p_n_1ae5c2e49f3fa0511b7fa00de2a682f0e1">getValueName</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_ret_p_n_1a48c099d2b441b4cc298166e2c5866c8f">getValueName</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_var_arg_p_n_1aec7ac87f5fff58b24daea998aaf0cc2a">getValueName</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_dummy_val_p_n_1ad43ed5282ca6f6cf546e60c37be968c9">getValueName</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_dummy_obj_p_n_1a3b3dabed91ed32ee99835324108061c7">getValueName</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_clone_dummy_obj_p_n_1a2239f9e2aaa61bed50d0c33d3ad8e0ea">getValueName</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_clone_gep_obj_p_n_1ae6640a10e3fc58b057ed94f1d4c774ba">getValueName</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_clone_f_i_obj_p_n_1a604e88030c2c32408f4fd99a69b97e6b">getValueName</reimplementedby>
        <briefdescription>
<para>Get name of the LLVM value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="139" column="31"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1a1697d70ee484569bbd7557cf99b223dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const Function *</type>
        <definition>virtual const Function* SVF::PAGNode::getFunction</definition>
        <argsstring>() const</argsstring>
        <name>getFunction</name>
        <briefdescription>
<para>Return the function that this <ref refid="class_s_v_f_1_1_p_a_g_node" kindref="compound">PAGNode</ref> resides in. Return NULL if it is a global or constantexpr node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="142" column="35" bodyfile="include/Graphs/PAGNode.h" bodystart="142" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1a5a5712e845d05c2eaef385113c5bce58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>PAGEdge::PAGEdgeSetTy &amp;</type>
        <definition>PAGEdge::PAGEdgeSetTy&amp; SVF::PAGNode::getIncomingEdges</definition>
        <argsstring>(PAGEdge::PEDGEK kind)</argsstring>
        <name>getIncomingEdges</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g_edge_1a79080505b4744aa8806b55215ac2b0f6" kindref="member">PAGEdge::PEDGEK</ref></type>
          <declname>kind</declname>
        </param>
        <briefdescription>
<para>Get incoming <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> edges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="157" column="34" bodyfile="include/Graphs/PAGNode.h" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1a92ae607f7a27f6597dd56aeaef064819" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>PAGEdge::PAGEdgeSetTy &amp;</type>
        <definition>PAGEdge::PAGEdgeSetTy&amp; SVF::PAGNode::getOutgoingEdges</definition>
        <argsstring>(PAGEdge::PEDGEK kind)</argsstring>
        <name>getOutgoingEdges</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g_edge_1a79080505b4744aa8806b55215ac2b0f6" kindref="member">PAGEdge::PEDGEK</ref></type>
          <declname>kind</declname>
        </param>
        <briefdescription>
<para>Get outgoing <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> edges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="163" column="34" bodyfile="include/Graphs/PAGNode.h" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1a9e6775e06806c54ee016e28c1324604a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::PAGNode::hasIncomingEdges</definition>
        <argsstring>(PAGEdge::PEDGEK kind) const</argsstring>
        <name>hasIncomingEdges</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g_edge_1a79080505b4744aa8806b55215ac2b0f6" kindref="member">PAGEdge::PEDGEK</ref></type>
          <declname>kind</declname>
        </param>
        <briefdescription>
<para>Has incoming <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> edges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="169" column="17" bodyfile="include/Graphs/PAGNode.h" bodystart="169" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1a6c54e1a54a1963ffa8c97d97ffd6f3bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::PAGNode::hasIncomingVariantGepEdge</definition>
        <argsstring>() const</argsstring>
        <name>hasIncomingVariantGepEdge</name>
        <briefdescription>
<para>Has incoming VariantGepEdges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="179" column="17" bodyfile="include/Graphs/PAGNode.h" bodystart="179" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1a945d9b4c57dfab9baa33e6dbc333ceee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>PAGEdge::PAGEdgeSetTy::iterator</type>
        <definition>PAGEdge::PAGEdgeSetTy::iterator SVF::PAGNode::getIncomingEdgesBegin</definition>
        <argsstring>(PAGEdge::PEDGEK kind) const</argsstring>
        <name>getIncomingEdgesBegin</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g_edge_1a79080505b4744aa8806b55215ac2b0f6" kindref="member">PAGEdge::PEDGEK</ref></type>
          <declname>kind</declname>
        </param>
        <briefdescription>
<para>Get incoming <ref refid="class_s_v_f_1_1_p_a_g_edge" kindref="compound">PAGEdge</ref> iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="190" column="44" bodyfile="include/Graphs/PAGNode.h" bodystart="190" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1ac8d69ac849b697663b19db76b92053bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>PAGEdge::PAGEdgeSetTy::iterator</type>
        <definition>PAGEdge::PAGEdgeSetTy::iterator SVF::PAGNode::getIncomingEdgesEnd</definition>
        <argsstring>(PAGEdge::PEDGEK kind) const</argsstring>
        <name>getIncomingEdgesEnd</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g_edge_1a79080505b4744aa8806b55215ac2b0f6" kindref="member">PAGEdge::PEDGEK</ref></type>
          <declname>kind</declname>
        </param>
        <briefdescription>
<para>Get incoming <ref refid="class_s_v_f_1_1_p_a_g_edge" kindref="compound">PAGEdge</ref> iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="198" column="44" bodyfile="include/Graphs/PAGNode.h" bodystart="198" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1aa311aaac0f8fbb8650fac9d7662ec795" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::PAGNode::hasOutgoingEdges</definition>
        <argsstring>(PAGEdge::PEDGEK kind) const</argsstring>
        <name>hasOutgoingEdges</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g_edge_1a79080505b4744aa8806b55215ac2b0f6" kindref="member">PAGEdge::PEDGEK</ref></type>
          <declname>kind</declname>
        </param>
        <briefdescription>
<para>Has outgoing <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> edges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="206" column="17" bodyfile="include/Graphs/PAGNode.h" bodystart="206" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1a3db180378695da64a50a83bd8d8a7e47" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>PAGEdge::PAGEdgeSetTy::iterator</type>
        <definition>PAGEdge::PAGEdgeSetTy::iterator SVF::PAGNode::getOutgoingEdgesBegin</definition>
        <argsstring>(PAGEdge::PEDGEK kind) const</argsstring>
        <name>getOutgoingEdgesBegin</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g_edge_1a79080505b4744aa8806b55215ac2b0f6" kindref="member">PAGEdge::PEDGEK</ref></type>
          <declname>kind</declname>
        </param>
        <briefdescription>
<para>Get outgoing <ref refid="class_s_v_f_1_1_p_a_g_edge" kindref="compound">PAGEdge</ref> iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="216" column="44" bodyfile="include/Graphs/PAGNode.h" bodystart="216" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1ad57a4d81a77520c773bee35d294a7ed3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>PAGEdge::PAGEdgeSetTy::iterator</type>
        <definition>PAGEdge::PAGEdgeSetTy::iterator SVF::PAGNode::getOutgoingEdgesEnd</definition>
        <argsstring>(PAGEdge::PEDGEK kind) const</argsstring>
        <name>getOutgoingEdgesEnd</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g_edge_1a79080505b4744aa8806b55215ac2b0f6" kindref="member">PAGEdge::PEDGEK</ref></type>
          <declname>kind</declname>
        </param>
        <briefdescription>
<para>Get outgoing <ref refid="class_s_v_f_1_1_p_a_g_edge" kindref="compound">PAGEdge</ref> iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="224" column="44" bodyfile="include/Graphs/PAGNode.h" bodystart="224" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1a55bca5a9f3efe73feb45920f042e5965" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::PAGNode::addInEdge</definition>
        <argsstring>(PAGEdge *inEdge)</argsstring>
        <name>addInEdge</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g_edge" kindref="compound">PAGEdge</ref> *</type>
          <declname>inEdge</declname>
        </param>
        <briefdescription>
<para>add methods of the components </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="234" column="17" bodyfile="include/Graphs/PAGNode.h" bodystart="234" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1aed41d396a1313757176f296e7d72f731" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::PAGNode::addOutEdge</definition>
        <argsstring>(PAGEdge *outEdge)</argsstring>
        <name>addOutEdge</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g_edge" kindref="compound">PAGEdge</ref> *</type>
          <declname>outEdge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="241" column="17" bodyfile="include/Graphs/PAGNode.h" bodystart="241" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_p_a_g_node_1a2a9a5feb62138307b0b6f901cb5e0e0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::string</type>
        <definition>const std::string PAGNode::toString</definition>
        <argsstring>() const</argsstring>
        <name>toString</name>
        <reimplementedby refid="class_s_v_f_1_1_val_p_n_1a417f15b3dba7f5e36fb5c8ed46dccd8e">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_obj_p_n_1aca96a0173b40f7917ebc814a5a0b1372">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_gep_val_p_n_1ab2423c5ca6f7487d30e2a10e933db946">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_gep_obj_p_n_1ab7229c3e69880a6872fddac805bd6ee8">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_f_i_obj_p_n_1ace2095db79e359533b0cca78f5c1751d">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_ret_p_n_1a9824061477c142e5dba14af14fa53aa2">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_var_arg_p_n_1a617077176f0ea586a0cf9a4a1034e99d">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_dummy_val_p_n_1a4ae5839912059488b0fdd94875cf5df5">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_dummy_obj_p_n_1a1f355f6eeeaaba782d24ba3db48adea4">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_clone_dummy_obj_p_n_1a30dc38493f8d078b58e684f62a1834e7">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_clone_gep_obj_p_n_1a77863cea018e2489e7cb05cb38cae654">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_clone_f_i_obj_p_n_1aa2b28fe8abd1d131849e95708a640934">toString</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="248" column="31" bodyfile="lib/Graphs/PAG.cpp" bodystart="51" bodyend="56"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_s_v_f_1_1_p_a_g_node_1a938343b901440e0898111a36e55bcae7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_s_v_f_1a424cc053c29ad7303699c529d1a2cc71" kindref="member">raw_ostream</ref> &amp;</type>
        <definition>raw_ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(raw_ostream &amp;o, const PAGNode &amp;node)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="namespace_s_v_f_1a424cc053c29ad7303699c529d1a2cc71" kindref="member">raw_ostream</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_p_a_g_node" kindref="compound">PAGNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Overloading operator &lt;&lt; for dumping <ref refid="class_s_v_f_1_1_p_a_g_node" kindref="compound">PAGNode</ref> value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/PAGNode.h" line="253" column="12" bodyfile="include/Graphs/PAGNode.h" bodystart="253" bodyend="257"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="13">
        <label>SVF::GepValPN</label>
        <link refid="class_s_v_f_1_1_gep_val_p_n"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>SVF::DummyValPN</label>
        <link refid="class_s_v_f_1_1_dummy_val_p_n"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>SVF::CloneFIObjPN</label>
        <link refid="class_s_v_f_1_1_clone_f_i_obj_p_n"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>SVF::CloneDummyObjPN</label>
        <link refid="class_s_v_f_1_1_clone_dummy_obj_p_n"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SVF::ObjPN</label>
        <link refid="class_s_v_f_1_1_obj_p_n"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>SVF::ValPN</label>
        <link refid="class_s_v_f_1_1_val_p_n"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>SVF::RetPN</label>
        <link refid="class_s_v_f_1_1_ret_p_n"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>SVF::PAGNode</label>
        <link refid="class_s_v_f_1_1_p_a_g_node"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GenericPAGNodeTy</label>
        <link refid="class_s_v_f_1_1_generic_node"/>
      </node>
      <node id="4">
        <label>SVF::DummyObjPN</label>
        <link refid="class_s_v_f_1_1_dummy_obj_p_n"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>SVF::CloneGepObjPN</label>
        <link refid="class_s_v_f_1_1_clone_gep_obj_p_n"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>SVF::GepObjPN</label>
        <link refid="class_s_v_f_1_1_gep_obj_p_n"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>SVF::FIObjPN</label>
        <link refid="class_s_v_f_1_1_f_i_obj_p_n"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>SVF::VarArgPN</label>
        <link refid="class_s_v_f_1_1_var_arg_p_n"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>SVF::PAGNode</label>
        <link refid="class_s_v_f_1_1_p_a_g_node"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GenericPAGNodeTy</label>
        <link refid="class_s_v_f_1_1_generic_node"/>
      </node>
    </collaborationgraph>
    <location file="include/Graphs/PAGNode.h" line="45" column="1" bodyfile="include/Graphs/PAGNode.h" bodystart="46" bodyend="259"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_generic_node_1a93d217b0c9fd8008a2989ca2b4f3fbfb" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>addIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a55bca5a9f3efe73feb45920f042e5965" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>addInEdge</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1aed41d396a1313757176f296e7d72f731" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>addOutEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ae74283fbc788665296a69e56f334557b" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>addOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfda2b633e41b4f1515ba25862f0bae0165c" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>CloneDummyObjNode</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfda988291beb55638d5558be338c3771c31" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>CloneFIObjNode</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfda4b4c88fe6b73ec2f09441e7abd4766c6" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>CloneGepObjNode</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ab6dc1ae41ae23b383f8add474caa7429" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>const_iterator</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a4ab1f2e5db301e4a37215905a22e6476" prot="public" virt="virtual"><scope>SVF::PAGNode</scope><name>directInEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ab331402aed245c33bad841df2bc21f7b" prot="public" virt="virtual"><scope>SVF::PAGNode</scope><name>directInEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a19599627ba095b5452373284deab7f6c" prot="public" virt="virtual"><scope>SVF::PAGNode</scope><name>directInEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1aa7be9ff204bf85bc3bf2fa4e078fcab2" prot="public" virt="virtual"><scope>SVF::PAGNode</scope><name>directInEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1aa0e258d3a92dae367f2809a6f16c80db" prot="public" virt="virtual"><scope>SVF::PAGNode</scope><name>directOutEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1acfae7a2809931cbd62b6f47c4813510d" prot="public" virt="virtual"><scope>SVF::PAGNode</scope><name>directOutEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a5950d69d4ba6c2122dd06b93911e4992" prot="public" virt="virtual"><scope>SVF::PAGNode</scope><name>directOutEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a7f914b128f7839483efc9ad56834e7c2" prot="public" virt="virtual"><scope>SVF::PAGNode</scope><name>directOutEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfdad90c3ebe36773e94bcc116ab221a134b" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>DummyObjNode</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfdaa82b7fff975b0513e429eaeb18866e6e" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>DummyValNode</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a458c626543431b4314f5f4f532eb51de" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>EdgeType</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfda727e569faa3b18cd01afe78b81f86d22" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>FIObjNode</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a03c6da4a73c47f84f5c5b47252bc339a" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>GEdgeSetTy</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1acdca5baae3e9e4208a60322fec9c9d3f" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>GenericNode</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfda568cd7813242fb6b6fc7a5bf24e99925" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>GepObjNode</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfdab1e9c79d90d28d638f13717e71786bfa" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>GepValNode</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a1697d70ee484569bbd7557cf99b223dc" prot="public" virt="virtual"><scope>SVF::PAGNode</scope><name>getFunction</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ac3e55ef37aefb411ea4c87b1aa3b1895" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>getId</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a5a5712e845d05c2eaef385113c5bce58" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>getIncomingEdges</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a945d9b4c57dfab9baa33e6dbc333ceee" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>getIncomingEdgesBegin</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1ac8d69ac849b697663b19db76b92053bc" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>getIncomingEdgesEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1afc8b5f86d7795b6a0dfc0687d942d79b" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>getInEdges</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a391e996d695b114530120723da1d003e" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>getNodeKind</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a2d9cd758d6f8c5189d9b90b74f43e009" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>getOutEdges</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a92ae607f7a27f6597dd56aeaef064819" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>getOutgoingEdges</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a3db180378695da64a50a83bd8d8a7e47" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>getOutgoingEdgesBegin</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1ad57a4d81a77520c773bee35d294a7ed3" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>getOutgoingEdgesEnd</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1ab7ff5a1cfd0701997b23bf7be781ecf3" prot="public" virt="virtual"><scope>SVF::PAGNode</scope><name>getType</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a45be6b7b2f1f9754ea47e511e65d46ae" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>getValue</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a32174f36da4ceeecd0f094b2f8321598" prot="public" virt="pure-virtual"><scope>SVF::PAGNode</scope><name>getValueName</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a363b90ab02cce2ebc3ede8e5b7cc141c" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>GNodeK</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a06a7373b11143e709784de784fa476fe" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>hasIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1add6b6b3bd45a9460335c5db9eda821b8" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>hasIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a9e6775e06806c54ee016e28c1324604a" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>hasIncomingEdges</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a6c54e1a54a1963ffa8c97d97ffd6f3bc" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>hasIncomingVariantGepEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a0931220d7a38e03f206cbdc6465d32ad" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>hasOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1aa0c40cb708b39300b3cb7354194e4993" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>hasOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1aa311aaac0f8fbb8650fac9d7662ec795" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>hasOutgoingEdges</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a071f592f2b811c136db5e05a6169aa99" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>hasValue</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ae5b113921530eee6afe58a65d8e5b3a7" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>InEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a7c0ff80b1c0ae8b76fc620f21495ca39" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>InEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1afe6a7b286d9af4992f41b59612fd2900" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>InEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a0118fbeb2b314dcdcb53c56a2a13ab07" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>InEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1ac8376fa2a820a692cbeb82d5d350b34f" prot="protected" virt="non-virtual"><scope>SVF::PAGNode</scope><name>InEdgeKindToSetMap</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1ad0e27b2330a0811ca63dc79fd7972714" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>isAddressTakenPtr</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a56df156ef784fe2c23691cd6e176e030" prot="protected" virt="non-virtual"><scope>SVF::PAGNode</scope><name>isATPointer</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1ac50befb2bed2a5298248bec277632b2e" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>isConstantData</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1afa5f1f6b3b7ffff2c417d58db7ef6bc2" prot="public" virt="virtual"><scope>SVF::PAGNode</scope><name>isPointer</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1ae0e9f3bb2dccd6fe6be5e1f5fbb29066" prot="protected" virt="non-virtual"><scope>SVF::PAGNode</scope><name>isTLPointer</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a983d2d9a8ea6fd5be14af55cf22c65ce" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>isTopLevelPtr</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a2f5471985dfe62bc9ded830a693ab153" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>iterator</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ad63e862eb1d1369bd69318fe698e4a22" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>NodeType</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfda3de3216997f81d0d1e8c91a844e33137" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>ObjNode</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a938343b901440e0898111a36e55bcae7" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1aa4f103330118c8976bf95e4bf53416eb" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>OutEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a50219c203fb5a8a44fe22428699f26e7" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>OutEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a19a3366fd8a58290d0c740c46c3dcb3d" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>OutEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ace88b6c7561f61f747ff08f61e2c18bc" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>OutEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1aa829bcee6e9456ccc895b72f52fae409" prot="protected" virt="non-virtual"><scope>SVF::PAGNode</scope><name>OutEdgeKindToSetMap</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a37d3c3aef0c5bd7a5d0d516438673800" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>PAGNode</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfd" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>PNODEK</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a56dff05dc2b3c5664d3b8fc1c6c927d5" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>removeIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a7c6192cb176bda3fad1819711302e468" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>removeOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfda02baa6f73696007a1ed47262491bd26b" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>RetNode</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a2a9a5feb62138307b0b6f901cb5e0e0f" prot="public" virt="virtual"><scope>SVF::PAGNode</scope><name>toString</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfda3ec7c7a77326c63c845463e36d278698" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>ValNode</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a8662a272081441af5440af58c975b85e" prot="protected" virt="non-virtual"><scope>SVF::PAGNode</scope><name>value</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1a5cc5327ba68c3f11ed4bef47d89c3dfda8712271278d9fa8a8445f785e6816e8c" prot="public" virt="non-virtual"><scope>SVF::PAGNode</scope><name>VarargNode</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a48a8d05b81b5c8099c3f3d1f2c4983a9" prot="public" virt="virtual"><scope>SVF::PAGNode</scope><name>~GenericNode</name></member>
      <member refid="class_s_v_f_1_1_p_a_g_node_1ab93588b44f5824f4caa9f954e2c1d0cd" prot="public" virt="virtual"><scope>SVF::PAGNode</scope><name>~PAGNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
