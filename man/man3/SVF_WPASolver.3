.TH "SVF::WPASolver< GraphType >" 3 "Sun Feb 14 2021" "SVF" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SVF::WPASolver< GraphType >
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBSVF::AndersenBase\fP, and \fBSVF::WPAFSSolver< GraphType >\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef llvm::GraphTraits< GraphType > \fBGTraits\fP"
.br
.RI "Define the GTraits and node iterator for printing\&. "
.ti -1c
.RI "typedef GTraits::NodeRef \fBGNODE\fP"
.br
.ti -1c
.RI "typedef GTraits::EdgeType \fBGEDGE\fP"
.br
.ti -1c
.RI "typedef GTraits::ChildIteratorType \fBchild_iterator\fP"
.br
.ti -1c
.RI "typedef \fBSCCDetection\fP< GraphType > \fBSCC\fP"
.br
.ti -1c
.RI "typedef \fBFIFOWorkList\fP< NodeID > \fBWorkList\fP"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "u32_t \fBnumOfIteration\fP"
.br
.RI "num of iterations during constaint solving "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBWPASolver\fP ()"
.br
.RI "Constructor\&. "
.ti -1c
.RI "virtual \fB~WPASolver\fP ()"
.br
.RI "Destructor\&. "
.ti -1c
.RI "\fBSCC\fP * \fBgetSCCDetector\fP () const"
.br
.RI "Get SCC detector\&. "
.ti -1c
.RI "const GraphType \fBgraph\fP ()"
.br
.RI "Get/Set graph methods\&. "
.ti -1c
.RI "void \fBsetGraph\fP (GraphType g)"
.br
.ti -1c
.RI "virtual NodeStack & \fBSCCDetect\fP ()"
.br
.RI "SCC detection\&. "
.ti -1c
.RI "virtual NodeStack & \fBSCCDetect\fP (NodeSet &candidates)"
.br
.ti -1c
.RI "virtual void \fBsolve\fP ()"
.br
.RI "Constraint Solving\&. "
.ti -1c
.RI "virtual void \fBinitWorklist\fP ()"
.br
.ti -1c
.RI "virtual void \fBsolveWorklist\fP ()"
.br
.ti -1c
.RI "virtual void \fBprocessNode\fP (NodeID)"
.br
.RI "Following methods are to be implemented in child class, in order to achieve a fully worked PTA\&. "
.ti -1c
.RI "virtual bool \fBupdateCallGraph\fP ()"
.br
.RI "update callgraph for all indirect callsites "
.ti -1c
.RI "virtual void \fBcollapsePWCNode\fP (NodeID)"
.br
.RI "collapse positive weight cycles of a graph "
.ti -1c
.RI "virtual void \fBcollapseFields\fP ()"
.br
.ti -1c
.RI "virtual void \fBprintStat\fP ()"
.br
.RI "dump statistics "
.ti -1c
.RI "virtual void \fBpropagate\fP (GNODE *v)"
.br
.RI "Propagation for the solving, to be implemented in the child class\&. "
.ti -1c
.RI "virtual bool \fBpropFromSrcToDst\fP (GEDGE *)"
.br
.RI "Propagate information from source to destination node, to be implemented in the child class\&. "
.ti -1c
.RI "virtual NodeID \fBsccRepNode\fP (NodeID id) const"
.br
.ti -1c
.RI "NodeID \fBpopFromWorklist\fP ()"
.br
.RI "Worklist operations\&. "
.ti -1c
.RI "virtual void \fBpushIntoWorklist\fP (NodeID id)"
.br
.ti -1c
.RI "bool \fBisWorklistEmpty\fP ()"
.br
.ti -1c
.RI "bool \fBisInWorklist\fP (NodeID id)"
.br
.ti -1c
.RI "GNODE * \fBNode\fP (NodeID id)"
.br
.RI "Get node on the graph\&. "
.ti -1c
.RI "NodeID \fBNode_Index\fP (GNODE node)"
.br
.RI "Get node ID\&. "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "bool \fBreanalyze\fP"
.br
.RI "Reanalyze if any constraint value changed\&. "
.ti -1c
.RI "u32_t \fBiterationForPrintStat\fP"
.br
.RI "print out statistics for i-th iteration "
.ti -1c
.RI "GraphType \fB_graph\fP"
.br
.RI "Graph\&. "
.ti -1c
.RI "\fBSCC\fP * \fBscc\fP"
.br
.RI "SCC\&. "
.ti -1c
.RI "\fBWorkList\fP \fBworklist\fP"
.br
.RI "Worklist for resolution\&. "
.in -1c
.SH "Member Function Documentation"
.PP 
.SS "template<class GraphType > virtual void \fBSVF::WPASolver\fP< GraphType >::processNode (NodeID)\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Following methods are to be implemented in child class, in order to achieve a fully worked PTA\&. Process each node on the graph, to be implemented in the child class 
.PP
Reimplemented in \fBSVF::FlowSensitive\fP, \fBSVF::AndersenWaveDiff\fP, \fBSVF::Andersen\fP, and \fBSVF::VersionedFlowSensitive\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for SVF from the source code\&.
