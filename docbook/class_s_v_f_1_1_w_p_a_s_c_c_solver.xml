<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_w_p_a_s_c_c_solver" xml:lang="en-US">
<title>SVF::WPASCCSolver&lt; GraphType &gt; Class Template Reference</title>
<indexterm><primary>SVF::WPASCCSolver&lt; GraphType &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;WPAFSSolver.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for SVF::WPASCCSolver&lt; GraphType &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_w_p_a_s_c_c_solver.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_w_p_a_s_c_c_solver_1a1ae985e2ff1a63320f6cbbb20053d808"/>typedef <link linkend="_class_s_v_f_1_1_w_p_a_solver">WPASolver</link>&lt; GraphType &gt;::GTraits <emphasis role="strong">GTraits</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_w_p_a_s_c_c_solver_1aa40ff9a4090744e66034f9de38f7f45f"/>typedef <link linkend="_class_s_v_f_1_1_w_p_a_solver">WPASolver</link>&lt; GraphType &gt;::GNODE <emphasis role="strong">GNODE</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_w_p_a_s_c_c_solver_1abec9201d60f0bf2724dbe9ad8a0dfc39"/>typedef <link linkend="_class_s_v_f_1_1_w_p_a_solver">WPASolver</link>&lt; GraphType &gt;::child_iterator <emphasis role="strong">child_iterator</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual void <link linkend="_class_s_v_f_1_1_w_p_a_s_c_c_solver_1ac37c1063fbdff394c9a313c8d131d893">solve</link> ()</para>

<para>Constraint Solving. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_w_p_a_s_c_c_solver_1aebc289ed32678fb7f93738927f0887d1"/>virtual void <link linkend="_class_s_v_f_1_1_w_p_a_s_c_c_solver_1aebc289ed32678fb7f93738927f0887d1">propagate</link> (GNODE *v)</para>

<para>Propagation for the solving, to be implemented in the child class. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_w_p_a_s_c_c_solver_1a92c96800a81e69f0148c2d43342837a5"/>virtual void <emphasis role="strong">addNodeIntoWorkList</emphasis> (NodeID node)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_w_p_a_s_c_c_solver_1ae1ed4875e706677acf22a776f7285185"/>bool <emphasis role="strong">isInCurrentSCC</emphasis> (NodeID node)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_w_p_a_s_c_c_solver_1a782121c831536e231f5b287629defef7"/>void <emphasis role="strong">setCurrentSCC</emphasis> (NodeID id)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_w_p_a_s_c_c_solver_1a28973d7e1301c36254b67c695e8431aa"/>NodeID <link linkend="_class_s_v_f_1_1_w_p_a_s_c_c_solver_1a28973d7e1301c36254b67c695e8431aa">curSCCID</link></para>

<para>index of current SCC. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;class GraphType&gt;
class SVF::WPASCCSolver&lt; GraphType &gt;</title></simplesect>


<para>Solver based on SCC cycles. </para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_w_p_a_s_c_c_solver_1ac37c1063fbdff394c9a313c8d131d893"/>    <section>
    <title>solve()</title>
<indexterm><primary>solve</primary><secondary>SVF::WPASCCSolver&lt; GraphType &gt;</secondary></indexterm>
<indexterm><primary>SVF::WPASCCSolver&lt; GraphType &gt;</primary><secondary>solve</secondary></indexterm>
<computeroutput>template&lt;class GraphType &gt; </computeroutput><para><computeroutput>virtual void <link linkend="_class_s_v_f_1_1_w_p_a_s_c_c_solver">SVF::WPASCCSolver</link>&lt; GraphType &gt;::solve ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Constraint Solving. </para>
</para>

<para>All nodes will be solved afterwards, so the worklist can be cleared before each solve iteration.</para>
<para>
Reimplemented from <link linkend="_class_s_v_f_1_1_w_p_a_solver_1a44d31c197e7f6d88e410c7d85fdd6bdc">SVF::WPASolver&lt; GraphType &gt;</link>.</para>
<para>
Reimplemented in <link linkend="_class_s_v_f_1_1_w_p_a_minimum_solver_1afb4c3a86fdb91cbb555669003cf299c2">SVF::WPAMinimumSolver&lt; GraphType &gt;</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
include/WPA/WPAFSSolver.h</section>
</section>
