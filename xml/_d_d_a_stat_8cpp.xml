<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_d_d_a_stat_8cpp" kind="file" language="C++">
    <compoundname>DDAStat.cpp</compoundname>
    <includes refid="_d_d_a_stat_8h" local="yes">DDA/DDAStat.h</includes>
    <includes refid="_flow_d_d_a_8h" local="yes">DDA/FlowDDA.h</includes>
    <includes refid="_context_d_d_a_8h" local="yes">DDA/ContextDDA.h</includes>
    <includes refid="_s_v_f_g_stat_8h" local="yes">Graphs/SVFGStat.h</includes>
    <includes local="no">iomanip</includes>
    <incdepgraph>
      <node id="69">
        <label>SVF-FE/CPPUtil.h</label>
        <link refid="_c_p_p_util_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>list</label>
      </node>
      <node id="65">
        <label>MemoryModel/LocationSet.h</label>
        <link refid="_location_set_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>Graphs/PAG.h</label>
        <link refid="_p_a_g_8h_source"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>MSSA/MSSAMuChi.h</label>
        <link refid="_m_s_s_a_mu_chi_8h_source"/>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>WPA/WPASolver.h</label>
        <link refid="_w_p_a_solver_8h_source"/>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>MemoryModel/ConditionalPT.h</label>
        <link refid="_conditional_p_t_8h_source"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>Util/Casting.h</label>
        <link refid="_casting_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>system_error</label>
      </node>
      <node id="129">
        <label>iomanip</label>
      </node>
      <node id="61">
        <label>MemoryModel/PointerAnalysis.h</label>
        <link refid="_pointer_analysis_8h_source"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>llvm/IR/IRBuilder.h</label>
      </node>
      <node id="52">
        <label>llvm/ADT/GraphTraits.h</label>
      </node>
      <node id="110">
        <label>Graphs/VFGNode.h</label>
        <link refid="_v_f_g_node_8h_source"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>Util/NodeIDAllocator.h</label>
        <link refid="_node_i_d_allocator_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>cudd.h</label>
        <link refid="cudd_8h_source"/>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>llvm/Bitcode/BitcodeReader.h</label>
      </node>
      <node id="83">
        <label>assert.h</label>
      </node>
      <node id="34">
        <label>llvm/ADT/SmallVector.h</label>
      </node>
      <node id="112">
        <label>Graphs/SVFGNode.h</label>
        <link refid="_s_v_f_g_node_8h_source"/>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>llvm/IR/InstVisitor.h</label>
      </node>
      <node id="8">
        <label>llvm/Support/CommandLine.h</label>
      </node>
      <node id="7">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="76">
        <label>SVF-FE/LLVMUtil.h</label>
        <link refid="_l_l_v_m_util_8h_source"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>llvm/Analysis/ScalarEvolutionExpressions.h</label>
      </node>
      <node id="81">
        <label>Graphs/ICFG.h</label>
        <link refid="_i_c_f_g_8h_source"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>Util/PathCondAllocator.h</label>
        <link refid="_path_cond_allocator_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>Util/ThreadAPI.h</label>
        <link refid="_thread_a_p_i_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>mtr.h</label>
        <link refid="mtr_8h_source"/>
      </node>
      <node id="40">
        <label>llvm/ADT/StringExtras.h</label>
      </node>
      <node id="86">
        <label>Util/Conditions.h</label>
        <link refid="_conditions_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>Util/SVFUtil.h</label>
        <link refid="_s_v_f_util_8h_source"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>PAGEdge.h</label>
        <link refid="_p_a_g_edge_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>MemoryModel/PTAStat.h</label>
        <link refid="_p_t_a_stat_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>cassert</label>
      </node>
      <node id="120">
        <label>WPA/WPAFSSolver.h</label>
        <link refid="_w_p_a_f_s_solver_8h_source"/>
        <childnode refid="121" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>Graphs/GenericGraph.h</label>
        <link refid="_generic_graph_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Util/BasicTypes.h</label>
        <link refid="_basic_types_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>Graphs/ConsGNode.h</label>
        <link refid="_cons_g_node_8h_source"/>
      </node>
      <node id="93">
        <label>st.h</label>
        <link refid="st_8h_source"/>
      </node>
      <node id="58">
        <label>string</label>
      </node>
      <node id="88">
        <label>CUDD/cuddInt.h</label>
        <link refid="cudd_int_8h_source"/>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>WPA/FlowSensitive.h</label>
        <link refid="_flow_sensitive_8h_source"/>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>Graphs/SVFGStat.h</label>
        <link refid="_s_v_f_g_stat_8h_source"/>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>MemoryModel/MutablePointsToDS.h</label>
        <link refid="_mutable_points_to_d_s_8h_source"/>
      </node>
      <node id="97">
        <label>Util/SCC.h</label>
        <link refid="_s_c_c_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>map</label>
      </node>
      <node id="41">
        <label>llvm/Analysis/AliasAnalysis.h</label>
      </node>
      <node id="124">
        <label>Graphs/ConsGEdge.h</label>
        <link refid="_cons_g_edge_8h_source"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>unordered_set</label>
      </node>
      <node id="96">
        <label>Graphs/PTACallGraph.h</label>
        <link refid="_p_t_a_call_graph_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>MemoryModel/AbstractPointsToDS.h</label>
        <link refid="_abstract_points_to_d_s_8h_source"/>
      </node>
      <node id="105">
        <label>DDA/DDAVFSolver.h</label>
        <link refid="_d_d_a_v_f_solver_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>MSSA/SVFGBuilder.h</label>
        <link refid="_s_v_f_g_builder_8h_source"/>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>Util/ExtAPI.h</label>
        <link refid="_ext_a_p_i_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>llvm/IR/User.h</label>
      </node>
      <node id="6">
        <label>llvm/ADT/SparseBitVector.h</label>
      </node>
      <node id="126">
        <label>Graphs/OfflineConsG.h</label>
        <link refid="_offline_cons_g_8h_source"/>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>limits.h</label>
      </node>
      <node id="39">
        <label>llvm/Analysis/ScalarEvolution.h</label>
      </node>
      <node id="53">
        <label>llvm/Support/GraphWriter.h</label>
      </node>
      <node id="109">
        <label>Graphs/VFG.h</label>
        <link refid="_v_f_g_8h_source"/>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>Graphs/SVFG.h</label>
        <link refid="_s_v_f_g_8h_source"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>MSSA/MemSSA.h</label>
        <link refid="_mem_s_s_a_8h_source"/>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>llvm/Support/Compiler.h</label>
      </node>
      <node id="70">
        <label>Util/SVFModule.h</label>
        <link refid="_s_v_f_module_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>Graphs/ConsG.h</label>
        <link refid="_cons_g_8h_source"/>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>MemoryModel/MemModel.h</label>
        <link refid="_mem_model_8h_source"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>epd.h</label>
        <link refid="epd_8h_source"/>
      </node>
      <node id="75">
        <label>SVF-FE/SymbolTableInfo.h</label>
        <link refid="_symbol_table_info_8h_source"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>DDA/DDAStat.h</label>
        <link refid="_d_d_a_stat_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>llvm/Support/type_traits.h</label>
      </node>
      <node id="23">
        <label>llvm/IR/GetElementPtrTypeIterator.h</label>
      </node>
      <node id="82">
        <label>Util/WorkList.h</label>
        <link refid="_work_list_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>MSSA/MemRegion.h</label>
        <link refid="_mem_region_8h_source"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>Graphs/VFGEdge.h</label>
        <link refid="_v_f_g_edge_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>stack</label>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
      <node id="22">
        <label>llvm/ADT/PointerIntPair.h</label>
      </node>
      <node id="26">
        <label>llvm/Support/ToolOutputFile.h</label>
      </node>
      <node id="55">
        <label>llvm/Transforms/Utils/Local.h</label>
      </node>
      <node id="73">
        <label>PAGNode.h</label>
        <link refid="_p_a_g_node_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>llvm/ADT/StringMap.h</label>
      </node>
      <node id="60">
        <label>MemoryModel/PointerAnalysisImpl.h</label>
        <link refid="_pointer_analysis_impl_8h_source"/>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>llvm/IR/Operator.h</label>
      </node>
      <node id="71">
        <label>time.h</label>
      </node>
      <node id="89">
        <label>math.h</label>
      </node>
      <node id="102">
        <label>llvm/Transforms/IPO/PassManagerBuilder.h</label>
      </node>
      <node id="79">
        <label>llvm/Support/JSON.h</label>
      </node>
      <node id="50">
        <label>llvm/Analysis/PostDominators.h</label>
      </node>
      <node id="84">
        <label>cstdlib</label>
      </node>
      <node id="57">
        <label>iostream</label>
      </node>
      <node id="56">
        <label>llvm/IR/DebugInfo.h</label>
      </node>
      <node id="59">
        <label>DDA/FlowDDA.h</label>
        <link refid="_flow_d_d_a_8h_source"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>llvm/Analysis/DominanceFrontier.h</label>
      </node>
      <node id="17">
        <label>deque</label>
      </node>
      <node id="72">
        <label>Graphs/ICFGEdge.h</label>
        <link refid="_i_c_f_g_edge_8h_source"/>
      </node>
      <node id="15">
        <label>unordered_map</label>
      </node>
      <node id="47">
        <label>llvm/IRReader/IRReader.h</label>
      </node>
      <node id="5">
        <label>Util/SVFBasicTypes.h</label>
        <link refid="_s_v_f_basic_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>llvm/Support/FileSystem.h</label>
      </node>
      <node id="43">
        <label>llvm/IR/GlobalVariable.h</label>
      </node>
      <node id="48">
        <label>llvm/Transforms/Utils/UnifyFunctionExitNodes.h</label>
      </node>
      <node id="118">
        <label>WPA/WPAStat.h</label>
        <link refid="_w_p_a_stat_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>Graphs/SVFGOPT.h</label>
        <link refid="_s_v_f_g_o_p_t_8h_source"/>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>Graphs/ICFGNode.h</label>
        <link refid="_i_c_f_g_node_8h_source"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>WPA/Andersen.h</label>
        <link refid="_andersen_8h_source"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>Util/DPItem.h</label>
        <link refid="_d_p_item_8h_source"/>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>WPA/VersionedFlowSensitive.h</label>
        <link refid="_versioned_flow_sensitive_8h_source"/>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>DDA/ContextDDA.h</label>
        <link refid="_context_d_d_a_8h_source"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>llvm/Bitcode/BitcodeWriter.h</label>
      </node>
      <node id="33">
        <label>type_traits</label>
      </node>
      <node id="12">
        <label>set</label>
      </node>
      <node id="104">
        <label>algorithm</label>
      </node>
      <node id="101">
        <label>llvm/IR/LegacyPassManager.h</label>
      </node>
      <node id="87">
        <label>stdio.h</label>
      </node>
      <node id="19">
        <label>llvm/IR/DerivedTypes.h</label>
      </node>
      <node id="44">
        <label>llvm/Support/SourceMgr.h</label>
      </node>
      <node id="35">
        <label>llvm/IR/Instructions.h</label>
      </node>
      <node id="100">
        <label>SVF-FE/DataFlowUtil.h</label>
        <link refid="_data_flow_util_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>SVF-FE/GEPTypeBridgeIterator.h</label>
        <link refid="_g_e_p_type_bridge_iterator_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>SVF-FE/LLVMModule.h</label>
        <link refid="_l_l_v_m_module_8h_source"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>memory</label>
      </node>
      <node id="24">
        <label>Graphs/GraphPrinter.h</label>
        <link refid="_graph_printer_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>lib/DDA/DDAStat.cpp</label>
        <link refid="_d_d_a_stat_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>llvm/IR/CallSite.h</label>
      </node>
      <node id="113">
        <label>Graphs/SVFGEdge.h</label>
        <link refid="_s_v_f_g_edge_8h_source"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>llvm/IR/InstIterator.h</label>
      </node>
      <node id="42">
        <label>llvm/Analysis/CallGraph.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>DDAStat.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Sep<sp/>15,<sp/>2014</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Yulei<sp/>Sui</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;DDA/DDAStat.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;DDA/FlowDDA.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;DDA/ContextDDA.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Graphs/SVFGStat.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_s_v_f" kindref="compound">SVF</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">SVFUtil;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">DDAStat::DDAStat(<ref refid="class_s_v_f_1_1_flow_d_d_a" kindref="compound">FlowDDA</ref>*<sp/>pta)<sp/>:<sp/><ref refid="class_s_v_f_1_1_p_t_a_stat" kindref="compound">PTAStat</ref>(pta),<sp/>flowDDA(pta),<sp/>contextDDA(NULL)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>initDefault();</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal">DDAStat::DDAStat(<ref refid="class_s_v_f_1_1_context_d_d_a" kindref="compound">ContextDDA</ref>*<sp/>pta)<sp/>:<sp/><ref refid="class_s_v_f_1_1_p_t_a_stat" kindref="compound">PTAStat</ref>(pta),<sp/>flowDDA(NULL),<sp/>contextDDA(pta)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>initDefault();</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DDAStat::initDefault()</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalNumOfQuery<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalNumOfOutOfBudgetQuery<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalNumOfDPM<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalNumOfStrongUpdates<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalNumOfMustAliases<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalNumOfInfeasiblePath<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalNumOfStep<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalNumOfStepInCycle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>_NumOfIndCallEdgeSolved<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>_MaxCPtsSize<sp/>=<sp/>_MaxPtsSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalCPtsSize<sp/>=<sp/>_TotalPtsSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>_NumOfNullPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>_NumOfConstantPtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>_NumOfBlackholePtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>_AvgNumOfDPMAtSVFGNode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>_MaxNumOfDPMAtSVFGNode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalTimeOfQueries<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>_AnaTimePerQuery<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>_AnaTimeCyclePerQuery<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>_NumOfDPM<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>_NumOfStrongUpdates<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>_NumOfMustAliases<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>_NumOfInfeasiblePath<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>_NumOfStep<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>_NumOfStepInCycle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>_AnaTimePerQuery<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>_AnaTimeCyclePerQuery<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalTimeOfQueries<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>_vmrssUsageBefore<sp/>=<sp/>_vmrssUsageAfter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>_vmsizeUsageBefore<sp/>=<sp/>_vmsizeUsageAfter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref>*<sp/>DDAStat::getSVFG()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="67"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flowDDA)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flowDDA-&gt;<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acb7980c7e0d1d8ad6abab0b80831d2a9" kindref="member">getSVFG</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>contextDDA-&gt;<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acb7980c7e0d1d8ad6abab0b80831d2a9" kindref="member">getSVFG</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="class_s_v_f_1_1_pointer_analysis" kindref="compound">PointerAnalysis</ref>*<sp/>DDAStat::getPTA()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="76"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flowDDA)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flowDDA;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>contextDDA;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_d_d_a_stat_1ae433f1ffc87ed506c7ca7ee1d43d24ac" kindref="member">DDAStat::performStatPerQuery</ref>(NodeID<sp/>ptr)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>NumOfDPM<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>NumOfLoc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>maxNumOfDPMPerLoc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>cptsSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>PointsTo<sp/>pts;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flowDDA)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(FlowDDA::LocToDPMVecMap::const_iterator<sp/>it<sp/>=<sp/><sp/>flowDDA-&gt;getLocToDPMVecMap().begin(),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eit<sp/>=<sp/>flowDDA-&gt;getLocToDPMVecMap().end();<sp/>it!=eit;<sp/>++it)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumOfLoc++;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u32_t<sp/>num<sp/>=<sp/>it-&gt;second.size();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumOfDPM<sp/>+=<sp/>num;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(num<sp/>&gt;<sp/>maxNumOfDPMPerLoc)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxNumOfDPMPerLoc<sp/>=<sp/>num;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cptsSize<sp/>=<sp/>flowDDA-&gt;<ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1aee289e298e421448caaa604b7eb34fcb" kindref="member">getPts</ref>(ptr).count();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pts<sp/>=<sp/>flowDDA-&gt;<ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl_1aee289e298e421448caaa604b7eb34fcb" kindref="member">getPts</ref>(ptr);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(contextDDA)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(ContextDDA::LocToDPMVecMap::const_iterator<sp/>it<sp/>=<sp/><sp/>contextDDA-&gt;getLocToDPMVecMap().begin(),</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eit<sp/>=<sp/>contextDDA-&gt;getLocToDPMVecMap().end();<sp/>it!=eit;<sp/>++it)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumOfLoc++;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u32_t<sp/>num<sp/>=<sp/>it-&gt;second.size();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumOfDPM<sp/>+=<sp/>num;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(num<sp/>&gt;<sp/>maxNumOfDPMPerLoc)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxNumOfDPMPerLoc<sp/>=<sp/>num;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_context_cond" kindref="compound">ContextCond</ref><sp/>cxt;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_cond_var" kindref="compound">CxtVar</ref><sp/>var(cxt,ptr);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cptsSize<sp/>=<sp/>contextDDA-&gt;<ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a63fa2b3a96696ffc67a119c1ba5ce748" kindref="member">getPts</ref>(var).count();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pts<sp/>=<sp/>contextDDA-&gt;<ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a94f3e4d073b8c5bab3c46058ddba3f43" kindref="member">getBVPointsTo</ref>(contextDDA-&gt;<ref refid="class_s_v_f_1_1_cond_p_t_a_impl_1a63fa2b3a96696ffc67a119c1ba5ce748" kindref="member">getPts</ref>(var));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>ptsSize<sp/>=<sp/>pts.count();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>avgDPMAtLoc<sp/>=<sp/>NumOfLoc!=0<sp/>?<sp/>(double)NumOfDPM/NumOfLoc<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>_AvgNumOfDPMAtSVFGNode<sp/>+=<sp/>avgDPMAtLoc;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(maxNumOfDPMPerLoc<sp/>&gt;<sp/>_MaxNumOfDPMAtSVFGNode)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_MaxNumOfDPMAtSVFGNode<sp/>=<sp/>maxNumOfDPMPerLoc;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalCPtsSize<sp/>+=<sp/>cptsSize;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_MaxCPtsSize<sp/>&lt;<sp/>cptsSize)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_MaxCPtsSize<sp/>=<sp/>cptsSize;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalPtsSize<sp/>+=<sp/>ptsSize;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_MaxPtsSize<sp/>&lt;<sp/>ptsSize)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_MaxPtsSize<sp/>=<sp/>ptsSize;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cptsSize<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_NumOfNullPtr++;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(getPTA()-&gt;<ref refid="class_s_v_f_1_1_pointer_analysis_1a56368369bc37e37b13f19e5eb1890063" kindref="member">containBlackHoleNode</ref>(pts))</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_NumOfConstantPtr++;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(getPTA()-&gt;containConstantNode(pts))</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_NumOfBlackholePtr++;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalNumOfQuery++;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalNumOfDPM<sp/>+=<sp/>_NumOfDPM;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalNumOfStrongUpdates<sp/>+=<sp/>_NumOfStrongUpdates;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalNumOfMustAliases<sp/>+=<sp/>_NumOfMustAliases;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalNumOfInfeasiblePath<sp/>+=<sp/>_NumOfInfeasiblePath;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalNumOfStep<sp/>+=<sp/>_NumOfStep;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalNumOfStepInCycle<sp/>+=<sp/>_NumOfStepInCycle;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap.clear();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>NumPerQueryStatMap.clear();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;TimePerQuery&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_AnaTimePerQuery/TIMEINTERVAL;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;CyleTimePerQuery&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_AnaTimeCyclePerQuery/TIMEINTERVAL;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>NumPerQueryStatMap[</highlight><highlight class="stringliteral">&quot;CPtsSize&quot;</highlight><highlight class="normal">]<sp/>=<sp/>cptsSize;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>NumPerQueryStatMap[</highlight><highlight class="stringliteral">&quot;PtsSize&quot;</highlight><highlight class="normal">]<sp/>=<sp/>ptsSize;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>NumPerQueryStatMap[</highlight><highlight class="stringliteral">&quot;NumOfStep&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_NumOfStep;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>NumPerQueryStatMap[</highlight><highlight class="stringliteral">&quot;NumOfStepInCycle&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_NumOfStepInCycle;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>NumPerQueryStatMap[</highlight><highlight class="stringliteral">&quot;NumOfDPM&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_NumOfDPM;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>NumPerQueryStatMap[</highlight><highlight class="stringliteral">&quot;NumOfSU&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_NumOfStrongUpdates;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>NumPerQueryStatMap[</highlight><highlight class="stringliteral">&quot;IndEdgeResolved&quot;</highlight><highlight class="normal">]<sp/>=<sp/>getPTA()-&gt;<ref refid="class_s_v_f_1_1_pointer_analysis_1ac522df904e702381222a4d9b205c775b" kindref="member">getNumOfResolvedIndCallEdge</ref>()<sp/>-<sp/>_NumOfIndCallEdgeSolved;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>NumPerQueryStatMap[</highlight><highlight class="stringliteral">&quot;AvgDPMAtLoc&quot;</highlight><highlight class="normal">]<sp/>=<sp/>avgDPMAtLoc;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>NumPerQueryStatMap[</highlight><highlight class="stringliteral">&quot;MaxDPMAtLoc&quot;</highlight><highlight class="normal">]<sp/>=<sp/>maxNumOfDPMPerLoc;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>NumPerQueryStatMap[</highlight><highlight class="stringliteral">&quot;MaxPathPerQuery&quot;</highlight><highlight class="normal">]<sp/>=<sp/>VFPathCond::maximumPath;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>NumPerQueryStatMap[</highlight><highlight class="stringliteral">&quot;MaxCxtPerQuery&quot;</highlight><highlight class="normal">]<sp/>=<sp/>ContextCond::maximumCxt;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>NumPerQueryStatMap[</highlight><highlight class="stringliteral">&quot;NumOfMustAA&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_NumOfMustAliases;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>NumPerQueryStatMap[</highlight><highlight class="stringliteral">&quot;NumOfInfePath&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_NumOfInfeasiblePath;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>_NumOfStep<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>_NumOfStepInCycle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>_NumOfDPM<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>_NumOfStrongUpdates<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>_NumOfMustAliases<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>_NumOfInfeasiblePath<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>_AnaTimeCyclePerQuery<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>_NumOfIndCallEdgeSolved<sp/>=<sp/>getPTA()-&gt;<ref refid="class_s_v_f_1_1_pointer_analysis_1ac522df904e702381222a4d9b205c775b" kindref="member">getNumOfResolvedIndCallEdge</ref>();</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DDAStat::getNumOfOOBQuery()</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flowDDA)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TotalNumOfOutOfBudgetQuery<sp/>=<sp/>flowDDA-&gt;<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aad57a954473f3099188cf8c8fba87880" kindref="member">outOfBudgetDpms</ref>.size();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contextDDA)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TotalNumOfOutOfBudgetQuery<sp/>=<sp/>contextDDA-&gt;<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1aad57a954473f3099188cf8c8fba87880" kindref="member">outOfBudgetDpms</ref>.size();</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DDAStat::performStat()</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>generalNumMap.clear();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap.clear();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap.clear();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>callgraphStat();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>getNumOfOOBQuery();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(PAG::const_iterator<sp/>nodeIt<sp/>=<sp/><ref refid="class_s_v_f_1_1_p_a_g_1ac8910c7330638bdf31c23d4cc03ba9c5" kindref="member">PAG::getPAG</ref>()-&gt;begin(),<sp/>nodeEit<sp/>=<sp/><ref refid="class_s_v_f_1_1_p_a_g_1ac8910c7330638bdf31c23d4cc03ba9c5" kindref="member">PAG::getPAG</ref>()-&gt;end();<sp/>nodeIt<sp/>!=<sp/>nodeEit;<sp/>nodeIt++)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_p_a_g_node" kindref="compound">PAGNode</ref>*<sp/>pagNode<sp/>=<sp/>nodeIt-&gt;second;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SVFUtil::isa&lt;ObjPN&gt;(pagNode))</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(getPTA()-&gt;isLocalVarInRecursiveFun(nodeIt-&gt;first))</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localVarInRecursion.set(nodeIt-&gt;first);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;TotalQueryTime&quot;</highlight><highlight class="normal">]<sp/>=<sp/><sp/>_TotalTimeOfQueries/TIMEINTERVAL;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;AvgTimePerQuery&quot;</highlight><highlight class="normal">]<sp/>=<sp/><sp/>(_TotalTimeOfQueries/TIMEINTERVAL)/_TotalNumOfQuery;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;TotalBKCondTime&quot;</highlight><highlight class="normal">]<sp/>=<sp/><sp/>(_TotalTimeOfBKCondition/TIMEINTERVAL);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;NumOfQuery&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_TotalNumOfQuery;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;NumOfOOBQuery&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_TotalNumOfOutOfBudgetQuery;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;NumOfDPM&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_TotalNumOfDPM;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;NumOfSU&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_TotalNumOfStrongUpdates;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;NumOfStoreSU&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_StrongUpdateStores.count();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;NumOfStep&quot;</highlight><highlight class="normal">]<sp/>=<sp/><sp/>_TotalNumOfStep;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;NumOfStepInCycle&quot;</highlight><highlight class="normal">]<sp/>=<sp/><sp/>_TotalNumOfStepInCycle;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;AvgDPMAtLoc&quot;</highlight><highlight class="normal">]<sp/>=<sp/>(double)_AvgNumOfDPMAtSVFGNode/_TotalNumOfQuery;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;MaxDPMAtLoc&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_MaxNumOfDPMAtSVFGNode;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;MaxPathPerQuery&quot;</highlight><highlight class="normal">]<sp/>=<sp/>VFPathCond::maximumPath;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;MaxCxtPerQuery&quot;</highlight><highlight class="normal">]<sp/>=<sp/>ContextCond::maximumCxt;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;MaxCPtsSize&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_MaxCPtsSize;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;MaxPtsSize&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_MaxPtsSize;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;AvgCPtsSize&quot;</highlight><highlight class="normal">]<sp/>=<sp/>(double)_TotalCPtsSize/_TotalNumOfQuery;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;AvgPtsSize&quot;</highlight><highlight class="normal">]<sp/>=<sp/>(double)_TotalPtsSize/_TotalNumOfQuery;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;IndEdgeSolved&quot;</highlight><highlight class="normal">]<sp/>=<sp/>getPTA()-&gt;<ref refid="class_s_v_f_1_1_pointer_analysis_1ac522df904e702381222a4d9b205c775b" kindref="member">getNumOfResolvedIndCallEdge</ref>();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;NumOfNullPtr&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_NumOfNullPtr;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;PointsToConstPtr&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_NumOfConstantPtr;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;PointsToBlkPtr&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_NumOfBlackholePtr;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;NumOfMustAA&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_TotalNumOfMustAliases;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;NumOfInfePath&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_TotalNumOfInfeasiblePath;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;NumOfStore&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="class_s_v_f_1_1_p_a_g_1ac8910c7330638bdf31c23d4cc03ba9c5" kindref="member">PAG::getPAG</ref>()-&gt;<ref refid="class_s_v_f_1_1_p_a_g_1ae5125dd33403e055078e1c9d6ce6d778" kindref="member">getPTAEdgeSet</ref>(PAGEdge::Store).size();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;MemoryUsageVmrss&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_vmrssUsageAfter<sp/>-<sp/>_vmrssUsageBefore;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;MemoryUsageVmsize&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_vmsizeUsageAfter<sp/>-<sp/>_vmsizeUsageBefore;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>printStat();</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DDAStat::printStatPerQuery(NodeID<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PointsTo&amp;<sp/>pts)</highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeStatMap.empty()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>NumPerQueryStatMap.empty()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout.flags(std::ios::left);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>field_width<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;---------------------Stat<sp/>Per<sp/>Query--------------------------------\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(TIMEStatMap::iterator<sp/>it<sp/>=<sp/>timeStatMap.begin(),<sp/>eit<sp/>=<sp/>timeStatMap.end();<sp/>it<sp/>!=<sp/>eit;<sp/>++it)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>format<sp/>out<sp/>put<sp/>with<sp/>width<sp/>20<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::setw(field_width)<sp/>&lt;&lt;<sp/>it-&gt;first<sp/>&lt;&lt;<sp/>it-&gt;second<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(NUMStatMap::iterator<sp/>it<sp/>=<sp/>NumPerQueryStatMap.begin(),<sp/>eit<sp/>=<sp/>NumPerQueryStatMap.end();<sp/>it<sp/>!=<sp/>eit;<sp/>++it)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>format<sp/>out<sp/>put<sp/>with<sp/>width<sp/>20<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::setw(field_width)<sp/>&lt;&lt;<sp/>it-&gt;first<sp/>&lt;&lt;<sp/>it-&gt;second<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>getPTA()-&gt;<ref refid="class_s_v_f_1_1_pointer_analysis_1a1a6cee7e690ccb3e53cdc4c3e67b386d" kindref="member">dumpPts</ref>(ptr,<sp/>pts);</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DDAStat::printStat()</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flowDDA)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FlowDDA::ConstSVFGEdgeSet<sp/>edgeSet;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flowDDA-&gt;<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acb7980c7e0d1d8ad6abab0b80831d2a9" kindref="member">getSVFG</ref>()-&gt;<ref refid="class_s_v_f_1_1_s_v_f_g_1a8ba934714a7f2caf2e041002fdb66137" kindref="member">getStat</ref>()-&gt;performSCCStat(edgeSet);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(contextDDA)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contextDDA-&gt;<ref refid="class_s_v_f_1_1_d_d_a_v_f_solver_1acb7980c7e0d1d8ad6abab0b80831d2a9" kindref="member">getSVFG</ref>()-&gt;<ref refid="class_s_v_f_1_1_s_v_f_g_1a8ba934714a7f2caf2e041002fdb66137" kindref="member">getStat</ref>()-&gt;performSCCStat(contextDDA-&gt;<ref refid="class_s_v_f_1_1_context_d_d_a_1a0d407903c4b0d976da30538ff0c5fc41" kindref="member">getInsensitiveEdgeSet</ref>());</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n****Demand-Driven<sp/>Pointer<sp/>Analysis<sp/>Statistics****\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>PTAStat::printStat();</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="lib/DDA/DDAStat.cpp"/>
  </compounddef>
</doxygen>
