<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_l_l_v_m_module_set" xml:lang="en-US">
<title>SVF::LLVMModuleSet Class Reference</title>
<indexterm><primary>SVF::LLVMModuleSet</primary></indexterm>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1a79eb13fae9ea80e9476723c8e15183f6"/>typedef std::vector&lt; const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> * &gt; <emphasis role="strong">FunctionSetType</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1ae047f3b5b27ce0a3988842b83880ee4b"/>typedef Map&lt; const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *, const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> * &gt; <emphasis role="strong">FunDeclToDefMapTy</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1a69310319ea60cec5c8f3dea128a3f7c3"/>typedef Map&lt; const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *, FunctionSetType &gt; <emphasis role="strong">FunDefToDeclsMapTy</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1a4dc808f3f69a87c74933d1f6183d1459"/>typedef Map&lt; const GlobalVariable *, GlobalVariable * &gt; <emphasis role="strong">GlobalDefToRepMapTy</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1ae919327019b5014f64b754dbdeb07f75"/><link linkend="_class_s_v_f_1_1_s_v_f_module">SVFModule</link> * <emphasis role="strong">buildSVFModule</emphasis> (Module &amp;mod)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1a1f8e769251c89433311eeb6f98d115e9"/><link linkend="_class_s_v_f_1_1_s_v_f_module">SVFModule</link> * <emphasis role="strong">buildSVFModule</emphasis> (const std::vector&lt; std::string &gt; &amp;moduleNameVec)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1a16572a3d7639fa65c699b6c3982fa20e"/><link linkend="_class_s_v_f_1_1_s_v_f_module">SVFModule</link> * <emphasis role="strong">getSVFModule</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1ae265a7f3cc7367d62013e0f15cf3d233"/>u32_t <emphasis role="strong">getModuleNum</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1a8afb7ab3ee4632e78d546e549110e74c"/>Module * <emphasis role="strong">getModule</emphasis> (u32_t idx) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1ad647d73d2e1bda61348eff658e32f481"/>Module &amp; <emphasis role="strong">getModuleRef</emphasis> (u32_t idx) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1ad5ef9421d501b2747d4fb31d4189b53f"/>void <emphasis role="strong">dumpModulesToFile</emphasis> (const std::string suffix)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1a547b3bc62de65b9dbfc6dee55c063dd7"/>const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> * <emphasis role="strong">getSVFFunction</emphasis> (const Function *fun) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1a32558da64f03452c502ec57d1e106427"/>bool <link linkend="_class_s_v_f_1_1_l_l_v_m_module_set_1a32558da64f03452c502ec57d1e106427">hasDefinition</link> (const Function *fun) const</para>

<para>Fun decl --&gt; def. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1acc6addcaf254069cd2d7d96206710b4a"/>bool <emphasis role="strong">hasDefinition</emphasis> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *fun) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1abc83c5da519d2d05133106d92df8053e"/>const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> * <emphasis role="strong">getDefinition</emphasis> (const Function *fun) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1a3e695d3d1dbe32ca881a2458f07128c6"/>const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> * <emphasis role="strong">getDefinition</emphasis> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *fun) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1a74a7961552498d1a99e1da70b7f78620"/>bool <link linkend="_class_s_v_f_1_1_l_l_v_m_module_set_1a74a7961552498d1a99e1da70b7f78620">hasDeclaration</link> (const Function *fun) const</para>

<para>Fun def --&gt; decl. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1ad6eee135f40ba367478cc12aad8faf4d"/>bool <emphasis role="strong">hasDeclaration</emphasis> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *fun) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1aa4a604e47daaaf95babc7aca68991000"/>const FunctionSetType &amp; <emphasis role="strong">getDeclaration</emphasis> (const Function *fun) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1ac0e82b950677c010a647f24245a6d127"/>const FunctionSetType &amp; <emphasis role="strong">getDeclaration</emphasis> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *fun) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1a0e5ab0def54815f67ed7495d028dab1b"/>bool <link linkend="_class_s_v_f_1_1_l_l_v_m_module_set_1a0e5ab0def54815f67ed7495d028dab1b">hasGlobalRep</link> (const GlobalVariable *val) const</para>

<para>Global to rep. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1a757bf149437cce22163c764ea9993e12"/>GlobalVariable * <emphasis role="strong">getGlobalRep</emphasis> (const GlobalVariable *val) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1a9fe3fa15a6a0ec25864cb8439a45596e"/>Module * <emphasis role="strong">getMainLLVMModule</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1ac1a9d20d62066ec4e181fad223669e32"/>LLVMContext &amp; <emphasis role="strong">getContext</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1ae19e38054c55d5822dfc83a12f12aa60"/>bool <emphasis role="strong">empty</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1a4e125a4acf17d42a24576df6499eb491"/>bool <link linkend="_class_s_v_f_1_1_l_l_v_m_module_set_1a4e125a4acf17d42a24576df6499eb491">allCTir</link> (void) const</para>

<para>Returns true if all LLVM modules are compiled with ctir. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1acf40310917909e4234282c0695a43160"/>static <link linkend="_class_s_v_f_1_1_l_l_v_m_module_set">LLVMModuleSet</link> * <emphasis role="strong">getLLVMModuleSet</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_l_l_v_m_module_set_1a2f8e91c075d90be66412a079fe73e936"/>static void <emphasis role="strong">releaseLLVMModuleSet</emphasis> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<para>
The documentation for this class was generated from the following files:</para>
include/SVF-FE/LLVMModule.hlib/SVF-FE/LLVMModule.cpp</section>
