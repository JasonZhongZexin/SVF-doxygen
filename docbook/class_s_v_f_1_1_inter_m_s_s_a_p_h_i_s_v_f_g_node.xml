<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node" xml:lang="en-US">
<title>SVF::InterMSSAPHISVFGNode Class Reference</title>
<indexterm><primary>SVF::InterMSSAPHISVFGNode</primary></indexterm>
<para>Inheritance diagram for SVF::InterMSSAPHISVFGNode:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node_1a6deba5e75858c16682d4a21fa851d353"/><link linkend="_class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node_1a6deba5e75858c16682d4a21fa851d353">InterMSSAPHISVFGNode</link> (NodeID id, const <link linkend="_class_s_v_f_1_1_formal_i_n_s_v_f_g_node">FormalINSVFGNode</link> *fi)</para>

<para>Constructor interPHI for formal parameter. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node_1acbc6e934c0ad5a5ad5ca07532702571b"/><link linkend="_class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node_1acbc6e934c0ad5a5ad5ca07532702571b">InterMSSAPHISVFGNode</link> (NodeID id, const <link linkend="_class_s_v_f_1_1_actual_o_u_t_s_v_f_g_node">ActualOUTSVFGNode</link> *ao)</para>

<para>Constructor interPHI for actual return. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node_1a47d870a6c0f515139b1950e8985dc2d1"/>bool <emphasis role="strong">isFormalINPHI</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node_1a4fef6f5eaeed80f1555b4cdaa2af5301"/>bool <emphasis role="strong">isActualOUTPHI</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node_1a242d8967d6fc10ba37e3f0103081ec01"/>const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> * <link linkend="_class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node_1a242d8967d6fc10ba37e3f0103081ec01">getFun</link> () const</para>

<para>Get the function of this SVFGNode. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node_1a30ac16715dc9f4281eae2ab969bad348"/>const <link linkend="_class_s_v_f_1_1_call_block_node">CallBlockNode</link> * <emphasis role="strong">getCallSite</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node_1a286e9064de854a84bdd2efe8f7d73688"/>virtual const std::string <emphasis role="strong">toString</emphasis> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node_1a62c0f4f98a42fe65f1dd570ec277b13f"/>static bool <link linkend="_class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node_1a62c0f4f98a42fe65f1dd570ec277b13f">classof</link> (const <link linkend="_class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node">InterMSSAPHISVFGNode</link> *)</para>

<para>Methods for support type inquiry through isa, cast, and dyn_cast: </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node_1a084a26ee34913e89b8b28fac43cda5f2"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_class_s_v_f_1_1_m_s_s_a_p_h_i_s_v_f_g_node">MSSAPHISVFGNode</link> *node)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node_1a14866d7c95c5d3d8215ffec2172d208b"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_class_s_v_f_1_1_m_r_s_v_f_g_node">MRSVFGNode</link> *node)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node_1a7674d5c0f395624085f0764dba78cb93"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_class_s_v_f_1_1_v_f_g_node">VFGNode</link> *node)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node_1ac1b291caedbd584d0e37702b682fa440"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_namespace_s_v_f_1a3b4bbc4b72e982a79c23fd3ec26410b6">GenericVFGNodeTy</link> *node)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
<para>
The documentation for this class was generated from the following files:</para>
include/Graphs/SVFGNode.hlib/Graphs/SVFG.cpp</section>
