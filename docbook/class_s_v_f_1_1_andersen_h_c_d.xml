<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_andersen_h_c_d" xml:lang="en-US">
<title>SVF::AndersenHCD Class Reference</title>
<indexterm><primary>SVF::AndersenHCD</primary></indexterm>
<para>
<computeroutput>#include &lt;Andersen.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for SVF::AndersenHCD:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_andersen_h_c_d.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_h_c_d_1a33cb18543abbcd434861c5da7e588356"/>typedef <link linkend="_class_s_v_f_1_1_s_c_c_detection">SCCDetection</link>&lt; <link linkend="_class_s_v_f_1_1_offline_cons_g">OfflineConsG</link> * &gt; <emphasis role="strong">OSCC</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_h_c_d_1a37c2429f238adf0aa6e89bc2d20ee8df"/><emphasis role="strong">AndersenHCD</emphasis> (<link linkend="_class_s_v_f_1_1_p_a_g">PAG</link> *_pag, <link linkend="_class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85">PTATY</link> type=<link linkend="_class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85a46f5e74d5f4b0a2d134e68d262079c3f">AndersenHCD_WPA</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_h_c_d_1a89486ad78857a54f89e1fde47a17e0b1"/>static <link linkend="_class_s_v_f_1_1_andersen_h_c_d">AndersenHCD</link> * <link linkend="_class_s_v_f_1_1_andersen_h_c_d_1a89486ad78857a54f89e1fde47a17e0b1">createAndersenHCD</link> (<link linkend="_class_s_v_f_1_1_p_a_g">PAG</link> *_pag)</para>

<para>Create an singleton instance directly instead of invoking llvm pass manager. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_h_c_d_1ad2cb6f353fef40a99ae9fba112663b84"/>static void <emphasis role="strong">releaseAndersenHCD</emphasis> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual void <link linkend="_class_s_v_f_1_1_andersen_h_c_d_1aaac9cac7fc5696adb585abd9d67f8c14">initialize</link> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_h_c_d_1abeafc9d45d529577b99fe821e59fd9cb"/>bool <emphasis role="strong">hasOfflineRep</emphasis> (NodeID nodeId) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_h_c_d_1ac2e6a5acffff567e729b6aa9e9beeb55"/>NodeID <emphasis role="strong">getOfflineRep</emphasis> (NodeID nodeId)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_h_c_d_1ab0414e29a745ed14e790c296042d1fe9"/>bool <emphasis role="strong">isaMergedNode</emphasis> (NodeID node) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_h_c_d_1a6d6d770848a42c6291db663ab138461d"/>void <emphasis role="strong">setMergedNode</emphasis> (NodeID node)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_s_v_f_1_1_andersen_h_c_d_1ae3ac936d1ae3e46a9110b8c8ed9f279c">solveWorklist</link> ()</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_s_v_f_1_1_andersen_h_c_d_1a2bbd6a0af75b17a70b1451a69cc3d5d7">mergeSCC</link> (NodeID nodeId)</para>
</listitem>
            <listitem><para>void <link linkend="_class_s_v_f_1_1_andersen_h_c_d_1afea4ecab92720da2f5dad27840ac1e57">mergeNodeAndPts</link> (NodeID node, NodeID tgt)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Hybrid Cycle Detection Based <link linkend="_class_s_v_f_1_1_andersen">Andersen</link> Analysis </para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_andersen_h_c_d_1aaac9cac7fc5696adb585abd9d67f8c14"/>    <section>
    <title>initialize()</title>
<indexterm><primary>initialize</primary><secondary>SVF::AndersenHCD</secondary></indexterm>
<indexterm><primary>SVF::AndersenHCD</primary><secondary>initialize</secondary></indexterm>
<para><computeroutput>void AndersenHCD::initialize ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para><link linkend="_class_s_v_f_1_1_andersen_h_c_d">AndersenHCD</link> initilizer, including initilization of <link linkend="_class_s_v_f_1_1_p_a_g">PAG</link>, constraint graph and offline constraint graph </para>
<para>
Reimplemented from <link linkend="_class_s_v_f_1_1_andersen_1a20617a69c112ad423b1b5021e48a8548">SVF::Andersen</link>.</para>
<para>
Reimplemented in <link linkend="_class_s_v_f_1_1_andersen_h_l_c_d_1a5926080868429040f5142843f01a2a5c">SVF::AndersenHLCD</link>.</para>
    </section><anchor xml:id="_class_s_v_f_1_1_andersen_h_c_d_1afea4ecab92720da2f5dad27840ac1e57"/>    <section>
    <title>mergeNodeAndPts()</title>
<indexterm><primary>mergeNodeAndPts</primary><secondary>SVF::AndersenHCD</secondary></indexterm>
<indexterm><primary>SVF::AndersenHCD</primary><secondary>mergeNodeAndPts</secondary></indexterm>
<para><computeroutput>void AndersenHCD::mergeNodeAndPts (NodeID node, NodeID rep)<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Merge node and its pts to the rep node </para>
    </section><anchor xml:id="_class_s_v_f_1_1_andersen_h_c_d_1a2bbd6a0af75b17a70b1451a69cc3d5d7"/>    <section>
    <title>mergeSCC()</title>
<indexterm><primary>mergeSCC</primary><secondary>SVF::AndersenHCD</secondary></indexterm>
<indexterm><primary>SVF::AndersenHCD</primary><secondary>mergeSCC</secondary></indexterm>
<para><computeroutput>void AndersenHCD::mergeSCC (NodeID nodeId)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Collapse a node to its ref, if the ref exists </para>
<para>
Reimplemented in <link linkend="_class_s_v_f_1_1_andersen_h_l_c_d_1a25cb6c99be1689006b39bd62e05c76ba">SVF::AndersenHLCD</link>.</para>
    </section><anchor xml:id="_class_s_v_f_1_1_andersen_h_c_d_1ae3ac936d1ae3e46a9110b8c8ed9f279c"/>    <section>
    <title>solveWorklist()</title>
<indexterm><primary>solveWorklist</primary><secondary>SVF::AndersenHCD</secondary></indexterm>
<indexterm><primary>SVF::AndersenHCD</primary><secondary>solveWorklist</secondary></indexterm>
<para><computeroutput>void AndersenHCD::solveWorklist ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para><link linkend="_class_s_v_f_1_1_andersen_h_c_d">AndersenHCD</link> worklist solver </para>
<para>
Reimplemented from <link linkend="_class_s_v_f_1_1_w_p_a_solver">SVF::WPASolver&lt; GraphType &gt;</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/WPA/Andersen.hlib/WPA/AndersenHCD.cpp</section>
</section>
