<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_file_checker" kind="class" language="C++" prot="public">
    <compoundname>SVF::FileChecker</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_leak_checker" prot="public" virt="non-virtual">SVF::LeakChecker</basecompoundref>
    <includes refid="_file_checker_8h" local="no">FileChecker.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_file_checker_1a283b5e46aba5e964f0a54abc33fcb7b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::FileChecker::FileChecker</definition>
        <argsstring>()</argsstring>
        <name>FileChecker</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SABER/FileChecker.h" line="48" column="5" bodyfile="include/SABER/FileChecker.h" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_file_checker_1aaf316bcb90a37d577631598f738945da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::FileChecker::~FileChecker</definition>
        <argsstring>()</argsstring>
        <name>~FileChecker</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SABER/FileChecker.h" line="53" column="13" bodyfile="include/SABER/FileChecker.h" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_file_checker_1a98a68536b8ffdb2250bbb01437598ac3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::FileChecker::runOnModule</definition>
        <argsstring>(SVFModule *module)</argsstring>
        <name>runOnModule</name>
        <reimplements refid="class_s_v_f_1_1_leak_checker_1ab3bb79d88d73c8b881d714921e7b5e12">runOnModule</reimplements>
        <param>
          <type><ref refid="class_s_v_f_1_1_s_v_f_module" kindref="compound">SVFModule</ref> *</type>
          <declname>module</declname>
        </param>
        <briefdescription>
<para>We start from here. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>start analysis</para>
        </inbodydescription>
        <location file="include/SABER/FileChecker.h" line="58" column="18" bodyfile="include/SABER/FileChecker.h" bodystart="58" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_file_checker_1ab2ed4c1d3aa00ac663441f32d9f3115f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool SVF::FileChecker::isSourceLikeFun</definition>
        <argsstring>(const SVFFunction *fun)</argsstring>
        <name>isSourceLikeFun</name>
        <reimplements refid="class_s_v_f_1_1_leak_checker_1ad837e251ec0d3aa1f04748a59930fd7c">isSourceLikeFun</reimplements>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>fun</declname>
        </param>
        <briefdescription>
<para>Whether the function is a heap allocator/reallocator (allocate memory) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SABER/FileChecker.h" line="65" column="17" bodyfile="include/SABER/FileChecker.h" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_file_checker_1aac61c4566cd79827879f4862664a432e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool SVF::FileChecker::isSinkLikeFun</definition>
        <argsstring>(const SVFFunction *fun)</argsstring>
        <name>isSinkLikeFun</name>
        <reimplements refid="class_s_v_f_1_1_leak_checker_1aed909eededb365814a625abf9039d3a7">isSinkLikeFun</reimplements>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>fun</declname>
        </param>
        <briefdescription>
<para>Whether the function is a heap deallocator (free/release memory) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SABER/FileChecker.h" line="70" column="17" bodyfile="include/SABER/FileChecker.h" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_file_checker_1a88ffc46ca954b77463de4c94c4eace54" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void FileChecker::reportBug</definition>
        <argsstring>(ProgSlice *slice)</argsstring>
        <name>reportBug</name>
        <reimplements refid="class_s_v_f_1_1_leak_checker_1a5d8f0d698b354f4c28fef9c51ac39bb6">reportBug</reimplements>
        <param>
          <type><ref refid="class_s_v_f_1_1_prog_slice" kindref="compound">ProgSlice</ref> *</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
<para>Report file/close bugs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SABER/FileChecker.h" line="75" column="10" bodyfile="lib/SABER/FileChecker.cpp" bodystart="50" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_file_checker_1ac6b092dd119642f435c21a708b160b49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FileChecker::reportNeverClose</definition>
        <argsstring>(const SVFGNode *src)</argsstring>
        <name>reportNeverClose</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">SVFGNode</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SABER/FileChecker.h" line="76" column="10" bodyfile="lib/SABER/FileChecker.cpp" bodystart="36" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_file_checker_1a8a4e249c4ac93b98149d25e1aa411cb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FileChecker::reportPartialClose</definition>
        <argsstring>(const SVFGNode *src)</argsstring>
        <name>reportPartialClose</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">SVFGNode</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SABER/FileChecker.h" line="77" column="10" bodyfile="lib/SABER/FileChecker.cpp" bodystart="43" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>File open/close checker to check consistency of file operations </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>SVF::FileChecker</label>
        <link refid="class_s_v_f_1_1_file_checker"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SVF::LeakChecker</label>
        <link refid="class_s_v_f_1_1_leak_checker"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SVF::SrcSnkDDA</label>
        <link refid="class_s_v_f_1_1_src_snk_d_d_a"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>CFLSrcSnkSolver</label>
        <link refid="class_s_v_f_1_1_c_f_l_solver"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="24">
        <label>SVF::MRGenerator</label>
        <link refid="class_s_v_f_1_1_m_r_generator"/>
      </node>
      <node id="18">
        <label>GenericICFGTy</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
      <node id="6">
        <label>GenericCallGraphTy</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
      <node id="10">
        <label>SVF::PAG</label>
        <link refid="class_s_v_f_1_1_p_a_g"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>SVF::SCCDetection&lt; GraphType &gt;</label>
        <link refid="class_s_v_f_1_1_s_c_c_detection"/>
      </node>
      <node id="13">
        <label>SVF::PTAStat</label>
        <link refid="class_s_v_f_1_1_p_t_a_stat"/>
      </node>
      <node id="19">
        <label>SVF::CommonCHGraph</label>
        <link refid="class_s_v_f_1_1_common_c_h_graph"/>
      </node>
      <node id="21">
        <label>SVF::MemSSA</label>
        <link refid="class_s_v_f_1_1_mem_s_s_a"/>
        <childnode refid="22" relation="usage">
          <edgelabel>pta</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>stat</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>mrGen</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>SVF::SVFG</label>
        <link refid="class_s_v_f_1_1_s_v_f_g"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>stat</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>pta</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>mssa</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>SVF::ICFG</label>
        <link refid="class_s_v_f_1_1_i_c_f_g"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>SVF::MemSSAStat</label>
        <link refid="class_s_v_f_1_1_mem_s_s_a_stat"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>SVF::GenericGraph&lt; PAGNode, PAGEdge &gt;</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
      <node id="16">
        <label>SVF::SVFModule</label>
        <link refid="class_s_v_f_1_1_s_v_f_module"/>
      </node>
      <node id="12">
        <label>SVF::SVFGStat</label>
        <link refid="class_s_v_f_1_1_s_v_f_g_stat"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>SVF::TypeSystem</label>
        <link refid="class_s_v_f_1_1_type_system"/>
      </node>
      <node id="25">
        <label>SVF::SaberSVFGBuilder</label>
        <link refid="class_s_v_f_1_1_saber_s_v_f_g_builder"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>SVF::FileChecker</label>
        <link refid="class_s_v_f_1_1_file_checker"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SVF::LeakChecker</label>
        <link refid="class_s_v_f_1_1_leak_checker"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>SVF::SVFGBuilder</label>
        <link refid="class_s_v_f_1_1_s_v_f_g_builder"/>
        <childnode refid="7" relation="usage">
          <edgelabel>globalSvfg</edgelabel>
          <edgelabel>svfg</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>SVF::VFG</label>
        <link refid="class_s_v_f_1_1_v_f_g"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>callgraph</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>pag</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>SVF::SrcSnkDDA</label>
        <link refid="class_s_v_f_1_1_src_snk_d_d_a"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>ptaCallGraph</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>svfg</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>memSSA</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>SVF::BVDataPTAImpl</label>
        <link refid="class_s_v_f_1_1_b_v_data_p_t_a_impl"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>CFLSrcSnkSolver</label>
        <link refid="class_s_v_f_1_1_c_f_l_solver"/>
      </node>
      <node id="5">
        <label>SVF::PTACallGraph</label>
        <link refid="class_s_v_f_1_1_p_t_a_call_graph"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>GenericVFGTy</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
      <node id="14">
        <label>SVF::PointerAnalysis</label>
        <link refid="class_s_v_f_1_1_pointer_analysis"/>
        <childnode refid="15" relation="usage">
          <edgelabel>callGraphSCC</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>svfMod</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>icfg</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>ptaCallGraph</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>chgraph</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>pag</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>typeSystem</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>stat</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/SABER/FileChecker.h" line="42" column="1" bodyfile="include/SABER/FileChecker.h" bodystart="43" bodyend="78"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1aa061e2d72d3045c9712512c6df002544" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>addBackwardVisited</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a51c65cb4b8ea107161e112a8fd3fb7d4" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>addForwardVisited</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a6caea43079963b13e9a7a017074bdbb7" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>addSinkToCurSlice</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1a5046d4a090560dd6f4ffd85631086b10" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>addSrcToCSID</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1ad28ffe435790d36ad872cddc213ea799" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>addToCurBackwardSlice</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a57262e29e81cf71a40d4feb87b92925f" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>addToCurForwardSlice</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a9c276e24d13cd1e8e5fbad10b46047f8" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>addToSinks</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1acdffb63fd5ae67306640bfe2fcfc3a79" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>addToSources</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1ac12d813bcba4ec70de5e9048bbe16afc" prot="public" virt="virtual"><scope>SVF::FileChecker</scope><name>analyze</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a8817604b20724703121e9466e5cdb4cd" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>annotateSlice</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1abf651315ae100f9d4df5d183f7d43c68" prot="protected" virt="virtual"><scope>SVF::FileChecker</scope><name>backwardTraverse</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a32cc8a131b2448b5e8e1fe65d99fd286" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>backwardVisited</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1adc2ac209e2d5e561bcb594db4c77051b" prot="protected" virt="virtual"><scope>SVF::FileChecker</scope><name>BWProcessCurNode</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1ab444cce6a5c75c7e6c65d47039e567a8" prot="protected" virt="virtual" ambiguityscope="SVF::CFLSolver::"><scope>SVF::FileChecker</scope><name>BWProcessCurNode</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a1ea0d4c4e53ff6986dd50d624ba2bff5" prot="protected" virt="virtual"><scope>SVF::FileChecker</scope><name>BWProcessIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a3d5550fbb149297022d5a1852f3229b3" prot="protected" virt="virtual" ambiguityscope="SVF::CFLSolver::"><scope>SVF::FileChecker</scope><name>BWProcessIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1af254f2a00cabb91c61a0a592bdb7f0f1" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>CallSiteSet</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1ab339e69dd2f2aa2f98fb549e979838af" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>CFLSolver</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1adf0b96a758a29d5c3c46fcc48081b62c" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>child_iterator</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1af048c70d7e68da22835570a3381eb14d" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>clearVisitedMap</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1a42f54433e5ca60928f3c329ab545842da1524077f4425b7e2d6cc32917a02c356" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>CONTEXT_LEAK</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1ae4622afe7eae8f6d8a3616de70c09fe0" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>CSWorkList</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a83d5ccf0836f8f751aff078f88328cca" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>DPIm</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1ab3cc8f13ea8de2db4ba874280802667a" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>DPImSet</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1acae985068ff1c20fb81c4c9ba730aaba" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>dumpSlices</name></member>
      <member refid="class_s_v_f_1_1_file_checker_1a283b5e46aba5e964f0a54abc33fcb7b6" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>FileChecker</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1af6ee1f79b67c736ceeb591d0cdba4b06" prot="public" virt="virtual"><scope>SVF::FileChecker</scope><name>finalize</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1ac9dc4e29fde45a19d42987360ee5f528" prot="protected" virt="virtual"><scope>SVF::FileChecker</scope><name>forwardTraverse</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a8c86d30498e86745883fbaea4f530eae" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>forwardVisited</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1abf20d02932b7ca983b9bd790812b1f40" prot="protected" virt="virtual"><scope>SVF::FileChecker</scope><name>FWProcessCurNode</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a6d7361281bbf666a2f5da87f7ea869d2" prot="protected" virt="virtual" ambiguityscope="SVF::CFLSolver::"><scope>SVF::FileChecker</scope><name>FWProcessCurNode</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1ad2203ca5bd08c6fbebd31a8a010edebb" prot="protected" virt="virtual"><scope>SVF::FileChecker</scope><name>FWProcessOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a39b079c9b8a1b4570176028de79e85a4" prot="protected" virt="virtual" ambiguityscope="SVF::CFLSolver::"><scope>SVF::FileChecker</scope><name>FWProcessOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1aaddd6c593ad39c117bd35ede711b9f36" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>GEDGE</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1ad445032e9b2027b3c990ce2a250257f8" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>getCallgraph</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1ad50e479db8f0733326974709d6ffe653" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>getCurSlice</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1adaa8ca9296ec3e9b6ec544a105296d22" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>getNode</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a31199503d0ed7aff97d4620b3599dea6" prot="protected" virt="virtual"><scope>SVF::FileChecker</scope><name>getNodeIDFromItem</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1af55a78139e0bde3e166b0d43e5890c98" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>getPAG</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a1a6ae6b1f6864057067d0e5533ea801e" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>getPathAllocator</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a1145c601df2e3dec1e32e43613447b96" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>getSinks</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a0c3d3b5ac74aa933178fa46b949d8bef" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>getSources</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1a4918e3e3e289cc39f3442cb26f28bcc4" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>getSrcCSID</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a529b40c870c74309440f025e490bb161" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>getSVFG</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1a42f54433e5ca60928f3c329ab545842da20b4563d5fc09a0a076800cd02f238f1" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>GLOBAL_LEAK</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a7a180d7878fc7b4c055fa72298398127" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>GNODE</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a9fc4cbe8985d4c25845d408ffcac13e4" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>graph</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1afdead1450dbc71d4430ab660733ff85c" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>GTraits</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a8883b9a42106ed8c55835d2ba9a579cd" prot="public" virt="virtual"><scope>SVF::FileChecker</scope><name>initialize</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1a5a40ee40e8e780f316f9f7cfadd655c2" prot="public" virt="virtual"><scope>SVF::FileChecker</scope><name>initSnks</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1a459205dd6bb225e48bfd0ef274555e47" prot="public" virt="virtual"><scope>SVF::FileChecker</scope><name>initSrcs</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a98613e4d455a53183d1f16a58de6244e" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>inv_child_iterator</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1ae507eecc97716000324820bb1a7a9573" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>InvGTraits</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a6ae0d47bac09163e90b8b2e773ad69f0" prot="protected" virt="virtual"><scope>SVF::FileChecker</scope><name>isAllPathReachable</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a391bb031b2f244e930b266a29cda0af7" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>isGlobalSVFGNode</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1afc75e55af839ef535d80555fd422342c" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>isInAWrapper</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a4cb2c14431fc432e84d382f8eeb24fe2" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>isInCurBackwardSlice</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a4bde70a5d9dbf5a9234a93aaeaaacb94" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>isInCurForwardSlice</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a435454f52e5be39c960052f1947b984d" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>isInWorklist</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1ad3fc1b8ff5d6042ca18e7ce563c33694" prot="public" virt="virtual"><scope>SVF::FileChecker</scope><name>isSink</name></member>
      <member refid="class_s_v_f_1_1_file_checker_1aac61c4566cd79827879f4862664a432e" prot="public" virt="virtual"><scope>SVF::FileChecker</scope><name>isSinkLikeFun</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a19ab6f6df2a67b294268cfe7f4287fd7" prot="protected" virt="virtual"><scope>SVF::FileChecker</scope><name>isSomePathReachable</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1af792e4592732e0bb935f893405a9e2f3" prot="public" virt="virtual"><scope>SVF::FileChecker</scope><name>isSource</name></member>
      <member refid="class_s_v_f_1_1_file_checker_1ab2ed4c1d3aa00ac663441f32d9f3115f" prot="public" virt="virtual"><scope>SVF::FileChecker</scope><name>isSourceLikeFun</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a4f35edfc7c4e4a35c9948ab5abd1a6ad" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>isWorklistEmpty</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1a42f54433e5ca60928f3c329ab545842d" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>LEAK_TYPE</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1af1140475e97947d193784d2b90809036" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>LeakChecker</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1ab6803f0a2b3507213ad2979b9b12f700" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>memSSA</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1a42f54433e5ca60928f3c329ab545842da3ec849f333df9530fb0a6a285c26b86d" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>NEVER_FREE_LEAK</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a586cfb2dd110d1853e70e534e0f66624" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>node_iterator</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1a42f54433e5ca60928f3c329ab545842da5ef9b70f9a245b7a6b94a4456daabcda" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>PATH_LEAK</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a88f770b4762d44e50d72cd50bb504078" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>popFromWorklist</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1ae3d665ff1e796348131e797eb0283bfb" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>printBDDStat</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a97be553370acf305f86e903bc3f0bb1a" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>ptaCallGraph</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1a28cd2677717b19c9cd8ab3c1c441d409" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>pushIntoWorklist</name></member>
      <member refid="class_s_v_f_1_1_file_checker_1a88ffc46ca954b77463de4c94c4eace54" prot="public" virt="virtual"><scope>SVF::FileChecker</scope><name>reportBug</name></member>
      <member refid="class_s_v_f_1_1_file_checker_1ac6b092dd119642f435c21a708b160b49" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>reportNeverClose</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1a7b6710c3b56141a249bfc29fb6181583" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>reportNeverFree</name></member>
      <member refid="class_s_v_f_1_1_file_checker_1a8a4e249c4ac93b98149d25e1aa411cb0" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>reportPartialClose</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1a93486083c0f186b91e655cbef2382634" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>reportPartialLeak</name></member>
      <member refid="class_s_v_f_1_1_file_checker_1a98a68536b8ffdb2250bbb01437598ac3" prot="public" virt="virtual"><scope>SVF::FileChecker</scope><name>runOnModule</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1ab35c0d1f02c83a2c10717905f1abf5cd" prot="public" virt="virtual"><scope>SVF::FileChecker</scope><name>setCurSlice</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1ae0a02179b2489f65988819666ec52a7c" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>setGraph</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a79833c0cf1916d63e1dd32c2220056dd" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>sinksBegin</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1aaabc8d3aed17c8a35ef37d878f141412" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>sinksEnd</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a0515c9079f28f8c5d4f0f9a2fc39a137" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>sourcesBegin</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1ad0cb9de24cbc99d148f63b694dc3908e" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>sourcesEnd</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a73f6ddd4ba868e203109c52e4f3600bd" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>SrcSnkDDA</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1ae657ebdeae8a083cfec210859a0023e4" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>svfg</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1a65b05e30410e40fe64d41f71516cd367" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>SVFGNodeBS</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a19f02a14ee669fadc37fde3816fa2f84" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>SVFGNodeSet</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1ad6935e27bbd95d26a01b22b879efed58" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>SVFGNodeSetIter</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1a47a79514e1fdc402453b864407aacd6a" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>SVFGNodeToCSIDMap</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a4f9de61860db86668606f0c276ce8117" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>SVFGNodeToDPItemsMap</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1ac96c2f09dee260b4378eae7eb67b21e4" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>SVFGNodeToSliceMap</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1aaf5d098e0d08929a108fb59bff46e424" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>testsValidation</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1af098d01a353a217bd54a90f92f62a45f" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>validateExpectedFailureTests</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1a0aa051a956b61cad9ec5419f33829e6a" prot="protected" virt="non-virtual"><scope>SVF::FileChecker</scope><name>validateSuccessTests</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1af1e1f0fd38f72dcdfb5daa3d8af9538b" prot="public" virt="non-virtual"><scope>SVF::FileChecker</scope><name>WorkList</name></member>
      <member refid="class_s_v_f_1_1_c_f_l_solver_1ac37d5e6e81edcc0a6c53e02d7d343f5b" prot="protected" virt="virtual"><scope>SVF::FileChecker</scope><name>~CFLSolver</name></member>
      <member refid="class_s_v_f_1_1_file_checker_1aaf316bcb90a37d577631598f738945da" prot="public" virt="virtual"><scope>SVF::FileChecker</scope><name>~FileChecker</name></member>
      <member refid="class_s_v_f_1_1_leak_checker_1a1c47ce036a7ffcd7cbe5d5e372a30208" prot="public" virt="virtual"><scope>SVF::FileChecker</scope><name>~LeakChecker</name></member>
      <member refid="class_s_v_f_1_1_src_snk_d_d_a_1a0181630a05f915eb35a88540af6919df" prot="public" virt="virtual"><scope>SVF::FileChecker</scope><name>~SrcSnkDDA</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
