<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_i_c_f_g_builder" kind="class" language="C++" prot="public">
    <compoundname>SVF::ICFGBuilder</compoundname>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="class_s_v_f_1_1_i_c_f_g_builder_1a52e6426f0a1af479159f6fbac6d5b8f4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ICFGBuilder::processFunEntry</definition>
        <argsstring>(const SVFFunction *fun, WorkList &amp;worklist)</argsstring>
        <name>processFunEntry</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>fun</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_f_i_f_o_work_list" kindref="compound">WorkList</ref> &amp;</type>
          <declname>worklist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create edges between <ref refid="class_s_v_f_1_1_i_c_f_g" kindref="compound">ICFG</ref> nodes within a function</para>
<para>function entry </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/ICFGBuilder.h" line="62" column="10" bodyfile="lib/SVF-FE/ICFGBuilder.cpp" bodystart="59" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_i_c_f_g_builder_1ab1cc5de5c2ee7acf83e9ae51c7b38cb5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ICFGBuilder::processFunBody</definition>
        <argsstring>(WorkList &amp;worklist)</argsstring>
        <name>processFunBody</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_f_i_f_o_work_list" kindref="compound">WorkList</ref> &amp;</type>
          <declname>worklist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>function body </para>
        </detaileddescription>
        <inbodydescription>
<para>function body</para>
        </inbodydescription>
        <location file="include/SVF-FE/ICFGBuilder.h" line="64" column="10" bodyfile="lib/SVF-FE/ICFGBuilder.cpp" bodystart="80" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_i_c_f_g_builder_1a21ecc610b7ac35f4e64b2a4a45688359" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ICFGBuilder::processFunExit</definition>
        <argsstring>(const SVFFunction *fun)</argsstring>
        <name>processFunExit</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>fun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>function exit e.g., exit(0). In LLVM, it usually manifests as &quot;unreachable&quot; instruction If a function has multiple exit(0), we will only have one &quot;unreachle&quot; instruction after the UnifyFunctionExitNodes pass. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/ICFGBuilder.h" line="66" column="10" bodyfile="lib/SVF-FE/ICFGBuilder.cpp" bodystart="132" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_i_c_f_g_builder_1a05539eb12b22886ea4b5b4275f601641" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ICFGBuilder::connectGlobalToProgEntry</definition>
        <argsstring>(SVFModule *svfModule)</argsstring>
        <name>connectGlobalToProgEntry</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_s_v_f_module" kindref="compound">SVFModule</ref> *</type>
          <declname>svfModule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Return back if the main function is not found, the bc file might be a library only</para>
        </inbodydescription>
        <location file="include/SVF-FE/ICFGBuilder.h" line="69" column="10" bodyfile="lib/SVF-FE/ICFGBuilder.cpp" bodystart="183" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_i_c_f_g_builder_1a1fe9bfb1f0cb64fba6b54d598b6d7a74" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_inter_block_node" kindref="compound">InterBlockNode</ref> *</type>
        <definition>InterBlockNode * ICFGBuilder::getOrAddInterBlockICFGNode</definition>
        <argsstring>(const Instruction *inst)</argsstring>
        <name>getOrAddInterBlockICFGNode</name>
        <param>
          <type>const Instruction *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Add/Get an inter block <ref refid="class_s_v_f_1_1_i_c_f_g_node" kindref="compound">ICFGNode</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>(1) Add and get CallBlockICFGNode (2) Handle call instruction by creating interprocedural edges </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/ICFGBuilder.h" line="72" column="20" bodyfile="lib/SVF-FE/ICFGBuilder.cpp" bodystart="156" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_i_c_f_g_builder_1a42f190f697284e6da7a6211ce7adecfe" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_i_c_f_g_node" kindref="compound">ICFGNode</ref> *</type>
        <definition>ICFGNode* SVF::ICFGBuilder::getOrAddBlockICFGNode</definition>
        <argsstring>(const Instruction *inst)</argsstring>
        <name>getOrAddBlockICFGNode</name>
        <param>
          <type>const Instruction *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Add/Get a basic block <ref refid="class_s_v_f_1_1_i_c_f_g_node" kindref="compound">ICFGNode</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/ICFGBuilder.h" line="75" column="21" bodyfile="include/SVF-FE/ICFGBuilder.h" bodystart="75" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_i_c_f_g_builder_1af1fb4795e58130d639b75c354f67a6ab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ICFGBuilder::addICFGInterEdges</definition>
        <argsstring>(const Instruction *cs, const SVFFunction *callee)</argsstring>
        <name>addICFGInterEdges</name>
        <param>
          <type>const Instruction *</type>
          <declname>cs</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>callee</declname>
        </param>
        <briefdescription>
<para>Create edges between <ref refid="class_s_v_f_1_1_i_c_f_g" kindref="compound">ICFG</ref> nodes across functions. </para>
        </briefdescription>
        <detaileddescription>
<para>Create edges between <ref refid="class_s_v_f_1_1_i_c_f_g" kindref="compound">ICFG</ref> nodes across functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/ICFGBuilder.h" line="84" column="10" bodyfile="lib/SVF-FE/ICFGBuilder.cpp" bodystart="169" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_i_c_f_g_builder_1ae9958bebe253db187d403929bc508eac" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_call_block_node" kindref="compound">CallBlockNode</ref> *</type>
        <definition>CallBlockNode* SVF::ICFGBuilder::getOrAddCallICFGNode</definition>
        <argsstring>(const Instruction *cs)</argsstring>
        <name>getOrAddCallICFGNode</name>
        <param>
          <type>const Instruction *</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
<para>Add a call node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/ICFGBuilder.h" line="87" column="26" bodyfile="include/SVF-FE/ICFGBuilder.h" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_i_c_f_g_builder_1a2f89ca8d506f90f0b90d18b0f63d8481" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_ret_block_node" kindref="compound">RetBlockNode</ref> *</type>
        <definition>RetBlockNode* SVF::ICFGBuilder::getOrAddRetICFGNode</definition>
        <argsstring>(const Instruction *cs)</argsstring>
        <name>getOrAddRetICFGNode</name>
        <param>
          <type>const Instruction *</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
<para>Add a return node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/ICFGBuilder.h" line="92" column="25" bodyfile="include/SVF-FE/ICFGBuilder.h" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_i_c_f_g_builder_1a28bcef712806344a3bcd664ef3d1e48b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_intra_block_node" kindref="compound">IntraBlockNode</ref> *</type>
        <definition>IntraBlockNode* SVF::ICFGBuilder::getOrAddIntraBlockICFGNode</definition>
        <argsstring>(const Instruction *inst)</argsstring>
        <name>getOrAddIntraBlockICFGNode</name>
        <param>
          <type>const Instruction *</type>
          <declname>inst</declname>
        </param>
        <briefdescription>
<para>Add and get IntraBlock <ref refid="class_s_v_f_1_1_i_c_f_g_node" kindref="compound">ICFGNode</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/ICFGBuilder.h" line="98" column="20" bodyfile="include/SVF-FE/ICFGBuilder.h" bodystart="98" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_i_c_f_g_builder_1a57af1044422b3c3860aa6fb033f8111e" prot="public" static="no">
        <type>std::vector&lt; const Instruction * &gt;</type>
        <definition>typedef std::vector&lt;const Instruction*&gt; SVF::ICFGBuilder::InstVec</definition>
        <argsstring></argsstring>
        <name>InstVec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/ICFGBuilder.h" line="44" column="25" bodyfile="include/SVF-FE/ICFGBuilder.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_i_c_f_g_builder_1abb7144bcc587e236fd22f6c8896117f5" prot="public" static="no">
        <type>Set&lt; const Instruction * &gt;</type>
        <definition>typedef Set&lt;const Instruction*&gt; SVF::ICFGBuilder::BBSet</definition>
        <argsstring></argsstring>
        <name>BBSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/ICFGBuilder.h" line="45" column="17" bodyfile="include/SVF-FE/ICFGBuilder.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_i_c_f_g_builder_1a2dc4467008cdd6eb896e98b67457082a" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_f_i_f_o_work_list" kindref="compound">FIFOWorkList</ref>&lt; const Instruction * &gt;</type>
        <definition>typedef FIFOWorkList&lt;const Instruction*&gt; SVF::ICFGBuilder::WorkList</definition>
        <argsstring></argsstring>
        <name>WorkList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/ICFGBuilder.h" line="51" column="26" bodyfile="include/SVF-FE/ICFGBuilder.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_i_c_f_g_builder_1adefeaad9c02000f263430dfee7149ea6" prot="private" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_i_c_f_g" kindref="compound">ICFG</ref> *</type>
        <definition>ICFG* SVF::ICFGBuilder::icfg</definition>
        <argsstring></argsstring>
        <name>icfg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/ICFGBuilder.h" line="48" column="10" bodyfile="include/SVF-FE/ICFGBuilder.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_i_c_f_g_builder_1a40d50a22a5c2094dbfe5e8516a0deccc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::ICFGBuilder::ICFGBuilder</definition>
        <argsstring>(ICFG *i)</argsstring>
        <name>ICFGBuilder</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_i_c_f_g" kindref="compound">ICFG</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/ICFGBuilder.h" line="53" column="5" bodyfile="include/SVF-FE/ICFGBuilder.h" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_i_c_f_g_builder_1ae66565ee32fff4ef5f0157e867333250" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ICFGBuilder::build</definition>
        <argsstring>(SVFModule *svfModule)</argsstring>
        <name>build</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_s_v_f_module" kindref="compound">SVFModule</ref> *</type>
          <declname>svfModule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create <ref refid="class_s_v_f_1_1_i_c_f_g" kindref="compound">ICFG</ref> nodes and edges </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/ICFGBuilder.h" line="57" column="10" bodyfile="lib/SVF-FE/ICFGBuilder.cpp" bodystart="41" bodyend="54"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/SVF-FE/ICFGBuilder.h" line="39" column="1" bodyfile="include/SVF-FE/ICFGBuilder.h" bodystart="40" bodyend="102"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_i_c_f_g_builder_1af1fb4795e58130d639b75c354f67a6ab" prot="private" virt="non-virtual"><scope>SVF::ICFGBuilder</scope><name>addICFGInterEdges</name></member>
      <member refid="class_s_v_f_1_1_i_c_f_g_builder_1abb7144bcc587e236fd22f6c8896117f5" prot="public" virt="non-virtual"><scope>SVF::ICFGBuilder</scope><name>BBSet</name></member>
      <member refid="class_s_v_f_1_1_i_c_f_g_builder_1ae66565ee32fff4ef5f0157e867333250" prot="public" virt="non-virtual"><scope>SVF::ICFGBuilder</scope><name>build</name></member>
      <member refid="class_s_v_f_1_1_i_c_f_g_builder_1a05539eb12b22886ea4b5b4275f601641" prot="private" virt="non-virtual"><scope>SVF::ICFGBuilder</scope><name>connectGlobalToProgEntry</name></member>
      <member refid="class_s_v_f_1_1_i_c_f_g_builder_1a42f190f697284e6da7a6211ce7adecfe" prot="private" virt="non-virtual"><scope>SVF::ICFGBuilder</scope><name>getOrAddBlockICFGNode</name></member>
      <member refid="class_s_v_f_1_1_i_c_f_g_builder_1ae9958bebe253db187d403929bc508eac" prot="private" virt="non-virtual"><scope>SVF::ICFGBuilder</scope><name>getOrAddCallICFGNode</name></member>
      <member refid="class_s_v_f_1_1_i_c_f_g_builder_1a1fe9bfb1f0cb64fba6b54d598b6d7a74" prot="private" virt="non-virtual"><scope>SVF::ICFGBuilder</scope><name>getOrAddInterBlockICFGNode</name></member>
      <member refid="class_s_v_f_1_1_i_c_f_g_builder_1a28bcef712806344a3bcd664ef3d1e48b" prot="private" virt="non-virtual"><scope>SVF::ICFGBuilder</scope><name>getOrAddIntraBlockICFGNode</name></member>
      <member refid="class_s_v_f_1_1_i_c_f_g_builder_1a2f89ca8d506f90f0b90d18b0f63d8481" prot="private" virt="non-virtual"><scope>SVF::ICFGBuilder</scope><name>getOrAddRetICFGNode</name></member>
      <member refid="class_s_v_f_1_1_i_c_f_g_builder_1adefeaad9c02000f263430dfee7149ea6" prot="private" virt="non-virtual"><scope>SVF::ICFGBuilder</scope><name>icfg</name></member>
      <member refid="class_s_v_f_1_1_i_c_f_g_builder_1a40d50a22a5c2094dbfe5e8516a0deccc" prot="public" virt="non-virtual"><scope>SVF::ICFGBuilder</scope><name>ICFGBuilder</name></member>
      <member refid="class_s_v_f_1_1_i_c_f_g_builder_1a57af1044422b3c3860aa6fb033f8111e" prot="public" virt="non-virtual"><scope>SVF::ICFGBuilder</scope><name>InstVec</name></member>
      <member refid="class_s_v_f_1_1_i_c_f_g_builder_1ab1cc5de5c2ee7acf83e9ae51c7b38cb5" prot="private" virt="non-virtual"><scope>SVF::ICFGBuilder</scope><name>processFunBody</name></member>
      <member refid="class_s_v_f_1_1_i_c_f_g_builder_1a52e6426f0a1af479159f6fbac6d5b8f4" prot="private" virt="non-virtual"><scope>SVF::ICFGBuilder</scope><name>processFunEntry</name></member>
      <member refid="class_s_v_f_1_1_i_c_f_g_builder_1a21ecc610b7ac35f4e64b2a4a45688359" prot="private" virt="non-virtual"><scope>SVF::ICFGBuilder</scope><name>processFunExit</name></member>
      <member refid="class_s_v_f_1_1_i_c_f_g_builder_1a2dc4467008cdd6eb896e98b67457082a" prot="public" virt="non-virtual"><scope>SVF::ICFGBuilder</scope><name>WorkList</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
