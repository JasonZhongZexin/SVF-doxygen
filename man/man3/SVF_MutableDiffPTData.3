.TH "SVF::MutableDiffPTData< Key, Datum, Data >" 3 "Sun Feb 14 2021" "SVF" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SVF::MutableDiffPTData< Key, Datum, Data > \- \fBDiffPTData\fP implemented with points-to sets which are updated continuously\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <MutablePointsToDS\&.h>\fP
.PP
Inherits \fBSVF::DiffPTData< Key, Datum, Data >\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fBPTData\fP< Key, Datum, Data > \fBBasePTData\fP"
.br
.ti -1c
.RI "typedef \fBDiffPTData\fP< Key, Datum, Data > \fBBaseDiffPTData\fP"
.br
.ti -1c
.RI "typedef \fBBasePTData::PTDataTy\fP \fBPTDataTy\fP"
.br
.ti -1c
.RI "typedef BasePTData::KeySet \fBKeySet\fP"
.br
.ti -1c
.RI "typedef \fBMutablePTData\fP< Key, Datum, Data >::PtsMap \fBPtsMap\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMutableDiffPTData\fP (bool reversePT=true, \fBPTDataTy\fP ty=PTDataTy::Diff)"
.br
.RI "Constructor\&. "
.ti -1c
.RI "virtual const PtsMap & \fBgetPtsMap\fP () const"
.br
.ti -1c
.RI "virtual void \fBclear\fP () override"
.br
.RI "Clears all points-to sets as if nothing is stored\&. "
.ti -1c
.RI "virtual const Data & \fBgetPts\fP (const Key &var) override"
.br
.RI "Get points-to set of var\&. "
.ti -1c
.RI "virtual const KeySet & \fBgetRevPts\fP (const Datum &datum) override"
.br
.RI "Get reverse points-to set of datum\&. "
.ti -1c
.RI "virtual bool \fBaddPts\fP (const Key &dstKey, const Datum &element) override"
.br
.RI "Adds element to the points-to set associated with var\&. "
.ti -1c
.RI "virtual bool \fBunionPts\fP (const Key &dstKey, const Key &srcKey) override"
.br
.RI "Performs pts(dstVar) = pts(dstVar) U pts(srcVar)\&. "
.ti -1c
.RI "virtual bool \fBunionPts\fP (const Key &dstKey, const Data &srcData) override"
.br
.RI "Performs pts(dstVar) = pts(dstVar) U srcData\&. "
.ti -1c
.RI "virtual void \fBclearPts\fP (const Key &var, const Datum &element) override"
.br
.RI "Clears element from the points-to set of var\&. "
.ti -1c
.RI "virtual void \fBclearFullPts\fP (const Key &var) override"
.br
.RI "Fully clears the points-to set of var\&. "
.ti -1c
.RI "virtual void \fBdumpPTData\fP () override"
.br
.RI "Dump stored keys and points-to sets\&. "
.ti -1c
.RI "virtual const Data & \fBgetDiffPts\fP (Key &var) override"
.br
.RI "Get diff points to\&. "
.ti -1c
.RI "virtual bool \fBcomputeDiffPts\fP (Key &var, const Data &all) override"
.br
.ti -1c
.RI "virtual void \fBupdatePropaPtsMap\fP (Key &src, Key &dst) override"
.br
.ti -1c
.RI "virtual void \fBclearPropaPts\fP (Key &var) override"
.br
.RI "Clear propagated points-to set of var\&. "
.in -1c
.SS "Static Public Member Functions"

.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "static bool \fBclassof\fP (const \fBMutableDiffPTData\fP< Key, Datum, Data > *)"
.br
.ti -1c
.RI "static bool \fBclassof\fP (const \fBPTData\fP< Key, Datum, Data > *ptd)"
.br
.in -1c
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "Data & \fBgetMutDiffPts\fP (Key &var)"
.br
.RI "Get diff PTS that can be modified\&. "
.ti -1c
.RI "Data & \fBgetPropaPts\fP (Key &var)"
.br
.RI "Get propagated points to\&. "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 

.SS "template<typename Key, typename Datum, typename Data>
.br
class SVF::MutableDiffPTData< Key, Datum, Data >"
\fBDiffPTData\fP implemented with points-to sets which are updated continuously\&. 
.SH "Member Function Documentation"
.PP 
.SS "template<typename Key , typename Datum , typename Data > static bool \fBSVF::MutableDiffPTData\fP< Key, Datum, Data >::classof (const \fBMutableDiffPTData\fP< Key, Datum, Data > *)\fC [inline]\fP, \fC [static]\fP"
Methods to support type inquiry through isa, cast, and dyn_cast: 
.SS "template<typename Key , typename Datum , typename Data > virtual bool \fBSVF::MutableDiffPTData\fP< Key, Datum, Data >::computeDiffPts (Key & var, const Data & all)\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"
Compute diff points to\&. Return TRUE if diff is not empty\&.
.IP "1." 4
calculate diff: diff = all - propa\&.
.IP "2." 4
update propagated pts: propa = all\&. 
.PP
Clear diff pts\&.
.PP
Get all pts\&.
.PP
Implements \fBSVF::DiffPTData< Key, Datum, Data >\fP\&.
.SS "template<typename Key , typename Datum , typename Data > virtual void \fBSVF::MutableDiffPTData\fP< Key, Datum, Data >::updatePropaPtsMap (Key & src, Key & dst)\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"
Update dst's propagated points-to set with src's\&. The final result is the intersection of these two sets\&. 
.PP
Implements \fBSVF::DiffPTData< Key, Datum, Data >\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for SVF from the source code\&.
