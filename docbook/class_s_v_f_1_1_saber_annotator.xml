<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_saber_annotator" xml:lang="en-US">
<title>SVF::SaberAnnotator Class Reference</title>
<indexterm><primary>SVF::SaberAnnotator</primary></indexterm>
<para>
<computeroutput>#include &lt;SaberAnnotator.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for SVF::SaberAnnotator:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_saber_annotator.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_saber_annotator_1a76cef1b7443870816e4f31877702380f"/><link linkend="_class_s_v_f_1_1_saber_annotator_1a76cef1b7443870816e4f31877702380f">SaberAnnotator</link> (<link linkend="_class_s_v_f_1_1_prog_slice">ProgSlice</link> *slice)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_saber_annotator_1a6a42eb94fe1604eba729c9f7b449b93c"/>virtual <link linkend="_class_s_v_f_1_1_saber_annotator_1a6a42eb94fe1604eba729c9f7b449b93c">~SaberAnnotator</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_saber_annotator_1aa9446af29edf126ad30bbada51478c13"/>void <link linkend="_class_s_v_f_1_1_saber_annotator_1aa9446af29edf126ad30bbada51478c13">annotateSource</link> ()</para>

<para>Annotation. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_saber_annotator_1abec0f249cc64d3588e83a68ed12271bf"/>void <emphasis role="strong">annotateSinks</emphasis> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_s_v_f_1_1_saber_annotator_1ad7f1d6220243793e0eb86689ff8fb35f">annotateFeasibleBranch</link> (const BranchInst *brInst, u32_t succPos)</para>
</listitem>
            <listitem><para>void <link linkend="_class_s_v_f_1_1_saber_annotator_1acc480b98ffa75b5c30829611bc451cc8">annotateInfeasibleBranch</link> (const BranchInst *brInst, u32_t succPos)</para>
</listitem>
            <listitem><para>void <link linkend="_class_s_v_f_1_1_saber_annotator_1acaabbe6e6a8ad6e8068fcef6d8caef60">annotateSwitch</link> (SwitchInst *brInst, u32_t succPos)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Saber annotation </para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_saber_annotator_1ad7f1d6220243793e0eb86689ff8fb35f"/>    <section>
    <title>annotateFeasibleBranch()</title>
<indexterm><primary>annotateFeasibleBranch</primary><secondary>SVF::SaberAnnotator</secondary></indexterm>
<indexterm><primary>SVF::SaberAnnotator</primary><secondary>annotateFeasibleBranch</secondary></indexterm>
<para><computeroutput>void SaberAnnotator::annotateFeasibleBranch (const BranchInst * brInst, u32_t succPos)</computeroutput></para>
<para>Annotate branch instruction and its corresponding feasible path </para>
    </section><anchor xml:id="_class_s_v_f_1_1_saber_annotator_1acc480b98ffa75b5c30829611bc451cc8"/>    <section>
    <title>annotateInfeasibleBranch()</title>
<indexterm><primary>annotateInfeasibleBranch</primary><secondary>SVF::SaberAnnotator</secondary></indexterm>
<indexterm><primary>SVF::SaberAnnotator</primary><secondary>annotateInfeasibleBranch</secondary></indexterm>
<para><computeroutput>void SaberAnnotator::annotateInfeasibleBranch (const BranchInst * brInst, u32_t succPos)</computeroutput></para>
<para>Annotate branch instruction and its corresponding infeasible path </para>
    </section><anchor xml:id="_class_s_v_f_1_1_saber_annotator_1acaabbe6e6a8ad6e8068fcef6d8caef60"/>    <section>
    <title>annotateSwitch()</title>
<indexterm><primary>annotateSwitch</primary><secondary>SVF::SaberAnnotator</secondary></indexterm>
<indexterm><primary>SVF::SaberAnnotator</primary><secondary>annotateSwitch</secondary></indexterm>
<para><computeroutput>void SaberAnnotator::annotateSwitch (SwitchInst * switchInst, u32_t succPos)</computeroutput></para>
<para>Annotate switch instruction and its corresponding feasible path </para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/SABER/SaberAnnotator.hlib/SABER/SaberAnnotator.cpp</section>
</section>
