<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_indirect_s_v_f_g_edge" kind="class" language="C++" prot="public">
    <compoundname>SVF::IndirectSVFGEdge</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_v_f_g_edge" prot="public" virt="non-virtual">SVF::VFGEdge</basecompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_call_ind_s_v_f_g_edge" prot="public" virt="non-virtual">SVF::CallIndSVFGEdge</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_intra_ind_s_v_f_g_edge" prot="public" virt="non-virtual">SVF::IntraIndSVFGEdge</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_ret_ind_s_v_f_g_edge" prot="public" virt="non-virtual">SVF::RetIndSVFGEdge</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_thread_m_h_p_ind_s_v_f_g_edge" prot="public" virt="non-virtual">SVF::ThreadMHPIndSVFGEdge</derivedcompoundref>
    <includes refid="_s_v_f_g_edge_8h" local="no">SVFGEdge.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_indirect_s_v_f_g_edge_1a0df62e44e394d4b4cc30b5012308eb11" prot="public" static="no">
        <type>Set&lt; const <ref refid="class_s_v_f_1_1_m_r_ver" kindref="compound">MRVer</ref> * &gt;</type>
        <definition>typedef Set&lt;const MRVer*&gt; SVF::IndirectSVFGEdge::MRVerSet</definition>
        <argsstring></argsstring>
        <name>MRVerSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFGEdge.h" line="46" column="17" bodyfile="include/Graphs/SVFGEdge.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_indirect_s_v_f_g_edge_1afb265822e2581e4d7fccc47d1b8b2a5c" prot="private" static="no" mutable="no">
        <type>MRVerSet</type>
        <definition>MRVerSet SVF::IndirectSVFGEdge::mrs</definition>
        <argsstring></argsstring>
        <name>mrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFGEdge.h" line="48" column="14" bodyfile="include/Graphs/SVFGEdge.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_indirect_s_v_f_g_edge_1ac730b7fd9dfe729a184d9f3065c33dfc" prot="private" static="no" mutable="no">
        <type>PointsTo</type>
        <definition>PointsTo SVF::IndirectSVFGEdge::cpts</definition>
        <argsstring></argsstring>
        <name>cpts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFGEdge.h" line="49" column="14" bodyfile="include/Graphs/SVFGEdge.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_indirect_s_v_f_g_edge_1a6d40ccc9b99aec6515c2ef1df5a7b18f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::IndirectSVFGEdge::IndirectSVFGEdge</definition>
        <argsstring>(VFGNode *s, VFGNode *d, GEdgeFlag k)</argsstring>
        <name>IndirectSVFGEdge</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">VFGNode</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">VFGNode</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_generic_edge_1aab8892b73370c32b48621cd1d0cce614" kindref="member">GEdgeFlag</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFGEdge.h" line="52" column="5" bodyfile="include/Graphs/SVFGEdge.h" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_indirect_s_v_f_g_edge_1ab4138387b74d13458b09884c6f543790" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::IndirectSVFGEdge::addPointsTo</definition>
        <argsstring>(const PointsTo &amp;c)</argsstring>
        <name>addPointsTo</name>
        <param>
          <type>const PointsTo &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Handle memory region. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFGEdge.h" line="57" column="17" bodyfile="include/Graphs/SVFGEdge.h" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_indirect_s_v_f_g_edge_1abfabfa0478515d18e43ae47214e38cc6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const PointsTo &amp;</type>
        <definition>const PointsTo&amp; SVF::IndirectSVFGEdge::getPointsTo</definition>
        <argsstring>() const</argsstring>
        <name>getPointsTo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFGEdge.h" line="61" column="27" bodyfile="include/Graphs/SVFGEdge.h" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_indirect_s_v_f_g_edge_1ac08d8b88c44881d87c1299d18c943ace" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>MRVerSet &amp;</type>
        <definition>MRVerSet&amp; SVF::IndirectSVFGEdge::getMRVer</definition>
        <argsstring>()</argsstring>
        <name>getMRVer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFGEdge.h" line="66" column="21" bodyfile="include/Graphs/SVFGEdge.h" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_indirect_s_v_f_g_edge_1a7ac57ccfe31b6cd6bbc6f15ed22a6531" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::IndirectSVFGEdge::addMrVer</definition>
        <argsstring>(const MRVer *mr)</argsstring>
        <name>addMrVer</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_m_r_ver" kindref="compound">MRVer</ref> *</type>
          <declname>mr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFGEdge.h" line="70" column="17" bodyfile="include/Graphs/SVFGEdge.h" bodystart="70" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_indirect_s_v_f_g_edge_1a33e6221e5005fda68903f4cdadf58ce8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::string</type>
        <definition>const std::string IndirectSVFGEdge::toString</definition>
        <argsstring>() const</argsstring>
        <name>toString</name>
        <reimplements refid="class_s_v_f_1_1_v_f_g_edge_1a8f4bec008af7cd1a89870715eaa91a7b">toString</reimplements>
        <reimplementedby refid="class_s_v_f_1_1_intra_ind_s_v_f_g_edge_1ae148fda488b6505a6cc4103aae30e291">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_call_ind_s_v_f_g_edge_1a06cc5ba2c5be41bf38e4fad0c031138e">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_ret_ind_s_v_f_g_edge_1a58502c0881d2d8dccf9dd09385e08dc5">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_thread_m_h_p_ind_s_v_f_g_edge_1a09b7fef74030eecc6fa7b83a15c12521">toString</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFGEdge.h" line="100" column="31" bodyfile="lib/Graphs/SVFG.cpp" bodystart="121" bodyend="126"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_s_v_f_1_1_indirect_s_v_f_g_edge_1a65d58ce28f0bec8ba20191257a80221f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SVF::IndirectSVFGEdge::classof</definition>
        <argsstring>(const IndirectSVFGEdge *)</argsstring>
        <name>classof</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_indirect_s_v_f_g_edge" kindref="compound">IndirectSVFGEdge</ref> *</type>
        </param>
        <briefdescription>
<para>Methods for support type inquiry through isa, cast, and dyn_cast: </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFGEdge.h" line="80" column="24" bodyfile="include/Graphs/SVFGEdge.h" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_indirect_s_v_f_g_edge_1ad1635bdd79cae91c5a58b5e540f19df1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SVF::IndirectSVFGEdge::classof</definition>
        <argsstring>(const VFGEdge *edge)</argsstring>
        <name>classof</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_v_f_g_edge" kindref="compound">VFGEdge</ref> *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFGEdge.h" line="84" column="24" bodyfile="include/Graphs/SVFGEdge.h" bodystart="84" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_indirect_s_v_f_g_edge_1a62352957241f7ac5faba6b502d0ed0f1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SVF::IndirectSVFGEdge::classof</definition>
        <argsstring>(const GenericVFGEdgeTy *edge)</argsstring>
        <name>classof</name>
        <param>
          <type>const <ref refid="namespace_s_v_f_1a30dcaf83718f2652012f98b192dcf437" kindref="member">GenericVFGEdgeTy</ref> *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/SVFGEdge.h" line="91" column="24" bodyfile="include/Graphs/SVFGEdge.h" bodystart="91" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> edge representing indirect value-flows from a caller to its callee at a callsite </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>SVF::IntraIndSVFGEdge</label>
        <link refid="class_s_v_f_1_1_intra_ind_s_v_f_g_edge"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>GenericVFGEdgeTy</label>
        <link refid="class_s_v_f_1_1_generic_edge"/>
      </node>
      <node id="6">
        <label>SVF::RetIndSVFGEdge</label>
        <link refid="class_s_v_f_1_1_ret_ind_s_v_f_g_edge"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>SVF::CallIndSVFGEdge</label>
        <link refid="class_s_v_f_1_1_call_ind_s_v_f_g_edge"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>SVF::ThreadMHPIndSVFGEdge</label>
        <link refid="class_s_v_f_1_1_thread_m_h_p_ind_s_v_f_g_edge"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>SVF::IndirectSVFGEdge</label>
        <link refid="class_s_v_f_1_1_indirect_s_v_f_g_edge"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SVF::VFGEdge</label>
        <link refid="class_s_v_f_1_1_v_f_g_edge"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>GenericVFGEdgeTy</label>
        <link refid="class_s_v_f_1_1_generic_edge"/>
      </node>
      <node id="1">
        <label>SVF::IndirectSVFGEdge</label>
        <link refid="class_s_v_f_1_1_indirect_s_v_f_g_edge"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SVF::VFGEdge</label>
        <link refid="class_s_v_f_1_1_v_f_g_edge"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/Graphs/SVFGEdge.h" line="42" column="1" bodyfile="include/Graphs/SVFGEdge.h" bodystart="43" bodyend="101"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_indirect_s_v_f_g_edge_1a7ac57ccfe31b6cd6bbc6f15ed22a6531" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>addMrVer</name></member>
      <member refid="class_s_v_f_1_1_indirect_s_v_f_g_edge_1ab4138387b74d13458b09884c6f543790" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>addPointsTo</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5a8383c27feab3f1acc67cacef9744c04a" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>CallDirVF</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5a978c857fcc06d2f988bc9ce16ce10145" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>CallIndVF</name></member>
      <member refid="class_s_v_f_1_1_indirect_s_v_f_g_edge_1a65d58ce28f0bec8ba20191257a80221f" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_indirect_s_v_f_g_edge_1ad1635bdd79cae91c5a58b5e540f19df1" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_indirect_s_v_f_g_edge_1a62352957241f7ac5faba6b502d0ed0f1" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_indirect_s_v_f_g_edge_1ac730b7fd9dfe729a184d9f3065c33dfc" prot="private" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>cpts</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a93dec4c27088242a4b1b6aa82cea46b9" prot="protected" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>EdgeKindMask</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1af1c2fd4b5ef1d7b7605572bf2489c298" prot="protected" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>EdgeKindMaskBits</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1aab8892b73370c32b48621cd1d0cce614" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>GEdgeFlag</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a7eb93c9018c80057672a8ce71615dc0d" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>GEdgeKind</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a6764973569c281d483afab17a75cb4dc" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>GenericEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1ad9edb45e74ae675d9da82f5acf02d56e" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>getDstID</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1aeaa31a2c8479e831b36ce2e2582ceb86" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>getDstNode</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1abe8525c542def8162b094c169a01993b" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>getEdgeKind</name></member>
      <member refid="class_s_v_f_1_1_indirect_s_v_f_g_edge_1ac08d8b88c44881d87c1299d18c943ace" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>getMRVer</name></member>
      <member refid="class_s_v_f_1_1_indirect_s_v_f_g_edge_1abfabfa0478515d18e43ae47214e38cc6" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>getPointsTo</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1ae6792506a0150a9400d635eceab7f9e7" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>getSrcID</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1ab47ca533c415841ef75456cbad439589" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>getSrcNode</name></member>
      <member refid="class_s_v_f_1_1_indirect_s_v_f_g_edge_1a6d40ccc9b99aec6515c2ef1df5a7b18f" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>IndirectSVFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5a08201e6cbff4817e44568747a966b71d" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>IntraDirectVF</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5aa80551154bcfbfa84f02df32ead6b1b0" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>IntraIndirectVF</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a92e3da59f7f5a693945b9a93f169da04" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>isCallDirectVFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1ae14a5f58064e6c08b53a3cffcc050077" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>isCallIndirectVFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a4352297ef44c4eff1efe2f348cce6fe9" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>isCallVFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a8777555f00696706de250159b920d14b" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>isDirectVFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1aa8f30d093d4950724a6688707326b57b" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>isIndirectVFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a5d2668f46a709eb179007a296d94b77b" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>isIntraVFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a49cbf2a714c9b965b19452d266cd8bdf" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>isRetDirectVFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1ad0df7ea2de8de5607229dfcdd7b70b87" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>isRetIndirectVFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a3937eef974c3953f1d1e7d64c5a24ff3" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>isRetVFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1ace832abe1ec87e3e2338944061d09ea4" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>isThreadMHPIndirectVFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a30c07e8afb0853d4b46cfa722d912650" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>makeEdgeFlagWithInvokeID</name></member>
      <member refid="class_s_v_f_1_1_indirect_s_v_f_g_edge_1afb265822e2581e4d7fccc47d1b8b2a5c" prot="private" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>mrs</name></member>
      <member refid="class_s_v_f_1_1_indirect_s_v_f_g_edge_1a0df62e44e394d4b4cc30b5012308eb11" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>MRVerSet</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1aff95460d4b859e657a9198b7c5e5c736" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>NodeType</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a88b2086dcebb60bc86bca0fb94f49fca" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>operator==</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5a8288c583cfcbfdf9aa2ac2103c0e7191" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>RetDirVF</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5ac8124172b3f5f7fc94e895f6b192b668" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>RetIndVF</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1ae77e57aa36ed43fe83efa4c90a84688f" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>SVFGEdgeK</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a557334ef75bb5479b045f68c27b38701" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>SVFGEdgeSetTy</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5aae3168b6bc9141e4a1f3723eae4f3375" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>TheadMHPIndirectVF</name></member>
      <member refid="class_s_v_f_1_1_indirect_s_v_f_g_edge_1a33e6221e5005fda68903f4cdadf58ce8" prot="public" virt="virtual"><scope>SVF::IndirectSVFGEdge</scope><name>toString</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a9a29abd99da3465e07bd62470bd9bb56" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>VFGEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a156ae6a8b3a033f505c18c6b162e7cf5" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>VFGEdgeK</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a54e8b1d339da481222292e3b62d1e765" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>VFGEdgeSetTy</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a548daea0cac6491de91d4840b7297741" prot="public" virt="virtual"><scope>SVF::IndirectSVFGEdge</scope><name>~GenericEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_edge_1a35e826ecdbdc55cb72aaec6c91419b0d" prot="public" virt="non-virtual"><scope>SVF::IndirectSVFGEdge</scope><name>~VFGEdge</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
