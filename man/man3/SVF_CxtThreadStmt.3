.TH "SVF::CxtThreadStmt" 3 "Sun Feb 14 2021" "SVF" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SVF::CxtThreadStmt
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <CxtStmt\&.h>\fP
.PP
Inherits \fBSVF::CxtStmt\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCxtThreadStmt\fP (NodeID t, const CallStrCxt &c, const Instruction *f)"
.br
.RI "Constructor\&. "
.ti -1c
.RI "\fBCxtThreadStmt\fP (const \fBCxtThreadStmt\fP &ctm)"
.br
.RI "Copy constructor\&. "
.ti -1c
.RI "virtual \fB~CxtThreadStmt\fP ()"
.br
.RI "Destructor\&. "
.ti -1c
.RI "NodeID \fBgetTid\fP () const"
.br
.RI "Return current context\&. "
.ti -1c
.RI "bool \fBoperator<\fP (const \fBCxtThreadStmt\fP &rhs) const"
.br
.ti -1c
.RI "\fBCxtThreadStmt\fP & \fBoperator=\fP (const \fBCxtThreadStmt\fP &rhs)"
.br
.RI "Overloading operator=\&. "
.ti -1c
.RI "bool \fBoperator==\fP (const \fBCxtThreadStmt\fP &rhs) const"
.br
.RI "Overloading operator==\&. "
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBCxtThreadStmt\fP &rhs) const"
.br
.RI "Overloading operator==\&. "
.ti -1c
.RI "void \fBdump\fP () const"
.br
.RI "Dump \fBCxtThreadStmt\fP\&. "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Context-sensitive thread statement <t,c,s> 
.SH "Member Function Documentation"
.PP 
.SS "bool SVF::CxtThreadStmt::operator< (const \fBCxtThreadStmt\fP & rhs) const\fC [inline]\fP"
Enable compare operator to avoid duplicated item insertion in map or set to be noted that two vectors can also overload operator() 

.SH "Author"
.PP 
Generated automatically by Doxygen for SVF from the source code\&.
