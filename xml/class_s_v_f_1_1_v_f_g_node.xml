<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_v_f_g_node" kind="class" language="C++" prot="public">
    <compoundname>SVF::VFGNode</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_generic_node" prot="public" virt="non-virtual">SVF::GenericNode&lt; VFGNode, VFGEdge &gt;</basecompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_argument_v_f_g_node" prot="public" virt="non-virtual">SVF::ArgumentVFGNode</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_binary_o_p_v_f_g_node" prot="public" virt="non-virtual">SVF::BinaryOPVFGNode</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_cmp_v_f_g_node" prot="public" virt="non-virtual">SVF::CmpVFGNode</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_m_r_s_v_f_g_node" prot="public" virt="non-virtual">SVF::MRSVFGNode</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_null_ptr_v_f_g_node" prot="public" virt="non-virtual">SVF::NullPtrVFGNode</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_p_h_i_v_f_g_node" prot="public" virt="non-virtual">SVF::PHIVFGNode</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_stmt_v_f_g_node" prot="public" virt="non-virtual">SVF::StmtVFGNode</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_unary_o_p_v_f_g_node" prot="public" virt="non-virtual">SVF::UnaryOPVFGNode</derivedcompoundref>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75" prot="public" static="no" strong="no">
        <type></type>
        <name>VFGNodeK</name>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75af866301a661c59a7aa3182c0a7fc0c92" prot="public">
          <name>Addr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75af589a053fdb7efc728b68a324fc58b2b" prot="public">
          <name>Copy</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75aa2dffaa8741582ce06e591cbaf9257d7" prot="public">
          <name>Gep</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75a6df1bb8732d5402a6f40209ea8b803e8" prot="public">
          <name>Store</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75a0dfbaf92c48e11aebc85760e6e799d80" prot="public">
          <name>Load</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75a98fd43afc6615f418d2d96209eb31828" prot="public">
          <name>Cmp</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75a0e99fed4f3145668652aad5a3700e337" prot="public">
          <name>BinaryOp</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75a31dae52a5c31284a8fe54294bd34a5dc" prot="public">
          <name>UnaryOp</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75ac0bc801ca111129101616fbd39cce950" prot="public">
          <name>TPhi</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75a3d97c6d57d8d2e7387715f4eb719f727" prot="public">
          <name>TIntraPhi</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75aa501e9891cbacea3950d80aa6071ec69" prot="public">
          <name>TInterPhi</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75aac6fa19473ed8b90a7fd8c9080e5e014" prot="public">
          <name>MPhi</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75abde838081562229a5a5ca8bb250d5e18" prot="public">
          <name>MIntraPhi</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75abe59940f52e7a98cfe2b9d581e7563f8" prot="public">
          <name>MInterPhi</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75ae1d2cab9f6995b89064c2405f8eaf053" prot="public">
          <name>FRet</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75a283c290539f7f46d3cd474137ff37dfb" prot="public">
          <name>ARet</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75ab7a57e9eef84c1078593dfbe88de6f14" prot="public">
          <name>AParm</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75aeb82378d1c11bd6bf1776eb884cc4db7" prot="public">
          <name>FParm</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75ac8494021a71efb0f6df237ff12561c8d" prot="public">
          <name>FunRet</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75ab6ba0a5a5e8d8d37dc5e2a46224fdbad" prot="public">
          <name>APIN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75a562b0ba840860c8eeaaca1a66e61b54f" prot="public">
          <name>APOUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75a3c58aedc46cdafac26b47ec9674c2ac5" prot="public">
          <name>FPIN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75ac2c5b04acc4f754e70a782adee522e09" prot="public">
          <name>FPOUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75a6df3eccb26b5d699c8adbd563b31f2ff" prot="public">
          <name>NPtr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>24 kinds of <ref refid="class_s_v_f_1_1_i_c_f_g" kindref="compound">ICFG</ref> node Gep represents offset edge for field sensitivity </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGNode.h" line="54" column="5" bodyfile="include/Graphs/VFGNode.h" bodystart="55" bodyend="59"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_v_f_g_node_1a8b320525e5a0ed93030d578030761124" prot="public" static="no">
        <type>VFGEdge::VFGEdgeSetTy::iterator</type>
        <definition>typedef VFGEdge::VFGEdgeSetTy::iterator SVF::VFGNode::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGNode.h" line="61" column="45" bodyfile="include/Graphs/VFGNode.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_v_f_g_node_1a3c558955f60c237c558d8faafed781e8" prot="public" static="no">
        <type>VFGEdge::VFGEdgeSetTy::const_iterator</type>
        <definition>typedef VFGEdge::VFGEdgeSetTy::const_iterator SVF::VFGNode::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGNode.h" line="62" column="51" bodyfile="include/Graphs/VFGNode.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_v_f_g_node_1a43b6b3dc747d310f793ca1b3bfa9d05f" prot="public" static="no">
        <type>Set&lt; const <ref refid="class_s_v_f_1_1_call_p_e" kindref="compound">CallPE</ref> * &gt;</type>
        <definition>typedef Set&lt;const CallPE*&gt; SVF::VFGNode::CallPESet</definition>
        <argsstring></argsstring>
        <name>CallPESet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGNode.h" line="63" column="17" bodyfile="include/Graphs/VFGNode.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_v_f_g_node_1a367413b90de8a382190ffa9f0c742e01" prot="public" static="no">
        <type>Set&lt; const <ref refid="class_s_v_f_1_1_ret_p_e" kindref="compound">RetPE</ref> * &gt;</type>
        <definition>typedef Set&lt;const RetPE*&gt; SVF::VFGNode::RetPESet</definition>
        <argsstring></argsstring>
        <name>RetPESet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGNode.h" line="64" column="17" bodyfile="include/Graphs/VFGNode.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_v_f_g_node_1a54c631f1e39be144c0cd25373f6b98b8" prot="protected" static="no" mutable="no">
        <type>const <ref refid="class_s_v_f_1_1_i_c_f_g_node" kindref="compound">ICFGNode</ref> *</type>
        <definition>const ICFGNode* SVF::VFGNode::icfgNode</definition>
        <argsstring></argsstring>
        <name>icfgNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGNode.h" line="103" column="20" bodyfile="include/Graphs/VFGNode.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_v_f_g_node_1a775b3bd4c7558a18c5bc890fe711f03c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::VFGNode::VFGNode</definition>
        <argsstring>(NodeID i, VFGNodeK k)</argsstring>
        <name>VFGNode</name>
        <param>
          <type>NodeID</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75" kindref="member">VFGNodeK</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGNode.h" line="68" column="5" bodyfile="include/Graphs/VFGNode.h" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_v_f_g_node_1a0675465e11d1d42ee7e2b7ab3c5de829" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="class_s_v_f_1_1_i_c_f_g_node" kindref="compound">ICFGNode</ref> *</type>
        <definition>virtual const ICFGNode* SVF::VFGNode::getICFGNode</definition>
        <argsstring>() const</argsstring>
        <name>getICFGNode</name>
        <briefdescription>
<para>Return corresponding <ref refid="class_s_v_f_1_1_i_c_f_g" kindref="compound">ICFG</ref> node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGNode.h" line="74" column="28" bodyfile="include/Graphs/VFGNode.h" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_v_f_g_node_1a9c95dd4f0e70ccc4a03282cdddba95de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::VFGNode::setICFGNode</definition>
        <argsstring>(const ICFGNode *node)</argsstring>
        <name>setICFGNode</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_i_c_f_g_node" kindref="compound">ICFGNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Set corresponding <ref refid="class_s_v_f_1_1_i_c_f_g" kindref="compound">ICFG</ref> node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGNode.h" line="80" column="18" bodyfile="include/Graphs/VFGNode.h" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_v_f_g_node_1ab98e74dfd4756e70e3e3c5b7d5e5ae27" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
        <definition>virtual const SVFFunction* SVF::VFGNode::getFun</definition>
        <argsstring>() const</argsstring>
        <name>getFun</name>
        <reimplementedby refid="class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node_1a242d8967d6fc10ba37e3f0103081ec01">getFun</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_formal_parm_v_f_g_node_1a18157f92fd96f786c8e1ebc4c9c00994">getFun</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_formal_ret_v_f_g_node_1a33749701f18ba22908d34feb1e39d377">getFun</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_inter_p_h_i_v_f_g_node_1a3a1eab48f0990146ba98c6210aa78ff3">getFun</reimplementedby>
        <briefdescription>
<para>Get the function of this SVFGNode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGNode.h" line="86" column="31" bodyfile="include/Graphs/VFGNode.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_v_f_g_node_1a0342b5a6f270f4ff0e8e2a9b0082c6c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::string</type>
        <definition>const std::string VFGNode::toString</definition>
        <argsstring>() const</argsstring>
        <name>toString</name>
        <reimplementedby refid="class_s_v_f_1_1_m_r_s_v_f_g_node_1ab200b96b8dbff5d5fc5e3b114ae45921">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_formal_i_n_s_v_f_g_node_1a4022ecd01a88758b5fa7d22856c89745">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_formal_o_u_t_s_v_f_g_node_1a45b1aafb8a2464c868c5249b37e9ff0a">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_actual_i_n_s_v_f_g_node_1a5f583665f7e094dc4f7c387f4522a1a5">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_actual_o_u_t_s_v_f_g_node_1a460d0d6f338c33e39d810f7921237b5c">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_m_s_s_a_p_h_i_s_v_f_g_node_1a1a07b3e8da65d17c16ed34a4f66b80dd">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_intra_m_s_s_a_p_h_i_s_v_f_g_node_1ad463be283dcad18654cee4311d071a47">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node_1a286e9064de854a84bdd2efe8f7d73688">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_stmt_v_f_g_node_1af81c18c3575d81ef43df3829b7913037">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_load_v_f_g_node_1a06a1b71dcdff906114630f9a94c0df08">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_store_v_f_g_node_1a28c45fe92e0c70bc0cd200fcbd18df78">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_copy_v_f_g_node_1a3c9bfb1aea791217ce876ebce9207d31">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_cmp_v_f_g_node_1ae40d4e4aea7aad6afda10cf3d6715952">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_binary_o_p_v_f_g_node_1abf1af3895a12b39b6d7865f0d6a5fc53">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_unary_o_p_v_f_g_node_1ab748bb83004550944c6abca7150aec14">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_gep_v_f_g_node_1a6a0e926da634b974a2345a7e410fc862">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_p_h_i_v_f_g_node_1af44f488cb149873115ba74ce258863eb">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_intra_p_h_i_v_f_g_node_1a5156b0e9650f24dee9f67ff9373c2cd9">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_addr_v_f_g_node_1ac4a1130eb2fd1b3d15323f9df5ebb1e3">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_argument_v_f_g_node_1add076a578ac50298ae1e4f5643af004c">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_actual_parm_v_f_g_node_1a4d457ee0bf3a265369fadc729abbf6f8">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_formal_parm_v_f_g_node_1a5552cd32449249c1758ee8e222766b28">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_actual_ret_v_f_g_node_1a28557f163fc586b198b1df3dc9a5a88c">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_formal_ret_v_f_g_node_1a1842ed526801561d68aadb81b4222adc">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_inter_p_h_i_v_f_g_node_1a39d335fa05c41bdddfca3bee426133be">toString</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_null_ptr_v_f_g_node_1a4b06b96a00cf53cc97ab1bd2ae6fc65e">toString</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGNode.h" line="100" column="31" bodyfile="lib/Graphs/VFG.cpp" bodystart="41" bodyend="46"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_s_v_f_1_1_v_f_g_node_1acf120796be0cbb19c43fa271892b564a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_s_v_f_1a424cc053c29ad7303699c529d1a2cc71" kindref="member">raw_ostream</ref> &amp;</type>
        <definition>raw_ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(raw_ostream &amp;o, const VFGNode &amp;node)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="namespace_s_v_f_1a424cc053c29ad7303699c529d1a2cc71" kindref="member">raw_ostream</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">VFGNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Overloading operator &lt;&lt; for dumping <ref refid="class_s_v_f_1_1_i_c_f_g" kindref="compound">ICFG</ref> node ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/VFGNode.h" line="93" column="12" bodyfile="include/Graphs/VFGNode.h" bodystart="93" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="12">
        <label>SVF::ActualOUTSVFGNode</label>
        <link refid="class_s_v_f_1_1_actual_o_u_t_s_v_f_g_node"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>SVF::GepVFGNode</label>
        <link refid="class_s_v_f_1_1_gep_v_f_g_node"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>SVF::IntraMSSAPHISVFGNode</label>
        <link refid="class_s_v_f_1_1_intra_m_s_s_a_p_h_i_s_v_f_g_node"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>SVF::BinaryOPVFGNode</label>
        <link refid="class_s_v_f_1_1_binary_o_p_v_f_g_node"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>SVF::FormalRetVFGNode</label>
        <link refid="class_s_v_f_1_1_formal_ret_v_f_g_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SVF::ArgumentVFGNode</label>
        <link refid="class_s_v_f_1_1_argument_v_f_g_node"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>SVF::IntraPHIVFGNode</label>
        <link refid="class_s_v_f_1_1_intra_p_h_i_v_f_g_node"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>SVF::InterMSSAPHISVFGNode</label>
        <link refid="class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>SVF::ActualRetVFGNode</label>
        <link refid="class_s_v_f_1_1_actual_ret_v_f_g_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>SVF::StmtVFGNode</label>
        <link refid="class_s_v_f_1_1_stmt_v_f_g_node"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>SVF::StoreVFGNode</label>
        <link refid="class_s_v_f_1_1_store_v_f_g_node"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>SVF::FormalOUTSVFGNode</label>
        <link refid="class_s_v_f_1_1_formal_o_u_t_s_v_f_g_node"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>SVF::CopyVFGNode</label>
        <link refid="class_s_v_f_1_1_copy_v_f_g_node"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>SVF::InterPHIVFGNode</label>
        <link refid="class_s_v_f_1_1_inter_p_h_i_v_f_g_node"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>SVF::MSSAPHISVFGNode</label>
        <link refid="class_s_v_f_1_1_m_s_s_a_p_h_i_s_v_f_g_node"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>SVF::UnaryOPVFGNode</label>
        <link refid="class_s_v_f_1_1_unary_o_p_v_f_g_node"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>SVF::LoadVFGNode</label>
        <link refid="class_s_v_f_1_1_load_v_f_g_node"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>SVF::FormalINSVFGNode</label>
        <link refid="class_s_v_f_1_1_formal_i_n_s_v_f_g_node"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>SVF::ActualParmVFGNode</label>
        <link refid="class_s_v_f_1_1_actual_parm_v_f_g_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>SVF::NullPtrVFGNode</label>
        <link refid="class_s_v_f_1_1_null_ptr_v_f_g_node"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GenericVFGNodeTy</label>
        <link refid="class_s_v_f_1_1_generic_node"/>
      </node>
      <node id="6">
        <label>SVF::FormalParmVFGNode</label>
        <link refid="class_s_v_f_1_1_formal_parm_v_f_g_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>SVF::VFGNode</label>
        <link refid="class_s_v_f_1_1_v_f_g_node"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>SVF::PHIVFGNode</label>
        <link refid="class_s_v_f_1_1_p_h_i_v_f_g_node"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>SVF::AddrVFGNode</label>
        <link refid="class_s_v_f_1_1_addr_v_f_g_node"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>SVF::ActualINSVFGNode</label>
        <link refid="class_s_v_f_1_1_actual_i_n_s_v_f_g_node"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>SVF::MRSVFGNode</label>
        <link refid="class_s_v_f_1_1_m_r_s_v_f_g_node"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>SVF::CmpVFGNode</label>
        <link refid="class_s_v_f_1_1_cmp_v_f_g_node"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>GenericICFGNodeTy</label>
        <link refid="class_s_v_f_1_1_generic_node"/>
      </node>
      <node id="5">
        <label>SVF::SVFFunction</label>
        <link refid="class_s_v_f_1_1_s_v_f_function"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GenericVFGNodeTy</label>
        <link refid="class_s_v_f_1_1_generic_node"/>
      </node>
      <node id="3">
        <label>SVF::ICFGNode</label>
        <link refid="class_s_v_f_1_1_i_c_f_g_node"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>fun</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>SVF::VFGNode</label>
        <link refid="class_s_v_f_1_1_v_f_g_node"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>icfgNode</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>SVF::SVFValue</label>
        <link refid="class_s_v_f_1_1_s_v_f_value"/>
      </node>
    </collaborationgraph>
    <location file="include/Graphs/VFGNode.h" line="48" column="1" bodyfile="include/Graphs/VFGNode.h" bodystart="49" bodyend="104"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_generic_node_1a93d217b0c9fd8008a2989ca2b4f3fbfb" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>addIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ae74283fbc788665296a69e56f334557b" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>addOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75af866301a661c59a7aa3182c0a7fc0c92" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>Addr</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75ab7a57e9eef84c1078593dfbe88de6f14" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>AParm</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75ab6ba0a5a5e8d8d37dc5e2a46224fdbad" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>APIN</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75a562b0ba840860c8eeaaca1a66e61b54f" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>APOUT</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75a283c290539f7f46d3cd474137ff37dfb" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>ARet</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75a0e99fed4f3145668652aad5a3700e337" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>BinaryOp</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a43b6b3dc747d310f793ca1b3bfa9d05f" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>CallPESet</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75a98fd43afc6615f418d2d96209eb31828" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>Cmp</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a3c558955f60c237c558d8faafed781e8" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>const_iterator</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75af589a053fdb7efc728b68a324fc58b2b" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>Copy</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a4ab1f2e5db301e4a37215905a22e6476" prot="public" virt="virtual"><scope>SVF::VFGNode</scope><name>directInEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ab331402aed245c33bad841df2bc21f7b" prot="public" virt="virtual"><scope>SVF::VFGNode</scope><name>directInEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a19599627ba095b5452373284deab7f6c" prot="public" virt="virtual"><scope>SVF::VFGNode</scope><name>directInEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1aa7be9ff204bf85bc3bf2fa4e078fcab2" prot="public" virt="virtual"><scope>SVF::VFGNode</scope><name>directInEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1aa0e258d3a92dae367f2809a6f16c80db" prot="public" virt="virtual"><scope>SVF::VFGNode</scope><name>directOutEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1acfae7a2809931cbd62b6f47c4813510d" prot="public" virt="virtual"><scope>SVF::VFGNode</scope><name>directOutEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a5950d69d4ba6c2122dd06b93911e4992" prot="public" virt="virtual"><scope>SVF::VFGNode</scope><name>directOutEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a7f914b128f7839483efc9ad56834e7c2" prot="public" virt="virtual"><scope>SVF::VFGNode</scope><name>directOutEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a458c626543431b4314f5f4f532eb51de" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>EdgeType</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75aeb82378d1c11bd6bf1776eb884cc4db7" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>FParm</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75a3c58aedc46cdafac26b47ec9674c2ac5" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>FPIN</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75ac2c5b04acc4f754e70a782adee522e09" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>FPOUT</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75ae1d2cab9f6995b89064c2405f8eaf053" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>FRet</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75ac8494021a71efb0f6df237ff12561c8d" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>FunRet</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a03c6da4a73c47f84f5c5b47252bc339a" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>GEdgeSetTy</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1acdca5baae3e9e4208a60322fec9c9d3f" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>GenericNode</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75aa2dffaa8741582ce06e591cbaf9257d7" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>Gep</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1ab98e74dfd4756e70e3e3c5b7d5e5ae27" prot="public" virt="virtual"><scope>SVF::VFGNode</scope><name>getFun</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a0675465e11d1d42ee7e2b7ab3c5de829" prot="public" virt="virtual"><scope>SVF::VFGNode</scope><name>getICFGNode</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ac3e55ef37aefb411ea4c87b1aa3b1895" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>getId</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1afc8b5f86d7795b6a0dfc0687d942d79b" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>getInEdges</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a391e996d695b114530120723da1d003e" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>getNodeKind</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a2d9cd758d6f8c5189d9b90b74f43e009" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>getOutEdges</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a363b90ab02cce2ebc3ede8e5b7cc141c" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>GNodeK</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a06a7373b11143e709784de784fa476fe" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>hasIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1add6b6b3bd45a9460335c5db9eda821b8" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>hasIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a0931220d7a38e03f206cbdc6465d32ad" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>hasOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1aa0c40cb708b39300b3cb7354194e4993" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>hasOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a54c631f1e39be144c0cd25373f6b98b8" prot="protected" virt="non-virtual"><scope>SVF::VFGNode</scope><name>icfgNode</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ae5b113921530eee6afe58a65d8e5b3a7" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>InEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a7c0ff80b1c0ae8b76fc620f21495ca39" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>InEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1afe6a7b286d9af4992f41b59612fd2900" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>InEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a0118fbeb2b314dcdcb53c56a2a13ab07" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>InEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a8b320525e5a0ed93030d578030761124" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>iterator</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75a0dfbaf92c48e11aebc85760e6e799d80" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>Load</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75abe59940f52e7a98cfe2b9d581e7563f8" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>MInterPhi</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75abde838081562229a5a5ca8bb250d5e18" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>MIntraPhi</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75aac6fa19473ed8b90a7fd8c9080e5e014" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>MPhi</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ad63e862eb1d1369bd69318fe698e4a22" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>NodeType</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75a6df3eccb26b5d699c8adbd563b31f2ff" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>NPtr</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1acf120796be0cbb19c43fa271892b564a" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1aa4f103330118c8976bf95e4bf53416eb" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>OutEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a50219c203fb5a8a44fe22428699f26e7" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>OutEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a19a3366fd8a58290d0c740c46c3dcb3d" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>OutEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ace88b6c7561f61f747ff08f61e2c18bc" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>OutEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a56dff05dc2b3c5664d3b8fc1c6c927d5" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>removeIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a7c6192cb176bda3fad1819711302e468" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>removeOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a367413b90de8a382190ffa9f0c742e01" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>RetPESet</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a9c95dd4f0e70ccc4a03282cdddba95de" prot="public" virt="virtual"><scope>SVF::VFGNode</scope><name>setICFGNode</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75a6df1bb8732d5402a6f40209ea8b803e8" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>Store</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75aa501e9891cbacea3950d80aa6071ec69" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>TInterPhi</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75a3d97c6d57d8d2e7387715f4eb719f727" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>TIntraPhi</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a0342b5a6f270f4ff0e8e2a9b0082c6c5" prot="public" virt="virtual"><scope>SVF::VFGNode</scope><name>toString</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75ac0bc801ca111129101616fbd39cce950" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>TPhi</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75a31dae52a5c31284a8fe54294bd34a5dc" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>UnaryOp</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a775b3bd4c7558a18c5bc890fe711f03c" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>VFGNode</name></member>
      <member refid="class_s_v_f_1_1_v_f_g_node_1a99a54cf322b0eec3a1ef109ce5f2db75" prot="public" virt="non-virtual"><scope>SVF::VFGNode</scope><name>VFGNodeK</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a48a8d05b81b5c8099c3f3d1f2c4983a9" prot="public" virt="virtual"><scope>SVF::VFGNode</scope><name>~GenericNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
