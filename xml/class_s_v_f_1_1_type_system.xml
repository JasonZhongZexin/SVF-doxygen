<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_type_system" kind="class" language="C++" prot="public">
    <compoundname>SVF::TypeSystem</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_type_system_1ae3bb1f41445bc7258f32feadbf20f64e" prot="public" static="no">
        <type>Map&lt; NodeID, <ref refid="class_s_v_f_1_1_type_set" kindref="compound">TypeSet</ref> * &gt;</type>
        <definition>typedef Map&lt;NodeID, TypeSet*&gt; SVF::TypeSystem::VarToTypeSetMapTy</definition>
        <argsstring></argsstring>
        <name>VarToTypeSetMapTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="193" column="17" bodyfile="include/MemoryModel/PTAType.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_type_system_1a74e6c7885929b86eb4fa3d2c587d9631" prot="public" static="no">
        <type>OrderedMap&lt; <ref refid="class_s_v_f_1_1_p_t_a_type" kindref="compound">PTAType</ref>, NodeBS &gt;</type>
        <definition>typedef OrderedMap&lt;PTAType, NodeBS&gt; SVF::TypeSystem::TypeToVarsMapTy</definition>
        <argsstring></argsstring>
        <name>TypeToVarsMapTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="195" column="24" bodyfile="include/MemoryModel/PTAType.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_type_system_1a4708b09e485ed2cd4b8534793b942247" prot="public" static="no">
        <type>VarToTypeSetMapTy::iterator</type>
        <definition>typedef VarToTypeSetMapTy::iterator SVF::TypeSystem::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="197" column="50" bodyfile="include/MemoryModel/PTAType.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_type_system_1ad8106316691f8a2f01b296c484647431" prot="public" static="no">
        <type>VarToTypeSetMapTy::const_iterator</type>
        <definition>typedef VarToTypeSetMapTy::const_iterator SVF::TypeSystem::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="198" column="56" bodyfile="include/MemoryModel/PTAType.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_type_system_1a4d8cfc39d4083158d34cc8e4dbaaa333" prot="private" static="no" mutable="no">
        <type>VarToTypeSetMapTy</type>
        <definition>VarToTypeSetMapTy SVF::TypeSystem::VarToTypeSetMap</definition>
        <argsstring></argsstring>
        <name>VarToTypeSetMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="361" column="23" bodyfile="include/MemoryModel/PTAType.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_type_system_1ae6d1f3a2e6449e5efb25ee0cb32cb1b3" prot="private" static="no" mutable="no">
        <type>OrderedSet&lt; <ref refid="class_s_v_f_1_1_p_t_a_type" kindref="compound">PTAType</ref> &gt;</type>
        <definition>OrderedSet&lt;PTAType&gt; SVF::TypeSystem::allPTATypes</definition>
        <argsstring></argsstring>
        <name>allPTATypes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="362" column="16" bodyfile="include/MemoryModel/PTAType.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_type_system_1ae418e2ee701744813447350f9ece4f80" prot="private" static="no" mutable="no">
        <type>TypeToVarsMapTy</type>
        <definition>TypeToVarsMapTy SVF::TypeSystem::typeToVarsMap</definition>
        <argsstring></argsstring>
        <name>typeToVarsMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="363" column="21" bodyfile="include/MemoryModel/PTAType.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_type_system_1a16b21a48c3316630cf78868022213291" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator SVF::TypeSystem::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Iterators. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="202" column="21" bodyfile="include/MemoryModel/PTAType.h" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_type_system_1a8c8733d3ab9a28a25d9886ee97c3341f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator SVF::TypeSystem::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="206" column="21" bodyfile="include/MemoryModel/PTAType.h" bodystart="206" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_type_system_1a51fec074a4142e203396cb021a780128" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator SVF::TypeSystem::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="210" column="27" bodyfile="include/MemoryModel/PTAType.h" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_type_system_1a3c0e2a090705c1f6a67b36ee4c607b9d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator SVF::TypeSystem::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="214" column="27" bodyfile="include/MemoryModel/PTAType.h" bodystart="214" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_type_system_1a14f2c80f05304e9a3f257b29dd48985e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::TypeSystem::TypeSystem</definition>
        <argsstring>(const PAG *pag)</argsstring>
        <name>TypeSystem</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> *</type>
          <declname>pag</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="221" column="5" bodyfile="include/MemoryModel/PTAType.h" bodystart="221" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_type_system_1a945097eb1bb050a416f37beeb7ee6194" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::TypeSystem::hasTypeSet</definition>
        <argsstring>(NodeID var) const</argsstring>
        <name>hasTypeSet</name>
        <param>
          <type>NodeID</type>
          <declname>var</declname>
        </param>
        <briefdescription>
<para>Has typeset or not. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="227" column="17" bodyfile="include/MemoryModel/PTAType.h" bodystart="227" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_type_system_1a6b52e1b6fbf9cfcc0337471bb425f330" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_s_v_f_1_1_type_set" kindref="compound">TypeSet</ref> *</type>
        <definition>const TypeSet* SVF::TypeSystem::getTypeSet</definition>
        <argsstring>(NodeID var) const</argsstring>
        <name>getTypeSet</name>
        <param>
          <type>NodeID</type>
          <declname>var</declname>
        </param>
        <briefdescription>
<para>Get a var&apos;s typeset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="234" column="26" bodyfile="include/MemoryModel/PTAType.h" bodystart="234" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_type_system_1ad88b2a9bb6ddfc5a9fbef0b924559685" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::TypeSystem::addTypeForVar</definition>
        <argsstring>(NodeID var, const PTAType &amp;type)</argsstring>
        <name>addTypeForVar</name>
        <param>
          <type>NodeID</type>
          <declname>var</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_p_t_a_type" kindref="compound">PTAType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a ptatype for a var Return true if the ptatype is new for this var </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="243" column="17" bodyfile="include/MemoryModel/PTAType.h" bodystart="243" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_type_system_1a78ba5fd094d4a5fd77cc9e01bca821c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::TypeSystem::addTypeForVar</definition>
        <argsstring>(NodeID var, const Type *type)</argsstring>
        <name>addTypeForVar</name>
        <param>
          <type>NodeID</type>
          <declname>var</declname>
        </param>
        <param>
          <type>const Type *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a ptatype for a var Return true if the ptatype is new for this var </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="262" column="17" bodyfile="include/MemoryModel/PTAType.h" bodystart="262" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_type_system_1a8b14cbba82ee2608b1ac6007e003e93f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::TypeSystem::addVarForType</definition>
        <argsstring>(NodeID var, const PTAType &amp;type)</argsstring>
        <name>addVarForType</name>
        <param>
          <type>NodeID</type>
          <declname>var</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_p_t_a_type" kindref="compound">PTAType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="268" column="10" bodyfile="include/MemoryModel/PTAType.h" bodystart="268" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_type_system_1ae9b228ed0cabc0f7185a2187f5ff0c90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::TypeSystem::addVarForType</definition>
        <argsstring>(NodeID var, const Type *type)</argsstring>
        <name>addVarForType</name>
        <param>
          <type>NodeID</type>
          <declname>var</declname>
        </param>
        <param>
          <type>const Type *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="284" column="10" bodyfile="include/MemoryModel/PTAType.h" bodystart="284" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_type_system_1a5006938c789d97d2d1c4de3fa7a4b9a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::TypeSystem::hasVarsForType</definition>
        <argsstring>(const PTAType &amp;type) const</argsstring>
        <name>hasVarsForType</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_p_t_a_type" kindref="compound">PTAType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="290" column="17" bodyfile="include/MemoryModel/PTAType.h" bodystart="290" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_type_system_1a4e0aa8f26c1a7c51706acbba3f6642b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodeBS &amp;</type>
        <definition>NodeBS&amp; SVF::TypeSystem::getVarsForType</definition>
        <argsstring>(const PTAType &amp;type)</argsstring>
        <name>getVarsForType</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_p_t_a_type" kindref="compound">PTAType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="296" column="19" bodyfile="include/MemoryModel/PTAType.h" bodystart="296" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_type_system_1af8ab46936a372441300b336a53aea662" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::TypeSystem::printTypeSystem</definition>
        <argsstring>() const</argsstring>
        <name>printTypeSystem</name>
        <briefdescription>
<para>Print each var&apos;s id and all its types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="306" column="10" bodyfile="include/MemoryModel/PTAType.h" bodystart="306" bodyend="317"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_s_v_f_1_1_type_system_1a961bbab47530d05ddb18e4c7d58d8a69" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::TypeSystem::translateLLVMTypeToPTAType</definition>
        <argsstring>(const PAG *pag)</argsstring>
        <name>translateLLVMTypeToPTAType</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> *</type>
          <declname>pag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/PTAType.h" line="330" column="10" bodyfile="include/MemoryModel/PTAType.h" bodystart="330" bodyend="358"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/MemoryModel/PTAType.h" line="189" column="1" bodyfile="include/MemoryModel/PTAType.h" bodystart="190" bodyend="364"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_type_system_1ad88b2a9bb6ddfc5a9fbef0b924559685" prot="public" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>addTypeForVar</name></member>
      <member refid="class_s_v_f_1_1_type_system_1a78ba5fd094d4a5fd77cc9e01bca821c2" prot="public" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>addTypeForVar</name></member>
      <member refid="class_s_v_f_1_1_type_system_1a8b14cbba82ee2608b1ac6007e003e93f" prot="public" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>addVarForType</name></member>
      <member refid="class_s_v_f_1_1_type_system_1ae9b228ed0cabc0f7185a2187f5ff0c90" prot="public" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>addVarForType</name></member>
      <member refid="class_s_v_f_1_1_type_system_1ae6d1f3a2e6449e5efb25ee0cb32cb1b3" prot="private" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>allPTATypes</name></member>
      <member refid="class_s_v_f_1_1_type_system_1a16b21a48c3316630cf78868022213291" prot="public" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>begin</name></member>
      <member refid="class_s_v_f_1_1_type_system_1a51fec074a4142e203396cb021a780128" prot="public" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>begin</name></member>
      <member refid="class_s_v_f_1_1_type_system_1ad8106316691f8a2f01b296c484647431" prot="public" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>const_iterator</name></member>
      <member refid="class_s_v_f_1_1_type_system_1a8c8733d3ab9a28a25d9886ee97c3341f" prot="public" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>end</name></member>
      <member refid="class_s_v_f_1_1_type_system_1a3c0e2a090705c1f6a67b36ee4c607b9d" prot="public" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>end</name></member>
      <member refid="class_s_v_f_1_1_type_system_1a6b52e1b6fbf9cfcc0337471bb425f330" prot="public" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>getTypeSet</name></member>
      <member refid="class_s_v_f_1_1_type_system_1a4e0aa8f26c1a7c51706acbba3f6642b8" prot="public" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>getVarsForType</name></member>
      <member refid="class_s_v_f_1_1_type_system_1a945097eb1bb050a416f37beeb7ee6194" prot="public" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>hasTypeSet</name></member>
      <member refid="class_s_v_f_1_1_type_system_1a5006938c789d97d2d1c4de3fa7a4b9a8" prot="public" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>hasVarsForType</name></member>
      <member refid="class_s_v_f_1_1_type_system_1a4708b09e485ed2cd4b8534793b942247" prot="public" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>iterator</name></member>
      <member refid="class_s_v_f_1_1_type_system_1af8ab46936a372441300b336a53aea662" prot="public" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>printTypeSystem</name></member>
      <member refid="class_s_v_f_1_1_type_system_1a961bbab47530d05ddb18e4c7d58d8a69" prot="private" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>translateLLVMTypeToPTAType</name></member>
      <member refid="class_s_v_f_1_1_type_system_1a14f2c80f05304e9a3f257b29dd48985e" prot="public" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>TypeSystem</name></member>
      <member refid="class_s_v_f_1_1_type_system_1ae418e2ee701744813447350f9ece4f80" prot="private" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>typeToVarsMap</name></member>
      <member refid="class_s_v_f_1_1_type_system_1a74e6c7885929b86eb4fa3d2c587d9631" prot="public" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>TypeToVarsMapTy</name></member>
      <member refid="class_s_v_f_1_1_type_system_1a4d8cfc39d4083158d34cc8e4dbaaa333" prot="private" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>VarToTypeSetMap</name></member>
      <member refid="class_s_v_f_1_1_type_system_1ae3bb1f41445bc7258f32feadbf20f64e" prot="public" virt="non-virtual"><scope>SVF::TypeSystem</scope><name>VarToTypeSetMapTy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
