<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_mutable_versioned_p_t_data" kind="class" language="C++" prot="public">
    <compoundname>SVF::MutableVersionedPTData</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_versioned_p_t_data" prot="public" virt="non-virtual">SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;</basecompoundref>
    <includes refid="_mutable_points_to_d_s_8h" local="no">MutablePointsToDS.h</includes>
    <templateparamlist>
      <param>
        <type>typename Key</type>
      </param>
      <param>
        <type>typename Datum</type>
      </param>
      <param>
        <type>typename Data</type>
      </param>
      <param>
        <type>typename VersionedKey</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1ab1aba1f44aab56c0474769acb03d88fc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::classof</definition>
        <argsstring>(const MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt; *)</argsstring>
        <name>classof</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_mutable_versioned_p_t_data" kindref="compound">MutableVersionedPTData</ref>&lt; Key, Datum, Data, VersionedKey &gt; *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Methods to support type inquiry through isa, cast, and dyn_cast: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="884" column="24" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="884" bodyend="887"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1abe766d48ad33ab54b27cbf4f6fc9fdd1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::classof</definition>
        <argsstring>(const PTData&lt; Key, Datum, Data &gt; *ptd)</argsstring>
        <name>classof</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData</ref>&lt; Key, Datum, Data &gt; *</type>
          <declname>ptd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="889" column="24" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="889" bodyend="892"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1a5a2dab7bc7b1d6641da9ac8b21c9f43e" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData</ref>&lt; Key, Datum, Data &gt;</type>
        <definition>typedef PTData&lt;Key, Datum, Data&gt; SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::BasePTData</definition>
        <argsstring></argsstring>
        <name>BasePTData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="785" column="20" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="785" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1a513bbb8f8338cad7e3ca8f36bebb4bcf" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_versioned_p_t_data" kindref="compound">VersionedPTData</ref>&lt; Key, Datum, Data, VersionedKey &gt;</type>
        <definition>typedef VersionedPTData&lt;Key, Datum, Data, VersionedKey&gt; SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::BaseVersionedPTData</definition>
        <argsstring></argsstring>
        <name>BaseVersionedPTData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="786" column="29" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="786" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1ac272a3454eaa86c1cfe1c3cbf2865211" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848" kindref="member">BasePTData::PTDataTy</ref></type>
        <definition>typedef BasePTData::PTDataTy SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::PTDataTy</definition>
        <argsstring></argsstring>
        <name>PTDataTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="787" column="43" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="787" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1a461e86dbc55cd07e3dcfaea656cf0051" prot="public" static="no">
        <type>BasePTData::KeySet</type>
        <definition>typedef BasePTData::KeySet SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::KeySet</definition>
        <argsstring></argsstring>
        <name>KeySet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="788" column="41" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="788" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1af010738c337a5777b6f3340883434683" prot="public" static="no">
        <type>BaseVersionedPTData::VersionedKeySet</type>
        <definition>typedef BaseVersionedPTData::VersionedKeySet SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::VersionedKeySet</definition>
        <argsstring></argsstring>
        <name>VersionedKeySet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="789" column="59" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="789" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1aa4eb8f1d12a46ab6afb910f20dc49cee" prot="private" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_mutable_p_t_data" kindref="compound">MutablePTData</ref>&lt; Key, Datum, Data &gt;</type>
        <definition>MutablePTData&lt;Key, Datum, Data&gt; SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::tlPTData</definition>
        <argsstring></argsstring>
        <name>tlPTData</name>
        <briefdescription>
<para><ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData</ref> for Keys (top-level pointers, generally). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="897" column="19" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="897" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1af2656a7dc5fd3c3618b4a6a97fce9b8d" prot="private" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_mutable_p_t_data" kindref="compound">MutablePTData</ref>&lt; VersionedKey, Datum, Data &gt;</type>
        <definition>MutablePTData&lt;VersionedKey, Datum, Data&gt; SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::atPTData</definition>
        <argsstring></argsstring>
        <name>atPTData</name>
        <briefdescription>
<para><ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData</ref> for VersionedKeys (address-taken objects, generally). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="899" column="19" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="899" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1ad5b20171c380327fd93992c8a5f5cd02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::MutableVersionedPTData</definition>
        <argsstring>(bool reversePT=true, PTDataTy ty=PTDataTy::MutVersioned)</argsstring>
        <name>MutableVersionedPTData</name>
        <param>
          <type>bool</type>
          <declname>reversePT</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848" kindref="member">PTDataTy</ref></type>
          <declname>ty</declname>
          <defval>PTDataTy::MutVersioned</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="791" column="5" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="791" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1a5a3102482a788f7561387d5dac03b18d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::~MutableVersionedPTData</definition>
        <argsstring>()</argsstring>
        <name>~MutableVersionedPTData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="794" column="13" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="794" bodyend="794"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1a3b7b4cf2be2c5c560c07fbf37eb7bbe2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::clear</definition>
        <argsstring>() override</argsstring>
        <name>clear</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1a3cdec1f0be962716508d3922dce058d5">clear</reimplements>
        <briefdescription>
<para>Clears all points-to sets as if nothing is stored. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="796" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="796" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1a1fc03ad41eed39e45073def0a5cc039f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>const Data &amp;</type>
        <definition>virtual const Data&amp; SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::getPts</definition>
        <argsstring>(const Key &amp;vk) override</argsstring>
        <name>getPts</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1a86a93186b51b6ce9dccffecad8381281">getPts</reimplements>
        <param>
          <type>const Key &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
<para>Get points-to set of var. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="802" column="24" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="802" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1a8bd59cf022c590261ad770522265538d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>const Data &amp;</type>
        <definition>virtual const Data&amp; SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::getPts</definition>
        <argsstring>(const VersionedKey &amp;vk) override</argsstring>
        <name>getPts</name>
        <reimplements refid="class_s_v_f_1_1_versioned_p_t_data_1a45bd3c3d1af738b998701dfaae544777">getPts</reimplements>
        <param>
          <type>const VersionedKey &amp;</type>
          <declname>vk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="806" column="24" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="806" bodyend="809"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1a84556624efefac28863652a17a69cd4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>const KeySet &amp;</type>
        <definition>virtual const KeySet&amp; SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::getRevPts</definition>
        <argsstring>(const Datum &amp;datum) override</argsstring>
        <name>getRevPts</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1a5ac0805846fb6bac6c58c0fefb106c5f">getRevPts</reimplements>
        <param>
          <type>const Datum &amp;</type>
          <declname>datum</declname>
        </param>
        <briefdescription>
<para>Get reverse points-to set of datum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="811" column="26" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="811" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1ae3491bde317f1e6359c2d6a2658c4f18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>const VersionedKeySet &amp;</type>
        <definition>virtual const VersionedKeySet&amp; SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::getVersionedKeyRevPts</definition>
        <argsstring>(const Datum &amp;datum) override</argsstring>
        <name>getVersionedKeyRevPts</name>
        <reimplements refid="class_s_v_f_1_1_versioned_p_t_data_1aa090922fa8d0a2434994ceb56c1ba8fa">getVersionedKeyRevPts</reimplements>
        <param>
          <type>const Datum &amp;</type>
          <declname>datum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="816" column="35" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="816" bodyend="820"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1af3baa17b1844ebfaf551cbf2c759c7fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::addPts</definition>
        <argsstring>(const Key &amp;k, const Datum &amp;element) override</argsstring>
        <name>addPts</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1a1365146d19ee927f870a7384c0d1db6b">addPts</reimplements>
        <param>
          <type>const Key &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>const Datum &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
<para>Adds element to the points-to set associated with var. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="822" column="18" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="822" bodyend="825"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1a39bdea088d50ae62994b5fb29940ec85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::addPts</definition>
        <argsstring>(const VersionedKey &amp;vk, const Datum &amp;element) override</argsstring>
        <name>addPts</name>
        <reimplements refid="class_s_v_f_1_1_versioned_p_t_data_1adf3c8af290b0d465e2745bca647e4812">addPts</reimplements>
        <param>
          <type>const VersionedKey &amp;</type>
          <declname>vk</declname>
        </param>
        <param>
          <type>const Datum &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="826" column="18" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="826" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1a88fe993ecc80719d3c77dd81e721b324" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::unionPts</definition>
        <argsstring>(const Key &amp;dstVar, const Key &amp;srcVar) override</argsstring>
        <name>unionPts</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1a482eda0b2ea6a8e1326ee1a0c25c1fdc">unionPts</reimplements>
        <param>
          <type>const Key &amp;</type>
          <declname>dstVar</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>srcVar</declname>
        </param>
        <briefdescription>
<para>Performs pts(dstVar) = pts(dstVar) U pts(srcVar). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="831" column="18" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="831" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1a4b0119e55f672429884e3a5262f0e213" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::unionPts</definition>
        <argsstring>(const VersionedKey &amp;dstVar, const VersionedKey &amp;srcVar) override</argsstring>
        <name>unionPts</name>
        <reimplements refid="class_s_v_f_1_1_versioned_p_t_data_1a3503c0cab8db30aaa2b0603bbdd28632">unionPts</reimplements>
        <param>
          <type>const VersionedKey &amp;</type>
          <declname>dstVar</declname>
        </param>
        <param>
          <type>const VersionedKey &amp;</type>
          <declname>srcVar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="835" column="18" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="835" bodyend="838"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1afd1d94c485aac81642ca690e8e1e4d3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::unionPts</definition>
        <argsstring>(const VersionedKey &amp;dstVar, const Key &amp;srcVar) override</argsstring>
        <name>unionPts</name>
        <reimplements refid="class_s_v_f_1_1_versioned_p_t_data_1a6a494dbc79246f2f207d8db35478e2cb">unionPts</reimplements>
        <param>
          <type>const VersionedKey &amp;</type>
          <declname>dstVar</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>srcVar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="839" column="18" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="839" bodyend="842"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1a24bf9e1d4d8da3bbef9fbb5a671af42d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::unionPts</definition>
        <argsstring>(const Key &amp;dstVar, const VersionedKey &amp;srcVar) override</argsstring>
        <name>unionPts</name>
        <reimplements refid="class_s_v_f_1_1_versioned_p_t_data_1ae259d1f362090248abd4f4520dc43ba3">unionPts</reimplements>
        <param>
          <type>const Key &amp;</type>
          <declname>dstVar</declname>
        </param>
        <param>
          <type>const VersionedKey &amp;</type>
          <declname>srcVar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="843" column="18" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="843" bodyend="846"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1a74ce39fc0ccd52e6d05da6f561c76e9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::unionPts</definition>
        <argsstring>(const Key &amp;dstVar, const Data &amp;srcData) override</argsstring>
        <name>unionPts</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1ab378c0f2171f6de9b8aa076b43f88e89">unionPts</reimplements>
        <param>
          <type>const Key &amp;</type>
          <declname>dstVar</declname>
        </param>
        <param>
          <type>const Data &amp;</type>
          <declname>srcData</declname>
        </param>
        <briefdescription>
<para>Performs pts(dstVar) = pts(dstVar) U srcData. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="847" column="18" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="847" bodyend="850"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1a5897263968acfa99c0257f9580c196e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::unionPts</definition>
        <argsstring>(const VersionedKey &amp;dstVar, const Data &amp;srcData) override</argsstring>
        <name>unionPts</name>
        <reimplements refid="class_s_v_f_1_1_versioned_p_t_data_1a56586d50f1f53f0ef5d61d480a825c16">unionPts</reimplements>
        <param>
          <type>const VersionedKey &amp;</type>
          <declname>dstVar</declname>
        </param>
        <param>
          <type>const Data &amp;</type>
          <declname>srcData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="851" column="18" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="851" bodyend="854"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1af2259ec9cda00c8421d5a6fa26f526cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::clearPts</definition>
        <argsstring>(const Key &amp;k, const Datum &amp;element) override</argsstring>
        <name>clearPts</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1a2ee28cb51800a57a7646d72f1b92e6ac">clearPts</reimplements>
        <param>
          <type>const Key &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>const Datum &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
<para>Clears element from the points-to set of var. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="856" column="18" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="856" bodyend="859"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1a3d11f7bb5ec34c8bb7b7f5e0662c2372" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::clearPts</definition>
        <argsstring>(const VersionedKey &amp;vk, const Datum &amp;element) override</argsstring>
        <name>clearPts</name>
        <reimplements refid="class_s_v_f_1_1_versioned_p_t_data_1a7cdde443124531c080e5ab2b55629326">clearPts</reimplements>
        <param>
          <type>const VersionedKey &amp;</type>
          <declname>vk</declname>
        </param>
        <param>
          <type>const Datum &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="860" column="18" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="860" bodyend="863"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1ab77bc3cc94a18e56bbc5091b53f1c946" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::clearFullPts</definition>
        <argsstring>(const Key &amp;k) override</argsstring>
        <name>clearFullPts</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1a4a27923265487dac1eede5a57cc0c9a5">clearFullPts</reimplements>
        <param>
          <type>const Key &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
<para>Fully clears the points-to set of var. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="865" column="18" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="865" bodyend="868"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1ab5bf2dc41daf9a04fac6eac4f66a1b2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::clearFullPts</definition>
        <argsstring>(const VersionedKey &amp;vk) override</argsstring>
        <name>clearFullPts</name>
        <reimplements refid="class_s_v_f_1_1_versioned_p_t_data_1a928eca53e077c9a0f544d7334de2f549">clearFullPts</reimplements>
        <param>
          <type>const VersionedKey &amp;</type>
          <declname>vk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="869" column="18" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="869" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_versioned_p_t_data_1aea5eee3d5049a9c17675758f67a255d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::dumpPTData</definition>
        <argsstring>() override</argsstring>
        <name>dumpPTData</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1affb0e613229679f926c52c37b3c141ea">dumpPTData</reimplements>
        <briefdescription>
<para>Dump stored keys and points-to sets. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="874" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="874" bodyend="880"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_s_v_f_1_1_versioned_p_t_data" kindref="compound">VersionedPTData</ref> implemented with mutable points-to set (Data). Implemented as a wrapper around two MutablePTDatas: one for Keys, one for VersionedKeys. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>SVF::PTData&lt; Key, Datum, Data &gt;</label>
        <link refid="class_s_v_f_1_1_p_t_data"/>
      </node>
      <node id="1">
        <label>SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;</label>
        <link refid="class_s_v_f_1_1_mutable_versioned_p_t_data"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;</label>
        <link refid="class_s_v_f_1_1_versioned_p_t_data"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>SVF::PTData&lt; Key, Datum, Data &gt;</label>
        <link refid="class_s_v_f_1_1_p_t_data"/>
      </node>
      <node id="1">
        <label>SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;</label>
        <link refid="class_s_v_f_1_1_mutable_versioned_p_t_data"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;</label>
        <link refid="class_s_v_f_1_1_versioned_p_t_data"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/MemoryModel/MutablePointsToDS.h" line="782" column="1" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="783" bodyend="900"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1af3baa17b1844ebfaf551cbf2c759c7fe" prot="public" virt="virtual"><scope>SVF::MutableVersionedPTData</scope><name>addPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1a39bdea088d50ae62994b5fb29940ec85" prot="public" virt="virtual"><scope>SVF::MutableVersionedPTData</scope><name>addPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1af2656a7dc5fd3c3618b4a6a97fce9b8d" prot="private" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>atPTData</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a48ea0972c2495007d758a0674fd958a0" prot="public" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>Base</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1a5a2dab7bc7b1d6641da9ac8b21c9f43e" prot="public" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>BasePTData</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1a513bbb8f8338cad7e3ca8f36bebb4bcf" prot="public" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>BaseVersionedPTData</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1ab1aba1f44aab56c0474769acb03d88fc" prot="public" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1abe766d48ad33ab54b27cbf4f6fc9fdd1" prot="public" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_versioned_p_t_data_1aad5a199fc9542ee5aaf14fe418a13ee6" prot="public" virt="non-virtual" ambiguityscope="SVF::VersionedPTData::"><scope>SVF::MutableVersionedPTData</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1a3b7b4cf2be2c5c560c07fbf37eb7bbe2" prot="public" virt="virtual"><scope>SVF::MutableVersionedPTData</scope><name>clear</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1ab77bc3cc94a18e56bbc5091b53f1c946" prot="public" virt="virtual"><scope>SVF::MutableVersionedPTData</scope><name>clearFullPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1ab5bf2dc41daf9a04fac6eac4f66a1b2f" prot="public" virt="virtual"><scope>SVF::MutableVersionedPTData</scope><name>clearFullPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1af2259ec9cda00c8421d5a6fa26f526cb" prot="public" virt="virtual"><scope>SVF::MutableVersionedPTData</scope><name>clearPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1a3d11f7bb5ec34c8bb7b7f5e0662c2372" prot="public" virt="virtual"><scope>SVF::MutableVersionedPTData</scope><name>clearPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a9fd234f8ac4f0615ef1bc2f9c02e00ab" prot="public" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>DataFlow</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a12db671c6effedfcd48f3a390a3cea39" prot="public" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>Diff</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1aea5eee3d5049a9c17675758f67a255d3" prot="public" virt="virtual"><scope>SVF::MutableVersionedPTData</scope><name>dumpPTData</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a22b25cb7e65dd9989dbb4c1819d68dee" prot="public" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>getPTDTY</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1a1fc03ad41eed39e45073def0a5cc039f" prot="public" virt="virtual"><scope>SVF::MutableVersionedPTData</scope><name>getPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1a8bd59cf022c590261ad770522265538d" prot="public" virt="virtual"><scope>SVF::MutableVersionedPTData</scope><name>getPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1a84556624efefac28863652a17a69cd4d" prot="public" virt="virtual"><scope>SVF::MutableVersionedPTData</scope><name>getRevPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1ae3491bde317f1e6359c2d6a2658c4f18" prot="public" virt="virtual"><scope>SVF::MutableVersionedPTData</scope><name>getVersionedKeyRevPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a85136c4ad93cefd1d2371cc92aa2423d" prot="public" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>IncMutDataFlow</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1a461e86dbc55cd07e3dcfaea656cf0051" prot="public" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>KeySet</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1ad5b20171c380327fd93992c8a5f5cd02" prot="public" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>MutableVersionedPTData</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848ad89e3219f31ba0f1424c1a219565b7b0" prot="public" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>MutBase</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a13666448dbecfb781405aff71a674d4e" prot="public" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>MutDataFlow</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a31e94f61c6e2166b4c205fe03a4e912d" prot="public" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>MutDiff</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a97fea46c57fe00f026da2cd3f510e785" prot="public" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>MutVersioned</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a4481e26740c77bd69239552badf85614" prot="public" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>PTData</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1ac272a3454eaa86c1cfe1c3cbf2865211" prot="public" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>PTDataTy</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a11120561456b00e1a6210e5105e8f718" prot="protected" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>ptdTy</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1aea15e71384244f3ad556e9924a1d0d21" prot="protected" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>rev</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1aa4eb8f1d12a46ab6afb910f20dc49cee" prot="private" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>tlPTData</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1a88fe993ecc80719d3c77dd81e721b324" prot="public" virt="virtual"><scope>SVF::MutableVersionedPTData</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1a4b0119e55f672429884e3a5262f0e213" prot="public" virt="virtual"><scope>SVF::MutableVersionedPTData</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1afd1d94c485aac81642ca690e8e1e4d3c" prot="public" virt="virtual"><scope>SVF::MutableVersionedPTData</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1a24bf9e1d4d8da3bbef9fbb5a671af42d" prot="public" virt="virtual"><scope>SVF::MutableVersionedPTData</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1a74ce39fc0ccd52e6d05da6f561c76e9c" prot="public" virt="virtual"><scope>SVF::MutableVersionedPTData</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1a5897263968acfa99c0257f9580c196e2" prot="public" virt="virtual"><scope>SVF::MutableVersionedPTData</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a4fcfbbd2f9f50444a49c4cc4065b0aeb" prot="public" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>Versioned</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1af010738c337a5777b6f3340883434683" prot="public" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>VersionedKeySet</name></member>
      <member refid="class_s_v_f_1_1_versioned_p_t_data_1a4d9ac1680e6719a9b3da706478bbdee4" prot="public" virt="non-virtual"><scope>SVF::MutableVersionedPTData</scope><name>VersionedPTData</name></member>
      <member refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1a5a3102482a788f7561387d5dac03b18d" prot="public" virt="virtual"><scope>SVF::MutableVersionedPTData</scope><name>~MutableVersionedPTData</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a982153a8d2300d18549a7a6c4235c52d" prot="public" virt="virtual"><scope>SVF::MutableVersionedPTData</scope><name>~PTData</name></member>
      <member refid="class_s_v_f_1_1_versioned_p_t_data_1a745e82ba75807e10688198e378f109a3" prot="public" virt="virtual"><scope>SVF::MutableVersionedPTData</scope><name>~VersionedPTData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
