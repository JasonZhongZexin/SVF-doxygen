<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structllvm_1_1_graph_traits_3_01_inverse_3_01_s_v_f_1_1_generic_node_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_01_4" xml:lang="en-US">
<title>llvm::GraphTraits&lt; Inverse&lt; SVF::GenericNode&lt; NodeTy, EdgeTy &gt; * &gt; &gt; Struct Template Reference</title>
<indexterm><primary>llvm::GraphTraits&lt; Inverse&lt; SVF::GenericNode&lt; NodeTy, EdgeTy &gt; * &gt; &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;GenericGraph.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_inverse_3_01_s_v_f_1_1_generic_node_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_01_4_1abad2528ec8121f20d79ce6734cf7280c"/>typedef NodeTy <emphasis role="strong">NodeType</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_inverse_3_01_s_v_f_1_1_generic_node_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_01_4_1a91509dc31017825ee15c58f81ca37956"/>typedef EdgeTy <emphasis role="strong">EdgeType</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_inverse_3_01_s_v_f_1_1_generic_node_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_01_4_1a949dd36d323bc8bed6d2e49020f3d95b"/>typedef std::pointer_to_unary_function&lt; EdgeType *, NodeType * &gt; <emphasis role="strong">DerefEdge</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_inverse_3_01_s_v_f_1_1_generic_node_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_01_4_1a6358b572731537aa9dfd18d6bbde3263"/>typedef mapped_iterator&lt; typename <link linkend="_class_s_v_f_1_1_generic_node">SVF::GenericNode</link>&lt; NodeTy, EdgeTy &gt;::iterator, DerefEdge &gt; <emphasis role="strong">ChildIteratorType</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_inverse_3_01_s_v_f_1_1_generic_node_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_01_4_1ac66b7e5b77ba103341cc9aefde56c27c"/>static NodeType * <emphasis role="strong">getEntryNode</emphasis> (Inverse&lt; NodeType * &gt; G)</para>
</listitem>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_inverse_3_01_s_v_f_1_1_generic_node_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_01_4_1afe98992b95aedb07969e382c4945f2a1"/>static ChildIteratorType <emphasis role="strong">child_begin</emphasis> (const NodeType *N)</para>
</listitem>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_inverse_3_01_s_v_f_1_1_generic_node_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_01_4_1a0cbd192741f5f31ddb8ad999ce16d911"/>static ChildIteratorType <emphasis role="strong">child_end</emphasis> (const NodeType *N)</para>
</listitem>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_inverse_3_01_s_v_f_1_1_generic_node_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_01_4_1ab9714a346134bfccafc07171d03ccd2b"/>static NodeType * <emphasis role="strong">edgeDereference</emphasis> (EdgeType *edge)</para>
</listitem>
            <listitem><para><anchor xml:id="_structllvm_1_1_graph_traits_3_01_inverse_3_01_s_v_f_1_1_generic_node_3_01_node_ty_00_01_edge_ty_01_4_01_5_01_4_01_4_1a75778ff2e63e86c9d07d4c5005df50df"/>static unsigned <emphasis role="strong">getNodeID</emphasis> (const NodeType *N)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;class NodeTy, class EdgeTy&gt;
struct llvm::GraphTraits&lt; Inverse&lt; SVF::GenericNode&lt; NodeTy, EdgeTy &gt; * &gt; &gt;</title></simplesect>


<para>Inverse GraphTraits for node which is used for inverse traversal. </para>
<para>
The documentation for this struct was generated from the following file:</para>
include/Graphs/GenericGraph.h</section>
</section>
