<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_versioned_flow_sensitive_stat_8cpp" kind="file" language="C++">
    <compoundname>VersionedFlowSensitiveStat.cpp</compoundname>
    <includes refid="_l_l_v_m_util_8h" local="yes">SVF-FE/LLVMUtil.h</includes>
    <includes refid="_w_p_a_stat_8h" local="yes">WPA/WPAStat.h</includes>
    <includes refid="_versioned_flow_sensitive_8h" local="yes">WPA/VersionedFlowSensitive.h</includes>
    <incdepgraph>
      <node id="13">
        <label>list</label>
      </node>
      <node id="5">
        <label>SVF-FE/CPPUtil.h</label>
        <link refid="_c_p_p_util_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>MemoryModel/LocationSet.h</label>
        <link refid="_location_set_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>Graphs/PAG.h</label>
        <link refid="_p_a_g_8h_source"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>MSSA/MSSAMuChi.h</label>
        <link refid="_m_s_s_a_mu_chi_8h_source"/>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>WPA/WPASolver.h</label>
        <link refid="_w_p_a_solver_8h_source"/>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>MemoryModel/ConditionalPT.h</label>
        <link refid="_conditional_p_t_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>Util/Casting.h</label>
        <link refid="_casting_8h_source"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>system_error</label>
      </node>
      <node id="74">
        <label>MemoryModel/PointerAnalysis.h</label>
        <link refid="_pointer_analysis_8h_source"/>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>llvm/IR/IRBuilder.h</label>
      </node>
      <node id="54">
        <label>llvm/ADT/GraphTraits.h</label>
      </node>
      <node id="72">
        <label>Graphs/VFGNode.h</label>
        <link refid="_v_f_g_node_8h_source"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>Util/NodeIDAllocator.h</label>
        <link refid="_node_i_d_allocator_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>cudd.h</label>
        <link refid="cudd_8h_source"/>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>llvm/Bitcode/BitcodeReader.h</label>
      </node>
      <node id="87">
        <label>assert.h</label>
      </node>
      <node id="36">
        <label>llvm/ADT/SmallVector.h</label>
      </node>
      <node id="108">
        <label>Graphs/SVFGNode.h</label>
        <link refid="_s_v_f_g_node_8h_source"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>llvm/IR/InstVisitor.h</label>
      </node>
      <node id="10">
        <label>llvm/Support/CommandLine.h</label>
      </node>
      <node id="9">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="2">
        <label>SVF-FE/LLVMUtil.h</label>
        <link refid="_l_l_v_m_util_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>llvm/Analysis/ScalarEvolutionExpressions.h</label>
      </node>
      <node id="85">
        <label>Graphs/ICFG.h</label>
        <link refid="_i_c_f_g_8h_source"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>Util/PathCondAllocator.h</label>
        <link refid="_path_cond_allocator_8h_source"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>Util/ThreadAPI.h</label>
        <link refid="_thread_a_p_i_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>mtr.h</label>
        <link refid="mtr_8h_source"/>
      </node>
      <node id="42">
        <label>llvm/ADT/StringExtras.h</label>
      </node>
      <node id="90">
        <label>Util/Conditions.h</label>
        <link refid="_conditions_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Util/SVFUtil.h</label>
        <link refid="_s_v_f_util_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>PAGEdge.h</label>
        <link refid="_p_a_g_edge_8h_source"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>MemoryModel/PTAStat.h</label>
        <link refid="_p_t_a_stat_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>cassert</label>
      </node>
      <node id="114">
        <label>WPA/WPAFSSolver.h</label>
        <link refid="_w_p_a_f_s_solver_8h_source"/>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>Graphs/GenericGraph.h</label>
        <link refid="_generic_graph_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Util/BasicTypes.h</label>
        <link refid="_basic_types_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>st.h</label>
        <link refid="st_8h_source"/>
      </node>
      <node id="62">
        <label>string</label>
      </node>
      <node id="92">
        <label>CUDD/cuddInt.h</label>
        <link refid="cudd_int_8h_source"/>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>WPA/FlowSensitive.h</label>
        <link refid="_flow_sensitive_8h_source"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>MemoryModel/MutablePointsToDS.h</label>
        <link refid="_mutable_points_to_d_s_8h_source"/>
      </node>
      <node id="101">
        <label>Util/SCC.h</label>
        <link refid="_s_c_c_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>map</label>
      </node>
      <node id="43">
        <label>llvm/Analysis/AliasAnalysis.h</label>
      </node>
      <node id="15">
        <label>unordered_set</label>
      </node>
      <node id="100">
        <label>Graphs/PTACallGraph.h</label>
        <link refid="_p_t_a_call_graph_8h_source"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>MemoryModel/AbstractPointsToDS.h</label>
        <link refid="_abstract_points_to_d_s_8h_source"/>
      </node>
      <node id="113">
        <label>MSSA/SVFGBuilder.h</label>
        <link refid="_s_v_f_g_builder_8h_source"/>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>Util/ExtAPI.h</label>
        <link refid="_ext_a_p_i_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>llvm/IR/User.h</label>
      </node>
      <node id="8">
        <label>llvm/ADT/SparseBitVector.h</label>
      </node>
      <node id="102">
        <label>limits.h</label>
      </node>
      <node id="41">
        <label>llvm/Analysis/ScalarEvolution.h</label>
      </node>
      <node id="55">
        <label>llvm/Support/GraphWriter.h</label>
      </node>
      <node id="71">
        <label>Graphs/VFG.h</label>
        <link refid="_v_f_g_8h_source"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>Graphs/SVFG.h</label>
        <link refid="_s_v_f_g_8h_source"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>MSSA/MemSSA.h</label>
        <link refid="_mem_s_s_a_8h_source"/>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>llvm/Support/Compiler.h</label>
      </node>
      <node id="59">
        <label>Util/SVFModule.h</label>
        <link refid="_s_v_f_module_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>MemoryModel/MemModel.h</label>
        <link refid="_mem_model_8h_source"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>epd.h</label>
        <link refid="epd_8h_source"/>
      </node>
      <node id="83">
        <label>SVF-FE/SymbolTableInfo.h</label>
        <link refid="_symbol_table_info_8h_source"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>llvm/Support/type_traits.h</label>
      </node>
      <node id="25">
        <label>llvm/IR/GetElementPtrTypeIterator.h</label>
      </node>
      <node id="1">
        <label>lib/WPA/VersionedFlowSensitiveStat.cpp</label>
        <link refid="_versioned_flow_sensitive_stat_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>Util/WorkList.h</label>
        <link refid="_work_list_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>MSSA/MemRegion.h</label>
        <link refid="_mem_region_8h_source"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>Graphs/VFGEdge.h</label>
        <link refid="_v_f_g_edge_8h_source"/>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>stack</label>
      </node>
      <node id="12">
        <label>vector</label>
      </node>
      <node id="24">
        <label>llvm/ADT/PointerIntPair.h</label>
      </node>
      <node id="28">
        <label>llvm/Support/ToolOutputFile.h</label>
      </node>
      <node id="57">
        <label>llvm/Transforms/Utils/Local.h</label>
      </node>
      <node id="81">
        <label>PAGNode.h</label>
        <link refid="_p_a_g_node_8h_source"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>llvm/ADT/StringMap.h</label>
      </node>
      <node id="73">
        <label>MemoryModel/PointerAnalysisImpl.h</label>
        <link refid="_pointer_analysis_impl_8h_source"/>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>llvm/IR/Operator.h</label>
      </node>
      <node id="60">
        <label>time.h</label>
      </node>
      <node id="93">
        <label>math.h</label>
      </node>
      <node id="106">
        <label>llvm/Transforms/IPO/PassManagerBuilder.h</label>
      </node>
      <node id="64">
        <label>llvm/Support/JSON.h</label>
      </node>
      <node id="52">
        <label>llvm/Analysis/PostDominators.h</label>
      </node>
      <node id="88">
        <label>cstdlib</label>
      </node>
      <node id="67">
        <label>iostream</label>
      </node>
      <node id="58">
        <label>llvm/IR/DebugInfo.h</label>
      </node>
      <node id="51">
        <label>llvm/Analysis/DominanceFrontier.h</label>
      </node>
      <node id="19">
        <label>deque</label>
      </node>
      <node id="80">
        <label>Graphs/ICFGEdge.h</label>
        <link refid="_i_c_f_g_edge_8h_source"/>
      </node>
      <node id="17">
        <label>unordered_map</label>
      </node>
      <node id="49">
        <label>llvm/IRReader/IRReader.h</label>
      </node>
      <node id="7">
        <label>Util/SVFBasicTypes.h</label>
        <link refid="_s_v_f_basic_types_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>llvm/Support/FileSystem.h</label>
      </node>
      <node id="45">
        <label>llvm/IR/GlobalVariable.h</label>
      </node>
      <node id="50">
        <label>llvm/Transforms/Utils/UnifyFunctionExitNodes.h</label>
      </node>
      <node id="65">
        <label>WPA/WPAStat.h</label>
        <link refid="_w_p_a_stat_8h_source"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>Graphs/ICFGNode.h</label>
        <link refid="_i_c_f_g_node_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>Graphs/SVFGOPT.h</label>
        <link refid="_s_v_f_g_o_p_t_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>WPA/VersionedFlowSensitive.h</label>
        <link refid="_versioned_flow_sensitive_8h_source"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>llvm/Bitcode/BitcodeWriter.h</label>
      </node>
      <node id="35">
        <label>type_traits</label>
      </node>
      <node id="14">
        <label>set</label>
      </node>
      <node id="105">
        <label>llvm/IR/LegacyPassManager.h</label>
      </node>
      <node id="91">
        <label>stdio.h</label>
      </node>
      <node id="21">
        <label>llvm/IR/DerivedTypes.h</label>
      </node>
      <node id="46">
        <label>llvm/Support/SourceMgr.h</label>
      </node>
      <node id="37">
        <label>llvm/IR/Instructions.h</label>
      </node>
      <node id="104">
        <label>SVF-FE/DataFlowUtil.h</label>
        <link refid="_data_flow_util_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>SVF-FE/GEPTypeBridgeIterator.h</label>
        <link refid="_g_e_p_type_bridge_iterator_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>SVF-FE/LLVMModule.h</label>
        <link refid="_l_l_v_m_module_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>memory</label>
      </node>
      <node id="26">
        <label>Graphs/GraphPrinter.h</label>
        <link refid="_graph_printer_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>llvm/IR/CallSite.h</label>
      </node>
      <node id="109">
        <label>Graphs/SVFGEdge.h</label>
        <link refid="_s_v_f_g_edge_8h_source"/>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>llvm/IR/InstIterator.h</label>
      </node>
      <node id="44">
        <label>llvm/Analysis/CallGraph.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//===-<sp/>VersionedFlowSensitiveStat.cpp<sp/>--<sp/>Statistics<sp/>for<sp/>VFSPTA<sp/>-//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>VersionedFlowSensitiveStat.cpp</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>25/07/2020</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>mbarbar</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SVF-FE/LLVMUtil.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;WPA/WPAStat.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;WPA/VersionedFlowSensitive.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_s_v_f" kindref="compound">SVF</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">SVFUtil;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VersionedFlowSensitiveStat::clearStat()</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>_NumVersions<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>_MaxVersions<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>_NumNonEmptyVersions<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>_NumSingleVersion<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>_NumUsedVersions<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>_NumEmptyVersions<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>_MaxPtsSize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>_MaxTopLvlPtsSize<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>_MaxVersionPtsSize<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>_TotalPtsSize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>_AvgPtsSize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>_AvgTopLvlPtsSize<sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>_AvgVersionPtsSize<sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VersionedFlowSensitiveStat::performStat()</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Largely<sp/>based<sp/>on<sp/>that<sp/>in<sp/>FlowSensitiveStat.<sp/>Would<sp/>be<sp/>better<sp/>to<sp/>split<sp/>the<sp/>FSStat<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>reuse<sp/>code<sp/>rather<sp/>than<sp/>copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(SVFUtil::isa&lt;VersionedFlowSensitive&gt;(vfspta)<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;VFSStat::performStat:<sp/>not<sp/>given<sp/>VFSPTA.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>endClk();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>clearStat();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref><sp/>*pag<sp/>=<sp/>vfspta-&gt;<ref refid="class_s_v_f_1_1_p_a_g_1ac8910c7330638bdf31c23d4cc03ba9c5" kindref="member">getPAG</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>versionStat();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>ptsSizeStat();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>fiObjNumber<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>fsObjNumber<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>Set&lt;SymID&gt;<sp/>nodeSet;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(PAG::const_iterator<sp/>it<sp/>=<sp/>pag-&gt;<ref refid="class_s_v_f_1_1_generic_graph_1a0d9744b1b0e7a09a6f7af29188e243b7" kindref="member">begin</ref>();<sp/>it<sp/>!=<sp/>pag-&gt;end();<sp/>++it)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NodeID<sp/>nodeId<sp/>=<sp/>it-&gt;first;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_p_a_g_node" kindref="compound">PAGNode</ref>*<sp/>pagNode<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SVFUtil::isa&lt;ObjPN&gt;(pagNode))</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_mem_obj" kindref="compound">MemObj</ref><sp/>*memObj<sp/>=<sp/>pag-&gt;getBaseObj(nodeId);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SymID<sp/>baseId<sp/>=<sp/>memObj-&gt;<ref refid="class_s_v_f_1_1_mem_obj_1ad7f7de744715c3acaf3d48822865c87b" kindref="member">getSymId</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nodeSet.insert(baseId).second)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memObj-&gt;<ref refid="class_s_v_f_1_1_mem_obj_1a9d50a00ff608df21f50b3b2823128901" kindref="member">isFieldInsensitive</ref>())<sp/>fiObjNumber++;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>fsObjNumber++;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>numOfCopy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>numOfStore<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>numOfNode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(SVFG::iterator<sp/>it<sp/>=<sp/>vfspta-&gt;svfg-&gt;begin();<sp/>it<sp/>!=<sp/>vfspta-&gt;svfg-&gt;end();<sp/>++it)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numOfNode++;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_v_f_g_node" kindref="compound">SVFGNode</ref>*<sp/>svfgNode<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SVFUtil::isa&lt;CopySVFGNode&gt;(svfgNode))<sp/>numOfCopy++;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SVFUtil::isa&lt;StoreSVFGNode&gt;(svfgNode))<sp/>numOfStore++;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>PTAStat::performStat();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[TotalAnalysisTime]<sp/><sp/><sp/><sp/>=<sp/>(endTime<sp/>-<sp/>startTime)/TIMEINTERVAL;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;SolveTime&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;solveTime;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;SCCTime&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;sccTime;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;ProcessTime&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;processTime;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;PropagationTime&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;propagationTime;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;DirectPropaTime&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;directPropaTime;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;IndirectPropaTime&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>vfspta-&gt;indirectPropaTime;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;Strong/WeakUpdTime&quot;</highlight><highlight class="normal">]<sp/>=<sp/>vfspta-&gt;updateTime;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;AddrTime&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;addrTime;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;CopyTime&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;copyTime;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;GepTime&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;gepTime;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;LoadTime&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;loadTime;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;StoreTime&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;storeTime;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;UpdateCGTime&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;updateCallGraphTime;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;PhiTime&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;phiTime;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;meldLabelingTime&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>vfspta-&gt;meldLabelingTime;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;PrelabelingTime&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;prelabelingTime;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;RelianceTime&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;relianceTime;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;VersionPropTime&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;versionPropTime;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;MeldMappingTime&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;meldMappingTime;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[TotalNumOfPointers]<sp/><sp/>=<sp/>pag-&gt;getValueNodeNum()<sp/>+<sp/>pag-&gt;getFieldValNodeNum();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[TotalNumOfObjects]<sp/><sp/><sp/>=<sp/>pag-&gt;getObjectNodeNum()<sp/>+<sp/>pag-&gt;getFieldObjNodeNum();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[NumOfPointers]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>pag-&gt;getValueNodeNum();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[NumOfMemObjects]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>pag-&gt;getObjectNodeNum();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[NumOfGepFieldPointers]<sp/>=<sp/>pag-&gt;getFieldValNodeNum();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[NumOfGepFieldObjects]<sp/><sp/>=<sp/>pag-&gt;getFieldObjNodeNum();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;TotalVersions&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>=<sp/>_NumVersions;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;MaxVersionsForObj&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_MaxVersions;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;TotalNonEmptyVPts&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_NumNonEmptyVersions;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;TotalEmptyVPts&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>_NumEmptyVersions;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;TotalExistingVPts&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_NumUsedVersions;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;TotalSingleVObjs&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>_NumSingleVersion;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[NumOfCopys]<sp/><sp/>=<sp/>numOfCopy;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[NumOfStores]<sp/>=<sp/>numOfStore;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[NumOfIterations]<sp/>=<sp/>vfspta-&gt;numOfIteration;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[NumOfIndirectEdgeSolved]<sp/>=<sp/>vfspta-&gt;getNumOfResolvedIndCallEdge();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;StrongUpdates&quot;</highlight><highlight class="normal">]<sp/>=<sp/>vfspta-&gt;svfgHasSU.count();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;MaxPtsSize&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>_MaxPtsSize;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;MaxTopLvlPtsSize&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>_MaxTopLvlPtsSize;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;MaxVersionPtsSize&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_MaxVersionPtsSize;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;AvgPtsSize&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>_AvgPtsSize;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;AvgTopLvlPtsSize&quot;</highlight><highlight class="normal">]<sp/><sp/>=<sp/>_AvgTopLvlPtsSize;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;AvgVersionPtsSize&quot;</highlight><highlight class="normal">]<sp/>=<sp/>_AvgVersionPtsSize;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;ProcessedAddr&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;numOfProcessedAddr;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;ProcessedCopy&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;numOfProcessedCopy;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;ProcessedGep&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;numOfProcessedGep;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;ProcessedLoad&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;numOfProcessedLoad;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;ProcessedStore&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;numOfProcessedStore;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;ProcessedPhi&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;numOfProcessedPhi;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;ProcessedAParam&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>vfspta-&gt;numOfProcessedActualParam;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;ProcessedFRet&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;numOfProcessedFormalRet;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;ProcessedMSSANode&quot;</highlight><highlight class="normal">]<sp/>=<sp/>vfspta-&gt;numOfProcessedMSSANode;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;NumOfNodesInSCC&quot;</highlight><highlight class="normal">]<sp/>=<sp/>vfspta-&gt;numOfNodesInSCC;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;MaxSCCSize&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;maxSCCSize;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>PTNumStatMap[</highlight><highlight class="stringliteral">&quot;NumOfSCC&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vfspta-&gt;numOfSCC;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStatMap[</highlight><highlight class="stringliteral">&quot;AverageSCCSize&quot;</highlight><highlight class="normal">]<sp/><sp/><sp/>=<sp/>(vfspta-&gt;numOfSCC<sp/>==<sp/>0)<sp/>?<sp/>0<sp/>:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)vfspta-&gt;numOfNodesInSCC<sp/>/<sp/>vfspta-&gt;numOfSCC);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n****Versioned<sp/>Flow-Sensitive<sp/>Pointer<sp/>Analysis<sp/>Statistics****\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>PTAStat::printStat();</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VersionedFlowSensitiveStat::versionStat(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>Map&lt;NodeID,<sp/>Set&lt;Version&gt;&gt;<sp/>versions;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(VersionedFlowSensitive::LocVersionMap::value_type<sp/>&amp;lov<sp/>:<sp/>vfspta-&gt;consume)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(VersionedFlowSensitive::ObjToVersionMap::value_type<sp/>&amp;ov<sp/>:<sp/>lov.second)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>versions[ov.first].insert(ov.second);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(VersionedFlowSensitive::LocVersionMap::value_type<sp/>&amp;lov<sp/>:<sp/>vfspta-&gt;yield)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(VersionedFlowSensitive::ObjToVersionMap::value_type<sp/>&amp;ov<sp/>:<sp/>lov.second)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>versions[ov.first].insert(ov.second);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>totalVersionPtsSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Map&lt;NodeID,<sp/>Set&lt;Version&gt;&gt;::value_type<sp/>&amp;ovs<sp/>:<sp/>versions)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NodeID<sp/>o<sp/>=<sp/>ovs.first;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Set&lt;Version&gt;<sp/>vs<sp/>=<sp/>ovs.second;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u32_t<sp/>numOVersions<sp/>=<sp/>vs.size();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_NumVersions<sp/>+=<sp/>numOVersions;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numOVersions<sp/>&gt;<sp/>_MaxVersions)<sp/>_MaxVersions<sp/>=<sp/>numOVersions;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numOVersions<sp/>==<sp/>1)<sp/>++_NumSingleVersion;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Set&lt;Version&gt;::value_type<sp/>&amp;v<sp/>:<sp/>vs)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>version<sp/>was<sp/>just<sp/>over-approximate<sp/>and<sp/>never<sp/>accessed,<sp/>ignore.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>with<sp/>vPtD<sp/>changed<sp/>there<sp/>is<sp/>no<sp/>interface<sp/>to<sp/>check<sp/>if<sp/>the<sp/>PTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>exists;<sp/>an<sp/>emptiness<sp/>check<sp/>is<sp/>*not*<sp/>an<sp/>existence<sp/>check.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vfspta-&gt;vPtD-&gt;getPts(vfspta-&gt;atKey(o,<sp/>v)).empty())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PointsTo<sp/>&amp;ovPts<sp/>=<sp/>vfspta-&gt;vPtD-&gt;getPts(vfspta-&gt;atKey(o,<sp/>v));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ovPts.empty())<sp/>++_NumNonEmptyVersions;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>++_NumEmptyVersions;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TotalPtsSize<sp/>+=<sp/>ovPts.count();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalVersionPtsSize<sp/>+=<sp/>ovPts.count();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ovPts.count()<sp/>&gt;<sp/>_MaxVersionPtsSize)<sp/>_MaxVersionPtsSize<sp/>=<sp/>ovPts.count();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>_NumUsedVersions<sp/>=<sp/>_NumNonEmptyVersions<sp/>+<sp/>_NumEmptyVersions;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_NumNonEmptyVersions<sp/>!=<sp/>0)<sp/>_AvgVersionPtsSize<sp/>=<sp/>(double)totalVersionPtsSize<sp/>/<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)_NumUsedVersions;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalPtsSize<sp/>+=<sp/>totalVersionPtsSize;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VersionedFlowSensitiveStat::ptsSizeStat()</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>totalValidTopLvlPointers<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>totalTopLvlPtsSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_s_v_f_1_1_generic_graph_1ac213302cf5c7cdf3b66f7b18649d0fbc" kindref="member">PAG::iterator</ref><sp/>it<sp/>=<sp/>vfspta-&gt;getPAG()-&gt;begin();<sp/>it<sp/>!=<sp/>vfspta-&gt;getPAG()-&gt;end();<sp/>++it)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vfspta-&gt;getPAG()-&gt;isValidTopLevelPtr(it-&gt;second))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NodeID<sp/>p<sp/>=<sp/>it-&gt;first;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalValidTopLvlPointers++;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u32_t<sp/>size<sp/>=<sp/>vfspta-&gt;getPts(p).count();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalTopLvlPtsSize<sp/>+=<sp/>size;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>_MaxTopLvlPtsSize)<sp/>_MaxTopLvlPtsSize<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(totalValidTopLvlPointers<sp/>!=<sp/>0)<sp/>_AvgTopLvlPtsSize<sp/>=<sp/>(double)totalTopLvlPtsSize<sp/>/<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)totalValidTopLvlPointers;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>_TotalPtsSize<sp/>+=<sp/>totalTopLvlPtsSize;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_NumNonEmptyVersions<sp/>+<sp/>totalValidTopLvlPointers<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_AvgPtsSize<sp/>=<sp/>(double)_TotalPtsSize<sp/>/<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(_NumNonEmptyVersions<sp/>+<sp/>totalValidTopLvlPointers);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>_MaxPtsSize<sp/>=<sp/>_MaxVersionPtsSize<sp/>&gt;<sp/>_MaxTopLvlPtsSize<sp/>?<sp/>_MaxVersionPtsSize<sp/>:<sp/>_MaxTopLvlPtsSize;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="lib/WPA/VersionedFlowSensitiveStat.cpp"/>
  </compounddef>
</doxygen>
