<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_thread_m_h_p_ind_s_v_f_g_edge" xml:lang="en-US">
<title>SVF::ThreadMHPIndSVFGEdge Class Reference</title>
<indexterm><primary>SVF::ThreadMHPIndSVFGEdge</primary></indexterm>
<para>
<computeroutput>#include &lt;SVFGEdge.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for SVF::ThreadMHPIndSVFGEdge:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_thread_m_h_p_ind_s_v_f_g_edge.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_thread_m_h_p_ind_s_v_f_g_edge_1ac5055bd4ff42476915b5d02ba4f1986b"/><emphasis role="strong">ThreadMHPIndSVFGEdge</emphasis> (<link linkend="_class_s_v_f_1_1_v_f_g_node">VFGNode</link> *s, <link linkend="_class_s_v_f_1_1_v_f_g_node">VFGNode</link> *d)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_thread_m_h_p_ind_s_v_f_g_edge_1a09b7fef74030eecc6fa7b83a15c12521"/>virtual const std::string <emphasis role="strong">toString</emphasis> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_thread_m_h_p_ind_s_v_f_g_edge_1a4f7b0802389ce183635d5be2a40128bc"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_class_s_v_f_1_1_thread_m_h_p_ind_s_v_f_g_edge">ThreadMHPIndSVFGEdge</link> *)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_thread_m_h_p_ind_s_v_f_g_edge_1a0db2e69a5182d1c30b44e87711558bd9"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_class_s_v_f_1_1_indirect_s_v_f_g_edge">IndirectSVFGEdge</link> *edge)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_thread_m_h_p_ind_s_v_f_g_edge_1a564a1648b45d3563d69401a7f8e31906"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_class_s_v_f_1_1_v_f_g_edge">VFGEdge</link> *edge)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_thread_m_h_p_ind_s_v_f_g_edge_1acb948e40582b6cc8b4360f2205b5c926"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_namespace_s_v_f_1a30dcaf83718f2652012f98b192dcf437">GenericVFGEdgeTy</link> *edge)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para><link linkend="_class_s_v_f_1_1_m_h_p">MHP</link> <link linkend="_class_s_v_f_1_1_s_v_f_g">SVFG</link> edge representing indirect value-flows between two memory access may-happen-in-parallel in multithreaded program </para>
<para>
The documentation for this class was generated from the following files:</para>
include/Graphs/SVFGEdge.hlib/Graphs/SVFG.cpp</section>
</section>
