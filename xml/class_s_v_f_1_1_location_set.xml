<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_location_set" kind="class" language="C++" prot="public">
    <compoundname>SVF::LocationSet</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_s_v_f_1_1_location_set_1a002a0c8ec2528835d809bf7eb3ebc83f" prot="public" static="no" strong="no">
        <type></type>
        <name>LSRelation</name>
        <enumvalue id="class_s_v_f_1_1_location_set_1a002a0c8ec2528835d809bf7eb3ebc83fafb9c7d6d06f6f3ab60bd575aaca5d14d" prot="public">
          <name>NonOverlap</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_location_set_1a002a0c8ec2528835d809bf7eb3ebc83fa8c76affbe3b39db53e8046cd5d79903c" prot="public">
          <name>Overlap</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_location_set_1a002a0c8ec2528835d809bf7eb3ebc83faf6a3c1bcfe2d3f79b227b649e89edd72" prot="public">
          <name>Subset</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_location_set_1a002a0c8ec2528835d809bf7eb3ebc83fa2241035beb87cdd725d979371537d500" prot="public">
          <name>Superset</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_s_v_f_1_1_location_set_1a002a0c8ec2528835d809bf7eb3ebc83fa9b2a5e3c7f7873ac4491ff231e0601d2" prot="public">
          <name>Same</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="98" column="5" bodyfile="include/MemoryModel/LocationSet.h" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_location_set_1a8eb854480cc3efc1df4e6ebe916990d2" prot="public" static="no">
        <type>FieldInfo::ElemNumStridePairVec</type>
        <definition>typedef FieldInfo::ElemNumStridePairVec SVF::LocationSet::ElemNumStridePairVec</definition>
        <argsstring></argsstring>
        <name>ElemNumStridePairVec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="103" column="45" bodyfile="include/MemoryModel/LocationSet.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_s_v_f_1_1_location_set_1a32ddec529ccbf4ea6336e5fd765164d8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class SymbolTableInfo</definition>
        <argsstring></argsstring>
        <name>SymbolTableInfo</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_symbol_table_info" kindref="compound">SymbolTableInfo</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="95" column="5" bodyfile="include/MemoryModel/LocationSet.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_s_v_f_1_1_location_set_1ac2acfe0b3cea2461ea6b6ba1a411d3b5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class LocSymTableInfo</definition>
        <argsstring></argsstring>
        <name>LocSymTableInfo</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_loc_sym_table_info" kindref="compound">LocSymTableInfo</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="96" column="5" bodyfile="include/MemoryModel/LocationSet.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_location_set_1ac15467bbdc05b9b0fd0398583168811b" prot="private" static="no" mutable="no">
        <type>Size_t</type>
        <definition>Size_t SVF::LocationSet::fldIdx</definition>
        <argsstring></argsstring>
        <name>fldIdx</name>
        <briefdescription>
<para>offset relative to base </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="284" column="12" bodyfile="include/MemoryModel/LocationSet.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_location_set_1a9fafaf5f69baa5c125d6c3fd89381301" prot="private" static="no" mutable="no">
        <type>Size_t</type>
        <definition>Size_t SVF::LocationSet::byteOffset</definition>
        <argsstring></argsstring>
        <name>byteOffset</name>
        <briefdescription>
<para>offset relative to base </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="285" column="12" bodyfile="include/MemoryModel/LocationSet.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_location_set_1abb755e95c8b292b3a6f3eff0256d1790" prot="private" static="no" mutable="no">
        <type>ElemNumStridePairVec</type>
        <definition>ElemNumStridePairVec SVF::LocationSet::numStridePair</definition>
        <argsstring></argsstring>
        <name>numStridePair</name>
        <briefdescription>
<para>element number and stride pair </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="286" column="26" bodyfile="include/MemoryModel/LocationSet.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_location_set_1ac07e93a10d3f981c2ef6fcc507118182" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::LocationSet::LocationSet</definition>
        <argsstring>(Size_t o=0)</argsstring>
        <name>LocationSet</name>
        <param>
          <type>Size_t</type>
          <declname>o</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="106" column="5" bodyfile="include/MemoryModel/LocationSet.h" bodystart="106" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_location_set_1a290c7fe38704552fd66ad06e5deeaca9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::LocationSet::LocationSet</definition>
        <argsstring>(const LocationSet &amp;ls)</argsstring>
        <name>LocationSet</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_location_set" kindref="compound">LocationSet</ref> &amp;</type>
          <declname>ls</declname>
        </param>
        <briefdescription>
<para>Copy Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="110" column="5" bodyfile="include/MemoryModel/LocationSet.h" bodystart="110" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_location_set_1afd3b135453644cd42e869d378c270d23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::LocationSet::LocationSet</definition>
        <argsstring>(const FieldInfo &amp;fi)</argsstring>
        <name>LocationSet</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_field_info" kindref="compound">FieldInfo</ref> &amp;</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
<para>Initialization from <ref refid="class_s_v_f_1_1_field_info" kindref="compound">FieldInfo</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="121" column="5" bodyfile="include/MemoryModel/LocationSet.h" bodystart="121" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_location_set_1a00ae12aee8018f1eb88f011e52762be9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::LocationSet::~LocationSet</definition>
        <argsstring>()</argsstring>
        <name>~LocationSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="131" column="5" bodyfile="include/MemoryModel/LocationSet.h" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_location_set_1a19700ba5a9eebf50a0f3064f44e4bd97" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_location_set" kindref="compound">LocationSet</ref></type>
        <definition>LocationSet SVF::LocationSet::operator+</definition>
        <argsstring>(const LocationSet &amp;rhs) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_location_set" kindref="compound">LocationSet</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Overload operators. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="136" column="24" bodyfile="include/MemoryModel/LocationSet.h" bodystart="136" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_location_set_1a15975ec54c93c39fb1ed59599e5ec107" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_s_v_f_1_1_location_set" kindref="compound">LocationSet</ref> &amp;</type>
        <definition>const LocationSet&amp; SVF::LocationSet::operator=</definition>
        <argsstring>(const LocationSet &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_location_set" kindref="compound">LocationSet</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="148" column="30" bodyfile="include/MemoryModel/LocationSet.h" bodystart="148" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_location_set_1a7325b652e80625329406d8155ae8d403" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::LocationSet::operator&lt;</definition>
        <argsstring>(const LocationSet &amp;rhs) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_location_set" kindref="compound">LocationSet</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="155" column="12" bodyfile="include/MemoryModel/LocationSet.h" bodystart="155" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_location_set_1a1b141afb9a38d12423f66b2dfe6bf232" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::LocationSet::operator==</definition>
        <argsstring>(const LocationSet &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_location_set" kindref="compound">LocationSet</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="184" column="17" bodyfile="include/MemoryModel/LocationSet.h" bodystart="184" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_location_set_1ab85c3707152e03722bd631b2525f223e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Size_t</type>
        <definition>Size_t SVF::LocationSet::getOffset</definition>
        <argsstring>() const</argsstring>
        <name>getOffset</name>
        <briefdescription>
<para>Get methods. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="194" column="19" bodyfile="include/MemoryModel/LocationSet.h" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_location_set_1a5322dcda48d6980c3f7aafa169fcd77d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Size_t</type>
        <definition>Size_t SVF::LocationSet::getByteOffset</definition>
        <argsstring>() const</argsstring>
        <name>getByteOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="198" column="19" bodyfile="include/MemoryModel/LocationSet.h" bodystart="198" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_location_set_1acc8d400f4715e05d8d4174d7bf722346" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::LocationSet::setFldIdx</definition>
        <argsstring>(Size_t idx)</argsstring>
        <name>setFldIdx</name>
        <param>
          <type>Size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="202" column="17" bodyfile="include/MemoryModel/LocationSet.h" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_location_set_1a6c5b8c1a9f765de8bcbefb681ca6a92c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::LocationSet::setByteOffset</definition>
        <argsstring>(Size_t os)</argsstring>
        <name>setByteOffset</name>
        <param>
          <type>Size_t</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="206" column="17" bodyfile="include/MemoryModel/LocationSet.h" bodystart="206" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_location_set_1a3720af92ca2a65f02492e752b07ba241" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const ElemNumStridePairVec &amp;</type>
        <definition>const ElemNumStridePairVec&amp; SVF::LocationSet::getNumStridePair</definition>
        <argsstring>() const</argsstring>
        <name>getNumStridePair</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="210" column="39" bodyfile="include/MemoryModel/LocationSet.h" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_location_set_1a38077e721631f3c6b09238880c97732b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LocationSet::addElemNumStridePair</definition>
        <argsstring>(const NodePair &amp;pair)</argsstring>
        <name>addElemNumStridePair</name>
        <param>
          <type>const NodePair &amp;</type>
          <declname>pair</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add element num and stride pair </para>
        </detaileddescription>
        <inbodydescription>
<para>The pair will not be added if any number of a stride is zero, because they will not have effect on the locations represented by this <ref refid="class_s_v_f_1_1_location_set" kindref="compound">LocationSet</ref>.</para>
<para>Find the GCD stride</para>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="216" column="10" bodyfile="lib/MemoryModel/LocationSet.cpp" bodystart="43" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_location_set_1a464c14d79a64dc403c2757b3b8520cbd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::LocationSet::isConstantOffset</definition>
        <argsstring>() const</argsstring>
        <name>isConstantOffset</name>
        <briefdescription>
<para>Return TRUE if this is a constant location set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="219" column="17" bodyfile="include/MemoryModel/LocationSet.h" bodystart="219" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_location_set_1a0e1cddc4228e310c95f68c661c7b94c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::LocationSet::intersects</definition>
        <argsstring>(const LocationSet &amp;RHS) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_location_set" kindref="compound">LocationSet</ref> &amp;</type>
          <declname>RHS</declname>
        </param>
        <briefdescription>
<para>Return TRUE if we share any location in common with RHS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="225" column="17" bodyfile="include/MemoryModel/LocationSet.h" bodystart="225" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_location_set_1a4e5f29661da66367cea70a0d3fa108b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SVF::LocationSet::dump</definition>
        <argsstring>() const</argsstring>
        <name>dump</name>
        <briefdescription>
<para>Dump location set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="253" column="17" bodyfile="include/MemoryModel/LocationSet.h" bodystart="253" bodyend="270"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_s_v_f_1_1_location_set_1a6962903a24f540c6bc58b8ae6a0cc757" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>LSRelation</type>
        <definition>static LSRelation SVF::LocationSet::checkRelation</definition>
        <argsstring>(const LocationSet &amp;LHS, const LocationSet &amp;RHS)</argsstring>
        <name>checkRelation</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_location_set" kindref="compound">LocationSet</ref> &amp;</type>
          <declname>LHS</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_location_set" kindref="compound">LocationSet</ref> &amp;</type>
          <declname>RHS</declname>
        </param>
        <briefdescription>
<para>Check relations of two location sets. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="231" column="30" bodyfile="include/MemoryModel/LocationSet.h" bodystart="231" bodyend="250"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_s_v_f_1_1_location_set_1a7e2081a930eafaee4c68c9dd9e70e2bd" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LocationSet::increaseIfNotReachUpperBound</definition>
        <argsstring>(std::vector&lt; NodeID &gt; &amp;indices, const ElemNumStridePairVec &amp;pairVec) const</argsstring>
        <name>increaseIfNotReachUpperBound</name>
        <param>
          <type>std::vector&lt; NodeID &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const ElemNumStridePairVec &amp;</type>
          <declname>pairVec</declname>
        </param>
        <briefdescription>
<para>Return TRUE if successfully increased any index by 1. </para>
        </briefdescription>
        <detaileddescription>
<para>Return TRUE if it successfully increases any index by 1 </para>
        </detaileddescription>
        <inbodydescription>
<para>Check if all indices reach upper bound</para>
<para>Increase index if not reach upper bound</para>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="273" column="10" bodyfile="lib/MemoryModel/LocationSet.cpp" bodystart="76" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_location_set_1a0add3116ad446f6045c2a8ad2be1455a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PointsTo</type>
        <definition>PointsTo LocationSet::computeAllLocations</definition>
        <argsstring>() const</argsstring>
        <name>computeAllLocations</name>
        <briefdescription>
<para>Compute all possible locations according to offset and number-stride pairs. </para>
        </briefdescription>
        <detaileddescription>
<para>Compute all possible locations according to offset and number-stride pairs. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="276" column="14" bodyfile="lib/MemoryModel/LocationSet.cpp" bodystart="117" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_location_set_1a4f7a3b135ffa9bc9a5c721d1e23a61a4" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned SVF::LocationSet::gcd</definition>
        <argsstring>(unsigned n1, unsigned n2) const</argsstring>
        <name>gcd</name>
        <param>
          <type>unsigned</type>
          <declname>n1</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>n2</declname>
        </param>
        <briefdescription>
<para>Return greatest common divisor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/LocationSet.h" line="279" column="21" bodyfile="include/MemoryModel/LocationSet.h" bodystart="279" bodyend="282"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/MemoryModel/LocationSet.h" line="93" column="1" bodyfile="include/MemoryModel/LocationSet.h" bodystart="94" bodyend="287"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_location_set_1a38077e721631f3c6b09238880c97732b" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>addElemNumStridePair</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a9fafaf5f69baa5c125d6c3fd89381301" prot="private" virt="non-virtual"><scope>SVF::LocationSet</scope><name>byteOffset</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a6962903a24f540c6bc58b8ae6a0cc757" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>checkRelation</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a0add3116ad446f6045c2a8ad2be1455a" prot="private" virt="non-virtual"><scope>SVF::LocationSet</scope><name>computeAllLocations</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a4e5f29661da66367cea70a0d3fa108b4" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>dump</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a8eb854480cc3efc1df4e6ebe916990d2" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>ElemNumStridePairVec</name></member>
      <member refid="class_s_v_f_1_1_location_set_1ac15467bbdc05b9b0fd0398583168811b" prot="private" virt="non-virtual"><scope>SVF::LocationSet</scope><name>fldIdx</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a4f7a3b135ffa9bc9a5c721d1e23a61a4" prot="private" virt="non-virtual"><scope>SVF::LocationSet</scope><name>gcd</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a5322dcda48d6980c3f7aafa169fcd77d" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>getByteOffset</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a3720af92ca2a65f02492e752b07ba241" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>getNumStridePair</name></member>
      <member refid="class_s_v_f_1_1_location_set_1ab85c3707152e03722bd631b2525f223e" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>getOffset</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a7e2081a930eafaee4c68c9dd9e70e2bd" prot="private" virt="non-virtual"><scope>SVF::LocationSet</scope><name>increaseIfNotReachUpperBound</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a0e1cddc4228e310c95f68c661c7b94c8" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>intersects</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a464c14d79a64dc403c2757b3b8520cbd" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>isConstantOffset</name></member>
      <member refid="class_s_v_f_1_1_location_set_1ac07e93a10d3f981c2ef6fcc507118182" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>LocationSet</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a290c7fe38704552fd66ad06e5deeaca9" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>LocationSet</name></member>
      <member refid="class_s_v_f_1_1_location_set_1afd3b135453644cd42e869d378c270d23" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>LocationSet</name></member>
      <member refid="class_s_v_f_1_1_location_set_1ac2acfe0b3cea2461ea6b6ba1a411d3b5" prot="private" virt="non-virtual"><scope>SVF::LocationSet</scope><name>LocSymTableInfo</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a002a0c8ec2528835d809bf7eb3ebc83f" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>LSRelation</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a002a0c8ec2528835d809bf7eb3ebc83fafb9c7d6d06f6f3ab60bd575aaca5d14d" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>NonOverlap</name></member>
      <member refid="class_s_v_f_1_1_location_set_1abb755e95c8b292b3a6f3eff0256d1790" prot="private" virt="non-virtual"><scope>SVF::LocationSet</scope><name>numStridePair</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a19700ba5a9eebf50a0f3064f44e4bd97" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>operator+</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a7325b652e80625329406d8155ae8d403" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>operator&lt;</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a15975ec54c93c39fb1ed59599e5ec107" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>operator=</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a1b141afb9a38d12423f66b2dfe6bf232" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>operator==</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a002a0c8ec2528835d809bf7eb3ebc83fa8c76affbe3b39db53e8046cd5d79903c" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>Overlap</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a002a0c8ec2528835d809bf7eb3ebc83fa9b2a5e3c7f7873ac4491ff231e0601d2" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>Same</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a6c5b8c1a9f765de8bcbefb681ca6a92c" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>setByteOffset</name></member>
      <member refid="class_s_v_f_1_1_location_set_1acc8d400f4715e05d8d4174d7bf722346" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>setFldIdx</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a002a0c8ec2528835d809bf7eb3ebc83faf6a3c1bcfe2d3f79b227b649e89edd72" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>Subset</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a002a0c8ec2528835d809bf7eb3ebc83fa2241035beb87cdd725d979371537d500" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>Superset</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a32ddec529ccbf4ea6336e5fd765164d8" prot="private" virt="non-virtual"><scope>SVF::LocationSet</scope><name>SymbolTableInfo</name></member>
      <member refid="class_s_v_f_1_1_location_set_1a00ae12aee8018f1eb88f011e52762be9" prot="public" virt="non-virtual"><scope>SVF::LocationSet</scope><name>~LocationSet</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
