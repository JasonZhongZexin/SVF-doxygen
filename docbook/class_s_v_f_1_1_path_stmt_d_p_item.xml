<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_path_stmt_d_p_item" xml:lang="en-US">
<title>SVF::PathStmtDPItem&lt; LocCond &gt; Class Template Reference</title>
<indexterm><primary>SVF::PathStmtDPItem&lt; LocCond &gt;</primary></indexterm>
<para>Inheritance diagram for SVF::PathStmtDPItem&lt; LocCond &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_path_stmt_d_p_item.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_path_stmt_d_p_item_1a9092ac46745ceac6c9d9e7e560df6e86"/>typedef <link linkend="_struct_dd_node">VFPathCond::PathCond</link> <emphasis role="strong">PathCond</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_path_stmt_d_p_item_1aaa18b09d9000c59ed45d25af4865864d"/><link linkend="_class_s_v_f_1_1_path_stmt_d_p_item_1aaa18b09d9000c59ed45d25af4865864d">PathStmtDPItem</link> (const <link linkend="_namespace_s_v_f_1a4a4d1c207659cdb9efbcfd7a7af6d9cd">VFPathVar</link> &amp;var, const LocCond *locCond)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_path_stmt_d_p_item_1a0f2d575defc85aca8c3f85353edba685"/><link linkend="_class_s_v_f_1_1_path_stmt_d_p_item_1a0f2d575defc85aca8c3f85353edba685">PathStmtDPItem</link> (const <link linkend="_class_s_v_f_1_1_path_stmt_d_p_item">PathStmtDPItem</link>&lt; LocCond &gt; &amp;dps)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_path_stmt_d_p_item_1adbe4b6f0f18f74661be01a17892aa839"/>virtual <link linkend="_class_s_v_f_1_1_path_stmt_d_p_item_1adbe4b6f0f18f74661be01a17892aa839">~PathStmtDPItem</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_path_stmt_d_p_item_1a4058ed62b866451b5ced665619ddcf56"/><link linkend="_namespace_s_v_f_1a4a4d1c207659cdb9efbcfd7a7af6d9cd">VFPathVar</link> <emphasis role="strong">getCondVar</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_path_stmt_d_p_item_1a529f51d30556e6f67a33b7d05e651816"/>const <link linkend="_class_s_v_f_1_1_v_f_path_cond">VFPathCond</link> &amp; <link linkend="_class_s_v_f_1_1_path_stmt_d_p_item_1a529f51d30556e6f67a33b7d05e651816">getCond</link> () const</para>

<para>Get value-flow paths. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_path_stmt_d_p_item_1af96b78bbeb1f16d94f18e19c35672d28"/><link linkend="_class_s_v_f_1_1_v_f_path_cond">VFPathCond</link> &amp; <link linkend="_class_s_v_f_1_1_path_stmt_d_p_item_1af96b78bbeb1f16d94f18e19c35672d28">getCond</link> ()</para>

<para>Get value-flow paths. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_path_stmt_d_p_item_1a9220414ecc6e629fd09a194185c4deea"/>bool <link linkend="_class_s_v_f_1_1_path_stmt_d_p_item_1a9220414ecc6e629fd09a194185c4deea">addVFPath</link> (<link linkend="_class_s_v_f_1_1_path_cond_allocator">PathCondAllocator</link> *allocator, <link linkend="_struct_dd_node">PathCond</link> *c, NodeID from, NodeID to)</para>

<para>Add a value-flow path (avoid adding duplicated paths) </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_path_stmt_d_p_item_1ae5bfef4e7759545ad15145504b84a897"/>bool <link linkend="_class_s_v_f_1_1_path_stmt_d_p_item_1ae5bfef4e7759545ad15145504b84a897">pushContext</link> (NodeID cxt)</para>

<para>Push context. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_path_stmt_d_p_item_1a4a82650fe9bf2f655e4b7178ba063eda"/>bool <link linkend="_class_s_v_f_1_1_path_stmt_d_p_item_1a4a82650fe9bf2f655e4b7178ba063eda">matchContext</link> (NodeID cxt)</para>

<para>Match context. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_s_v_f_1_1_path_stmt_d_p_item_1a8df1b3200bf3385aeb793966ff51ee75">operator&lt;</link> (const <link linkend="_class_s_v_f_1_1_path_stmt_d_p_item">PathStmtDPItem</link>&lt; LocCond &gt; &amp;rhs) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_path_stmt_d_p_item_1a36ff7567d47e3818d79ede424f736817"/><link linkend="_class_s_v_f_1_1_path_stmt_d_p_item">PathStmtDPItem</link>&lt; LocCond &gt; &amp; <link linkend="_class_s_v_f_1_1_path_stmt_d_p_item_1a36ff7567d47e3818d79ede424f736817">operator=</link> (const <link linkend="_class_s_v_f_1_1_path_stmt_d_p_item">PathStmtDPItem</link>&lt; LocCond &gt; &amp;rhs)</para>

<para>Overloading operator=. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_path_stmt_d_p_item_1a5b7d6a8d8e14845a94611474c53fadaa"/>bool <link linkend="_class_s_v_f_1_1_path_stmt_d_p_item_1a5b7d6a8d8e14845a94611474c53fadaa">operator==</link> (const <link linkend="_class_s_v_f_1_1_path_stmt_d_p_item">PathStmtDPItem</link>&lt; LocCond &gt; &amp;rhs) const</para>

<para>Overloading operator==. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_path_stmt_d_p_item_1a886e2443efb35d18b92186a83875c7c9"/>bool <link linkend="_class_s_v_f_1_1_path_stmt_d_p_item_1a886e2443efb35d18b92186a83875c7c9">operator!=</link> (const <link linkend="_class_s_v_f_1_1_path_stmt_d_p_item">PathStmtDPItem</link>&lt; LocCond &gt; &amp;rhs) const</para>

<para>Overloading operator!=. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_path_stmt_d_p_item_1ad1ba1dd2dbe5041840f72e4fcff08216"/>void <link linkend="_class_s_v_f_1_1_path_stmt_d_p_item_1ad1ba1dd2dbe5041840f72e4fcff08216">dump</link> () const</para>

<para>Dump dpm info. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_path_stmt_d_p_item_1a8df1b3200bf3385aeb793966ff51ee75"/>    <section>
    <title>operator&lt;()</title>
<indexterm><primary>operator&lt;</primary><secondary>SVF::PathStmtDPItem&lt; LocCond &gt;</secondary></indexterm>
<indexterm><primary>SVF::PathStmtDPItem&lt; LocCond &gt;</primary><secondary>operator&lt;</secondary></indexterm>
<computeroutput>template&lt;class LocCond &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_s_v_f_1_1_path_stmt_d_p_item">SVF::PathStmtDPItem</link>&lt; LocCond &gt;::operator&lt; (const <link linkend="_class_s_v_f_1_1_path_stmt_d_p_item">PathStmtDPItem</link>&lt; LocCond &gt; &amp; rhs) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Enable compare operator to avoid duplicated item insertion in map or set to be noted that two vectors can also overload operator() </para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
include/Util/DPItem.h</section>
</section>
