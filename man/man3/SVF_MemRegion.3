.TH "SVF::MemRegion" 3 "Sun Feb 14 2021" "SVF" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SVF::MemRegion \- Memory Region class\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <MemRegion\&.h>\fP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBequalMemRegion\fP"
.br
.ti -1c
.RI "struct \fBequalPointsTo\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fBDdNode\fP * \fBCondition\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMemRegion\fP (const PointsTo &cp)"
.br
.RI "Constructor\&. "
.ti -1c
.RI "\fB~MemRegion\fP ()"
.br
.RI "Destructor\&. "
.ti -1c
.RI "MRID \fBgetMRID\fP () const"
.br
.RI "Return memory region ID\&. "
.ti -1c
.RI "const PointsTo & \fBgetPointsTo\fP () const"
.br
.RI "Return points-to\&. "
.ti -1c
.RI "bool \fBoperator==\fP (const \fBMemRegion\fP *rhs) const"
.br
.RI "Operator== overriding\&. "
.ti -1c
.RI "std::string \fBdumpStr\fP () const"
.br
.RI "Dump string\&. "
.ti -1c
.RI "u32_t \fBgetRegionSize\fP () const"
.br
.RI "Return memory object number inside a region\&. "
.in -1c
.SH "Detailed Description"
.PP 
Memory Region class\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for SVF from the source code\&.
