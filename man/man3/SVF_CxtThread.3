.TH "SVF::CxtThread" 3 "Sun Feb 14 2021" "SVF" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SVF::CxtThread
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <CxtStmt\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCxtThread\fP (const CallStrCxt &c, const CallInst *fork)"
.br
.RI "Constructor\&. "
.ti -1c
.RI "\fBCxtThread\fP (const \fBCxtThread\fP &ct)"
.br
.RI "Copy constructor\&. "
.ti -1c
.RI "virtual \fB~CxtThread\fP ()"
.br
.RI "Destructor\&. "
.ti -1c
.RI "const CallStrCxt & \fBgetContext\fP () const"
.br
.RI "Return context of the thread\&. "
.ti -1c
.RI "const CallInst * \fBgetThread\fP () const"
.br
.RI "Return forksite\&. "
.ti -1c
.RI "bool \fBoperator<\fP (const \fBCxtThread\fP &rhs) const"
.br
.ti -1c
.RI "\fBCxtThread\fP & \fBoperator=\fP (const \fBCxtThread\fP &rhs)"
.br
.RI "Overloading operator=\&. "
.ti -1c
.RI "bool \fBoperator==\fP (const \fBCxtThread\fP &rhs) const"
.br
.RI "Overloading operator==\&. "
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBCxtThread\fP &rhs) const"
.br
.RI "Overloading operator==\&. "
.ti -1c
.RI "std::string \fBcxtToStr\fP () const"
.br
.RI "Return context in string format\&. "
.ti -1c
.RI "void \fBsetInloop\fP (bool in)"
.br
.RI "inloop, incycle attributes "
.ti -1c
.RI "bool \fBisInloop\fP () const"
.br
.ti -1c
.RI "void \fBsetIncycle\fP (bool in)"
.br
.ti -1c
.RI "bool \fBisIncycle\fP () const"
.br
.ti -1c
.RI "void \fBdump\fP () const"
.br
.RI "Dump \fBCxtThread\fP\&. "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "CallStrCxt \fBcxt\fP"
.br
.ti -1c
.RI "const CallInst * \fBforksite\fP"
.br
.ti -1c
.RI "bool \fBinloop\fP"
.br
.ti -1c
.RI "bool \fBincycle\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Context-sensitive thread <c,t> 
.SH "Member Function Documentation"
.PP 
.SS "bool SVF::CxtThread::operator< (const \fBCxtThread\fP & rhs) const\fC [inline]\fP"
Enable compare operator to avoid duplicated item insertion in map or set to be noted that two vectors can also overload operator() 

.SH "Author"
.PP 
Generated automatically by Doxygen for SVF from the source code\&.
