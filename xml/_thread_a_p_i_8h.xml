<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_thread_a_p_i_8h" kind="file" language="C++">
    <compoundname>ThreadAPI.h</compoundname>
    <includes refid="_basic_types_8h" local="yes">Util/BasicTypes.h</includes>
    <includedby refid="_p_c_g_8h" local="yes">include/MTA/PCG.h</includedby>
    <includedby refid="_l_l_v_m_util_8h" local="yes">include/SVF-FE/LLVMUtil.h</includedby>
    <includedby refid="_thread_call_graph_8cpp" local="yes">lib/Graphs/ThreadCallGraph.cpp</includedby>
    <includedby refid="_thread_a_p_i_8cpp" local="yes">lib/Util/ThreadAPI.cpp</includedby>
    <incdepgraph>
      <node id="9">
        <label>list</label>
      </node>
      <node id="26">
        <label>Util/Casting.h</label>
        <link refid="_casting_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>system_error</label>
      </node>
      <node id="52">
        <label>llvm/IR/IRBuilder.h</label>
      </node>
      <node id="50">
        <label>llvm/ADT/GraphTraits.h</label>
      </node>
      <node id="44">
        <label>llvm/Bitcode/BitcodeReader.h</label>
      </node>
      <node id="32">
        <label>llvm/ADT/SmallVector.h</label>
      </node>
      <node id="35">
        <label>llvm/IR/InstVisitor.h</label>
      </node>
      <node id="6">
        <label>llvm/Support/CommandLine.h</label>
      </node>
      <node id="5">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="49">
        <label>llvm/Analysis/ScalarEvolutionExpressions.h</label>
      </node>
      <node id="1">
        <label>include/Util/ThreadAPI.h</label>
        <link refid="_thread_a_p_i_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>llvm/ADT/StringExtras.h</label>
      </node>
      <node id="29">
        <label>cassert</label>
      </node>
      <node id="2">
        <label>Util/BasicTypes.h</label>
        <link refid="_basic_types_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>map</label>
      </node>
      <node id="39">
        <label>llvm/Analysis/AliasAnalysis.h</label>
      </node>
      <node id="11">
        <label>unordered_set</label>
      </node>
      <node id="19">
        <label>llvm/IR/User.h</label>
      </node>
      <node id="4">
        <label>llvm/ADT/SparseBitVector.h</label>
      </node>
      <node id="37">
        <label>llvm/Analysis/ScalarEvolution.h</label>
      </node>
      <node id="51">
        <label>llvm/Support/GraphWriter.h</label>
      </node>
      <node id="27">
        <label>llvm/Support/Compiler.h</label>
      </node>
      <node id="28">
        <label>llvm/Support/type_traits.h</label>
      </node>
      <node id="21">
        <label>llvm/IR/GetElementPtrTypeIterator.h</label>
      </node>
      <node id="14">
        <label>stack</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="20">
        <label>llvm/ADT/PointerIntPair.h</label>
      </node>
      <node id="24">
        <label>llvm/Support/ToolOutputFile.h</label>
      </node>
      <node id="53">
        <label>llvm/Transforms/Utils/Local.h</label>
      </node>
      <node id="7">
        <label>llvm/ADT/StringMap.h</label>
      </node>
      <node id="18">
        <label>llvm/IR/Operator.h</label>
      </node>
      <node id="48">
        <label>llvm/Analysis/PostDominators.h</label>
      </node>
      <node id="54">
        <label>llvm/IR/DebugInfo.h</label>
      </node>
      <node id="47">
        <label>llvm/Analysis/DominanceFrontier.h</label>
      </node>
      <node id="15">
        <label>deque</label>
      </node>
      <node id="13">
        <label>unordered_map</label>
      </node>
      <node id="45">
        <label>llvm/IRReader/IRReader.h</label>
      </node>
      <node id="3">
        <label>Util/SVFBasicTypes.h</label>
        <link refid="_s_v_f_basic_types_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>llvm/Support/FileSystem.h</label>
      </node>
      <node id="41">
        <label>llvm/IR/GlobalVariable.h</label>
      </node>
      <node id="46">
        <label>llvm/Transforms/Utils/UnifyFunctionExitNodes.h</label>
      </node>
      <node id="43">
        <label>llvm/Bitcode/BitcodeWriter.h</label>
      </node>
      <node id="31">
        <label>type_traits</label>
      </node>
      <node id="10">
        <label>set</label>
      </node>
      <node id="17">
        <label>llvm/IR/DerivedTypes.h</label>
      </node>
      <node id="42">
        <label>llvm/Support/SourceMgr.h</label>
      </node>
      <node id="33">
        <label>llvm/IR/Instructions.h</label>
      </node>
      <node id="16">
        <label>SVF-FE/GEPTypeBridgeIterator.h</label>
        <link refid="_g_e_p_type_bridge_iterator_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>memory</label>
      </node>
      <node id="22">
        <label>Graphs/GraphPrinter.h</label>
        <link refid="_graph_printer_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>llvm/IR/CallSite.h</label>
      </node>
      <node id="36">
        <label>llvm/IR/InstIterator.h</label>
      </node>
      <node id="40">
        <label>llvm/Analysis/CallGraph.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="17">
        <label>include/SABER/LeakChecker.h</label>
        <link refid="_leak_checker_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>include/Graphs/PAG.h</label>
        <link refid="_p_a_g_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>include/WPA/TypeAnalysis.h</label>
        <link refid="_type_analysis_8h_source"/>
      </node>
      <node id="52">
        <label>include/MSSA/MSSAMuChi.h</label>
        <link refid="_m_s_s_a_mu_chi_8h_source"/>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>include/MemoryModel/PointerAnalysis.h</label>
        <link refid="_pointer_analysis_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>include/SABER/ProgSlice.h</label>
        <link refid="_prog_slice_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>include/Graphs/VFGNode.h</label>
        <link refid="_v_f_g_node_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>include/MTA/MHP.h</label>
        <link refid="_m_h_p_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>include/Graphs/SVFGNode.h</label>
        <link refid="_s_v_f_g_node_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/SVF-FE/LLVMUtil.h</label>
        <link refid="_l_l_v_m_util_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/Util/ThreadAPI.h</label>
        <link refid="_thread_a_p_i_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>include/MTA/TCT.h</label>
        <link refid="_t_c_t_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>include/SABER/SrcSnkDDA.h</label>
        <link refid="_src_snk_d_d_a_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>include/Graphs/ThreadCallGraph.h</label>
        <link refid="_thread_call_graph_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>include/WPA/FlowSensitiveTBHC.h</label>
        <link refid="_flow_sensitive_t_b_h_c_8h_source"/>
      </node>
      <node id="55">
        <label>include/SVF-FE/Graph2Json.h</label>
        <link refid="_graph2_json_8h_source"/>
      </node>
      <node id="54">
        <label>include/WPA/WPAPass.h</label>
        <link refid="_w_p_a_pass_8h_source"/>
      </node>
      <node id="41">
        <label>include/WPA/FlowSensitive.h</label>
        <link refid="_flow_sensitive_8h_source"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>include/Graphs/SVFGStat.h</label>
        <link refid="_s_v_f_g_stat_8h_source"/>
      </node>
      <node id="9">
        <label>include/Graphs/ConsGEdge.h</label>
        <link refid="_cons_g_edge_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>include/WPA/Steensgaard.h</label>
        <link refid="_steensgaard_8h_source"/>
      </node>
      <node id="13">
        <label>include/DDA/DDAVFSolver.h</label>
        <link refid="_d_d_a_v_f_solver_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>include/MSSA/SVFGBuilder.h</label>
        <link refid="_s_v_f_g_builder_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>include/WPA/CSC.h</label>
        <link refid="_c_s_c_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>include/DDA/DDAPass.h</label>
        <link refid="_d_d_a_pass_8h_source"/>
      </node>
      <node id="31">
        <label>include/MTA/FSMPTA.h</label>
        <link refid="_f_s_m_p_t_a_8h_source"/>
      </node>
      <node id="30">
        <label>include/MTA/LockAnalysis.h</label>
        <link refid="_lock_analysis_8h_source"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>include/Graphs/OfflineConsG.h</label>
        <link refid="_offline_cons_g_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>include/Util/TypeBasedHeapCloning.h</label>
        <link refid="_type_based_heap_cloning_8h_source"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>include/MTA/MTAResultValidator.h</label>
        <link refid="_m_t_a_result_validator_8h_source"/>
      </node>
      <node id="47">
        <label>include/Graphs/VFG.h</label>
        <link refid="_v_f_g_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>include/Graphs/SVFG.h</label>
        <link refid="_s_v_f_g_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>include/DDA/DDAClient.h</label>
        <link refid="_d_d_a_client_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>include/MSSA/MemSSA.h</label>
        <link refid="_mem_s_s_a_8h_source"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>include/Graphs/ConsG.h</label>
        <link refid="_cons_g_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>include/SVF-FE/CallGraphBuilder.h</label>
        <link refid="_call_graph_builder_8h_source"/>
      </node>
      <node id="48">
        <label>include/MSSA/MemRegion.h</label>
        <link refid="_mem_region_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>include/SABER/DoubleFreeChecker.h</label>
        <link refid="_double_free_checker_8h_source"/>
      </node>
      <node id="33">
        <label>include/MTA/MTAAnnotator.h</label>
        <link refid="_m_t_a_annotator_8h_source"/>
      </node>
      <node id="40">
        <label>include/SABER/SaberSVFGBuilder.h</label>
        <link refid="_saber_s_v_f_g_builder_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>include/Graphs/PAGNode.h</label>
        <link refid="_p_a_g_node_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>include/MemoryModel/PAGBuilderFromFile.h</label>
        <link refid="_p_a_g_builder_from_file_8h_source"/>
      </node>
      <node id="26">
        <label>include/MemoryModel/PointerAnalysisImpl.h</label>
        <link refid="_pointer_analysis_impl_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>include/DDA/FlowDDA.h</label>
        <link refid="_flow_d_d_a_8h_source"/>
      </node>
      <node id="2">
        <label>include/MTA/PCG.h</label>
        <link refid="_p_c_g_8h_source"/>
      </node>
      <node id="49">
        <label>include/MSSA/MemPartition.h</label>
        <link refid="_mem_partition_8h_source"/>
      </node>
      <node id="5">
        <label>include/Graphs/ExternalPAG.h</label>
        <link refid="_external_p_a_g_8h_source"/>
      </node>
      <node id="19">
        <label>include/SABER/FileChecker.h</label>
        <link refid="_file_checker_8h_source"/>
      </node>
      <node id="44">
        <label>include/WPA/WPAStat.h</label>
        <link refid="_w_p_a_stat_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>include/Graphs/SVFGOPT.h</label>
        <link refid="_s_v_f_g_o_p_t_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>include/WPA/Andersen.h</label>
        <link refid="_andersen_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>include/WPA/VersionedFlowSensitive.h</label>
        <link refid="_versioned_flow_sensitive_8h_source"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>include/DDA/ContextDDA.h</label>
        <link refid="_context_d_d_a_8h_source"/>
      </node>
      <node id="20">
        <label>include/WPA/AndersenSFR.h</label>
        <link refid="_andersen_s_f_r_8h_source"/>
      </node>
      <node id="56">
        <label>include/SVF-FE/PAGBuilder.h</label>
        <link refid="_p_a_g_builder_8h_source"/>
      </node>
      <node id="51">
        <label>include/Graphs/SVFGEdge.h</label>
        <link refid="_s_v_f_g_edge_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_s_v_f_1_1_thread_a_p_i" prot="public">SVF::ThreadAPI</innerclass>
    <innernamespace refid="namespace_s_v_f">SVF</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//===-<sp/>ThreadAPI.h<sp/>--<sp/>API<sp/>for<sp/>threads-----------------------------------------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SVF:<sp/>Static<sp/>Value-Flow<sp/>Analysis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>&lt;2013-2017&gt;<sp/><sp/>&lt;Yulei<sp/>Sui&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//===----------------------------------------------------------------------===//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ThreadAPI.h</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Jan<sp/>21,<sp/>2014</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Yulei<sp/>Sui,<sp/>dye</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>THREADAPI_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREADAPI_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Util/BasicTypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_s_v_f" kindref="compound">SVF</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SVFModule;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>ThreadAPI<sp/>class<sp/>contains<sp/>interfaces<sp/>for<sp/>pthread<sp/>programs</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_s_v_f_1_1_thread_a_p_i" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_s_v_f_1_1_thread_a_p_i" kindref="compound">ThreadAPI</ref></highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47" refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3" kindref="member">TD_TYPE</ref></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TD_DUMMY<sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50" refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a9a40948eeab9b022957ae33715ee83da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a9a40948eeab9b022957ae33715ee83da" kindref="member">TD_FORK</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51" refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a9efe9b72a2520e1fae3cae1e747e3134" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a9efe9b72a2520e1fae3cae1e747e3134" kindref="member">TD_JOIN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52" refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a0b558cf037397818414cac2f7c87ab08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a0b558cf037397818414cac2f7c87ab08" kindref="member">TD_DETACH</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53" refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a5bda6aca46dfc712f3781b4732a373a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a5bda6aca46dfc712f3781b4732a373a3" kindref="member">TD_ACQUIRE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3ab7ea623d48ae64aa09ab49deebbb7113" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3ab7ea623d48ae64aa09ab49deebbb7113" kindref="member">TD_TRY_ACQUIRE</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3ac826e1e1c43305a3abcfdc9a2169b8dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3ac826e1e1c43305a3abcfdc9a2169b8dd" kindref="member">TD_RELEASE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3af3a3036705ecca40cf170d12d0ccf4dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3af3a3036705ecca40cf170d12d0ccf4dc" kindref="member">TD_EXIT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57" refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3afad2e548ab59646972d8c66e593845cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3afad2e548ab59646972d8c66e593845cc" kindref="member">TD_CANCEL</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3aa8a39bd1bb13292a55dd6168909c872e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3aa8a39bd1bb13292a55dd6168909c872e" kindref="member">TD_COND_WAIT</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59" refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a01a3b1723176504482b606d8e097949f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a01a3b1723176504482b606d8e097949f" kindref="member">TD_COND_SIGNAL</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60" refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3aa6ee2952d7757b0919f56bd39fd5a93e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3aa6ee2952d7757b0919f56bd39fd5a93e" kindref="member">TD_COND_BROADCAST</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61" refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3abb17ca545bd259f16a36a2d2af43948b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3abb17ca545bd259f16a36a2d2af43948b" kindref="member">TD_MUTEX_INI</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62" refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a91db238366fcdcd65bd7710882c8716f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a91db238366fcdcd65bd7710882c8716f" kindref="member">TD_MUTEX_DESTROY</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63" refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a1f921d7369e3a00a77394640f887c7ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a1f921d7369e3a00a77394640f887c7ff" kindref="member">TD_CONDVAR_INI</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64" refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a9c3f04e71ed64ce8d2862d7a6f39a95b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a9c3f04e71ed64ce8d2862d7a6f39a95b" kindref="member">TD_CONDVAR_DESTROY</ref>,<sp/></highlight></codeline>
<codeline lineno="65" refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a4fb99e17bf56ae018448f5f97aa8cda6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a4fb99e17bf56ae018448f5f97aa8cda6" kindref="member">TD_BAR_INIT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66" refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3aa2b2704ecc4c11ec0dbeaf1b22532431" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3aa2b2704ecc4c11ec0dbeaf1b22532431" kindref="member">TD_BAR_WAIT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a4690967fd6d32fb82c5de637846a3476" kindref="member">HARE_PAR_FOR</ref></highlight></codeline>
<codeline lineno="68" refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a4690967fd6d32fb82c5de637846a3476" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>llvm::StringMap&lt;TD_TYPE&gt;<sp/>TDAPIMap;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>TDAPIMap<sp/>tdAPIMap;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i" kindref="compound">ThreadAPI</ref><sp/>()</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ThreadAPI*<sp/>tdAPI;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3" kindref="member">TD_TYPE</ref><sp/>getType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SVFFunction*<sp/>F)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="90"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(F)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TDAPIMap::const_iterator<sp/>it=<sp/>tdAPIMap.find(F-&gt;getName().str());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it<sp/>!=<sp/>tdAPIMap.end())</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TD_DUMMY;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="102" refid="class_s_v_f_1_1_thread_a_p_i_1a6852ff1eedc1117e95e45e4a90c80d53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i" kindref="compound">ThreadAPI</ref>*<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a6852ff1eedc1117e95e45e4a90c80d53" kindref="member">getThreadAPI</ref>()</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tdAPI<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tdAPI<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i" kindref="compound">ThreadAPI</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tdAPI;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref>*<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a08c83946d87ab935bd8bf6fea20792ba" kindref="member">getCallee</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Instruction<sp/>*inst)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref>*<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a08c83946d87ab935bd8bf6fea20792ba" kindref="member">getCallee</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CallSite<sp/>cs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CallSite<sp/>getLLVMCallSite(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Instruction<sp/>*inst)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"></codeline>
<codeline lineno="119"></codeline>
<codeline lineno="120" refid="class_s_v_f_1_1_thread_a_p_i_1a9da276dca5092d18f4f22d32e5ab6cdf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a9da276dca5092d18f4f22d32e5ab6cdf" kindref="member">isTDFork</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Instruction<sp/>*inst)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="121"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getType(<ref refid="class_s_v_f_1_1_thread_a_p_i_1a08c83946d87ab935bd8bf6fea20792ba" kindref="member">getCallee</ref>(inst))<sp/>==<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a9a40948eeab9b022957ae33715ee83da" kindref="member">TD_FORK</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a9da276dca5092d18f4f22d32e5ab6cdf" kindref="member">isTDFork</ref>(CallSite<sp/>cs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="125"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a9da276dca5092d18f4f22d32e5ab6cdf" kindref="member">isTDFork</ref>(cs.getInstruction());</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"></codeline>
<codeline lineno="131"></codeline>
<codeline lineno="132" refid="class_s_v_f_1_1_thread_a_p_i_1a86d75b7e3570337e484397e60f97d88e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a86d75b7e3570337e484397e60f97d88e" kindref="member">isHareParFor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Instruction<sp/>*inst)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="133"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getType(<ref refid="class_s_v_f_1_1_thread_a_p_i_1a08c83946d87ab935bd8bf6fea20792ba" kindref="member">getCallee</ref>(inst))<sp/>==<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a4690967fd6d32fb82c5de637846a3476" kindref="member">HARE_PAR_FOR</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a86d75b7e3570337e484397e60f97d88e" kindref="member">isHareParFor</ref>(CallSite<sp/>cs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="137"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a9da276dca5092d18f4f22d32e5ab6cdf" kindref="member">isTDFork</ref>(cs.getInstruction());</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"></codeline>
<codeline lineno="143"></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value*<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a11dc55f35c18bd1f46d00c21c7dc695e" kindref="member">getForkedThread</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Instruction<sp/>*inst)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="147"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="class_s_v_f_1_1_thread_a_p_i_1a9da276dca5092d18f4f22d32e5ab6cdf" kindref="member">isTDFork</ref>(inst)<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>a<sp/>thread<sp/>fork<sp/>function!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CallSite<sp/>cs<sp/>=<sp/>getLLVMCallSite(inst);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cs.getArgument(0);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value*<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a11dc55f35c18bd1f46d00c21c7dc695e" kindref="member">getForkedThread</ref>(CallSite<sp/>cs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="153"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a11dc55f35c18bd1f46d00c21c7dc695e" kindref="member">getForkedThread</ref>(cs.getInstruction());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="class_s_v_f_1_1_thread_a_p_i_1a7ddc0c71aeae315af21972a4905b3456" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value*<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a7ddc0c71aeae315af21972a4905b3456" kindref="member">getForkedFun</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Instruction<sp/>*inst)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="160"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="class_s_v_f_1_1_thread_a_p_i_1a9da276dca5092d18f4f22d32e5ab6cdf" kindref="member">isTDFork</ref>(inst)<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>a<sp/>thread<sp/>fork<sp/>function!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CallSite<sp/>cs<sp/>=<sp/>getLLVMCallSite(inst);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cs.getArgument(2)-&gt;stripPointerCasts();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value*<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a7ddc0c71aeae315af21972a4905b3456" kindref="member">getForkedFun</ref>(CallSite<sp/>cs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="166"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a7ddc0c71aeae315af21972a4905b3456" kindref="member">getForkedFun</ref>(cs.getInstruction());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="class_s_v_f_1_1_thread_a_p_i_1a6bc40bc0b35c23e9d1874c844511449d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value*<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a6bc40bc0b35c23e9d1874c844511449d" kindref="member">getActualParmAtForkSite</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Instruction<sp/>*inst)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="173"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="class_s_v_f_1_1_thread_a_p_i_1a9da276dca5092d18f4f22d32e5ab6cdf" kindref="member">isTDFork</ref>(inst)<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>a<sp/>thread<sp/>fork<sp/>function!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CallSite<sp/>cs<sp/>=<sp/>getLLVMCallSite(inst);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cs.getArgument(3);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value*<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a6bc40bc0b35c23e9d1874c844511449d" kindref="member">getActualParmAtForkSite</ref>(CallSite<sp/>cs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="179"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a6bc40bc0b35c23e9d1874c844511449d" kindref="member">getActualParmAtForkSite</ref>(cs.getInstruction());</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"></codeline>
<codeline lineno="185"></codeline>
<codeline lineno="186" refid="class_s_v_f_1_1_thread_a_p_i_1afeedd6e518af76fa9e7142af8899b2f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value*<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1afeedd6e518af76fa9e7142af8899b2f5" kindref="member">getTaskFuncAtHareParForSite</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Instruction<sp/>*inst)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="187"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="class_s_v_f_1_1_thread_a_p_i_1a86d75b7e3570337e484397e60f97d88e" kindref="member">isHareParFor</ref>(inst)<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>a<sp/>hare_parallel_for<sp/>function!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CallSite<sp/>cs<sp/>=<sp/>getLLVMCallSite(inst);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cs.getArgument(4)-&gt;stripPointerCasts();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value*<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1afeedd6e518af76fa9e7142af8899b2f5" kindref="member">getTaskFuncAtHareParForSite</ref>(CallSite<sp/>cs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="193"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1afeedd6e518af76fa9e7142af8899b2f5" kindref="member">getTaskFuncAtHareParForSite</ref>(cs.getInstruction());</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"></codeline>
<codeline lineno="199"></codeline>
<codeline lineno="200" refid="class_s_v_f_1_1_thread_a_p_i_1a58cf56e35be873a5a26c5eb0d9b5c9b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value*<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a58cf56e35be873a5a26c5eb0d9b5c9b3" kindref="member">getTaskDataAtHareParForSite</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Instruction<sp/>*inst)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="201"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="class_s_v_f_1_1_thread_a_p_i_1a86d75b7e3570337e484397e60f97d88e" kindref="member">isHareParFor</ref>(inst)<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>a<sp/>hare_parallel_for<sp/>function!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CallSite<sp/>cs<sp/>=<sp/>getLLVMCallSite(inst);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cs.getArgument(5);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value*<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a58cf56e35be873a5a26c5eb0d9b5c9b3" kindref="member">getTaskDataAtHareParForSite</ref>(CallSite<sp/>cs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="207"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a58cf56e35be873a5a26c5eb0d9b5c9b3" kindref="member">getTaskDataAtHareParForSite</ref>(cs.getInstruction());</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"></codeline>
<codeline lineno="213"></codeline>
<codeline lineno="214" refid="class_s_v_f_1_1_thread_a_p_i_1a8cc5f9ff6039392ce1471cd830973c44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a8cc5f9ff6039392ce1471cd830973c44" kindref="member">isTDJoin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Instruction<sp/>*inst)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="215"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getType(<ref refid="class_s_v_f_1_1_thread_a_p_i_1a08c83946d87ab935bd8bf6fea20792ba" kindref="member">getCallee</ref>(inst))<sp/>==<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a9efe9b72a2520e1fae3cae1e747e3134" kindref="member">TD_JOIN</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a8cc5f9ff6039392ce1471cd830973c44" kindref="member">isTDJoin</ref>(CallSite<sp/>cs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="219"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a8cc5f9ff6039392ce1471cd830973c44" kindref="member">isTDJoin</ref>(cs.getInstruction());</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"></codeline>
<codeline lineno="225"></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value*<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1ac9f3cc080275ce7d76dd2f56fc7c6434" kindref="member">getJoinedThread</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Instruction<sp/>*inst)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="229"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="class_s_v_f_1_1_thread_a_p_i_1a8cc5f9ff6039392ce1471cd830973c44" kindref="member">isTDJoin</ref>(inst)<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>a<sp/>thread<sp/>join<sp/>function!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CallSite<sp/>cs<sp/>=<sp/>getLLVMCallSite(inst);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value*<sp/>join<sp/>=<sp/>cs.getArgument(0);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SVFUtil::isa&lt;LoadInst&gt;(join))</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SVFUtil::cast&lt;LoadInst&gt;(join)-&gt;getPointerOperand();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SVFUtil::isa&lt;Argument&gt;(join))</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>join;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;the<sp/>value<sp/>of<sp/>the<sp/>first<sp/>argument<sp/>at<sp/>join<sp/>is<sp/>not<sp/>a<sp/>load<sp/>instruction?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value*<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1ac9f3cc080275ce7d76dd2f56fc7c6434" kindref="member">getJoinedThread</ref>(CallSite<sp/>cs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="241"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1ac9f3cc080275ce7d76dd2f56fc7c6434" kindref="member">getJoinedThread</ref>(cs.getInstruction());</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246" refid="class_s_v_f_1_1_thread_a_p_i_1ad1c595f7b15a2d3079b9e9200c84f7d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value*<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1ad1c595f7b15a2d3079b9e9200c84f7d7" kindref="member">getRetParmAtJoinedSite</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Instruction<sp/>*inst)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="247"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="class_s_v_f_1_1_thread_a_p_i_1a8cc5f9ff6039392ce1471cd830973c44" kindref="member">isTDJoin</ref>(inst)<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>a<sp/>thread<sp/>join<sp/>function!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CallSite<sp/>cs<sp/>=<sp/>getLLVMCallSite(inst);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cs.getArgument(1);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value*<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1ad1c595f7b15a2d3079b9e9200c84f7d7" kindref="member">getRetParmAtJoinedSite</ref>(CallSite<sp/>cs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="253"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1ad1c595f7b15a2d3079b9e9200c84f7d7" kindref="member">getRetParmAtJoinedSite</ref>(cs.getInstruction());</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"></codeline>
<codeline lineno="261" refid="class_s_v_f_1_1_thread_a_p_i_1ae87d129560d7015966336f06a516db23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1ae87d129560d7015966336f06a516db23" kindref="member">isTDExit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Instruction<sp/>*inst)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="262"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getType(<ref refid="class_s_v_f_1_1_thread_a_p_i_1a08c83946d87ab935bd8bf6fea20792ba" kindref="member">getCallee</ref>(inst))<sp/>==<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3af3a3036705ecca40cf170d12d0ccf4dc" kindref="member">TD_EXIT</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1ae87d129560d7015966336f06a516db23" kindref="member">isTDExit</ref>(CallSite<sp/>cs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="267"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getType(<ref refid="class_s_v_f_1_1_thread_a_p_i_1a08c83946d87ab935bd8bf6fea20792ba" kindref="member">getCallee</ref>(cs))<sp/>==<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3af3a3036705ecca40cf170d12d0ccf4dc" kindref="member">TD_EXIT</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"></codeline>
<codeline lineno="273"></codeline>
<codeline lineno="274" refid="class_s_v_f_1_1_thread_a_p_i_1a9db4df7968ec179e5012794c58fdee70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a9db4df7968ec179e5012794c58fdee70" kindref="member">isTDAcquire</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Instruction<sp/>*inst)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="275"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getType(<ref refid="class_s_v_f_1_1_thread_a_p_i_1a08c83946d87ab935bd8bf6fea20792ba" kindref="member">getCallee</ref>(inst))<sp/>==<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a5bda6aca46dfc712f3781b4732a373a3" kindref="member">TD_ACQUIRE</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a9db4df7968ec179e5012794c58fdee70" kindref="member">isTDAcquire</ref>(CallSite<sp/>cs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="280"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getType(<ref refid="class_s_v_f_1_1_thread_a_p_i_1a08c83946d87ab935bd8bf6fea20792ba" kindref="member">getCallee</ref>(cs))<sp/>==<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3a5bda6aca46dfc712f3781b4732a373a3" kindref="member">TD_ACQUIRE</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"></codeline>
<codeline lineno="286"></codeline>
<codeline lineno="287" refid="class_s_v_f_1_1_thread_a_p_i_1a38adae633d5aceddcca3b3a23ad66db9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38adae633d5aceddcca3b3a23ad66db9" kindref="member">isTDRelease</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Instruction<sp/>*inst)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="288"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getType(<ref refid="class_s_v_f_1_1_thread_a_p_i_1a08c83946d87ab935bd8bf6fea20792ba" kindref="member">getCallee</ref>(inst))<sp/>==<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3ac826e1e1c43305a3abcfdc9a2169b8dd" kindref="member">TD_RELEASE</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38adae633d5aceddcca3b3a23ad66db9" kindref="member">isTDRelease</ref>(CallSite<sp/>cs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="293"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getType(<ref refid="class_s_v_f_1_1_thread_a_p_i_1a08c83946d87ab935bd8bf6fea20792ba" kindref="member">getCallee</ref>(cs))<sp/>==<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3ac826e1e1c43305a3abcfdc9a2169b8dd" kindref="member">TD_RELEASE</ref>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"></codeline>
<codeline lineno="299"></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value*<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a8f1c869eb42f7c89697cf2c7452ba9e9" kindref="member">getLockVal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Instruction<sp/>*inst)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="302"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert((<ref refid="class_s_v_f_1_1_thread_a_p_i_1a9db4df7968ec179e5012794c58fdee70" kindref="member">isTDAcquire</ref>(inst)<sp/>||<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38adae633d5aceddcca3b3a23ad66db9" kindref="member">isTDRelease</ref>(inst))<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>a<sp/>lock<sp/>acquire<sp/>or<sp/>release<sp/>function&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CallSite<sp/>cs<sp/>=<sp/>getLLVMCallSite(inst);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cs.getArgument(0);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value*<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a8f1c869eb42f7c89697cf2c7452ba9e9" kindref="member">getLockVal</ref>(CallSite<sp/>cs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="308"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a8f1c869eb42f7c89697cf2c7452ba9e9" kindref="member">getLockVal</ref>(cs.getInstruction());</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"></codeline>
<codeline lineno="314"></codeline>
<codeline lineno="315" refid="class_s_v_f_1_1_thread_a_p_i_1a0ff50b4312b9aa2c7ebd00e9a40a2668" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a0ff50b4312b9aa2c7ebd00e9a40a2668" kindref="member">isTDBarWait</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Instruction<sp/>*inst)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="316"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getType(<ref refid="class_s_v_f_1_1_thread_a_p_i_1a08c83946d87ab935bd8bf6fea20792ba" kindref="member">getCallee</ref>(inst))<sp/>==<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3aa2b2704ecc4c11ec0dbeaf1b22532431" kindref="member">TD_BAR_WAIT</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a0ff50b4312b9aa2c7ebd00e9a40a2668" kindref="member">isTDBarWait</ref>(CallSite<sp/>cs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="321"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getType(<ref refid="class_s_v_f_1_1_thread_a_p_i_1a08c83946d87ab935bd8bf6fea20792ba" kindref="member">getCallee</ref>(cs))<sp/>==<sp/><ref refid="class_s_v_f_1_1_thread_a_p_i_1a38a7516702c55ab418167b7c850516b3aa2b2704ecc4c11ec0dbeaf1b22532431" kindref="member">TD_BAR_WAIT</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>performAPIStat(SVFModule*<sp/>m);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>statInit(llvm::StringMap&lt;u32_t&gt;&amp;<sp/>tdAPIStatMap);</highlight></codeline>
<codeline lineno="328"><highlight class="normal">};</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>namespace<sp/>SVF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>THREADAPI_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/Util/ThreadAPI.h"/>
  </compounddef>
</doxygen>
