<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_addr_c_g_edge" kind="class" language="C++" prot="public">
    <compoundname>SVF::AddrCGEdge</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_constraint_edge" prot="public" virt="non-virtual">SVF::ConstraintEdge</basecompoundref>
    <includes refid="_cons_g_edge_8h" local="no">ConsGEdge.h</includes>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_s_v_f_1_1_addr_c_g_edge_1a9c8da69a469e51d83c5009ba2685bcf6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SVF::AddrCGEdge::AddrCGEdge</definition>
        <argsstring>()</argsstring>
        <name>AddrCGEdge</name>
        <briefdescription>
<para>place holder </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsGEdge.h" line="96" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_addr_c_g_edge_1a3e07c316815631b1ddfd35ae3781daab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SVF::AddrCGEdge::AddrCGEdge</definition>
        <argsstring>(const AddrCGEdge &amp;)</argsstring>
        <name>AddrCGEdge</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_addr_c_g_edge" kindref="compound">AddrCGEdge</ref> &amp;</type>
        </param>
        <briefdescription>
<para>place holder </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsGEdge.h" line="97" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_addr_c_g_edge_1a7f2959e08f010e5c30dcb76c6fbf6732" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::AddrCGEdge::operator=</definition>
        <argsstring>(const AddrCGEdge &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_addr_c_g_edge" kindref="compound">AddrCGEdge</ref> &amp;</type>
        </param>
        <briefdescription>
<para>place holder </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsGEdge.h" line="98" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_s_v_f_1_1_addr_c_g_edge_1a541102364cd692d5f53a6aaef8b41965" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SVF::AddrCGEdge::classof</definition>
        <argsstring>(const AddrCGEdge *)</argsstring>
        <name>classof</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_addr_c_g_edge" kindref="compound">AddrCGEdge</ref> *</type>
        </param>
        <briefdescription>
<para>Methods for support type inquiry through isa, cast, and dyn_cast: </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsGEdge.h" line="102" column="24" bodyfile="include/Graphs/ConsGEdge.h" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_addr_c_g_edge_1ac635af9bdde40ea73c267998b9e4b6c4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SVF::AddrCGEdge::classof</definition>
        <argsstring>(const ConstraintEdge *edge)</argsstring>
        <name>classof</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_constraint_edge" kindref="compound">ConstraintEdge</ref> *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsGEdge.h" line="106" column="24" bodyfile="include/Graphs/ConsGEdge.h" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_addr_c_g_edge_1a1eeac9d23b4c3c789697c992e9ef8dbd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SVF::AddrCGEdge::classof</definition>
        <argsstring>(const GenericConsEdgeTy *edge)</argsstring>
        <name>classof</name>
        <param>
          <type>const <ref refid="namespace_s_v_f_1a1d2b00b4b0ab475899488fc89b2bfe66" kindref="member">GenericConsEdgeTy</ref> *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsGEdge.h" line="110" column="24" bodyfile="include/Graphs/ConsGEdge.h" bodystart="110" bodyend="113"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_addr_c_g_edge_1a131779667553499b85423e1932664252" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AddrCGEdge::AddrCGEdge</definition>
        <argsstring>(ConstraintNode *s, ConstraintNode *d, EdgeID id)</argsstring>
        <name>AddrCGEdge</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_node" kindref="compound">ConstraintNode</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_constraint_node" kindref="compound">ConstraintNode</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>EdgeID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>constructor </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor for address constraint graph edge </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ConsGEdge.h" line="117" column="5" bodyfile="lib/Graphs/ConsG.cpp" bodystart="143" bodyend="150"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Copy edge </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>GenericConsEdgeTy</label>
        <link refid="class_s_v_f_1_1_generic_edge"/>
      </node>
      <node id="1">
        <label>SVF::AddrCGEdge</label>
        <link refid="class_s_v_f_1_1_addr_c_g_edge"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SVF::ConstraintEdge</label>
        <link refid="class_s_v_f_1_1_constraint_edge"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>GenericConsEdgeTy</label>
        <link refid="class_s_v_f_1_1_generic_edge"/>
      </node>
      <node id="1">
        <label>SVF::AddrCGEdge</label>
        <link refid="class_s_v_f_1_1_addr_c_g_edge"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SVF::ConstraintEdge</label>
        <link refid="class_s_v_f_1_1_constraint_edge"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/Graphs/ConsGEdge.h" line="93" column="1" bodyfile="include/Graphs/ConsGEdge.h" bodystart="94" bodyend="118"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_constraint_edge_1a663af27955ba0c545f34fa1f076b7375aed68bc43e8aae49e8590e140eb0ffaf3" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>Addr</name></member>
      <member refid="class_s_v_f_1_1_addr_c_g_edge_1a9c8da69a469e51d83c5009ba2685bcf6" prot="private" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>AddrCGEdge</name></member>
      <member refid="class_s_v_f_1_1_addr_c_g_edge_1a3e07c316815631b1ddfd35ae3781daab" prot="private" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>AddrCGEdge</name></member>
      <member refid="class_s_v_f_1_1_addr_c_g_edge_1a131779667553499b85423e1932664252" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>AddrCGEdge</name></member>
      <member refid="class_s_v_f_1_1_addr_c_g_edge_1a541102364cd692d5f53a6aaef8b41965" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_addr_c_g_edge_1ac635af9bdde40ea73c267998b9e4b6c4" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_addr_c_g_edge_1a1eeac9d23b4c3c789697c992e9ef8dbd" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_constraint_edge_1a2b2b7206af6463b82441ac7a5c78e637" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>ConstraintEdge</name></member>
      <member refid="class_s_v_f_1_1_constraint_edge_1a663af27955ba0c545f34fa1f076b7375" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>ConstraintEdgeK</name></member>
      <member refid="class_s_v_f_1_1_constraint_edge_1ad155e1ed2473cc4f5f57128d282ac541" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>ConstraintEdgeSetTy</name></member>
      <member refid="class_s_v_f_1_1_constraint_edge_1a663af27955ba0c545f34fa1f076b7375a29b0aa3353f866ef1655ab6d4716feb9" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>Copy</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a93dec4c27088242a4b1b6aa82cea46b9" prot="protected" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>EdgeKindMask</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1af1c2fd4b5ef1d7b7605572bf2489c298" prot="protected" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>EdgeKindMaskBits</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1aab8892b73370c32b48621cd1d0cce614" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>GEdgeFlag</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a7eb93c9018c80057672a8ce71615dc0d" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>GEdgeKind</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a6764973569c281d483afab17a75cb4dc" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>GenericEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1ad9edb45e74ae675d9da82f5acf02d56e" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>getDstID</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1aeaa31a2c8479e831b36ce2e2582ceb86" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>getDstNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_edge_1ab201b7df925c12e6944516f4b87d7823" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>getEdgeID</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1abe8525c542def8162b094c169a01993b" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>getEdgeKind</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1ae6792506a0150a9400d635eceab7f9e7" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>getSrcID</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1ab47ca533c415841ef75456cbad439589" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>getSrcNode</name></member>
      <member refid="class_s_v_f_1_1_constraint_edge_1a663af27955ba0c545f34fa1f076b7375a1bdeb9a06641d16b43391120812b40b2" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>Load</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1aff95460d4b859e657a9198b7c5e5c736" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>NodeType</name></member>
      <member refid="class_s_v_f_1_1_constraint_edge_1a663af27955ba0c545f34fa1f076b7375acfd0a194af0da66162545f0089eb4baa" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>NormalGep</name></member>
      <member refid="class_s_v_f_1_1_addr_c_g_edge_1a7f2959e08f010e5c30dcb76c6fbf6732" prot="private" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>operator=</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a88b2086dcebb60bc86bca0fb94f49fca" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>operator==</name></member>
      <member refid="class_s_v_f_1_1_constraint_edge_1a663af27955ba0c545f34fa1f076b7375a20d6a102ddc06257a822ffffcc5a3b47" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>Store</name></member>
      <member refid="class_s_v_f_1_1_constraint_edge_1a663af27955ba0c545f34fa1f076b7375ae5df3ce07dd670b48916f7b8ab33ae5a" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>VariantGep</name></member>
      <member refid="class_s_v_f_1_1_constraint_edge_1a6eebfb3d2ff4f4fafc433b25d3762160" prot="public" virt="non-virtual"><scope>SVF::AddrCGEdge</scope><name>~ConstraintEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a548daea0cac6491de91d4840b7297741" prot="public" virt="virtual"><scope>SVF::AddrCGEdge</scope><name>~GenericEdge</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
