<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_file_checker" xml:lang="en-US">
<title>SVF::FileChecker Class Reference</title>
<indexterm><primary>SVF::FileChecker</primary></indexterm>
<para>
<computeroutput>#include &lt;FileChecker.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for SVF::FileChecker:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_file_checker.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_file_checker_1a283b5e46aba5e964f0a54abc33fcb7b6"/><link linkend="_class_s_v_f_1_1_file_checker_1a283b5e46aba5e964f0a54abc33fcb7b6">FileChecker</link> ()</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_file_checker_1aaf316bcb90a37d577631598f738945da"/>virtual <link linkend="_class_s_v_f_1_1_file_checker_1aaf316bcb90a37d577631598f738945da">~FileChecker</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_s_v_f_1_1_file_checker_1a98a68536b8ffdb2250bbb01437598ac3">runOnModule</link> (<link linkend="_class_s_v_f_1_1_s_v_f_module">SVFModule</link> *module)</para>

<para>We start from here. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_file_checker_1ab2ed4c1d3aa00ac663441f32d9f3115f"/>bool <link linkend="_class_s_v_f_1_1_file_checker_1ab2ed4c1d3aa00ac663441f32d9f3115f">isSourceLikeFun</link> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *fun)</para>

<para>Whether the function is a heap allocator/reallocator (allocate memory) </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_file_checker_1aac61c4566cd79827879f4862664a432e"/>bool <link linkend="_class_s_v_f_1_1_file_checker_1aac61c4566cd79827879f4862664a432e">isSinkLikeFun</link> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *fun)</para>

<para>Whether the function is a heap deallocator (free/release memory) </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_file_checker_1a88ffc46ca954b77463de4c94c4eace54"/>void <link linkend="_class_s_v_f_1_1_file_checker_1a88ffc46ca954b77463de4c94c4eace54">reportBug</link> (<link linkend="_class_s_v_f_1_1_prog_slice">ProgSlice</link> *slice)</para>

<para>Report file/close bugs. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_file_checker_1ac6b092dd119642f435c21a708b160b49"/>void <emphasis role="strong">reportNeverClose</emphasis> (const <link linkend="_class_s_v_f_1_1_v_f_g_node">SVFGNode</link> *src)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_file_checker_1a8a4e249c4ac93b98149d25e1aa411cb0"/>void <emphasis role="strong">reportPartialClose</emphasis> (const <link linkend="_class_s_v_f_1_1_v_f_g_node">SVFGNode</link> *src)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>File open/close checker to check consistency of file operations </para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_file_checker_1a98a68536b8ffdb2250bbb01437598ac3"/>    <section>
    <title>runOnModule()</title>
<indexterm><primary>runOnModule</primary><secondary>SVF::FileChecker</secondary></indexterm>
<indexterm><primary>SVF::FileChecker</primary><secondary>runOnModule</secondary></indexterm>
<para><computeroutput>virtual bool SVF::FileChecker::runOnModule (<link linkend="_class_s_v_f_1_1_s_v_f_module">SVFModule</link> * module)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>We start from here. </para>
</para>

<para>start analysis</para>
<para>
Reimplemented from <link linkend="_class_s_v_f_1_1_leak_checker_1ab3bb79d88d73c8b881d714921e7b5e12">SVF::LeakChecker</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/SABER/FileChecker.hlib/SABER/FileChecker.cpp</section>
</section>
