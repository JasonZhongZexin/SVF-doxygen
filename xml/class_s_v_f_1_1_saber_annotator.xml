<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_saber_annotator" kind="class" language="C++" prot="public">
    <compoundname>SVF::SaberAnnotator</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_annotator" prot="public" virt="non-virtual">SVF::Annotator</basecompoundref>
    <includes refid="_saber_annotator_8h" local="no">SaberAnnotator.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_saber_annotator_1adceb8a459b44c289413401b57d8aeb4d" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_s_v_f_1_1_prog_slice" kindref="compound">ProgSlice</ref> *</type>
        <definition>const ProgSlice* SVF::SaberAnnotator::_curSlice</definition>
        <argsstring></argsstring>
        <name>_curSlice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SABER/SaberAnnotator.h" line="47" column="21" bodyfile="include/SABER/SaberAnnotator.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_saber_annotator_1a76cef1b7443870816e4f31877702380f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::SaberAnnotator::SaberAnnotator</definition>
        <argsstring>(ProgSlice *slice)</argsstring>
        <name>SaberAnnotator</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_prog_slice" kindref="compound">ProgSlice</ref> *</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SABER/SaberAnnotator.h" line="50" column="5" bodyfile="include/SABER/SaberAnnotator.h" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_saber_annotator_1a6a42eb94fe1604eba729c9f7b449b93c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::SaberAnnotator::~SaberAnnotator</definition>
        <argsstring>()</argsstring>
        <name>~SaberAnnotator</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SABER/SaberAnnotator.h" line="55" column="13" bodyfile="include/SABER/SaberAnnotator.h" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_saber_annotator_1aa9446af29edf126ad30bbada51478c13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SaberAnnotator::annotateSource</definition>
        <argsstring>()</argsstring>
        <name>annotateSource</name>
        <briefdescription>
<para>Annotation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SABER/SaberAnnotator.h" line="61" column="10" bodyfile="lib/SABER/SaberAnnotator.cpp" bodystart="38" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_saber_annotator_1abec0f249cc64d3588e83a68ed12271bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SaberAnnotator::annotateSinks</definition>
        <argsstring>()</argsstring>
        <name>annotateSinks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SABER/SaberAnnotator.h" line="62" column="10" bodyfile="lib/SABER/SaberAnnotator.cpp" bodystart="55" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_saber_annotator_1ad7f1d6220243793e0eb86689ff8fb35f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SaberAnnotator::annotateFeasibleBranch</definition>
        <argsstring>(const BranchInst *brInst, u32_t succPos)</argsstring>
        <name>annotateFeasibleBranch</name>
        <param>
          <type>const BranchInst *</type>
          <declname>brInst</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>succPos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Annotate branch instruction and its corresponding feasible path </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SABER/SaberAnnotator.h" line="63" column="10" bodyfile="lib/SABER/SaberAnnotator.cpp" bodystart="78" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_saber_annotator_1acc480b98ffa75b5c30829611bc451cc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SaberAnnotator::annotateInfeasibleBranch</definition>
        <argsstring>(const BranchInst *brInst, u32_t succPos)</argsstring>
        <name>annotateInfeasibleBranch</name>
        <param>
          <type>const BranchInst *</type>
          <declname>brInst</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>succPos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Annotate branch instruction and its corresponding infeasible path </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SABER/SaberAnnotator.h" line="64" column="10" bodyfile="lib/SABER/SaberAnnotator.cpp" bodystart="93" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_saber_annotator_1acaabbe6e6a8ad6e8068fcef6d8caef60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SaberAnnotator::annotateSwitch</definition>
        <argsstring>(SwitchInst *brInst, u32_t succPos)</argsstring>
        <name>annotateSwitch</name>
        <param>
          <type>SwitchInst *</type>
          <declname>brInst</declname>
          <defname>switchInst</defname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>succPos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Annotate switch instruction and its corresponding feasible path </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SABER/SaberAnnotator.h" line="66" column="10" bodyfile="lib/SABER/SaberAnnotator.cpp" bodystart="109" bodyend="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Saber annotation </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>SVF::SaberAnnotator</label>
        <link refid="class_s_v_f_1_1_saber_annotator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SVF::Annotator</label>
        <link refid="class_s_v_f_1_1_annotator"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>SVF::SaberAnnotator</label>
        <link refid="class_s_v_f_1_1_saber_annotator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SVF::Annotator</label>
        <link refid="class_s_v_f_1_1_annotator"/>
      </node>
    </collaborationgraph>
    <location file="include/SABER/SaberAnnotator.h" line="43" column="1" bodyfile="include/SABER/SaberAnnotator.h" bodystart="44" bodyend="68"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_saber_annotator_1adceb8a459b44c289413401b57d8aeb4d" prot="private" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>_curSlice</name></member>
      <member refid="class_s_v_f_1_1_annotator_1ad1424270d91f70dee1461b6301ce8091" prot="public" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>addMDTag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1ade321f69e1a727f1be15860e01effa43" prot="public" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>addMDTag</name></member>
      <member refid="class_s_v_f_1_1_saber_annotator_1ad7f1d6220243793e0eb86689ff8fb35f" prot="public" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>annotateFeasibleBranch</name></member>
      <member refid="class_s_v_f_1_1_saber_annotator_1acc480b98ffa75b5c30829611bc451cc8" prot="public" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>annotateInfeasibleBranch</name></member>
      <member refid="class_s_v_f_1_1_saber_annotator_1abec0f249cc64d3588e83a68ed12271bf" prot="public" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>annotateSinks</name></member>
      <member refid="class_s_v_f_1_1_saber_annotator_1aa9446af29edf126ad30bbada51478c13" prot="public" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>annotateSource</name></member>
      <member refid="class_s_v_f_1_1_saber_annotator_1acaabbe6e6a8ad6e8068fcef6d8caef60" prot="public" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>annotateSwitch</name></member>
      <member refid="class_s_v_f_1_1_annotator_1aa72e6952df50b5b36f0e0fed4024055f" prot="public" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>Annotator</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a64fa6f1cac79c47c66b16ac29d2ac3f4" prot="protected" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>DR_CHECK</name></member>
      <member refid="class_s_v_f_1_1_annotator_1af220da6fe6fc879d15cc34ab397c5ba1" prot="protected" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>DR_NOT_CHECK</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a6e958c20d7809545b026eb5246444711" prot="public" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>hasDRCheckFlag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1abc2d4a40ac8a0d70428b5066266f861c" prot="public" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>hasDRCheckFlag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1ad78f6de28e5474614f16707e1c599f48" prot="public" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>hasDRNotCheckFlag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a11d7bfcb525e4fb74e3031dd9a2635fe" prot="public" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>hasDRNotCheckFlag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1acbb2e202ab3fb864e70eac6b41c3899e" prot="public" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>hasSBSinkFlag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a3fb284999931900d92e60104980648ef" prot="public" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>hasSBSourceFlag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a35dabd3a84615e730b34f568623ad8f5" prot="public" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>removeMDTag</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a676a5c9b425e13f17fa73879c72787a6" prot="public" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>removeMDTag</name></member>
      <member refid="class_s_v_f_1_1_saber_annotator_1a76cef1b7443870816e4f31877702380f" prot="public" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>SaberAnnotator</name></member>
      <member refid="class_s_v_f_1_1_annotator_1ac58473072d90baa6dc377b45f18d0da5" prot="protected" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>SB_FESIBLE</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a556138c152d52921d6f0a709a826a93a" prot="protected" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>SB_INFESIBLE</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a3edacb8703c74abf42c4a29761a3437f" prot="protected" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>SB_SLICESINK</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a01900f5ada5948361cc18857aee26744" prot="protected" virt="non-virtual"><scope>SVF::SaberAnnotator</scope><name>SB_SLICESOURCE</name></member>
      <member refid="class_s_v_f_1_1_annotator_1a77ae10cccf9eeece8adf7dd00821e836" prot="public" virt="virtual"><scope>SVF::SaberAnnotator</scope><name>~Annotator</name></member>
      <member refid="class_s_v_f_1_1_saber_annotator_1a6a42eb94fe1604eba729c9f7b449b93c" prot="public" virt="virtual"><scope>SVF::SaberAnnotator</scope><name>~SaberAnnotator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
