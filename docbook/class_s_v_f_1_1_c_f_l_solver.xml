<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_c_f_l_solver" xml:lang="en-US">
<title>SVF::CFLSolver&lt; GraphType, DPIm &gt; Class Template Reference</title>
<indexterm><primary>SVF::CFLSolver&lt; GraphType, DPIm &gt;</primary></indexterm>
<para>Inheritance diagram for SVF::CFLSolver&lt; GraphType, DPIm &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_c_f_l_solver.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1afdead1450dbc71d4430ab660733ff85c"/>typedef llvm::GraphTraits&lt; GraphType &gt; <link linkend="_class_s_v_f_1_1_c_f_l_solver_1afdead1450dbc71d4430ab660733ff85c">GTraits</link></para>

<para>Define the GTraits and node iterator. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1a7a180d7878fc7b4c055fa72298398127"/>typedef GTraits::NodeType <emphasis role="strong">GNODE</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1aaddd6c593ad39c117bd35ede711b9f36"/>typedef GTraits::EdgeType <emphasis role="strong">GEDGE</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1a586cfb2dd110d1853e70e534e0f66624"/>typedef GTraits::nodes_iterator <emphasis role="strong">node_iterator</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1adf0b96a758a29d5c3c46fcc48081b62c"/>typedef GTraits::ChildIteratorType <emphasis role="strong">child_iterator</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1ae507eecc97716000324820bb1a7a9573"/>typedef llvm::GraphTraits&lt; llvm::Inverse&lt; GNODE * &gt; &gt; <link linkend="_class_s_v_f_1_1_c_f_l_solver_1ae507eecc97716000324820bb1a7a9573">InvGTraits</link></para>

<para>Define inverse GTraits and note iterator. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1a98613e4d455a53183d1f16a58de6244e"/>typedef InvGTraits::ChildIteratorType <emphasis role="strong">inv_child_iterator</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1a802e04eafce9adfd60506c44951c3d53"/>typedef <link linkend="_class_s_v_f_1_1_f_i_f_o_work_list">FIFOWorkList</link>&lt; DPIm &gt; <link linkend="_class_s_v_f_1_1_c_f_l_solver_1a802e04eafce9adfd60506c44951c3d53">WorkList</link></para>

<para>Define worklist. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1ab339e69dd2f2aa2f98fb549e979838af"/><link linkend="_class_s_v_f_1_1_c_f_l_solver_1ab339e69dd2f2aa2f98fb549e979838af">CFLSolver</link> ()</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1ac37d5e6e81edcc0a6c53e02d7d343f5b"/>virtual <link linkend="_class_s_v_f_1_1_c_f_l_solver_1ac37d5e6e81edcc0a6c53e02d7d343f5b">~CFLSolver</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1a9fc4cbe8985d4c25845d408ffcac13e4"/>const GraphType <link linkend="_class_s_v_f_1_1_c_f_l_solver_1a9fc4cbe8985d4c25845d408ffcac13e4">graph</link> () const</para>

<para>Get/Set graph methods. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1ae0a02179b2489f65988819666ec52a7c"/>void <emphasis role="strong">setGraph</emphasis> (GraphType g)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1adaa8ca9296ec3e9b6ec544a105296d22"/>GNODE * <emphasis role="strong">getNode</emphasis> (NodeID id) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1a31199503d0ed7aff97d4620b3599dea6"/>virtual NodeID <emphasis role="strong">getNodeIDFromItem</emphasis> (const DPIm &amp;item) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1ac9dc4e29fde45a19d42987360ee5f528"/>virtual void <link linkend="_class_s_v_f_1_1_c_f_l_solver_1ac9dc4e29fde45a19d42987360ee5f528">forwardTraverse</link> (DPIm &amp;it)</para>

<para>CFL forward traverse solve. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1abf651315ae100f9d4df5d183f7d43c68"/>virtual void <link linkend="_class_s_v_f_1_1_c_f_l_solver_1abf651315ae100f9d4df5d183f7d43c68">backwardTraverse</link> (DPIm &amp;it)</para>

<para>CFL forward traverse solve. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1a6d7361281bbf666a2f5da87f7ea869d2"/>virtual void <link linkend="_class_s_v_f_1_1_c_f_l_solver_1a6d7361281bbf666a2f5da87f7ea869d2">FWProcessCurNode</link> (const DPIm &amp;)</para>

<para>Process the DP item. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1ab444cce6a5c75c7e6c65d47039e567a8"/>virtual void <emphasis role="strong">BWProcessCurNode</emphasis> (const DPIm &amp;)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1a39b079c9b8a1b4570176028de79e85a4"/>virtual void <link linkend="_class_s_v_f_1_1_c_f_l_solver_1a39b079c9b8a1b4570176028de79e85a4">FWProcessOutgoingEdge</link> (const DPIm &amp;item, GEDGE *edge)</para>

<para>Propagation for the solving, to be implemented in the child class. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1a3d5550fbb149297022d5a1852f3229b3"/>virtual void <emphasis role="strong">BWProcessIncomingEdge</emphasis> (const DPIm &amp;item, GEDGE *edge)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1a88f770b4762d44e50d72cd50bb504078"/>DPIm <link linkend="_class_s_v_f_1_1_c_f_l_solver_1a88f770b4762d44e50d72cd50bb504078">popFromWorklist</link> ()</para>

<para>Worklist operations. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1a28cd2677717b19c9cd8ab3c1c441d409"/>bool <emphasis role="strong">pushIntoWorklist</emphasis> (DPIm &amp;item)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1a4f35edfc7c4e4a35c9948ab5abd1a6ad"/>bool <emphasis role="strong">isWorklistEmpty</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_f_l_solver_1a435454f52e5be39c960052f1947b984d"/>bool <emphasis role="strong">isInWorklist</emphasis> (DPIm &amp;item)</para>
</listitem>
        </itemizedlist>
</simplesect>
<para>
The documentation for this class was generated from the following file:</para>
include/Util/CFLSolver.h</section>
