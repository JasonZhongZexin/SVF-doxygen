<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_generic_node" kind="class" language="C++" prot="public">
    <compoundname>SVF::GenericNode</compoundname>
    <derivedcompoundref refid="class_s_v_f_1_1_c_h_node" prot="public" virt="non-virtual">SVF::CHNode</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_i_c_f_g_node" prot="public" virt="non-virtual">SVF::ICFGNode</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_p_a_g_node" prot="public" virt="non-virtual">SVF::PAGNode</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_p_t_a_call_graph_node" prot="public" virt="non-virtual">SVF::PTACallGraphNode</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_t_c_t_node" prot="public" virt="non-virtual">SVF::TCTNode</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_v_f_g_node" prot="public" virt="non-virtual">SVF::VFGNode</derivedcompoundref>
    <includes refid="_generic_graph_8h" local="no">GenericGraph.h</includes>
    <templateparamlist>
      <param>
        <type>class NodeTy</type>
      </param>
      <param>
        <type>class EdgeTy</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <memberdef kind="typedef" id="class_s_v_f_1_1_generic_node_1a2f5471985dfe62bc9ded830a693ab153" prot="public" static="no">
        <type>GEdgeSetTy::iterator</type>
        <definition>typedef GEdgeSetTy::iterator SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Edge iterator </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="139" column="43" bodyfile="include/Graphs/GenericGraph.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_generic_node_1ab6dc1ae41ae23b383f8add474caa7429" prot="public" static="no">
        <type>GEdgeSetTy::const_iterator</type>
        <definition>typedef GEdgeSetTy::const_iterator SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="140" column="49" bodyfile="include/Graphs/GenericGraph.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1a2d9cd758d6f8c5189d9b90b74f43e009" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const GEdgeSetTy &amp;</type>
        <definition>const GEdgeSetTy&amp; SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::getOutEdges</definition>
        <argsstring>() const</argsstring>
        <name>getOutEdges</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get incoming/outgoing edge set </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="178" column="29" bodyfile="include/Graphs/GenericGraph.h" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1afc8b5f86d7795b6a0dfc0687d942d79b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const GEdgeSetTy &amp;</type>
        <definition>const GEdgeSetTy&amp; SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::getInEdges</definition>
        <argsstring>() const</argsstring>
        <name>getInEdges</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="182" column="29" bodyfile="include/Graphs/GenericGraph.h" bodystart="182" bodyend="185"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1a56dff05dc2b3c5664d3b8fc1c6c927d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Size_t</type>
        <definition>Size_t SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::removeIncomingEdge</definition>
        <argsstring>(EdgeType *edge)</argsstring>
        <name>removeIncomingEdge</name>
        <param>
          <type>EdgeType *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove incoming and outgoing edges </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="287" column="19" bodyfile="include/Graphs/GenericGraph.h" bodystart="287" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1a7c6192cb176bda3fad1819711302e468" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Size_t</type>
        <definition>Size_t SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::removeOutgoingEdge</definition>
        <argsstring>(EdgeType *edge)</argsstring>
        <name>removeOutgoingEdge</name>
        <param>
          <type>EdgeType *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="293" column="19" bodyfile="include/Graphs/GenericGraph.h" bodystart="293" bodyend="298"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_generic_node_1ad63e862eb1d1369bd69318fe698e4a22" prot="public" static="no">
        <type>NodeTy</type>
        <definition>typedef NodeTy SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::NodeType</definition>
        <argsstring></argsstring>
        <name>NodeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="132" column="20" bodyfile="include/Graphs/GenericGraph.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_generic_node_1a458c626543431b4314f5f4f532eb51de" prot="public" static="no">
        <type>EdgeTy</type>
        <definition>typedef EdgeTy SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::EdgeType</definition>
        <argsstring></argsstring>
        <name>EdgeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="133" column="20" bodyfile="include/Graphs/GenericGraph.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_generic_node_1a363b90ab02cce2ebc3ede8e5b7cc141c" prot="public" static="no">
        <type>s32_t</type>
        <definition>typedef s32_t SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::GNodeK</definition>
        <argsstring></argsstring>
        <name>GNodeK</name>
        <briefdescription>
<para>Edge kind. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="135" column="19" bodyfile="include/Graphs/GenericGraph.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_generic_node_1a03c6da4a73c47f84f5c5b47252bc339a" prot="public" static="no">
        <type>OrderedSet&lt; EdgeType *, typename EdgeType::equalGEdge &gt;</type>
        <definition>typedef OrderedSet&lt;EdgeType*, typename EdgeType::equalGEdge&gt; SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::GEdgeSetTy</definition>
        <argsstring></argsstring>
        <name>GEdgeSetTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="136" column="24" bodyfile="include/Graphs/GenericGraph.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_generic_node_1aaa53457604fe4cf4cb97ca85d33907b0" prot="private" static="no" mutable="no">
        <type>NodeID</type>
        <definition>NodeID SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
<para>Node ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="144" column="12" bodyfile="include/Graphs/GenericGraph.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_generic_node_1a586df5473d1e7cdcb9051683914d0220" prot="private" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_generic_node_1a363b90ab02cce2ebc3ede8e5b7cc141c" kindref="member">GNodeK</ref></type>
        <definition>GNodeK SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::nodeKind</definition>
        <argsstring></argsstring>
        <name>nodeKind</name>
        <briefdescription>
<para>Node kind. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="145" column="12" bodyfile="include/Graphs/GenericGraph.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_generic_node_1a24971168130222400d9aa5f03610bff5" prot="private" static="no" mutable="no">
        <type>GEdgeSetTy</type>
        <definition>GEdgeSetTy SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::InEdges</definition>
        <argsstring></argsstring>
        <name>InEdges</name>
        <briefdescription>
<para>all incoming edge of this node </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="147" column="16" bodyfile="include/Graphs/GenericGraph.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_generic_node_1a04aa14df71ffa60a54c870842c552889" prot="private" static="no" mutable="no">
        <type>GEdgeSetTy</type>
        <definition>GEdgeSetTy SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::OutEdges</definition>
        <argsstring></argsstring>
        <name>OutEdges</name>
        <briefdescription>
<para>all outgoing edge of this node </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="148" column="16" bodyfile="include/Graphs/GenericGraph.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1acdca5baae3e9e4208a60322fec9c9d3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::GenericNode</definition>
        <argsstring>(NodeID i, GNodeK k)</argsstring>
        <name>GenericNode</name>
        <param>
          <type>NodeID</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_generic_node_1a363b90ab02cce2ebc3ede8e5b7cc141c" kindref="member">GNodeK</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="152" column="5" bodyfile="include/Graphs/GenericGraph.h" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1a48a8d05b81b5c8099c3f3d1f2c4983a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::~GenericNode</definition>
        <argsstring>()</argsstring>
        <name>~GenericNode</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="158" column="13" bodyfile="include/Graphs/GenericGraph.h" bodystart="158" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1ac3e55ef37aefb411ea4c87b1aa3b1895" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NodeID</type>
        <definition>NodeID SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::getId</definition>
        <argsstring>() const</argsstring>
        <name>getId</name>
        <briefdescription>
<para>Get ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="165" column="19" bodyfile="include/Graphs/GenericGraph.h" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1a391e996d695b114530120723da1d003e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_generic_node_1a363b90ab02cce2ebc3ede8e5b7cc141c" kindref="member">GNodeK</ref></type>
        <definition>GNodeK SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::getNodeKind</definition>
        <argsstring>() const</argsstring>
        <name>getNodeKind</name>
        <briefdescription>
<para>Get node kind. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="171" column="19" bodyfile="include/Graphs/GenericGraph.h" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1a06a7373b11143e709784de784fa476fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::hasIncomingEdge</definition>
        <argsstring>() const</argsstring>
        <name>hasIncomingEdge</name>
        <briefdescription>
<para>Has incoming/outgoing edge set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="190" column="17" bodyfile="include/Graphs/GenericGraph.h" bodystart="190" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1a0931220d7a38e03f206cbdc6465d32ad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::hasOutgoingEdge</definition>
        <argsstring>() const</argsstring>
        <name>hasOutgoingEdge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="194" column="17" bodyfile="include/Graphs/GenericGraph.h" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1aa4f103330118c8976bf95e4bf53416eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_generic_node_1a2f5471985dfe62bc9ded830a693ab153" kindref="member">iterator</ref></type>
        <definition>iterator SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::OutEdgeBegin</definition>
        <argsstring>()</argsstring>
        <name>OutEdgeBegin</name>
        <briefdescription>
<para>iterators </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="202" column="21" bodyfile="include/Graphs/GenericGraph.h" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1a19a3366fd8a58290d0c740c46c3dcb3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_generic_node_1a2f5471985dfe62bc9ded830a693ab153" kindref="member">iterator</ref></type>
        <definition>iterator SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::OutEdgeEnd</definition>
        <argsstring>()</argsstring>
        <name>OutEdgeEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="206" column="21" bodyfile="include/Graphs/GenericGraph.h" bodystart="206" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1ae5b113921530eee6afe58a65d8e5b3a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_generic_node_1a2f5471985dfe62bc9ded830a693ab153" kindref="member">iterator</ref></type>
        <definition>iterator SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::InEdgeBegin</definition>
        <argsstring>()</argsstring>
        <name>InEdgeBegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="210" column="21" bodyfile="include/Graphs/GenericGraph.h" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1afe6a7b286d9af4992f41b59612fd2900" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_generic_node_1a2f5471985dfe62bc9ded830a693ab153" kindref="member">iterator</ref></type>
        <definition>iterator SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::InEdgeEnd</definition>
        <argsstring>()</argsstring>
        <name>InEdgeEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="214" column="21" bodyfile="include/Graphs/GenericGraph.h" bodystart="214" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1a50219c203fb5a8a44fe22428699f26e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::OutEdgeBegin</definition>
        <argsstring>() const</argsstring>
        <name>OutEdgeBegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="218" column="27" bodyfile="include/Graphs/GenericGraph.h" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1ace88b6c7561f61f747ff08f61e2c18bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::OutEdgeEnd</definition>
        <argsstring>() const</argsstring>
        <name>OutEdgeEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="222" column="27" bodyfile="include/Graphs/GenericGraph.h" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1a7c0ff80b1c0ae8b76fc620f21495ca39" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::InEdgeBegin</definition>
        <argsstring>() const</argsstring>
        <name>InEdgeBegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="226" column="27" bodyfile="include/Graphs/GenericGraph.h" bodystart="226" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1a0118fbeb2b314dcdcb53c56a2a13ab07" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::InEdgeEnd</definition>
        <argsstring>() const</argsstring>
        <name>InEdgeEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="230" column="27" bodyfile="include/Graphs/GenericGraph.h" bodystart="230" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1aa0e258d3a92dae367f2809a6f16c80db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_s_v_f_1_1_generic_node_1a2f5471985dfe62bc9ded830a693ab153" kindref="member">iterator</ref></type>
        <definition>virtual iterator SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::directOutEdgeBegin</definition>
        <argsstring>()</argsstring>
        <name>directOutEdgeBegin</name>
        <reimplementedby refid="class_s_v_f_1_1_constraint_node_1a6a2021d0d494e7d47469e4161280a098">directOutEdgeBegin</reimplementedby>
        <briefdescription>
<para>Iterators used for SCC detection, overwrite it in child class if necessory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="238" column="29" bodyfile="include/Graphs/GenericGraph.h" bodystart="238" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1a5950d69d4ba6c2122dd06b93911e4992" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_s_v_f_1_1_generic_node_1a2f5471985dfe62bc9ded830a693ab153" kindref="member">iterator</ref></type>
        <definition>virtual iterator SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::directOutEdgeEnd</definition>
        <argsstring>()</argsstring>
        <name>directOutEdgeEnd</name>
        <reimplementedby refid="class_s_v_f_1_1_constraint_node_1a7bf8a1955d6f19b8d0ae5bdeb9a0897f">directOutEdgeEnd</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="242" column="29" bodyfile="include/Graphs/GenericGraph.h" bodystart="242" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1a4ab1f2e5db301e4a37215905a22e6476" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_s_v_f_1_1_generic_node_1a2f5471985dfe62bc9ded830a693ab153" kindref="member">iterator</ref></type>
        <definition>virtual iterator SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::directInEdgeBegin</definition>
        <argsstring>()</argsstring>
        <name>directInEdgeBegin</name>
        <reimplementedby refid="class_s_v_f_1_1_constraint_node_1a4f89452d062b55715b17ec3ebb730cb1">directInEdgeBegin</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="246" column="29" bodyfile="include/Graphs/GenericGraph.h" bodystart="246" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1a19599627ba095b5452373284deab7f6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_s_v_f_1_1_generic_node_1a2f5471985dfe62bc9ded830a693ab153" kindref="member">iterator</ref></type>
        <definition>virtual iterator SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::directInEdgeEnd</definition>
        <argsstring>()</argsstring>
        <name>directInEdgeEnd</name>
        <reimplementedby refid="class_s_v_f_1_1_constraint_node_1afbd67d06e027fd2d87a611cf0bb251b3">directInEdgeEnd</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="250" column="29" bodyfile="include/Graphs/GenericGraph.h" bodystart="250" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1acfae7a2809931cbd62b6f47c4813510d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const_iterator</type>
        <definition>virtual const_iterator SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::directOutEdgeBegin</definition>
        <argsstring>() const</argsstring>
        <name>directOutEdgeBegin</name>
        <reimplementedby refid="class_s_v_f_1_1_constraint_node_1ae0a836aae35a53051209e47a6de4a0f7">directOutEdgeBegin</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="255" column="35" bodyfile="include/Graphs/GenericGraph.h" bodystart="255" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1a7f914b128f7839483efc9ad56834e7c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const_iterator</type>
        <definition>virtual const_iterator SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::directOutEdgeEnd</definition>
        <argsstring>() const</argsstring>
        <name>directOutEdgeEnd</name>
        <reimplementedby refid="class_s_v_f_1_1_constraint_node_1a2069add351804447659d39bf53d9bf41">directOutEdgeEnd</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="259" column="35" bodyfile="include/Graphs/GenericGraph.h" bodystart="259" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1ab331402aed245c33bad841df2bc21f7b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const_iterator</type>
        <definition>virtual const_iterator SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::directInEdgeBegin</definition>
        <argsstring>() const</argsstring>
        <name>directInEdgeBegin</name>
        <reimplementedby refid="class_s_v_f_1_1_constraint_node_1afdb510d663364d21762af0f1f292e50e">directInEdgeBegin</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="263" column="35" bodyfile="include/Graphs/GenericGraph.h" bodystart="263" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1aa7be9ff204bf85bc3bf2fa4e078fcab2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const_iterator</type>
        <definition>virtual const_iterator SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::directInEdgeEnd</definition>
        <argsstring>() const</argsstring>
        <name>directInEdgeEnd</name>
        <reimplementedby refid="class_s_v_f_1_1_constraint_node_1a9101c445c228d059c8a85b8973428047">directInEdgeEnd</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="267" column="35" bodyfile="include/Graphs/GenericGraph.h" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1a93d217b0c9fd8008a2989ca2b4f3fbfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::addIncomingEdge</definition>
        <argsstring>(EdgeType *inEdge)</argsstring>
        <name>addIncomingEdge</name>
        <param>
          <type>EdgeType *</type>
          <declname>inEdge</declname>
        </param>
        <briefdescription>
<para>Add incoming and outgoing edges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="275" column="17" bodyfile="include/Graphs/GenericGraph.h" bodystart="275" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1ae74283fbc788665296a69e56f334557b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::addOutgoingEdge</definition>
        <argsstring>(EdgeType *outEdge)</argsstring>
        <name>addOutgoingEdge</name>
        <param>
          <type>EdgeType *</type>
          <declname>outEdge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="279" column="17" bodyfile="include/Graphs/GenericGraph.h" bodystart="279" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1add6b6b3bd45a9460335c5db9eda821b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>EdgeType *</type>
        <definition>EdgeType* SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::hasIncomingEdge</definition>
        <argsstring>(EdgeType *edge) const</argsstring>
        <name>hasIncomingEdge</name>
        <param>
          <type>EdgeType *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
<para>Find incoming and outgoing edges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="303" column="21" bodyfile="include/Graphs/GenericGraph.h" bodystart="303" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_generic_node_1aa0c40cb708b39300b3cb7354194e4993" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>EdgeType *</type>
        <definition>EdgeType* SVF::GenericNode&lt; NodeTy, EdgeTy &gt;::hasOutgoingEdge</definition>
        <argsstring>(EdgeType *edge) const</argsstring>
        <name>hasOutgoingEdge</name>
        <param>
          <type>EdgeType *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/GenericGraph.h" line="311" column="21" bodyfile="include/Graphs/GenericGraph.h" bodystart="311" bodyend="318"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Generic node on the graph as base class </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>SVF::CHNode&lt; CHNode, CHEdge &gt;</label>
        <link refid="class_s_v_f_1_1_c_h_node"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>SVF::PAGNode&lt; PAGNode, PAGEdge &gt;</label>
        <link refid="class_s_v_f_1_1_p_a_g_node"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>SVF::GepValPN</label>
        <link refid="class_s_v_f_1_1_gep_val_p_n"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>SVF::DummyValPN</label>
        <link refid="class_s_v_f_1_1_dummy_val_p_n"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>SVF::CloneFIObjPN</label>
        <link refid="class_s_v_f_1_1_clone_f_i_obj_p_n"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>SVF::GenericNode&lt; NodeTy, EdgeTy &gt;</label>
        <link refid="class_s_v_f_1_1_generic_node"/>
      </node>
      <node id="14">
        <label>SVF::CloneDummyObjPN</label>
        <link refid="class_s_v_f_1_1_clone_dummy_obj_p_n"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>SVF::ActualOUTSVFGNode</label>
        <link refid="class_s_v_f_1_1_actual_o_u_t_s_v_f_g_node"/>
        <childnode refid="34" relation="public-inheritance">
        </childnode>
      </node>
      <node id="49">
        <label>SVF::GepVFGNode</label>
        <link refid="class_s_v_f_1_1_gep_v_f_g_node"/>
        <childnode refid="46" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>SVF::IntraMSSAPHISVFGNode</label>
        <link refid="class_s_v_f_1_1_intra_m_s_s_a_p_h_i_s_v_f_g_node"/>
        <childnode refid="39" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>SVF::RetBlockNode</label>
        <link refid="class_s_v_f_1_1_ret_block_node"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>SVF::FunExitBlockNode</label>
        <link refid="class_s_v_f_1_1_fun_exit_block_node"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>SVF::BinaryOPVFGNode</label>
        <link refid="class_s_v_f_1_1_binary_o_p_v_f_g_node"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>SVF::FormalRetVFGNode</label>
        <link refid="class_s_v_f_1_1_formal_ret_v_f_g_node"/>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>SVF::ArgumentVFGNode</label>
        <link refid="class_s_v_f_1_1_argument_v_f_g_node"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>SVF::IntraPHIVFGNode</label>
        <link refid="class_s_v_f_1_1_intra_p_h_i_v_f_g_node"/>
        <childnode refid="43" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>SVF::ObjPN</label>
        <link refid="class_s_v_f_1_1_obj_p_n"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>SVF::PTACallGraphNode&lt; PTACallGraphNode, PTACallGraphEdge &gt;</label>
        <link refid="class_s_v_f_1_1_p_t_a_call_graph_node"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>SVF::InterMSSAPHISVFGNode</label>
        <link refid="class_s_v_f_1_1_inter_m_s_s_a_p_h_i_s_v_f_g_node"/>
        <childnode refid="39" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>SVF::ActualRetVFGNode</label>
        <link refid="class_s_v_f_1_1_actual_ret_v_f_g_node"/>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>SVF::ValPN</label>
        <link refid="class_s_v_f_1_1_val_p_n"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>SVF::StmtVFGNode</label>
        <link refid="class_s_v_f_1_1_stmt_v_f_g_node"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="51">
        <label>SVF::StoreVFGNode</label>
        <link refid="class_s_v_f_1_1_store_v_f_g_node"/>
        <childnode refid="46" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>SVF::FunEntryBlockNode</label>
        <link refid="class_s_v_f_1_1_fun_entry_block_node"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>SVF::RetPN</label>
        <link refid="class_s_v_f_1_1_ret_p_n"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="38">
        <label>SVF::FormalOUTSVFGNode</label>
        <link refid="class_s_v_f_1_1_formal_o_u_t_s_v_f_g_node"/>
        <childnode refid="34" relation="public-inheritance">
        </childnode>
      </node>
      <node id="48">
        <label>SVF::CopyVFGNode</label>
        <link refid="class_s_v_f_1_1_copy_v_f_g_node"/>
        <childnode refid="46" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>SVF::DummyObjPN</label>
        <link refid="class_s_v_f_1_1_dummy_obj_p_n"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>SVF::InterPHIVFGNode</label>
        <link refid="class_s_v_f_1_1_inter_p_h_i_v_f_g_node"/>
        <childnode refid="43" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>SVF::InterBlockNode</label>
        <link refid="class_s_v_f_1_1_inter_block_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>SVF::MSSAPHISVFGNode</label>
        <link refid="class_s_v_f_1_1_m_s_s_a_p_h_i_s_v_f_g_node"/>
        <childnode refid="34" relation="public-inheritance">
        </childnode>
      </node>
      <node id="52">
        <label>SVF::UnaryOPVFGNode</label>
        <link refid="class_s_v_f_1_1_unary_o_p_v_f_g_node"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>SVF::CloneGepObjPN</label>
        <link refid="class_s_v_f_1_1_clone_gep_obj_p_n"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>SVF::VFGNode&lt; VFGNode, VFGEdge &gt;</label>
        <link refid="class_s_v_f_1_1_v_f_g_node"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>SVF::GlobalBlockNode</label>
        <link refid="class_s_v_f_1_1_global_block_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="50">
        <label>SVF::LoadVFGNode</label>
        <link refid="class_s_v_f_1_1_load_v_f_g_node"/>
        <childnode refid="46" relation="public-inheritance">
        </childnode>
      </node>
      <node id="37">
        <label>SVF::FormalINSVFGNode</label>
        <link refid="class_s_v_f_1_1_formal_i_n_s_v_f_g_node"/>
        <childnode refid="34" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>SVF::ActualParmVFGNode</label>
        <link refid="class_s_v_f_1_1_actual_parm_v_f_g_node"/>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>SVF::NullPtrVFGNode</label>
        <link refid="class_s_v_f_1_1_null_ptr_v_f_g_node"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>SVF::GepObjPN</label>
        <link refid="class_s_v_f_1_1_gep_obj_p_n"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>SVF::FormalParmVFGNode</label>
        <link refid="class_s_v_f_1_1_formal_parm_v_f_g_node"/>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>SVF::PHIVFGNode</label>
        <link refid="class_s_v_f_1_1_p_h_i_v_f_g_node"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>SVF::FIObjPN</label>
        <link refid="class_s_v_f_1_1_f_i_obj_p_n"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="47">
        <label>SVF::AddrVFGNode</label>
        <link refid="class_s_v_f_1_1_addr_v_f_g_node"/>
        <childnode refid="46" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>SVF::IntraBlockNode</label>
        <link refid="class_s_v_f_1_1_intra_block_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>SVF::ActualINSVFGNode</label>
        <link refid="class_s_v_f_1_1_actual_i_n_s_v_f_g_node"/>
        <childnode refid="34" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>SVF::VarArgPN</label>
        <link refid="class_s_v_f_1_1_var_arg_p_n"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>SVF::CallBlockNode</label>
        <link refid="class_s_v_f_1_1_call_block_node"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="34">
        <label>SVF::MRSVFGNode</label>
        <link refid="class_s_v_f_1_1_m_r_s_v_f_g_node"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>SVF::CmpVFGNode</label>
        <link refid="class_s_v_f_1_1_cmp_v_f_g_node"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>SVF::TCTNode&lt; TCTNode, TCTEdge &gt;</label>
        <link refid="class_s_v_f_1_1_t_c_t_node"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SVF::ICFGNode&lt; ICFGNode, ICFGEdge &gt;</label>
        <link refid="class_s_v_f_1_1_i_c_f_g_node"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="include/Graphs/GenericGraph.h" line="128" column="1" bodyfile="include/Graphs/GenericGraph.h" bodystart="129" bodyend="320"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_generic_node_1a93d217b0c9fd8008a2989ca2b4f3fbfb" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>addIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ae74283fbc788665296a69e56f334557b" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>addOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ab6dc1ae41ae23b383f8add474caa7429" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>const_iterator</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a4ab1f2e5db301e4a37215905a22e6476" prot="public" virt="virtual"><scope>SVF::GenericNode</scope><name>directInEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ab331402aed245c33bad841df2bc21f7b" prot="public" virt="virtual"><scope>SVF::GenericNode</scope><name>directInEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a19599627ba095b5452373284deab7f6c" prot="public" virt="virtual"><scope>SVF::GenericNode</scope><name>directInEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1aa7be9ff204bf85bc3bf2fa4e078fcab2" prot="public" virt="virtual"><scope>SVF::GenericNode</scope><name>directInEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1aa0e258d3a92dae367f2809a6f16c80db" prot="public" virt="virtual"><scope>SVF::GenericNode</scope><name>directOutEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1acfae7a2809931cbd62b6f47c4813510d" prot="public" virt="virtual"><scope>SVF::GenericNode</scope><name>directOutEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a5950d69d4ba6c2122dd06b93911e4992" prot="public" virt="virtual"><scope>SVF::GenericNode</scope><name>directOutEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a7f914b128f7839483efc9ad56834e7c2" prot="public" virt="virtual"><scope>SVF::GenericNode</scope><name>directOutEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a458c626543431b4314f5f4f532eb51de" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>EdgeType</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a03c6da4a73c47f84f5c5b47252bc339a" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>GEdgeSetTy</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1acdca5baae3e9e4208a60322fec9c9d3f" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>GenericNode</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ac3e55ef37aefb411ea4c87b1aa3b1895" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>getId</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1afc8b5f86d7795b6a0dfc0687d942d79b" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>getInEdges</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a391e996d695b114530120723da1d003e" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>getNodeKind</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a2d9cd758d6f8c5189d9b90b74f43e009" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>getOutEdges</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a363b90ab02cce2ebc3ede8e5b7cc141c" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>GNodeK</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a06a7373b11143e709784de784fa476fe" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>hasIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1add6b6b3bd45a9460335c5db9eda821b8" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>hasIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a0931220d7a38e03f206cbdc6465d32ad" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>hasOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1aa0c40cb708b39300b3cb7354194e4993" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>hasOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1aaa53457604fe4cf4cb97ca85d33907b0" prot="private" virt="non-virtual"><scope>SVF::GenericNode</scope><name>id</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ae5b113921530eee6afe58a65d8e5b3a7" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>InEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a7c0ff80b1c0ae8b76fc620f21495ca39" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>InEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1afe6a7b286d9af4992f41b59612fd2900" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>InEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a0118fbeb2b314dcdcb53c56a2a13ab07" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>InEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a24971168130222400d9aa5f03610bff5" prot="private" virt="non-virtual"><scope>SVF::GenericNode</scope><name>InEdges</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a2f5471985dfe62bc9ded830a693ab153" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>iterator</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a586df5473d1e7cdcb9051683914d0220" prot="private" virt="non-virtual"><scope>SVF::GenericNode</scope><name>nodeKind</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ad63e862eb1d1369bd69318fe698e4a22" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>NodeType</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1aa4f103330118c8976bf95e4bf53416eb" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>OutEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a50219c203fb5a8a44fe22428699f26e7" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>OutEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a19a3366fd8a58290d0c740c46c3dcb3d" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>OutEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ace88b6c7561f61f747ff08f61e2c18bc" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>OutEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a04aa14df71ffa60a54c870842c552889" prot="private" virt="non-virtual"><scope>SVF::GenericNode</scope><name>OutEdges</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a56dff05dc2b3c5664d3b8fc1c6c927d5" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>removeIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a7c6192cb176bda3fad1819711302e468" prot="public" virt="non-virtual"><scope>SVF::GenericNode</scope><name>removeOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a48a8d05b81b5c8099c3f3d1f2c4983a9" prot="public" virt="virtual"><scope>SVF::GenericNode</scope><name>~GenericNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
