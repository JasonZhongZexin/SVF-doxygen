<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_list" kind="class" language="C++" prot="public">
    <compoundname>SVF::List</compoundname>
    <includes refid="_work_list_8h" local="no">WorkList.h</includes>
    <innerclass refid="class_s_v_f_1_1_list_1_1_list_node" prot="private">SVF::List::ListNode</innerclass>
    <templateparamlist>
      <param>
        <type>class Data</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_list_1a8f8a9dff1d1213a747f0d7ce8b1802e9" prot="private" static="no">
        <type>Set&lt; Data &gt;</type>
        <definition>typedef Set&lt;Data&gt; SVF::List&lt; Data &gt;::DataSet</definition>
        <argsstring></argsstring>
        <name>DataSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/WorkList.h" line="73" column="17" bodyfile="include/Util/WorkList.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_list_1a4eba65b40d347ea80e2427320eb9c5a1" prot="private" static="no">
        <type>ListNode</type>
        <definition>typedef ListNode SVF::List&lt; Data &gt;::Node</definition>
        <argsstring></argsstring>
        <name>Node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/WorkList.h" line="74" column="22" bodyfile="include/Util/WorkList.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_list_1a8d9ffc8497d53e0e1de230e0d8a50fec" prot="private" static="no" mutable="no">
        <type>DataSet</type>
        <definition>DataSet SVF::List&lt; Data &gt;::nodeSet</definition>
        <argsstring></argsstring>
        <name>nodeSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/WorkList.h" line="126" column="13" bodyfile="include/Util/WorkList.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_list_1a41d52072edb2b75ab15d67bf2663312a" prot="private" static="no" mutable="no">
        <type>Node *</type>
        <definition>Node* SVF::List&lt; Data &gt;::head</definition>
        <argsstring></argsstring>
        <name>head</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/WorkList.h" line="127" column="10" bodyfile="include/Util/WorkList.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_list_1a7900b03bc65b9f8d3e7e5bb1a80a4125" prot="private" static="no" mutable="no">
        <type>Node *</type>
        <definition>Node* SVF::List&lt; Data &gt;::tail</definition>
        <argsstring></argsstring>
        <name>tail</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/WorkList.h" line="128" column="10" bodyfile="include/Util/WorkList.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_list_1aeb697e85085a332e5d593b6f8ee95713" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::List&lt; Data &gt;::List</definition>
        <argsstring>()</argsstring>
        <name>List</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/WorkList.h" line="77" column="5" bodyfile="include/Util/WorkList.h" bodystart="77" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_list_1afd8edd0acf606e0c3470bab424083b45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::List&lt; Data &gt;::~List</definition>
        <argsstring>()</argsstring>
        <name>~List</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/WorkList.h" line="83" column="5" bodyfile="include/Util/WorkList.h" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_list_1a063246d2aa23e389e513c5498ff33aca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::List&lt; Data &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/WorkList.h" line="85" column="17" bodyfile="include/Util/WorkList.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_list_1a3ac922ec28c4e6fe86db6ac262cd6dbd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::List&lt; Data &gt;::find</definition>
        <argsstring>(Data data) const</argsstring>
        <name>find</name>
        <param>
          <type>Data</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/WorkList.h" line="90" column="17" bodyfile="include/Util/WorkList.h" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_list_1aaec02f979702cf4bd899e41defd53c1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::List&lt; Data &gt;::push</definition>
        <argsstring>(Data data)</argsstring>
        <name>push</name>
        <param>
          <type>Data</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/WorkList.h" line="95" column="10" bodyfile="include/Util/WorkList.h" bodystart="95" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_list_1a6e85bd3d8b23ccc7752a72e2a5b171ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Data</type>
        <definition>Data SVF::List&lt; Data &gt;::pop</definition>
        <argsstring>()</argsstring>
        <name>pop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>get node from list head</para>
<para>change list head to the next node</para>
<para>the last node is popped.</para>
        </inbodydescription>
        <location file="include/Util/WorkList.h" line="108" column="10" bodyfile="include/Util/WorkList.h" bodystart="108" bodyend="123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Worklist with &quot;first come first go&quot; order. New nodes pushed at back and popped from front. Elements in the list are unique as they&apos;re recorded by Set. </para>
    </detaileddescription>
    <location file="include/Util/WorkList.h" line="56" column="1" bodyfile="include/Util/WorkList.h" bodystart="57" bodyend="129"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_list_1a8f8a9dff1d1213a747f0d7ce8b1802e9" prot="private" virt="non-virtual"><scope>SVF::List</scope><name>DataSet</name></member>
      <member refid="class_s_v_f_1_1_list_1a063246d2aa23e389e513c5498ff33aca" prot="public" virt="non-virtual"><scope>SVF::List</scope><name>empty</name></member>
      <member refid="class_s_v_f_1_1_list_1a3ac922ec28c4e6fe86db6ac262cd6dbd" prot="public" virt="non-virtual"><scope>SVF::List</scope><name>find</name></member>
      <member refid="class_s_v_f_1_1_list_1a41d52072edb2b75ab15d67bf2663312a" prot="private" virt="non-virtual"><scope>SVF::List</scope><name>head</name></member>
      <member refid="class_s_v_f_1_1_list_1aeb697e85085a332e5d593b6f8ee95713" prot="public" virt="non-virtual"><scope>SVF::List</scope><name>List</name></member>
      <member refid="class_s_v_f_1_1_list_1a4eba65b40d347ea80e2427320eb9c5a1" prot="private" virt="non-virtual"><scope>SVF::List</scope><name>Node</name></member>
      <member refid="class_s_v_f_1_1_list_1a8d9ffc8497d53e0e1de230e0d8a50fec" prot="private" virt="non-virtual"><scope>SVF::List</scope><name>nodeSet</name></member>
      <member refid="class_s_v_f_1_1_list_1a6e85bd3d8b23ccc7752a72e2a5b171ab" prot="public" virt="non-virtual"><scope>SVF::List</scope><name>pop</name></member>
      <member refid="class_s_v_f_1_1_list_1aaec02f979702cf4bd899e41defd53c1a" prot="public" virt="non-virtual"><scope>SVF::List</scope><name>push</name></member>
      <member refid="class_s_v_f_1_1_list_1a7900b03bc65b9f8d3e7e5bb1a80a4125" prot="private" virt="non-virtual"><scope>SVF::List</scope><name>tail</name></member>
      <member refid="class_s_v_f_1_1_list_1afd8edd0acf606e0c3470bab424083b45" prot="public" virt="non-virtual"><scope>SVF::List</scope><name>~List</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
