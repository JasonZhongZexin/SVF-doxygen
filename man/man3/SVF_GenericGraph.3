.TH "SVF::GenericGraph< NodeTy, EdgeTy >" 3 "Sun Feb 14 2021" "SVF" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SVF::GenericGraph< NodeTy, EdgeTy >
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBSVF::CHGraph\fP, \fBSVF::ICFG\fP, \fBSVF::PTACallGraph\fP, \fBSVF::TCT\fP, and \fBSVF::VFG\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef NodeTy \fBNodeType\fP"
.br
.ti -1c
.RI "typedef EdgeTy \fBEdgeType\fP"
.br
.ti -1c
.RI "typedef Map< NodeID, NodeType * > \fBIDToNodeMapTy\fP"
.br
.RI "NodeID to \fBGenericNode\fP map\&. "
.ti -1c
.RI "typedef IDToNodeMapTy::iterator \fBiterator\fP"
.br
.RI "Node Iterators\&. "
.ti -1c
.RI "typedef IDToNodeMapTy::const_iterator \fBconst_iterator\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBGenericGraph\fP ()"
.br
.RI "Constructor\&. "
.ti -1c
.RI "virtual \fB~GenericGraph\fP ()"
.br
.RI "Destructor\&. "
.ti -1c
.RI "void \fBdestroy\fP ()"
.br
.RI "Release memory\&. "
.ti -1c
.RI "\fBiterator\fP \fBbegin\fP ()"
.br
.RI "Iterators\&. "
.ti -1c
.RI "\fBiterator\fP \fBend\fP ()"
.br
.ti -1c
.RI "const_iterator \fBbegin\fP () const"
.br
.ti -1c
.RI "const_iterator \fBend\fP () const"
.br
.ti -1c
.RI "void \fBaddGNode\fP (NodeID id, NodeType *node)"
.br
.RI "Add a Node\&. "
.ti -1c
.RI "NodeType * \fBgetGNode\fP (NodeID id) const"
.br
.RI "Get a node\&. "
.ti -1c
.RI "bool \fBhasGNode\fP (NodeID id) const"
.br
.RI "Has a node\&. "
.ti -1c
.RI "void \fBremoveGNode\fP (NodeType *node)"
.br
.RI "Delete a node\&. "
.ti -1c
.RI "u32_t \fBgetTotalNodeNum\fP () const"
.br
.RI "Get total number of node/edge\&. "
.ti -1c
.RI "u32_t \fBgetTotalEdgeNum\fP () const"
.br
.ti -1c
.RI "void \fBincNodeNum\fP ()"
.br
.RI "Increase number of node/edge\&. "
.ti -1c
.RI "void \fBincEdgeNum\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "u32_t \fBedgeNum\fP"
.br
.RI "total num of node "
.ti -1c
.RI "u32_t \fBnodeNum\fP"
.br
.RI "total num of edge "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBIDToNodeMapTy\fP \fBIDToNodeMap\fP"
.br
.RI "node map "
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for SVF from the source code\&.
