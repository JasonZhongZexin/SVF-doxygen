<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_intra_disjoint_m_r_g" kind="class" language="C++" prot="public">
    <compoundname>SVF::IntraDisjointMRG</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_m_r_generator" prot="public" virt="non-virtual">SVF::MRGenerator</basecompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_inter_disjoint_m_r_g" prot="public" virt="non-virtual">SVF::InterDisjointMRG</derivedcompoundref>
    <includes refid="_mem_partition_8h" local="no">MemPartition.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_intra_disjoint_m_r_g_1a95e5cc07c8e1838f9336c6a2f0aa941a" prot="public" static="no">
        <type>OrderedMap&lt; PointsTo, PointsToList &gt;</type>
        <definition>typedef OrderedMap&lt;PointsTo, PointsToList&gt; SVF::IntraDisjointMRG::PtsToSubPtsMap</definition>
        <argsstring></argsstring>
        <name>PtsToSubPtsMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/MemPartition.h" line="76" column="24" bodyfile="include/MSSA/MemPartition.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_intra_disjoint_m_r_g_1a824dec1bb1df5052252e7fe0dd55a894" prot="public" static="no">
        <type>Map&lt; const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *, PtsToSubPtsMap &gt;</type>
        <definition>typedef Map&lt;const SVFFunction*, PtsToSubPtsMap&gt; SVF::IntraDisjointMRG::FunToPtsMap</definition>
        <argsstring></argsstring>
        <name>FunToPtsMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/MemPartition.h" line="77" column="17" bodyfile="include/MSSA/MemPartition.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_intra_disjoint_m_r_g_1ad59c11753db0b310246418df4c62f639" prot="public" static="no">
        <type>Map&lt; const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *, PointsToList &gt;</type>
        <definition>typedef Map&lt;const SVFFunction*, PointsToList&gt; SVF::IntraDisjointMRG::FunToInterMap</definition>
        <argsstring></argsstring>
        <name>FunToInterMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/MemPartition.h" line="78" column="17" bodyfile="include/MSSA/MemPartition.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_intra_disjoint_m_r_g_1a4b05180c942c1d049e70f8050f4186f6" prot="private" static="no" mutable="no">
        <type>FunToPtsMap</type>
        <definition>FunToPtsMap SVF::IntraDisjointMRG::funcToPtsMap</definition>
        <argsstring></argsstring>
        <name>funcToPtsMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/MemPartition.h" line="132" column="17" bodyfile="include/MSSA/MemPartition.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_intra_disjoint_m_r_g_1ac3873b9ae1339e8d502e85c217638078" prot="private" static="no" mutable="no">
        <type>FunToInterMap</type>
        <definition>FunToInterMap SVF::IntraDisjointMRG::funcToInterMap</definition>
        <argsstring></argsstring>
        <name>funcToInterMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/MemPartition.h" line="133" column="19" bodyfile="include/MSSA/MemPartition.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_intra_disjoint_m_r_g_1ae4bc9b653e15ce876579741e91a463ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::IntraDisjointMRG::IntraDisjointMRG</definition>
        <argsstring>(BVDataPTAImpl *p, bool ptrOnly)</argsstring>
        <name>IntraDisjointMRG</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl" kindref="compound">BVDataPTAImpl</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ptrOnly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/MemPartition.h" line="80" column="5" bodyfile="include/MSSA/MemPartition.h" bodystart="80" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_intra_disjoint_m_r_g_1ad92695f6ff2cb62f58b48d68b0b6fb0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::IntraDisjointMRG::~IntraDisjointMRG</definition>
        <argsstring>()</argsstring>
        <name>~IntraDisjointMRG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/MemPartition.h" line="83" column="5" bodyfile="include/MSSA/MemPartition.h" bodystart="83" bodyend="83"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_s_v_f_1_1_intra_disjoint_m_r_g_1a6d2434f0e3a318b89b7b9fa4f5613b64" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void IntraDisjointMRG::partitionMRs</definition>
        <argsstring>()</argsstring>
        <name>partitionMRs</name>
        <reimplements refid="class_s_v_f_1_1_m_r_generator_1ac0b966ee2065607a24920dd9067b40e9">partitionMRs</reimplements>
        <reimplementedby refid="class_s_v_f_1_1_inter_disjoint_m_r_g_1a807cf159e53c2fb2903296207185dda0">partitionMRs</reimplementedby>
        <briefdescription>
<para>Partition regions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Create memory regions.</para>
        </inbodydescription>
        <location file="include/MSSA/MemPartition.h" line="88" column="18" bodyfile="lib/MSSA/MemPartition.cpp" bodystart="122" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_intra_disjoint_m_r_g_1aa1395f921e2a6e2607a6887f134cb63f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::IntraDisjointMRG::getMRsForLoad</definition>
        <argsstring>(MRSet &amp;aliasMRs, const PointsTo &amp;cpts, const SVFFunction *fun)</argsstring>
        <name>getMRsForLoad</name>
        <reimplements refid="class_s_v_f_1_1_m_r_generator_1a2a7012e9f2e84ac1c5f7ed61daa67ac7">getMRsForLoad</reimplements>
        <reimplementedby refid="class_s_v_f_1_1_inter_disjoint_m_r_g_1affab79ce9b1ef9ec7bc04af8ad2954dc">getMRsForLoad</reimplementedby>
        <param>
          <type><ref refid="class_s_v_f_1_1_m_r_generator_1a98ac3bf264e6a85d172c2c4264ea908f" kindref="member">MRSet</ref> &amp;</type>
          <declname>aliasMRs</declname>
        </param>
        <param>
          <type>const PointsTo &amp;</type>
          <declname>cpts</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>fun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get memory regions to be inserted at a load statement. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cpts</parametername>
</parameternamelist>
<parameterdescription>
<para>The conditional points-to set of load statement. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fun</parametername>
</parameternamelist>
<parameterdescription>
<para>The function being analyzed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mrs</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory region set contains all possible target memory regions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/MemPartition.h" line="96" column="25" bodyfile="include/MSSA/MemPartition.h" bodystart="96" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_intra_disjoint_m_r_g_1a9caabaac320e8a28bb7176f8da285f1f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IntraDisjointMRG::getMRsForLoadFromInterList</definition>
        <argsstring>(MRSet &amp;mrs, const PointsTo &amp;cpts, const PointsToList &amp;inters)</argsstring>
        <name>getMRsForLoadFromInterList</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_m_r_generator_1a98ac3bf264e6a85d172c2c4264ea908f" kindref="member">MRSet</ref> &amp;</type>
          <declname>mrs</declname>
        </param>
        <param>
          <type>const PointsTo &amp;</type>
          <declname>cpts</declname>
        </param>
        <param>
          <type>const PointsToList &amp;</type>
          <declname>inters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/MemPartition.h" line="103" column="10" bodyfile="lib/MSSA/MemPartition.cpp" bodystart="241" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_intra_disjoint_m_r_g_1a8a1c8f676758ba6193bc683d10126175" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void IntraDisjointMRG::getMRsForCallSiteRef</definition>
        <argsstring>(MRSet &amp;aliasMRs, const PointsTo &amp;cpts, const SVFFunction *fun)</argsstring>
        <name>getMRsForCallSiteRef</name>
        <reimplements refid="class_s_v_f_1_1_m_r_generator_1af4eda1f51e3f58c8cccddee474972fe9">getMRsForCallSiteRef</reimplements>
        <param>
          <type><ref refid="class_s_v_f_1_1_m_r_generator_1a98ac3bf264e6a85d172c2c4264ea908f" kindref="member">MRSet</ref> &amp;</type>
          <declname>aliasMRs</declname>
        </param>
        <param>
          <type>const PointsTo &amp;</type>
          <declname>cpts</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>fun</declname>
        </param>
        <briefdescription>
<para>Get memory regions to be inserted at a load statement. </para>
        </briefdescription>
        <detaileddescription>
<para>Get memory regions to be inserted at a load statement. Just process as <ref refid="class_s_v_f_1_1_intra_disjoint_m_r_g_1aa1395f921e2a6e2607a6887f134cb63f" kindref="member">getMRsForLoad()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/MemPartition.h" line="106" column="18" bodyfile="lib/MSSA/MemPartition.cpp" bodystart="262" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_intra_disjoint_m_r_g_1a25480ff3297b8e6037d62809aee81a79" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IntraDisjointMRG::createDisjointMR</definition>
        <argsstring>(const SVFFunction *func, const PointsTo &amp;cpts)</argsstring>
        <name>createDisjointMR</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>func</declname>
        </param>
        <param>
          <type>const PointsTo &amp;</type>
          <declname>cpts</declname>
        </param>
        <briefdescription>
<para>Create disjoint memory region. </para>
        </briefdescription>
        <detaileddescription>
<para>Create memory regions for each points-to target. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/MemPartition.h" line="109" column="10" bodyfile="lib/MSSA/MemPartition.cpp" bodystart="232" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_intra_disjoint_m_r_g_1a8e40dbd57f40172ca5356122874c0978" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IntraDisjointMRG::computeIntersections</definition>
        <argsstring>(const PointsTo &amp;cpts, PointsToList &amp;inters)</argsstring>
        <name>computeIntersections</name>
        <param>
          <type>const PointsTo &amp;</type>
          <declname>cpts</declname>
        </param>
        <param>
          <type>PointsToList &amp;</type>
          <declname>inters</declname>
        </param>
        <briefdescription>
<para>Compute intersections between cpts and computed cpts intersections before. </para>
        </briefdescription>
        <detaileddescription>
<para>Compute intersections between cpts and computed cpts intersections before. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/MemPartition.h" line="112" column="10" bodyfile="lib/MSSA/MemPartition.cpp" bodystart="152" bodyend="227"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_s_v_f_1_1_intra_disjoint_m_r_g_1ae3c857c056f4e6e863843bafba7fdea1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>PtsToSubPtsMap &amp;</type>
        <definition>PtsToSubPtsMap&amp; SVF::IntraDisjointMRG::getPtsSubSetMap</definition>
        <argsstring>(const SVFFunction *func)</argsstring>
        <name>getPtsSubSetMap</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/MemPartition.h" line="115" column="27" bodyfile="include/MSSA/MemPartition.h" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_intra_disjoint_m_r_g_1aa8c653e895ff0889615cdbf349be7652" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>PointsToList &amp;</type>
        <definition>PointsToList&amp; SVF::IntraDisjointMRG::getIntersList</definition>
        <argsstring>(const SVFFunction *func)</argsstring>
        <name>getIntersList</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/MemPartition.h" line="120" column="25" bodyfile="include/MSSA/MemPartition.h" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_intra_disjoint_m_r_g_1ad0640ef6e02d9a90964ca495c0fd8f53" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const PtsToSubPtsMap &amp;</type>
        <definition>const PtsToSubPtsMap&amp; SVF::IntraDisjointMRG::getPtsSubSetMap</definition>
        <argsstring>(const SVFFunction *func) const</argsstring>
        <name>getPtsSubSetMap</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/MemPartition.h" line="125" column="33" bodyfile="include/MSSA/MemPartition.h" bodystart="125" bodyend="130"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Create memory regions which don&apos;t have intersections with each other in the same function scope. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>SVF::MRGenerator</label>
        <link refid="class_s_v_f_1_1_m_r_generator"/>
      </node>
      <node id="1">
        <label>SVF::IntraDisjointMRG</label>
        <link refid="class_s_v_f_1_1_intra_disjoint_m_r_g"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SVF::InterDisjointMRG</label>
        <link refid="class_s_v_f_1_1_inter_disjoint_m_r_g"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>SVF::MRGenerator</label>
        <link refid="class_s_v_f_1_1_m_r_generator"/>
      </node>
      <node id="1">
        <label>SVF::IntraDisjointMRG</label>
        <link refid="class_s_v_f_1_1_intra_disjoint_m_r_g"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/MSSA/MemPartition.h" line="73" column="1" bodyfile="include/MSSA/MemPartition.h" bodystart="74" bodyend="134"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_m_r_generator_1ae2594115874771c93963846f3276e1fb" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>addCPtsToCallSiteMods</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a2416e15c41fce38dfa63318a8f64e11f" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>addCPtsToCallSiteRefs</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a4d71379ec4350d6fde0c12336c1b92d8" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>addCPtsToLoad</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1ae439967f24dbb6dbc11287592eb0d30c" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>addCPtsToStore</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a8b00b46136ce2586b5f94248d0826a94" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>addModSideEffectOfCallSite</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a39604645ca9ba10607ada3872b14705a" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>addModSideEffectOfFunction</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a4e02c3aee7eb0206f6d643b72e39d059" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>addRefSideEffectOfCallSite</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a899c81db92c6bcf24f6f9b769e02e5bf" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>addRefSideEffectOfFunction</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a71b5ce2c754ffff5a84fdb0c3aa16819" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>CallSiteToMRsMap</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a55ca7850e00f57a8a4b83bc969493046" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>CallSiteToNodeBSMap</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1ae73349361642cbc0c5f4be0b8bf96090" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>CallSiteToPointsToMap</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1afdae3e11009966856736d9aa1e2ad5bd" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>collectGlobals</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a502f8379620378b36bc12d9a91b408d2" prot="protected" virt="virtual"><scope>SVF::IntraDisjointMRG</scope><name>collectModRefForCall</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a207dfa4c9f044764665478142c6e6b22" prot="protected" virt="virtual"><scope>SVF::IntraDisjointMRG</scope><name>collectModRefForLoadStore</name></member>
      <member refid="class_s_v_f_1_1_intra_disjoint_m_r_g_1a8e40dbd57f40172ca5356122874c0978" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>computeIntersections</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1ab4d1ff0357d389a65ff1c2112ce631a1" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>cptsToRepCPtsMap</name></member>
      <member refid="class_s_v_f_1_1_intra_disjoint_m_r_g_1a25480ff3297b8e6037d62809aee81a79" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>createDisjointMR</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a42708b4ce8b5548e156a0e6d01602cc2" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>createMR</name></member>
      <member refid="class_s_v_f_1_1_intra_disjoint_m_r_g_1ac3873b9ae1339e8d502e85c217638078" prot="private" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>funcToInterMap</name></member>
      <member refid="class_s_v_f_1_1_intra_disjoint_m_r_g_1a4b05180c942c1d049e70f8050f4186f6" prot="private" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>funcToPtsMap</name></member>
      <member refid="class_s_v_f_1_1_intra_disjoint_m_r_g_1ad59c11753db0b310246418df4c62f639" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>FunToInterMap</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a090070379a09460aef0c07270d32d27b" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>FunToMRsMap</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1ab01e492f002c73e2c89eb0b4c8f9647d" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>FunToNodeBSMap</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a71b584c7e0feb3014ad5f74eb31467bb" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>FunToPointsToMap</name></member>
      <member refid="class_s_v_f_1_1_intra_disjoint_m_r_g_1a824dec1bb1df5052252e7fe0dd55a894" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>FunToPtsMap</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a4f65593325e4391333fa1b0bedbffc4a" prot="public" virt="virtual"><scope>SVF::IntraDisjointMRG</scope><name>generateMRs</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a6426e7a9a6324b8b2f8a9bcf4aab1fc1" prot="protected" virt="virtual"><scope>SVF::IntraDisjointMRG</scope><name>getAliasMemRegions</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1acb78098bf1fc8c3a80720a3dff3a0a1d" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getCallSiteModMRSet</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a7ede01d58bb2490ded5895ca5bd45948" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getCallSiteRefMRSet</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a3121380139c7ae96d2045d66203253b6" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getFunction</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a64ba36ddcd304f6543e416c552763879" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getFunMRSet</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1ad8333efeda532f0d403352ad6a4987e9" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getFunToPointsToList</name></member>
      <member refid="class_s_v_f_1_1_intra_disjoint_m_r_g_1aa8c653e895ff0889615cdbf349be7652" prot="private" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getIntersList</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a5cf5ae60ad6028809088f3c842afde9d" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getLoadMRSet</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a1658aacb68aacb4785266263c1641a6a" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getModInfoForCall</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a455e0ba173141ac8ce76a655ac52205f" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getModRefInfo</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a9f1d1604fb884e5c99702556915396f9" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getModRefInfo</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a83f957962bf3c7621661ce87b095e841" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getModRefInfo</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1aebd6abbf574392abce426dc796d2ee56" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getModSideEffectOfCallSite</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a7d47fbc3dbe8fd19ca5e4210bdecf914" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getModSideEffectOfFunction</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a7ecde80ed05d425a19bf7fe0c5feff84" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getMR</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1ad34e796ebc49f5749de39e81374dc7a7" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getMRNum</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a1f69924c587c4e68a029fd4e86cffacf" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getMRSet</name></member>
      <member refid="class_s_v_f_1_1_intra_disjoint_m_r_g_1a8a1c8f676758ba6193bc683d10126175" prot="protected" virt="virtual"><scope>SVF::IntraDisjointMRG</scope><name>getMRsForCallSiteRef</name></member>
      <member refid="class_s_v_f_1_1_intra_disjoint_m_r_g_1aa1395f921e2a6e2607a6887f134cb63f" prot="protected" virt="virtual"><scope>SVF::IntraDisjointMRG</scope><name>getMRsForLoad</name></member>
      <member refid="class_s_v_f_1_1_intra_disjoint_m_r_g_1a9caabaac320e8a28bb7176f8da285f1f" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getMRsForLoadFromInterList</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a2eda764e59d9b5e7620d2cf26562615a" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getPAGEdgesFromInst</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a6d86c8ebe87cb54f39e52daa7ffb0e2e" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getPointsToList</name></member>
      <member refid="class_s_v_f_1_1_intra_disjoint_m_r_g_1ae3c857c056f4e6e863843bafba7fdea1" prot="private" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getPtsSubSetMap</name></member>
      <member refid="class_s_v_f_1_1_intra_disjoint_m_r_g_1ad0640ef6e02d9a90964ca495c0fd8f53" prot="private" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getPtsSubSetMap</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1afc17f566f57656cf17c08665602b4849" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getRefInfoForCall</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1ae2cc7d7d6ab427acb0352b388c7a4acc" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getRefSideEffectOfCallSite</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1ac0007c8808654ca74feef0d8568378b9" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getRefSideEffectOfFunction</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a2e039a855c8e421e80cc7b015211a192" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getRepPointsTo</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1ac409bbee6bf9deef7e31233a05054ee2" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>getStoreMRSet</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a123a2ea51b04f1398b9ee66567f5014a" prot="protected" virt="virtual"><scope>SVF::IntraDisjointMRG</scope><name>handleCallsiteModRef</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a1cb94c8a0379eb30c99f0c3cb2bfebaf" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>hasCPtsList</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a8868281e5f5b5f3a83acf8568971ad40" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>hasModMRSet</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a07dc868039c5e2764b3cc34faff6d94a" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>hasModSideEffectOfCallSite</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1abe76a16b9eedc9f8ffca6bc39cfb5c7e" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>hasPAGEdgeList</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1aeed8bcf54d2a72c640e464e256249630" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>hasRefMRSet</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1ac91b6f0f33a95ba35cc23e0e4657732a" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>hasRefSideEffectOfCallSite</name></member>
      <member refid="class_s_v_f_1_1_intra_disjoint_m_r_g_1ae4bc9b653e15ce876579741e91a463ae" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>IntraDisjointMRG</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1acd1759ce72edc748e6628d7e82458473" prot="protected" virt="virtual"><scope>SVF::IntraDisjointMRG</scope><name>isAliasedMR</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a72f55ad36f4ce46c5eee4bf0ce736cee" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>LoadsToMRsMap</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1af500450901135fd31ceb2ab497ca1086" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>LoadsToPointsToMap</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1af94bd8155a23273aab2396334d905119" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>memRegSet</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1adc9d530e6f010596d91cd3711dc1358b" prot="protected" virt="virtual"><scope>SVF::IntraDisjointMRG</scope><name>modRefAnalysis</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a1023eb17f1a46eee9a948490a4c8fdd5" prot="protected" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>MRGenerator</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a98ac3bf264e6a85d172c2c4264ea908f" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>MRSet</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1ab075a7c7fbc60f678b3fee8bbc06194d" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>NodeToPTSSMap</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a1715322c61a3f41f1a093098591869d4" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>PAGEdgeList</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a82be01b460a498c07fb6a8aba853ed31" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>PAGEdgeToFunMap</name></member>
      <member refid="class_s_v_f_1_1_intra_disjoint_m_r_g_1a6d2434f0e3a318b89b7b9fa4f5613b64" prot="protected" virt="virtual"><scope>SVF::IntraDisjointMRG</scope><name>partitionMRs</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a2c58aadbebb9daf5a0be3926b3997013" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>PointsToList</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a0984b63a3e159b4825e4ffd2fcfb6ca4" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>PtsToRepPtsSetMap</name></member>
      <member refid="class_s_v_f_1_1_intra_disjoint_m_r_g_1a95e5cc07c8e1838f9336c6a2f0aa941a" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>PtsToSubPtsMap</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1af8d52e6c9884c6e1abc6dbcbc5e32629" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>SCC</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a4d20ddfe5cb90d91fd86276a3f010b87" prot="protected" virt="virtual"><scope>SVF::IntraDisjointMRG</scope><name>sortPointsTo</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a9d2221818297a7abeb8d8736093105d0" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>StoresToMRsMap</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a4e246650818afd8be99a5ed6e23c4cd7" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>StoresToPointsToMap</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a9c1da53188729eb743e1a33bbad87af7" prot="protected" virt="virtual"><scope>SVF::IntraDisjointMRG</scope><name>updateAliasMRs</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a68d50c752252bd40c402c7b99b95f0fc" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>WorkList</name></member>
      <member refid="class_s_v_f_1_1_intra_disjoint_m_r_g_1ad92695f6ff2cb62f58b48d68b0b6fb0e" prot="public" virt="non-virtual"><scope>SVF::IntraDisjointMRG</scope><name>~IntraDisjointMRG</name></member>
      <member refid="class_s_v_f_1_1_m_r_generator_1a46e08638c8b5e6f6755de045c94862c4" prot="public" virt="virtual"><scope>SVF::IntraDisjointMRG</scope><name>~MRGenerator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
