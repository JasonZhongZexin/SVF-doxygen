<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structllvm_1_1_d_o_t_graph_traits_3_01_p_a_g_01_5_01_4" kind="struct" language="C++" prot="public">
    <compoundname>llvm::DOTGraphTraits&lt; PAG * &gt;</compoundname>
    <basecompoundref prot="public" virt="non-virtual">DefaultDOTGraphTraits</basecompoundref>
    <derivedcompoundref refid="structllvm_1_1_d_o_t_graph_traits_3_01_constraint_graph_01_5_01_4" prot="public" virt="non-virtual">llvm::DOTGraphTraits&lt; ConstraintGraph * &gt;</derivedcompoundref>
    <derivedcompoundref refid="structllvm_1_1_d_o_t_graph_traits_3_01_i_c_f_g_01_5_01_4" prot="public" virt="non-virtual">llvm::DOTGraphTraits&lt; ICFG * &gt;</derivedcompoundref>
    <derivedcompoundref refid="structllvm_1_1_d_o_t_graph_traits_3_01_offline_cons_g_01_5_01_4" prot="public" virt="non-virtual">llvm::DOTGraphTraits&lt; OfflineConsG * &gt;</derivedcompoundref>
    <derivedcompoundref refid="structllvm_1_1_d_o_t_graph_traits_3_01_s_v_f_g_01_5_01_4" prot="public" virt="non-virtual">llvm::DOTGraphTraits&lt; SVFG * &gt;</derivedcompoundref>
    <derivedcompoundref refid="structllvm_1_1_d_o_t_graph_traits_3_01_v_f_g_01_5_01_4" prot="public" virt="non-virtual">llvm::DOTGraphTraits&lt; VFG * &gt;</derivedcompoundref>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structllvm_1_1_d_o_t_graph_traits_3_01_p_a_g_01_5_01_4_1a79ab044136b3eb04258c92dc41c62140" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_p_a_g_node" kindref="compound">PAGNode</ref></type>
        <definition>typedef PAGNode llvm::DOTGraphTraits&lt; PAG * &gt;::NodeType</definition>
        <argsstring></argsstring>
        <name>NodeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Graphs/PAG.cpp" line="1030" column="21" bodyfile="lib/Graphs/PAG.cpp" bodystart="1030" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structllvm_1_1_d_o_t_graph_traits_3_01_p_a_g_01_5_01_4_1a3101c843232b1f228a9af0e464c2049b" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_node_1a2f5471985dfe62bc9ded830a693ab153" kindref="member">NodeType::iterator</ref></type>
        <definition>typedef NodeType::iterator llvm::DOTGraphTraits&lt; PAG * &gt;::ChildIteratorType</definition>
        <argsstring></argsstring>
        <name>ChildIteratorType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Graphs/PAG.cpp" line="1031" column="32" bodyfile="lib/Graphs/PAG.cpp" bodystart="1031" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structllvm_1_1_d_o_t_graph_traits_3_01_p_a_g_01_5_01_4_1af1d81546fa4fbc35deedad6bfb01a006" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>llvm::DOTGraphTraits&lt; PAG * &gt;::DOTGraphTraits</definition>
        <argsstring>(bool isSimple=false)</argsstring>
        <name>DOTGraphTraits</name>
        <param>
          <type>bool</type>
          <declname>isSimple</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Graphs/PAG.cpp" line="1032" column="5" bodyfile="lib/Graphs/PAG.cpp" bodystart="1032" bodyend="1035"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structllvm_1_1_d_o_t_graph_traits_3_01_p_a_g_01_5_01_4_1a13511a8b9de98389694c33e5895588a7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string llvm::DOTGraphTraits&lt; PAG * &gt;::getGraphName</definition>
        <argsstring>(PAG *graph)</argsstring>
        <name>getGraphName</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> *</type>
          <declname>graph</declname>
        </param>
        <briefdescription>
<para>Return name of the graph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Graphs/PAG.cpp" line="1038" column="24" bodyfile="lib/Graphs/PAG.cpp" bodystart="1038" bodyend="1041"/>
      </memberdef>
      <memberdef kind="function" id="structllvm_1_1_d_o_t_graph_traits_3_01_p_a_g_01_5_01_4_1a0a1838869e7fa447739a594e549c983f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string llvm::DOTGraphTraits&lt; PAG * &gt;::getNodeLabel</definition>
        <argsstring>(PAGNode *node, PAG *)</argsstring>
        <name>getNodeLabel</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g_node" kindref="compound">PAGNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return label of a VFG node with two display mode Either you can choose to display the name of the value or the whole instruction </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Graphs/PAG.cpp" line="1045" column="24" bodyfile="lib/Graphs/PAG.cpp" bodystart="1045" bodyend="1059"/>
      </memberdef>
      <memberdef kind="function" id="structllvm_1_1_d_o_t_graph_traits_3_01_p_a_g_01_5_01_4_1aa5c1ce2e1eabe212edc58b9362fd1067" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string llvm::DOTGraphTraits&lt; PAG * &gt;::getNodeAttributes</definition>
        <argsstring>(PAGNode *node, PAG *)</argsstring>
        <name>getNodeAttributes</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g_node" kindref="compound">PAGNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Graphs/PAG.cpp" line="1061" column="24" bodyfile="lib/Graphs/PAG.cpp" bodystart="1061" bodyend="1096"/>
      </memberdef>
      <memberdef kind="function" id="structllvm_1_1_d_o_t_graph_traits_3_01_p_a_g_01_5_01_4_1af1457fbb243e106e3940dcb7f5f8f274" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class EdgeIter</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>static std::string llvm::DOTGraphTraits&lt; PAG * &gt;::getEdgeAttributes</definition>
        <argsstring>(PAGNode *, EdgeIter EI, PAG *)</argsstring>
        <name>getEdgeAttributes</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g_node" kindref="compound">PAGNode</ref> *</type>
        </param>
        <param>
          <type>EdgeIter</type>
          <declname>EI</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Graphs/PAG.cpp" line="1099" column="24" bodyfile="lib/Graphs/PAG.cpp" bodystart="1099" bodyend="1154"/>
      </memberdef>
      <memberdef kind="function" id="structllvm_1_1_d_o_t_graph_traits_3_01_p_a_g_01_5_01_4_1a3bf6fe67ecbf1dd82879ff15bfd87140" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class EdgeIter</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>static std::string llvm::DOTGraphTraits&lt; PAG * &gt;::getEdgeSourceLabel</definition>
        <argsstring>(PAGNode *, EdgeIter EI)</argsstring>
        <name>getEdgeSourceLabel</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_a_g_node" kindref="compound">PAGNode</ref> *</type>
        </param>
        <param>
          <type>EdgeIter</type>
          <declname>EI</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Graphs/PAG.cpp" line="1157" column="24" bodyfile="lib/Graphs/PAG.cpp" bodystart="1157" bodyend="1172"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Write value flow graph into dot file for debugging </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>DefaultDOTGraphTraits</label>
      </node>
      <node id="7">
        <label>llvm::DOTGraphTraits&lt; VFG * &gt;</label>
        <link refid="structllvm_1_1_d_o_t_graph_traits_3_01_v_f_g_01_5_01_4"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>llvm::DOTGraphTraits&lt; PAG * &gt;</label>
        <link refid="structllvm_1_1_d_o_t_graph_traits_3_01_p_a_g_01_5_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>llvm::DOTGraphTraits&lt; ICFG * &gt;</label>
        <link refid="structllvm_1_1_d_o_t_graph_traits_3_01_i_c_f_g_01_5_01_4"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>llvm::DOTGraphTraits&lt; SVFG * &gt;</label>
        <link refid="structllvm_1_1_d_o_t_graph_traits_3_01_s_v_f_g_01_5_01_4"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>llvm::DOTGraphTraits&lt; ConstraintGraph * &gt;</label>
        <link refid="structllvm_1_1_d_o_t_graph_traits_3_01_constraint_graph_01_5_01_4"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>llvm::DOTGraphTraits&lt; OfflineConsG * &gt;</label>
        <link refid="structllvm_1_1_d_o_t_graph_traits_3_01_offline_cons_g_01_5_01_4"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>DefaultDOTGraphTraits</label>
      </node>
      <node id="1">
        <label>llvm::DOTGraphTraits&lt; PAG * &gt;</label>
        <link refid="structllvm_1_1_d_o_t_graph_traits_3_01_p_a_g_01_5_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="lib/Graphs/PAG.cpp" line="1027" column="1" bodyfile="lib/Graphs/PAG.cpp" bodystart="1028" bodyend="1173"/>
    <listofallmembers>
      <member refid="structllvm_1_1_d_o_t_graph_traits_3_01_p_a_g_01_5_01_4_1a3101c843232b1f228a9af0e464c2049b" prot="public" virt="non-virtual"><scope>llvm::DOTGraphTraits&lt; PAG * &gt;</scope><name>ChildIteratorType</name></member>
      <member refid="structllvm_1_1_d_o_t_graph_traits_3_01_p_a_g_01_5_01_4_1af1d81546fa4fbc35deedad6bfb01a006" prot="public" virt="non-virtual"><scope>llvm::DOTGraphTraits&lt; PAG * &gt;</scope><name>DOTGraphTraits</name></member>
      <member refid="structllvm_1_1_d_o_t_graph_traits_3_01_p_a_g_01_5_01_4_1af1457fbb243e106e3940dcb7f5f8f274" prot="public" virt="non-virtual"><scope>llvm::DOTGraphTraits&lt; PAG * &gt;</scope><name>getEdgeAttributes</name></member>
      <member refid="structllvm_1_1_d_o_t_graph_traits_3_01_p_a_g_01_5_01_4_1a3bf6fe67ecbf1dd82879ff15bfd87140" prot="public" virt="non-virtual"><scope>llvm::DOTGraphTraits&lt; PAG * &gt;</scope><name>getEdgeSourceLabel</name></member>
      <member refid="structllvm_1_1_d_o_t_graph_traits_3_01_p_a_g_01_5_01_4_1a13511a8b9de98389694c33e5895588a7" prot="public" virt="non-virtual"><scope>llvm::DOTGraphTraits&lt; PAG * &gt;</scope><name>getGraphName</name></member>
      <member refid="structllvm_1_1_d_o_t_graph_traits_3_01_p_a_g_01_5_01_4_1aa5c1ce2e1eabe212edc58b9362fd1067" prot="public" virt="non-virtual"><scope>llvm::DOTGraphTraits&lt; PAG * &gt;</scope><name>getNodeAttributes</name></member>
      <member refid="structllvm_1_1_d_o_t_graph_traits_3_01_p_a_g_01_5_01_4_1a0a1838869e7fa447739a594e549c983f" prot="public" virt="non-virtual"><scope>llvm::DOTGraphTraits&lt; PAG * &gt;</scope><name>getNodeLabel</name></member>
      <member refid="structllvm_1_1_d_o_t_graph_traits_3_01_p_a_g_01_5_01_4_1a79ab044136b3eb04258c92dc41c62140" prot="public" virt="non-virtual"><scope>llvm::DOTGraphTraits&lt; PAG * &gt;</scope><name>NodeType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
