<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_c_h_graph" xml:lang="en-US">
<title>SVF::CHGraph Class Reference</title>
<indexterm><primary>SVF::CHGraph</primary></indexterm>
<para>Inheritance diagram for SVF::CHGraph:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_c_h_graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a2a1da7f262a2f11653fb583154a93a22"/>enum <emphasis role="strong">RELATIONTYPE</emphasis> { <emphasis role="strong">CONSTRUCTOR</emphasis> = 0x1
, <emphasis role="strong">DESTRUCTOR</emphasis> = 0x2
 }</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1ad0f60c720b277c60ed8a8966189bb42b"/>typedef Set&lt; const <link linkend="_class_s_v_f_1_1_c_h_node">CHNode</link> * &gt; <emphasis role="strong">CHNodeSetTy</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1af1b638faf888898cdf168c25e008ab12"/>typedef <link linkend="_class_s_v_f_1_1_f_i_f_o_work_list">FIFOWorkList</link>&lt; const <link linkend="_class_s_v_f_1_1_c_h_node">CHNode</link> * &gt; <emphasis role="strong">WorkList</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1aedb20aca2fa11a070cfe28e14fd3552b"/>typedef Map&lt; std::string, CHNodeSetTy &gt; <emphasis role="strong">NameToCHNodesMap</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a3740a239432a5c7237109aa72aa28eff"/>typedef Map&lt; CallSite, CHNodeSetTy &gt; <emphasis role="strong">CallSiteToCHNodesMap</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1aefdf6c5fe8a26efce200e8225d463cac"/>typedef Map&lt; CallSite, VTableSet &gt; <emphasis role="strong">CallSiteToVTableSetMap</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a0397e5da88106dc8b4a1e207ae455e74"/>typedef Map&lt; CallSite, VFunSet &gt; <emphasis role="strong">CallSiteToVFunSetMap</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1afacd7d35dad4344a5c2551d951acb442"/><emphasis role="strong">CHGraph</emphasis> (<link linkend="_class_s_v_f_1_1_s_v_f_module">SVFModule</link> *svfModule)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1ae6b620ead0f214e72fbef9c26da3d5a0"/>void <emphasis role="strong">buildCHG</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1ab55b057a7be74ad03514dc15b6f01131"/>void <emphasis role="strong">buildInternalMaps</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a185d0eae7e361128e8dbbe47fc18051b"/>void <emphasis role="strong">buildCHGNodes</emphasis> (const GlobalValue *V)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1aa7280c8102df6ee625cbe1accba6f09f"/>void <emphasis role="strong">buildCHGNodes</emphasis> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *F)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a57062fb6b3d22d98e5ef564eaff84b2e"/>void <emphasis role="strong">buildCHGEdges</emphasis> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *F)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1aba5986ebcbba17f76202d5d14f35585f"/>void <emphasis role="strong">connectInheritEdgeViaCall</emphasis> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *caller, CallSite cs)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a9b7ecdcab366627a2dd636430f0a3b4b"/>void <emphasis role="strong">connectInheritEdgeViaStore</emphasis> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *caller, const StoreInst *store)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a3867db3e76f068bd8c4399b103dcd0b7"/>void <emphasis role="strong">addEdge</emphasis> (const std::string className, const std::string baseClassName, CHEdge::CHEDGETYPE edgeType)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a7beec68a60036c93a741a7152e8198b6"/><link linkend="_class_s_v_f_1_1_c_h_node">CHNode</link> * <emphasis role="strong">getNode</emphasis> (const std::string name) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a39a7a8f6a4b9bb03523f190ce7b91e58"/><link linkend="_class_s_v_f_1_1_c_h_node">CHNode</link> * <emphasis role="strong">createNode</emphasis> (const std::string name)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a3468ae9cbcff4c525c627ddb7a416cda"/>void <emphasis role="strong">buildClassNameToAncestorsDescendantsMap</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1aa54643023932a31697840cbb79be52e4"/>void <emphasis role="strong">buildVirtualFunctionToIDMap</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a71e74fc9c9a27cd354aa113801ed416f"/>void <emphasis role="strong">buildCSToCHAVtblsAndVfnsMap</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a315f0dc381d62f99bede32f08aa9cde8"/>void <emphasis role="strong">readInheritanceMetadataFromModule</emphasis> (const Module &amp;M)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a0685bd653851a903f765e21aec0fdbd1"/>void <emphasis role="strong">analyzeVTables</emphasis> (const Module &amp;M)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1aef3ce1727cb91581d6cd1123cf767cfb"/>const CHGraph::CHNodeSetTy &amp; <emphasis role="strong">getInstancesAndDescendants</emphasis> (const std::string className)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a687d4d05b4c7db21d85256cd03efe08b"/>const CHNodeSetTy &amp; <emphasis role="strong">getCSClasses</emphasis> (CallSite cs)</para>
</listitem>
            <listitem><para>void <link linkend="_class_s_v_f_1_1_c_h_graph_1ac5f5646db24455609cd86c421774dd3e">getVFnsFromVtbls</link> (CallSite cs, const VTableSet &amp;vtbls, VFunSet &amp;virtualFunctions) override</para>
</listitem>
            <listitem><para>void <link linkend="_class_s_v_f_1_1_c_h_graph_1a29351163649618332394fc72cc35212f">dump</link> (const std::string &amp;filename)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1ae382d5bab69843bdb9424c4c6ff94140"/>void <emphasis role="strong">printCH</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a4ac546af1020af930f192460a7d40e4f"/>s32_t <emphasis role="strong">getVirtualFunctionID</emphasis> (const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> *vfn) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1ab53198e1a85df15f04ed601f3346ef85"/>const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> * <emphasis role="strong">getVirtualFunctionBasedonID</emphasis> (s32_t id) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a5ee7e559425045f3af5c35ea6d6f03ee"/>void <emphasis role="strong">addInstances</emphasis> (const std::string templateName, <link linkend="_class_s_v_f_1_1_c_h_node">CHNode</link> *node)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a26f89a9b269cad3fc894110d25598715"/>const CHNodeSetTy &amp; <emphasis role="strong">getDescendants</emphasis> (const std::string className)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a894a69fa143d3f460d433646a0521b6f"/>const CHNodeSetTy &amp; <emphasis role="strong">getInstances</emphasis> (const std::string className)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1acd4907aa926a4c7fdc3964700d721f79"/>bool <emphasis role="strong">csHasVtblsBasedonCHA</emphasis> (CallSite cs) override</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a885a81b08477e6ccdd7df98d249b8c39"/>bool <emphasis role="strong">csHasVFnsBasedonCHA</emphasis> (CallSite cs) override</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a9878df891d2e20d09b65096060d2c148"/>const VTableSet &amp; <emphasis role="strong">getCSVtblsBasedonCHA</emphasis> (CallSite cs) override</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a1c0ca4e6a466ad317daf00a6c7de8e31"/>const VFunSet &amp; <emphasis role="strong">getCSVFsBasedonCHA</emphasis> (CallSite cs) override</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1ae7e9f1a3c524d80c77b2a75f877dc2d6"/>static bool <emphasis role="strong">classof</emphasis> (const <link linkend="_class_s_v_f_1_1_common_c_h_graph">CommonCHGraph</link> *chg)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_c_h_graph_1a29351163649618332394fc72cc35212f"/>    <section>
    <title>dump()</title>
<indexterm><primary>dump</primary><secondary>SVF::CHGraph</secondary></indexterm>
<indexterm><primary>SVF::CHGraph</primary><secondary>dump</secondary></indexterm>
<para><computeroutput>void CHGraph::dump (const std::string &amp; filename)</computeroutput></para>
<para>Dump call graph into dot file </para>
    </section><anchor xml:id="_class_s_v_f_1_1_c_h_graph_1ac5f5646db24455609cd86c421774dd3e"/>    <section>
    <title>getVFnsFromVtbls()</title>
<indexterm><primary>getVFnsFromVtbls</primary><secondary>SVF::CHGraph</secondary></indexterm>
<indexterm><primary>SVF::CHGraph</primary><secondary>getVFnsFromVtbls</secondary></indexterm>
<para><computeroutput>void CHGraph::getVFnsFromVtbls (CallSite cs, const VTableSet &amp; vtbls, VFunSet &amp; virtualFunctions)<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>get target virtual functions</para>

<para>get the function name of the virtual callsite</para>
<para>
Implements <link linkend="_class_s_v_f_1_1_common_c_h_graph">SVF::CommonCHGraph</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/SVF-FE/CHG.hlib/SVF-FE/CHG.cpp</section>
</section>
