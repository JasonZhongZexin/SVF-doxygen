<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_s_v_f_g_builder" kind="class" language="C++" prot="public">
    <compoundname>SVF::SVFGBuilder</compoundname>
    <derivedcompoundref refid="class_s_v_f_1_1_m_t_a_s_v_f_g_builder" prot="public" virt="non-virtual">SVF::MTASVFGBuilder</derivedcompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_saber_s_v_f_g_builder" prot="public" virt="non-virtual">SVF::SaberSVFGBuilder</derivedcompoundref>
    <includes refid="_s_v_f_g_builder_8h" local="no">SVFGBuilder.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_s_v_f_g_builder_1a77bc88750823c8a0d19aad002e56ce07" prot="public" static="no">
        <type>PointerAnalysis::CallSiteSet</type>
        <definition>typedef PointerAnalysis::CallSiteSet SVF::SVFGBuilder::CallSiteSet</definition>
        <argsstring></argsstring>
        <name>CallSiteSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="62" column="42" bodyfile="include/MSSA/SVFGBuilder.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_s_v_f_g_builder_1ae12f803f5ccdb47232043c8c5ae129bf" prot="public" static="no">
        <type>PointerAnalysis::CallEdgeMap</type>
        <definition>typedef PointerAnalysis::CallEdgeMap SVF::SVFGBuilder::CallEdgeMap</definition>
        <argsstring></argsstring>
        <name>CallEdgeMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="63" column="42" bodyfile="include/MSSA/SVFGBuilder.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_s_v_f_g_builder_1a1f8e21823ddc9eb19e1fe18d9b2b8280" prot="public" static="no">
        <type>PointerAnalysis::FunctionSet</type>
        <definition>typedef PointerAnalysis::FunctionSet SVF::SVFGBuilder::FunctionSet</definition>
        <argsstring></argsstring>
        <name>FunctionSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="64" column="42" bodyfile="include/MSSA/SVFGBuilder.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_s_v_f_g_builder_1a640158fff237cb5afabdf1c5946550e0" prot="public" static="no">
        <type>SVFG::SVFGEdgeSetTy</type>
        <definition>typedef SVFG::SVFGEdgeSetTy SVF::SVFGBuilder::SVFGEdgeSet</definition>
        <argsstring></argsstring>
        <name>SVFGEdgeSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="65" column="33" bodyfile="include/MSSA/SVFGBuilder.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_s_v_f_g_builder_1a31b754a303116f33d679dfcd886c4bed" prot="public" static="yes" mutable="no">
        <type><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> *</type>
        <definition>SVFG * SVFGBuilder::globalSvfg</definition>
        <argsstring></argsstring>
        <name>globalSvfg</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="73" column="17" bodyfile="include/MSSA/SVFGBuilder.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_s_v_f_g_builder_1aa9b432dd72f1a39be142c4e2c2d51247" prot="protected" static="no" mutable="no">
        <type>SVFGEdgeSet</type>
        <definition>SVFGEdgeSet SVF::SVFGBuilder::vfEdgesAtIndCallSite</definition>
        <argsstring></argsstring>
        <name>vfEdgesAtIndCallSite</name>
        <briefdescription>
<para><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> Edges connected at indirect call/ret sites. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="117" column="17" bodyfile="include/MSSA/SVFGBuilder.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_s_v_f_g_builder_1a26bc3b9c07472e454bc567cd8746caef" prot="protected" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> *</type>
        <definition>SVFG* SVF::SVFGBuilder::svfg</definition>
        <argsstring></argsstring>
        <name>svfg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="118" column="10" bodyfile="include/MSSA/SVFGBuilder.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_s_v_f_g_builder_1a70de38086437635d2e44d2a0c9fdded9" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SVF::SVFGBuilder::SVFGWithIndCall</definition>
        <argsstring></argsstring>
        <name>SVFGWithIndCall</name>
        <briefdescription>
<para><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> with precomputed indirect call edges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="120" column="10" bodyfile="include/MSSA/SVFGBuilder.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_s_v_f_g_builder_1a003c6d9e13e5f73e0648d97400f1854e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::SVFGBuilder::SVFGBuilder</definition>
        <argsstring>(bool _SVFGWithIndCall=false)</argsstring>
        <name>SVFGBuilder</name>
        <param>
          <type>bool</type>
          <declname>_SVFGWithIndCall</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="68" column="5" bodyfile="include/MSSA/SVFGBuilder.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_v_f_g_builder_1af45232cbcffcaa4c7e05dab96553068f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::SVFGBuilder::~SVFGBuilder</definition>
        <argsstring>()</argsstring>
        <name>~SVFGBuilder</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="71" column="13" bodyfile="include/MSSA/SVFGBuilder.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_v_f_g_builder_1ab7353191edd06568e2598177d253c1d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> *</type>
        <definition>SVFG * SVFGBuilder::buildPTROnlySVFG</definition>
        <argsstring>(BVDataPTAImpl *pta)</argsstring>
        <name>buildPTROnlySVFG</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl" kindref="compound">BVDataPTAImpl</ref> *</type>
          <declname>pta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="75" column="10" bodyfile="lib/MSSA/SVFGBuilder.cpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_v_f_g_builder_1a3b162da8dfb123cada7a13ce0c154a46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> *</type>
        <definition>SVFG * SVFGBuilder::buildPTROnlySVFGWithoutOPT</definition>
        <argsstring>(BVDataPTAImpl *pta)</argsstring>
        <name>buildPTROnlySVFGWithoutOPT</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl" kindref="compound">BVDataPTAImpl</ref> *</type>
          <declname>pta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="76" column="10" bodyfile="lib/MSSA/SVFGBuilder.cpp" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_v_f_g_builder_1a54a713e3989597b11cee70864d0197bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> *</type>
        <definition>SVFG * SVFGBuilder::buildFullSVFG</definition>
        <argsstring>(BVDataPTAImpl *pta)</argsstring>
        <name>buildFullSVFG</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl" kindref="compound">BVDataPTAImpl</ref> *</type>
          <declname>pta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="77" column="10" bodyfile="lib/MSSA/SVFGBuilder.cpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_v_f_g_builder_1a7a43ae081645eb74fa48c136548f0809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> *</type>
        <definition>SVFG * SVFGBuilder::buildFullSVFGWithoutOPT</definition>
        <argsstring>(BVDataPTAImpl *pta)</argsstring>
        <name>buildFullSVFGWithoutOPT</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl" kindref="compound">BVDataPTAImpl</ref> *</type>
          <declname>pta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="78" column="10" bodyfile="lib/MSSA/SVFGBuilder.cpp" bodystart="71" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_v_f_g_builder_1ad70dc4134a6290223b4168bde146b6d5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> *</type>
        <definition>SVFG* SVF::SVFGBuilder::getSVFG</definition>
        <argsstring>() const</argsstring>
        <name>getSVFG</name>
        <briefdescription>
<para>Get <ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="88" column="17" bodyfile="include/MSSA/SVFGBuilder.h" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_v_f_g_builder_1a3f8fc56d5190ea59d06906b359640dae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::SVFGBuilder::markValidVFEdge</definition>
        <argsstring>(SVFGEdgeSet &amp;edges)</argsstring>
        <name>markValidVFEdge</name>
        <param>
          <type>SVFGEdgeSet &amp;</type>
          <declname>edges</declname>
        </param>
        <briefdescription>
<para>Mark feasible VF edge by removing it from set vfEdgesAtIndCallSite. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="94" column="17" bodyfile="include/MSSA/SVFGBuilder.h" bodystart="94" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_v_f_g_builder_1a9e8da6a516ed6598c66d81a0891fbb6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::SVFGBuilder::isSpuriousVFEdgeAtIndCallSite</definition>
        <argsstring>(const SVFGEdge *edge)</argsstring>
        <name>isSpuriousVFEdgeAtIndCallSite</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_v_f_g_edge" kindref="compound">SVFGEdge</ref> *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
<para>Return true if this is an VF Edge pre-connected by <ref refid="class_s_v_f_1_1_andersen" kindref="compound">Andersen</ref>&apos;s analysis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="100" column="17" bodyfile="include/MSSA/SVFGBuilder.h" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_v_f_g_builder_1a49cee21be46d6a3f65eec638714038ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_s_v_f_1_1_mem_s_s_a" kindref="compound">MemSSA</ref> *</type>
        <definition>MemSSA * SVFGBuilder::buildMSSA</definition>
        <argsstring>(BVDataPTAImpl *pta, bool ptrOnlyMSSA)</argsstring>
        <name>buildMSSA</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl" kindref="compound">BVDataPTAImpl</ref> *</type>
          <declname>pta</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ptrOnlyMSSA</declname>
        </param>
        <briefdescription>
<para>Build Memory SSA. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="106" column="20" bodyfile="lib/MSSA/SVFGBuilder.cpp" bodystart="137" bodyend="166"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_s_v_f_1_1_s_v_f_g_builder_1a9767f95253f02901da757076e3010b37" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void SVF::SVFGBuilder::releaseSVFG</definition>
        <argsstring>()</argsstring>
        <name>releaseSVFG</name>
        <briefdescription>
<para>Clean up. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="81" column="17" bodyfile="include/MSSA/SVFGBuilder.h" bodystart="81" bodyend="86"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_s_v_f_1_1_s_v_f_g_builder_1a47591192260ddc3ff0717430f127cc95" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> *</type>
        <definition>SVFG * SVFGBuilder::build</definition>
        <argsstring>(BVDataPTAImpl *pta, VFG::VFGK kind)</argsstring>
        <name>build</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_b_v_data_p_t_a_impl" kindref="compound">BVDataPTAImpl</ref> *</type>
          <declname>pta</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_v_f_g_1ac2e2f555975063da3fa1932ac35802c6" kindref="member">VFG::VFGK</ref></type>
          <declname>kind</declname>
        </param>
        <briefdescription>
<para>Create a DDA <ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref>. By default actualOut and FormalIN are removed, unless withAOFI is set true. </para>
        </briefdescription>
        <detaileddescription>
<para>Create DDA <ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref>. </para>
        </detaileddescription>
        <inbodydescription>
<para>Note that we use callgraph from andersen analysis here</para>
<para>Update call graph using pre-analysis results</para>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="110" column="10" bodyfile="lib/MSSA/SVFGBuilder.cpp" bodystart="90" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_v_f_g_builder_1ae2d84f7527de200a2f269dc1c056a305" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SVFGBuilder::buildSVFG</definition>
        <argsstring>()</argsstring>
        <name>buildSVFG</name>
        <reimplementedby refid="class_s_v_f_1_1_m_t_a_s_v_f_g_builder_1a3b75cd10a314c920669cd0d4790e1a16">buildSVFG</reimplementedby>
        <reimplementedby refid="class_s_v_f_1_1_saber_s_v_f_g_builder_1a4d70d1413f42f30437d8eb45ff00b6f6">buildSVFG</reimplementedby>
        <briefdescription>
<para>Can be rewritten by subclasses. </para>
        </briefdescription>
        <detaileddescription>
<para>Create <ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="112" column="18" bodyfile="lib/MSSA/SVFGBuilder.cpp" bodystart="81" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_s_v_f_g_builder_1a6e08e6a99f7e743abf35e603e35e54f5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SVFGBuilder::releaseMemory</definition>
        <argsstring>()</argsstring>
        <name>releaseMemory</name>
        <briefdescription>
<para>Release global <ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Release memory </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MSSA/SVFGBuilder.h" line="114" column="18" bodyfile="lib/MSSA/SVFGBuilder.cpp" bodystart="132" bodyend="135"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_s_v_f_1_1_s_v_f_g" kindref="compound">SVFG</ref> Builder </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>SVF::MTASVFGBuilder</label>
        <link refid="class_s_v_f_1_1_m_t_a_s_v_f_g_builder"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SVF::SaberSVFGBuilder</label>
        <link refid="class_s_v_f_1_1_saber_s_v_f_g_builder"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>SVF::SVFGBuilder</label>
        <link refid="class_s_v_f_1_1_s_v_f_g_builder"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="21">
        <label>SVF::MRGenerator</label>
        <link refid="class_s_v_f_1_1_m_r_generator"/>
      </node>
      <node id="15">
        <label>GenericICFGTy</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
      <node id="6">
        <label>GenericCallGraphTy</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
      <node id="7">
        <label>SVF::PAG</label>
        <link refid="class_s_v_f_1_1_p_a_g"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>SVF::SCCDetection&lt; GraphType &gt;</label>
        <link refid="class_s_v_f_1_1_s_c_c_detection"/>
      </node>
      <node id="10">
        <label>SVF::PTAStat</label>
        <link refid="class_s_v_f_1_1_p_t_a_stat"/>
      </node>
      <node id="16">
        <label>SVF::CommonCHGraph</label>
        <link refid="class_s_v_f_1_1_common_c_h_graph"/>
      </node>
      <node id="18">
        <label>SVF::MemSSA</label>
        <link refid="class_s_v_f_1_1_mem_s_s_a"/>
        <childnode refid="19" relation="usage">
          <edgelabel>pta</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>stat</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>mrGen</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>SVF::SVFG</label>
        <link refid="class_s_v_f_1_1_s_v_f_g"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>stat</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>pta</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>mssa</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>SVF::ICFG</label>
        <link refid="class_s_v_f_1_1_i_c_f_g"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>SVF::MemSSAStat</label>
        <link refid="class_s_v_f_1_1_mem_s_s_a_stat"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>SVF::GenericGraph&lt; PAGNode, PAGEdge &gt;</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
      <node id="13">
        <label>SVF::SVFModule</label>
        <link refid="class_s_v_f_1_1_s_v_f_module"/>
      </node>
      <node id="9">
        <label>SVF::SVFGStat</label>
        <link refid="class_s_v_f_1_1_s_v_f_g_stat"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>SVF::TypeSystem</label>
        <link refid="class_s_v_f_1_1_type_system"/>
      </node>
      <node id="1">
        <label>SVF::SVFGBuilder</label>
        <link refid="class_s_v_f_1_1_s_v_f_g_builder"/>
        <childnode refid="2" relation="usage">
          <edgelabel>globalSvfg</edgelabel>
          <edgelabel>svfg</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>SVF::VFG</label>
        <link refid="class_s_v_f_1_1_v_f_g"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>callgraph</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>pag</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>SVF::BVDataPTAImpl</label>
        <link refid="class_s_v_f_1_1_b_v_data_p_t_a_impl"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>SVF::PTACallGraph</label>
        <link refid="class_s_v_f_1_1_p_t_a_call_graph"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>GenericVFGTy</label>
        <link refid="class_s_v_f_1_1_generic_graph"/>
      </node>
      <node id="11">
        <label>SVF::PointerAnalysis</label>
        <link refid="class_s_v_f_1_1_pointer_analysis"/>
        <childnode refid="12" relation="usage">
          <edgelabel>callGraphSCC</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>svfMod</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>icfg</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>ptaCallGraph</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>chgraph</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>pag</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>typeSystem</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>stat</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/MSSA/SVFGBuilder.h" line="58" column="1" bodyfile="include/MSSA/SVFGBuilder.h" bodystart="59" bodyend="121"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1a47591192260ddc3ff0717430f127cc95" prot="protected" virt="non-virtual"><scope>SVF::SVFGBuilder</scope><name>build</name></member>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1a54a713e3989597b11cee70864d0197bd" prot="public" virt="non-virtual"><scope>SVF::SVFGBuilder</scope><name>buildFullSVFG</name></member>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1a7a43ae081645eb74fa48c136548f0809" prot="public" virt="non-virtual"><scope>SVF::SVFGBuilder</scope><name>buildFullSVFGWithoutOPT</name></member>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1a49cee21be46d6a3f65eec638714038ed" prot="public" virt="virtual"><scope>SVF::SVFGBuilder</scope><name>buildMSSA</name></member>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1ab7353191edd06568e2598177d253c1d9" prot="public" virt="non-virtual"><scope>SVF::SVFGBuilder</scope><name>buildPTROnlySVFG</name></member>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1a3b162da8dfb123cada7a13ce0c154a46" prot="public" virt="non-virtual"><scope>SVF::SVFGBuilder</scope><name>buildPTROnlySVFGWithoutOPT</name></member>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1ae2d84f7527de200a2f269dc1c056a305" prot="protected" virt="virtual"><scope>SVF::SVFGBuilder</scope><name>buildSVFG</name></member>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1ae12f803f5ccdb47232043c8c5ae129bf" prot="public" virt="non-virtual"><scope>SVF::SVFGBuilder</scope><name>CallEdgeMap</name></member>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1a77bc88750823c8a0d19aad002e56ce07" prot="public" virt="non-virtual"><scope>SVF::SVFGBuilder</scope><name>CallSiteSet</name></member>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1a1f8e21823ddc9eb19e1fe18d9b2b8280" prot="public" virt="non-virtual"><scope>SVF::SVFGBuilder</scope><name>FunctionSet</name></member>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1ad70dc4134a6290223b4168bde146b6d5" prot="public" virt="non-virtual"><scope>SVF::SVFGBuilder</scope><name>getSVFG</name></member>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1a31b754a303116f33d679dfcd886c4bed" prot="public" virt="non-virtual"><scope>SVF::SVFGBuilder</scope><name>globalSvfg</name></member>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1a9e8da6a516ed6598c66d81a0891fbb6e" prot="public" virt="non-virtual"><scope>SVF::SVFGBuilder</scope><name>isSpuriousVFEdgeAtIndCallSite</name></member>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1a3f8fc56d5190ea59d06906b359640dae" prot="public" virt="non-virtual"><scope>SVF::SVFGBuilder</scope><name>markValidVFEdge</name></member>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1a6e08e6a99f7e743abf35e603e35e54f5" prot="protected" virt="virtual"><scope>SVF::SVFGBuilder</scope><name>releaseMemory</name></member>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1a9767f95253f02901da757076e3010b37" prot="public" virt="non-virtual"><scope>SVF::SVFGBuilder</scope><name>releaseSVFG</name></member>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1a26bc3b9c07472e454bc567cd8746caef" prot="protected" virt="non-virtual"><scope>SVF::SVFGBuilder</scope><name>svfg</name></member>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1a003c6d9e13e5f73e0648d97400f1854e" prot="public" virt="non-virtual"><scope>SVF::SVFGBuilder</scope><name>SVFGBuilder</name></member>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1a640158fff237cb5afabdf1c5946550e0" prot="public" virt="non-virtual"><scope>SVF::SVFGBuilder</scope><name>SVFGEdgeSet</name></member>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1a70de38086437635d2e44d2a0c9fdded9" prot="protected" virt="non-virtual"><scope>SVF::SVFGBuilder</scope><name>SVFGWithIndCall</name></member>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1aa9b432dd72f1a39be142c4e2c2d51247" prot="protected" virt="non-virtual"><scope>SVF::SVFGBuilder</scope><name>vfEdgesAtIndCallSite</name></member>
      <member refid="class_s_v_f_1_1_s_v_f_g_builder_1af45232cbcffcaa4c7e05dab96553068f" prot="public" virt="virtual"><scope>SVF::SVFGBuilder</scope><name>~SVFGBuilder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
