<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_lock_validator" kind="class" language="C++" prot="public">
    <compoundname>SVF::LockValidator</compoundname>
    <basecompoundref refid="class_race_result_validator" prot="public" virt="non-virtual">RaceResultValidator</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_lock_validator_1a95595046d633fdb64f734e90d3366732" prot="private" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_lock_analysis" kindref="compound">LockAnalysis</ref> *</type>
        <definition>LockAnalysis* SVF::LockValidator::lsa</definition>
        <argsstring></argsstring>
        <name>lsa</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTA/LockAnalysis.cpp" line="33" column="18" bodyfile="lib/MTA/LockAnalysis.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_lock_validator_1afc611082b4fa264f9ebcd863caaeaf6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::LockValidator::LockValidator</definition>
        <argsstring>(LockAnalysis *ls)</argsstring>
        <name>LockValidator</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_lock_analysis" kindref="compound">LockAnalysis</ref> *</type>
          <declname>ls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTA/LockAnalysis.cpp" line="25" column="5" bodyfile="lib/MTA/LockAnalysis.cpp" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_lock_validator_1a3d3e1888559bff84928cb39bbf634d67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::LockValidator::protectedByCommonLocks</definition>
        <argsstring>(const Instruction *I1, const Instruction *I2)</argsstring>
        <name>protectedByCommonLocks</name>
        <param>
          <type>const Instruction *</type>
          <declname>I1</declname>
        </param>
        <param>
          <type>const Instruction *</type>
          <declname>I2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTA/LockAnalysis.cpp" line="28" column="10" bodyfile="lib/MTA/LockAnalysis.cpp" bodystart="28" bodyend="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>RaceResultValidator</label>
        <link refid="class_race_result_validator"/>
      </node>
      <node id="1">
        <label>SVF::LockValidator</label>
        <link refid="class_s_v_f_1_1_lock_validator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>RaceResultValidator</label>
        <link refid="class_race_result_validator"/>
      </node>
      <node id="1">
        <label>SVF::LockValidator</label>
        <link refid="class_s_v_f_1_1_lock_validator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="lib/MTA/LockAnalysis.cpp" line="22" column="1" bodyfile="lib/MTA/LockAnalysis.cpp" bodystart="23" bodyend="34"/>
    <listofallmembers>
      <member refid="class_race_result_validator_1a21e23f7f1b1bbb1775a41f6e4b7d8bd2" prot="public" virt="non-virtual"><scope>SVF::LockValidator</scope><name>analyze</name></member>
      <member refid="class_race_result_validator_1a3aa6ef4733150b1ea4ae396263e2d1e4" prot="protected" virt="non-virtual"><scope>SVF::LockValidator</scope><name>collectValidationTargets</name></member>
      <member refid="class_race_result_validator_1a4ae48756137dc202d48a4135251f6909" prot="protected" virt="non-virtual"><scope>SVF::LockValidator</scope><name>getOutput</name></member>
      <member refid="class_race_result_validator_1a45e68a2e6a11ccc2031de7fd1014770f" prot="public" virt="non-virtual"><scope>SVF::LockValidator</scope><name>hasValidationTarget</name></member>
      <member refid="class_race_result_validator_1aaedcd28861706a418fdaf7582ea0553b" prot="public" virt="non-virtual"><scope>SVF::LockValidator</scope><name>init</name></member>
      <member refid="class_s_v_f_1_1_lock_validator_1afc611082b4fa264f9ebcd863caaeaf6a" prot="public" virt="non-virtual"><scope>SVF::LockValidator</scope><name>LockValidator</name></member>
      <member refid="class_s_v_f_1_1_lock_validator_1a95595046d633fdb64f734e90d3366732" prot="private" virt="non-virtual"><scope>SVF::LockValidator</scope><name>lsa</name></member>
      <member refid="class_race_result_validator_1a90189d5d999fcad00a12821d620d6c59" prot="protected" virt="virtual"><scope>SVF::LockValidator</scope><name>mayAccessAliases</name></member>
      <member refid="class_race_result_validator_1ad27006fe8be713c8d51bbe4b66af913c" prot="protected" virt="virtual"><scope>SVF::LockValidator</scope><name>mayHappenInParallel</name></member>
      <member refid="class_race_result_validator_1a1d170ebf9afb5d00b4bd36cc2b415dbb" prot="protected" virt="virtual"><scope>SVF::LockValidator</scope><name>mayHaveDataRace</name></member>
      <member refid="class_s_v_f_1_1_lock_validator_1a3d3e1888559bff84928cb39bbf634d67" prot="public" virt="non-virtual"><scope>SVF::LockValidator</scope><name>protectedByCommonLocks</name></member>
      <member refid="class_race_result_validator_1ab4cb632afd825334aa69cee9790672fa" prot="protected" virt="virtual" ambiguityscope="RaceResultValidator::"><scope>SVF::LockValidator</scope><name>protectedByCommonLocks</name></member>
      <member refid="class_race_result_validator_1a640504d09fad1724b429abba7000d78a" prot="public" virt="non-virtual"><scope>SVF::LockValidator</scope><name>RC_FLAG</name></member>
      <member refid="class_race_result_validator_1ae218778896057b975597948a59a46607" prot="public" virt="non-virtual"><scope>SVF::LockValidator</scope><name>release</name></member>
      <member refid="class_race_result_validator_1a4327af2795a9aa336543d8b3c3a7bfdf" prot="protected" virt="non-virtual"><scope>SVF::LockValidator</scope><name>validateAll</name></member>
      <member refid="class_race_result_validator_1aba1a226c3fb9799c38eff0513d75c52a" prot="public" virt="virtual"><scope>SVF::LockValidator</scope><name>~RaceResultValidator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
