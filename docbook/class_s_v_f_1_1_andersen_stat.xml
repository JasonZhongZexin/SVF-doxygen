<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_andersen_stat" xml:lang="en-US">
<title>SVF::AndersenStat Class Reference</title>
<indexterm><primary>SVF::AndersenStat</primary></indexterm>
<para>
<computeroutput>#include &lt;WPAStat.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for SVF::AndersenStat:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_andersen_stat.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_s_v_f_1_1_andersen_stat_1a257d814ef3983c4f513d37161d376719">AndersenStat</link> (<link linkend="_class_s_v_f_1_1_andersen_base">AndersenBase</link> *p)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_s_v_f_1_1_andersen_stat_1a66fee1c0ee5781152a2d489f8857ad43">performStat</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_s_v_f_1_1_andersen_stat_1ae35507bebe6a1a9a64ab379473c85cad">collectCycleInfo</link> (<link linkend="_class_s_v_f_1_1_constraint_graph">ConstraintGraph</link> *consCG)</para>
</listitem>
            <listitem><para>void <link linkend="_class_s_v_f_1_1_andersen_stat_1a898f091cd9aeed4b0cf5b338b8a3b1d3">statNullPtr</link> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_stat_1a5ad75166a80052f9e6fdd14ff7c8b948"/>void <emphasis role="strong">constraintGraphStat</emphasis> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_stat_1a38dfd00f384eea7899a29b2ec32a0ded"/>u32_t <emphasis role="strong">_NumOfNullPtr</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_stat_1ab8f8152b5e6127f2d9bdcbd22083da67"/>u32_t <emphasis role="strong">_NumOfConstantPtr</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_stat_1a27d4e2bf145226f3c2b4d46fee2311e7"/>u32_t <emphasis role="strong">_NumOfBlackholePtr</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_stat_1a3f5739454b1f4e03b4388a4ba5730e15"/>static const char * <emphasis role="strong">CollapseTime</emphasis> = &quot;CollapseTime&quot;</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_stat_1a85960b98981d0514a72b40306a7f08d3"/>static u32_t <emphasis role="strong">_MaxPtsSize</emphasis> = 0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_stat_1a6e58c88a4118d368955dee5bbb0ccd21"/>static u32_t <emphasis role="strong">_NumOfCycles</emphasis> = 0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_stat_1afbd6b36ac1b0addb902fe8eb5643df83"/>static u32_t <emphasis role="strong">_NumOfPWCCycles</emphasis> = 0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_stat_1aa2e3a589d376de12a1cbfb0d1ebcacb9"/>static u32_t <emphasis role="strong">_NumOfNodesInCycles</emphasis> = 0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_stat_1ac16491cbf4bcd22dc1a8acd25db20e10"/>static u32_t <emphasis role="strong">_MaxNumOfNodesInSCC</emphasis> = 0</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Statistics of <link linkend="_class_s_v_f_1_1_andersen">Andersen</link>&apos;s analysis </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_andersen_stat_1a257d814ef3983c4f513d37161d376719"/>    <section>
    <title>AndersenStat()</title>
<indexterm><primary>AndersenStat</primary><secondary>SVF::AndersenStat</secondary></indexterm>
<indexterm><primary>SVF::AndersenStat</primary><secondary>AndersenStat</secondary></indexterm>
<para><computeroutput>AndersenStat::AndersenStat (<link linkend="_class_s_v_f_1_1_andersen_base">AndersenBase</link> * p)</computeroutput></para>
<para>Constructor </para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_andersen_stat_1ae35507bebe6a1a9a64ab379473c85cad"/>    <section>
    <title>collectCycleInfo()</title>
<indexterm><primary>collectCycleInfo</primary><secondary>SVF::AndersenStat</secondary></indexterm>
<indexterm><primary>SVF::AndersenStat</primary><secondary>collectCycleInfo</secondary></indexterm>
<para><computeroutput>void AndersenStat::collectCycleInfo (<link linkend="_class_s_v_f_1_1_constraint_graph">ConstraintGraph</link> * consCG)</computeroutput></para>
<para>Collect cycle information </para>
    </section><anchor xml:id="_class_s_v_f_1_1_andersen_stat_1a66fee1c0ee5781152a2d489f8857ad43"/>    <section>
    <title>performStat()</title>
<indexterm><primary>performStat</primary><secondary>SVF::AndersenStat</secondary></indexterm>
<indexterm><primary>SVF::AndersenStat</primary><secondary>performStat</secondary></indexterm>
<para><computeroutput>void AndersenStat::performStat ( )<computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Start here </para>
<para>
Reimplemented from <link linkend="_class_s_v_f_1_1_p_t_a_stat">SVF::PTAStat</link>.</para>
    </section><anchor xml:id="_class_s_v_f_1_1_andersen_stat_1a898f091cd9aeed4b0cf5b338b8a3b1d3"/>    <section>
    <title>statNullPtr()</title>
<indexterm><primary>statNullPtr</primary><secondary>SVF::AndersenStat</secondary></indexterm>
<indexterm><primary>SVF::AndersenStat</primary><secondary>statNullPtr</secondary></indexterm>
<para><computeroutput>void AndersenStat::statNullPtr ( )</computeroutput></para>
<para>Stat null pointers </para>

<para>TODO: change the condition here to fetch the points-to set</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/WPA/WPAStat.hlib/WPA/AndersenStat.cpp</section>
</section>
