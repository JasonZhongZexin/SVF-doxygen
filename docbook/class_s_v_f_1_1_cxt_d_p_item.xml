<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_cxt_d_p_item" xml:lang="en-US">
<title>SVF::CxtDPItem Class Reference</title>
<indexterm><primary>SVF::CxtDPItem</primary></indexterm>
<para>Inheritance diagram for SVF::CxtDPItem:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_cxt_d_p_item.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_d_p_item_1a673749f246b002b33ca3718a566779ca"/><link linkend="_class_s_v_f_1_1_cxt_d_p_item_1a673749f246b002b33ca3718a566779ca">CxtDPItem</link> (NodeID c, const <link linkend="_class_s_v_f_1_1_context_cond">ContextCond</link> &amp;cxt)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_d_p_item_1a1c2b14fd60bd4902bfc520c9ba08c6e8"/><emphasis role="strong">CxtDPItem</emphasis> (const <link linkend="_namespace_s_v_f_1ab3532a31724d8719d29aa4c3521ca215">CxtVar</link> &amp;var)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_d_p_item_1a53fa464132d5e51e832158d2e928db32"/><link linkend="_class_s_v_f_1_1_cxt_d_p_item_1a53fa464132d5e51e832158d2e928db32">CxtDPItem</link> (const <link linkend="_class_s_v_f_1_1_cxt_d_p_item">CxtDPItem</link> &amp;dps)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_d_p_item_1ab53f35a96c5fd3a750fd6fa6ea971a36"/>virtual <link linkend="_class_s_v_f_1_1_cxt_d_p_item_1ab53f35a96c5fd3a750fd6fa6ea971a36">~CxtDPItem</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_d_p_item_1a1dea25cd5d72c52cef1cff23b832a196"/>const <link linkend="_class_s_v_f_1_1_context_cond">ContextCond</link> &amp; <link linkend="_class_s_v_f_1_1_cxt_d_p_item_1a1dea25cd5d72c52cef1cff23b832a196">getContexts</link> () const</para>

<para>Get context. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_d_p_item_1a31a33a291b4bb688f54572c986c0b845"/>void <link linkend="_class_s_v_f_1_1_cxt_d_p_item_1a31a33a291b4bb688f54572c986c0b845">pushContext</link> (NodeID cxt)</para>

<para>Push context. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_d_p_item_1ad386861998e54ec754ca62f358f03e6a"/>virtual bool <link linkend="_class_s_v_f_1_1_cxt_d_p_item_1ad386861998e54ec754ca62f358f03e6a">matchContext</link> (NodeID cxt)</para>

<para>Match context. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_s_v_f_1_1_cxt_d_p_item_1aa2841c6ef632e747357ebcde0118ec49">operator&lt;</link> (const <link linkend="_class_s_v_f_1_1_cxt_d_p_item">CxtDPItem</link> &amp;rhs) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_d_p_item_1abe0913f8d672a079fa674dbcc3e1b3db"/><link linkend="_class_s_v_f_1_1_cxt_d_p_item">CxtDPItem</link> &amp; <link linkend="_class_s_v_f_1_1_cxt_d_p_item_1abe0913f8d672a079fa674dbcc3e1b3db">operator=</link> (const <link linkend="_class_s_v_f_1_1_cxt_d_p_item">CxtDPItem</link> &amp;rhs)</para>

<para>Overloading Operator=. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_d_p_item_1a52003b33daa4902545159cf4e225d6ea"/>bool <link linkend="_class_s_v_f_1_1_cxt_d_p_item_1a52003b33daa4902545159cf4e225d6ea">operator==</link> (const <link linkend="_class_s_v_f_1_1_cxt_d_p_item">CxtDPItem</link> &amp;rhs) const</para>

<para>Overloading Operator==. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_cxt_d_p_item_1ac4c40bac3d914c61db60751503201c57"/>bool <link linkend="_class_s_v_f_1_1_cxt_d_p_item_1ac4c40bac3d914c61db60751503201c57">operator!=</link> (const <link linkend="_class_s_v_f_1_1_cxt_d_p_item">CxtDPItem</link> &amp;rhs) const</para>

<para>Overloading Operator!=. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_cxt_d_p_item_1aa2841c6ef632e747357ebcde0118ec49"/>    <section>
    <title>operator&lt;()</title>
<indexterm><primary>operator&lt;</primary><secondary>SVF::CxtDPItem</secondary></indexterm>
<indexterm><primary>SVF::CxtDPItem</primary><secondary>operator&lt;</secondary></indexterm>
<para><computeroutput>bool SVF::CxtDPItem::operator&lt; (const <link linkend="_class_s_v_f_1_1_cxt_d_p_item">CxtDPItem</link> &amp; rhs) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Enable compare operator to avoid duplicated item insertion in map or set to be noted that two vectors can also overload operator() </para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
include/Util/DPItem.h</section>
</section>
