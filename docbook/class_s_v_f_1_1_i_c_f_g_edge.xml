<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_i_c_f_g_edge" xml:lang="en-US">
<title>SVF::ICFGEdge Class Reference</title>
<indexterm><primary>SVF::ICFGEdge</primary></indexterm>
<para>Inheritance diagram for SVF::ICFGEdge:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_i_c_f_g_edge.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_class_s_v_f_1_1_i_c_f_g_edge_1a395c34788e98950bc43e8cb44313e429">ICFGEdgeK</link> { <emphasis role="strong">IntraCF</emphasis>
, <emphasis role="strong">CallCF</emphasis>
, <emphasis role="strong">RetCF</emphasis>
 }</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_i_c_f_g_edge_1a068573fdbd9b99af18f3deeb9b16a38b"/>typedef <link linkend="_class_s_v_f_1_1_i_c_f_g_edge_1a395c34788e98950bc43e8cb44313e429">ICFGEdgeK</link> <emphasis role="strong">SVFGEdgeK</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_i_c_f_g_edge_1a3da5a0bad1b4c08803f1f06393649f96"/>typedef <link linkend="_class_s_v_f_1_1_generic_node">GenericNode</link>&lt; <link linkend="_class_s_v_f_1_1_i_c_f_g_node">ICFGNode</link>, <link linkend="_class_s_v_f_1_1_i_c_f_g_edge">ICFGEdge</link> &gt;::GEdgeSetTy <emphasis role="strong">ICFGEdgeSetTy</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_i_c_f_g_edge_1ad14443828b9030ee7b438fa3cdf17e56"/>typedef ICFGEdgeSetTy <emphasis role="strong">SVFGEdgeSetTy</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_i_c_f_g_edge_1a9b8f369727bd03106bafacd4eee3dd04"/><link linkend="_class_s_v_f_1_1_i_c_f_g_edge_1a9b8f369727bd03106bafacd4eee3dd04">ICFGEdge</link> (<link linkend="_class_s_v_f_1_1_i_c_f_g_node">ICFGNode</link> *s, <link linkend="_class_s_v_f_1_1_i_c_f_g_node">ICFGNode</link> *d, <link linkend="_class_s_v_f_1_1_generic_edge_1aab8892b73370c32b48621cd1d0cce614">GEdgeFlag</link> k)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_i_c_f_g_edge_1a6dea0df51f68b621fcabef6a3ce9e778"/><link linkend="_class_s_v_f_1_1_i_c_f_g_edge_1a6dea0df51f68b621fcabef6a3ce9e778">~ICFGEdge</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_i_c_f_g_edge_1a3d3813be0b873335b17bb590e130d173"/>bool <link linkend="_class_s_v_f_1_1_i_c_f_g_edge_1a3d3813be0b873335b17bb590e130d173">isCFGEdge</link> () const</para>

<para>Get methods of the components. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_i_c_f_g_edge_1a2ecc0bc3bb3655bf3db3adb732747b49"/>bool <emphasis role="strong">isCallCFGEdge</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_i_c_f_g_edge_1ae3e7a6596de9fd3a25a28242a06ddd80"/>bool <emphasis role="strong">isRetCFGEdge</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_i_c_f_g_edge_1a4e6d228dfc678618a423e8293877f04c"/>bool <emphasis role="strong">isIntraCFGEdge</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_i_c_f_g_edge_1a7233609f62f278b738036e8de9bbbfc8"/>virtual const std::string <emphasis role="strong">toString</emphasis> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_i_c_f_g_edge_1a00b2650d7afd8b98c108d6a168299993"/>static <link linkend="_class_s_v_f_1_1_generic_edge_1aab8892b73370c32b48621cd1d0cce614">GEdgeFlag</link> <link linkend="_class_s_v_f_1_1_i_c_f_g_edge_1a00b2650d7afd8b98c108d6a168299993">makeEdgeFlagWithInvokeID</link> (GEdgeKind k, CallSiteID cs)</para>

<para>Compute the unique edgeFlag value from edge kind and CallSiteID. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_i_c_f_g_edge_1a19a7a4e97b497d5ecc48016181ec58ce"/><link linkend="_namespace_s_v_f_1a424cc053c29ad7303699c529d1a2cc71">raw_ostream</link> &amp; <link linkend="_class_s_v_f_1_1_i_c_f_g_edge_1a19a7a4e97b497d5ecc48016181ec58ce">operator&lt;&lt;</link> (<link linkend="_namespace_s_v_f_1a424cc053c29ad7303699c529d1a2cc71">raw_ostream</link> &amp;o, const <link linkend="_class_s_v_f_1_1_i_c_f_g_edge">ICFGEdge</link> &amp;edge)</para>

<para>Overloading operator &lt;&lt; for dumping <link linkend="_class_s_v_f_1_1_i_c_f_g">ICFG</link> node ID. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Member Enumeration Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_i_c_f_g_edge_1a395c34788e98950bc43e8cb44313e429"/>    <section>
    <title>ICFGEdgeK</title>
<indexterm><primary>ICFGEdgeK</primary><secondary>SVF::ICFGEdge</secondary></indexterm>
<indexterm><primary>SVF::ICFGEdge</primary><secondary>ICFGEdgeK</secondary></indexterm>
<para><computeroutput>enum <link linkend="_class_s_v_f_1_1_i_c_f_g_edge_1a395c34788e98950bc43e8cb44313e429">SVF::ICFGEdge::ICFGEdgeK</link></computeroutput></para>
<para>ten types of <link linkend="_class_s_v_f_1_1_i_c_f_g">ICFG</link> edge three types of control-flow edges seven types of value-flow edges </para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/Graphs/ICFGEdge.hlib/Graphs/ICFG.cpp</section>
</section>
