<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_context_cond" kind="class" language="C++" prot="public">
    <compoundname>SVF::ContextCond</compoundname>
    <derivedcompoundref refid="class_s_v_f_1_1_v_f_path_cond" prot="public" virt="non-virtual">SVF::VFPathCond</derivedcompoundref>
    <includes refid="_d_p_item_8h" local="no">DPItem.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_context_cond_1a101bc917679a9d8ee7badb3c9e8c12e3" prot="public" static="no">
        <type>CallStrCxt::const_iterator</type>
        <definition>typedef CallStrCxt::const_iterator SVF::ContextCond::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="197" column="40" bodyfile="include/Util/DPItem.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_context_cond_1ac431eae00244cc7792b6e7e00634d535" prot="protected" static="no" mutable="no">
        <type>CallStrCxt</type>
        <definition>CallStrCxt SVF::ContextCond::context</definition>
        <argsstring></argsstring>
        <name>context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="340" column="16" bodyfile="include/Util/DPItem.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_context_cond_1a3280db7a2b93612fb693a7c1117acfdd" prot="private" static="yes" mutable="no">
        <type>u32_t</type>
        <definition>u32_t ContextCond::maximumCxtLen</definition>
        <argsstring></argsstring>
        <name>maximumCxtLen</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="342" column="18" bodyfile="include/Util/DPItem.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_context_cond_1a453722fc2b9b4ae4be0dfc1f020390eb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SVF::ContextCond::concreteCxt</definition>
        <argsstring></argsstring>
        <name>concreteCxt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="343" column="10" bodyfile="include/Util/DPItem.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_context_cond_1a151b9f21eedd4fdd8f46b78bb456582d" prot="public" static="yes" mutable="no">
        <type>u32_t</type>
        <definition>u32_t ContextCond::maximumCxt</definition>
        <argsstring></argsstring>
        <name>maximumCxt</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="345" column="18" bodyfile="include/Util/DPItem.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_context_cond_1a9b81bf11679645d32d50b91bdb6d2dc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::ContextCond::ContextCond</definition>
        <argsstring>()</argsstring>
        <name>ContextCond</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="199" column="5" bodyfile="include/Util/DPItem.h" bodystart="199" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_cond_1a5f31275f74ff9eb5734481f36275c6d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::ContextCond::ContextCond</definition>
        <argsstring>(const ContextCond &amp;cond)</argsstring>
        <name>ContextCond</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_context_cond" kindref="compound">ContextCond</ref> &amp;</type>
          <declname>cond</declname>
        </param>
        <briefdescription>
<para>Copy Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="203" column="5" bodyfile="include/Util/DPItem.h" bodystart="203" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_cond_1acacf53982ab08b9f0fcfbd1e941b3365" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::ContextCond::~ContextCond</definition>
        <argsstring>()</argsstring>
        <name>~ContextCond</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="207" column="13" bodyfile="include/Util/DPItem.h" bodystart="207" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_cond_1a73d4d6ed38898b912926d044268fd35b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const CallStrCxt &amp;</type>
        <definition>const CallStrCxt&amp; SVF::ContextCond::getContexts</definition>
        <argsstring>() const</argsstring>
        <name>getContexts</name>
        <briefdescription>
<para>Get context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="211" column="29" bodyfile="include/Util/DPItem.h" bodystart="211" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_cond_1a2af7a9769d97ddb4a217d0baaf7c03a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>CallStrCxt &amp;</type>
        <definition>CallStrCxt&amp; SVF::ContextCond::getContexts</definition>
        <argsstring>()</argsstring>
        <name>getContexts</name>
        <briefdescription>
<para>Get context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="216" column="23" bodyfile="include/Util/DPItem.h" bodystart="216" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_cond_1ac5f7388c0bbcee1878201819b9cd199f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::ContextCond::isConcreteCxt</definition>
        <argsstring>() const</argsstring>
        <name>isConcreteCxt</name>
        <briefdescription>
<para>Whether it is an concrete context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="221" column="17" bodyfile="include/Util/DPItem.h" bodystart="221" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_cond_1ac80892cbef7a5d2c949e5f07682bc885" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::ContextCond::setNonConcreteCxt</definition>
        <argsstring>()</argsstring>
        <name>setNonConcreteCxt</name>
        <briefdescription>
<para>Whether it is an concrete context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="226" column="17" bodyfile="include/Util/DPItem.h" bodystart="226" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_cond_1a6f5b0bbc0978220aaa990f5fd0ddce8d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::ContextCond::containCallStr</definition>
        <argsstring>(NodeID cxt) const</argsstring>
        <name>containCallStr</name>
        <param>
          <type>NodeID</type>
          <declname>cxt</declname>
        </param>
        <briefdescription>
<para>Whether contains callstring cxt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="231" column="17" bodyfile="include/Util/DPItem.h" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_cond_1a20f15a1661f928ab80bacaf8f5c497b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>u32_t</type>
        <definition>u32_t SVF::ContextCond::cxtSize</definition>
        <argsstring>() const</argsstring>
        <name>cxtSize</name>
        <briefdescription>
<para>Get context size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="236" column="18" bodyfile="include/Util/DPItem.h" bodystart="236" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_cond_1ad16644f61728fbb166ce80957b17d884" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::ContextCond::pushContext</definition>
        <argsstring>(NodeID ctx)</argsstring>
        <name>pushContext</name>
        <param>
          <type>NodeID</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Push context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>handle out of context limit case</para>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="246" column="25" bodyfile="include/Util/DPItem.h" bodystart="246" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_cond_1ab816f854687999b8c01f5c02fcf6b8af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::ContextCond::matchContext</definition>
        <argsstring>(NodeID ctx)</argsstring>
        <name>matchContext</name>
        <param>
          <type>NodeID</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Match context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>if context is empty, then it is the unbalanced parentheses match</para>
<para>otherwise, we perform balanced parentheses matching</para>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="270" column="25" bodyfile="include/Util/DPItem.h" bodystart="270" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_cond_1a53e0a8ac864e15edf0de827bdbb4eb01" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::ContextCond::operator&lt;</definition>
        <argsstring>(const ContextCond &amp;rhs) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_context_cond" kindref="compound">ContextCond</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable compare operator to avoid duplicated item insertion in map or set to be noted that two vectors can also overload operator() </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="286" column="12" bodyfile="include/Util/DPItem.h" bodystart="286" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_cond_1a62cc1c7c01d454e9cbebd3f7f5f3aa1f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NodeID</type>
        <definition>NodeID SVF::ContextCond::operator[]</definition>
        <argsstring>(const u32_t index) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const u32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Overloading operator[]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="291" column="19" bodyfile="include/Util/DPItem.h" bodystart="291" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_cond_1ae4d1bb47d0c8ef4d8b31ffaeb83edf04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_context_cond" kindref="compound">ContextCond</ref> &amp;</type>
        <definition>ContextCond&amp; SVF::ContextCond::operator=</definition>
        <argsstring>(const ContextCond &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_context_cond" kindref="compound">ContextCond</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Overloading operator=. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="297" column="24" bodyfile="include/Util/DPItem.h" bodystart="297" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_cond_1a69b8789b4815f2958afe67028640bfc5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::ContextCond::operator==</definition>
        <argsstring>(const ContextCond &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_context_cond" kindref="compound">ContextCond</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Overloading operator==. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="307" column="17" bodyfile="include/Util/DPItem.h" bodystart="307" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_cond_1a357317ef5f0a848a30eb38eec8c8a0f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::ContextCond::operator!=</definition>
        <argsstring>(const ContextCond &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_context_cond" kindref="compound">ContextCond</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Overloading operator!=. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="312" column="17" bodyfile="include/Util/DPItem.h" bodystart="312" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_cond_1a4ae7e2236708b0d205f393cdce75c8d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator SVF::ContextCond::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Begin iterators. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="317" column="27" bodyfile="include/Util/DPItem.h" bodystart="317" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_cond_1a4b56b54896a1241032d7614309829399" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator SVF::ContextCond::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
<para>End iterators. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="322" column="27" bodyfile="include/Util/DPItem.h" bodystart="322" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_context_cond_1a5f73451064b22bc1aab91b22ddea1eee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SVF::ContextCond::toString</definition>
        <argsstring>() const</argsstring>
        <name>toString</name>
        <briefdescription>
<para>Dump context condition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="327" column="24" bodyfile="include/Util/DPItem.h" bodystart="327" bodyend="338"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_s_v_f_1_1_context_cond_1a92e89bbae0f31bb9eb971ab3edcc8071" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void SVF::ContextCond::setMaxCxtLen</definition>
        <argsstring>(u32_t max)</argsstring>
        <name>setMaxCxtLen</name>
        <param>
          <type>u32_t</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>set max context limit </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="241" column="24" bodyfile="include/Util/DPItem.h" bodystart="241" bodyend="244"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Context Condition </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>SVF::VFPathCond</label>
        <link refid="class_s_v_f_1_1_v_f_path_cond"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>SVF::ContextCond</label>
        <link refid="class_s_v_f_1_1_context_cond"/>
      </node>
    </inheritancegraph>
    <location file="include/Util/DPItem.h" line="194" column="1" bodyfile="include/Util/DPItem.h" bodystart="195" bodyend="346"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_context_cond_1a4ae7e2236708b0d205f393cdce75c8d1" prot="public" virt="non-virtual"><scope>SVF::ContextCond</scope><name>begin</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1a453722fc2b9b4ae4be0dfc1f020390eb" prot="private" virt="non-virtual"><scope>SVF::ContextCond</scope><name>concreteCxt</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1a101bc917679a9d8ee7badb3c9e8c12e3" prot="public" virt="non-virtual"><scope>SVF::ContextCond</scope><name>const_iterator</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1a6f5b0bbc0978220aaa990f5fd0ddce8d" prot="public" virt="non-virtual"><scope>SVF::ContextCond</scope><name>containCallStr</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1ac431eae00244cc7792b6e7e00634d535" prot="protected" virt="non-virtual"><scope>SVF::ContextCond</scope><name>context</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1a9b81bf11679645d32d50b91bdb6d2dc1" prot="public" virt="non-virtual"><scope>SVF::ContextCond</scope><name>ContextCond</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1a5f31275f74ff9eb5734481f36275c6d9" prot="public" virt="non-virtual"><scope>SVF::ContextCond</scope><name>ContextCond</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1a20f15a1661f928ab80bacaf8f5c497b1" prot="public" virt="non-virtual"><scope>SVF::ContextCond</scope><name>cxtSize</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1a4b56b54896a1241032d7614309829399" prot="public" virt="non-virtual"><scope>SVF::ContextCond</scope><name>end</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1a73d4d6ed38898b912926d044268fd35b" prot="public" virt="non-virtual"><scope>SVF::ContextCond</scope><name>getContexts</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1a2af7a9769d97ddb4a217d0baaf7c03a3" prot="public" virt="non-virtual"><scope>SVF::ContextCond</scope><name>getContexts</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1ac5f7388c0bbcee1878201819b9cd199f" prot="public" virt="non-virtual"><scope>SVF::ContextCond</scope><name>isConcreteCxt</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1ab816f854687999b8c01f5c02fcf6b8af" prot="public" virt="virtual"><scope>SVF::ContextCond</scope><name>matchContext</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1a151b9f21eedd4fdd8f46b78bb456582d" prot="public" virt="non-virtual"><scope>SVF::ContextCond</scope><name>maximumCxt</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1a3280db7a2b93612fb693a7c1117acfdd" prot="private" virt="non-virtual"><scope>SVF::ContextCond</scope><name>maximumCxtLen</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1a357317ef5f0a848a30eb38eec8c8a0f8" prot="public" virt="non-virtual"><scope>SVF::ContextCond</scope><name>operator!=</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1a53e0a8ac864e15edf0de827bdbb4eb01" prot="public" virt="non-virtual"><scope>SVF::ContextCond</scope><name>operator&lt;</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1ae4d1bb47d0c8ef4d8b31ffaeb83edf04" prot="public" virt="non-virtual"><scope>SVF::ContextCond</scope><name>operator=</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1a69b8789b4815f2958afe67028640bfc5" prot="public" virt="non-virtual"><scope>SVF::ContextCond</scope><name>operator==</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1a62cc1c7c01d454e9cbebd3f7f5f3aa1f" prot="public" virt="non-virtual"><scope>SVF::ContextCond</scope><name>operator[]</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1ad16644f61728fbb166ce80957b17d884" prot="public" virt="virtual"><scope>SVF::ContextCond</scope><name>pushContext</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1a92e89bbae0f31bb9eb971ab3edcc8071" prot="public" virt="non-virtual"><scope>SVF::ContextCond</scope><name>setMaxCxtLen</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1ac80892cbef7a5d2c949e5f07682bc885" prot="public" virt="non-virtual"><scope>SVF::ContextCond</scope><name>setNonConcreteCxt</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1a5f73451064b22bc1aab91b22ddea1eee" prot="public" virt="non-virtual"><scope>SVF::ContextCond</scope><name>toString</name></member>
      <member refid="class_s_v_f_1_1_context_cond_1acacf53982ab08b9f0fcfbd1e941b3365" prot="public" virt="virtual"><scope>SVF::ContextCond</scope><name>~ContextCond</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
