<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_l_l_v_m_module_set" kind="class" language="C++" prot="public">
    <compoundname>SVF::LLVMModuleSet</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_l_l_v_m_module_set_1a79eb13fae9ea80e9476723c8e15183f6" prot="public" static="no">
        <type>std::vector&lt; const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> * &gt;</type>
        <definition>typedef std::vector&lt;const SVFFunction*&gt; SVF::LLVMModuleSet::FunctionSetType</definition>
        <argsstring></argsstring>
        <name>FunctionSetType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="44" column="25" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_l_l_v_m_module_set_1ae047f3b5b27ce0a3988842b83880ee4b" prot="public" static="no">
        <type>Map&lt; const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *, const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> * &gt;</type>
        <definition>typedef Map&lt;const SVFFunction*, const SVFFunction*&gt; SVF::LLVMModuleSet::FunDeclToDefMapTy</definition>
        <argsstring></argsstring>
        <name>FunDeclToDefMapTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="45" column="17" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_l_l_v_m_module_set_1a69310319ea60cec5c8f3dea128a3f7c3" prot="public" static="no">
        <type>Map&lt; const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *, FunctionSetType &gt;</type>
        <definition>typedef Map&lt;const SVFFunction*, FunctionSetType&gt; SVF::LLVMModuleSet::FunDefToDeclsMapTy</definition>
        <argsstring></argsstring>
        <name>FunDefToDeclsMapTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="46" column="17" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_l_l_v_m_module_set_1a4dc808f3f69a87c74933d1f6183d1459" prot="public" static="no">
        <type>Map&lt; const GlobalVariable *, GlobalVariable * &gt;</type>
        <definition>typedef Map&lt;const GlobalVariable*, GlobalVariable*&gt; SVF::LLVMModuleSet::GlobalDefToRepMapTy</definition>
        <argsstring></argsstring>
        <name>GlobalDefToRepMapTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="47" column="17" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_l_l_v_m_module_set_1ac59b07cafcbacc950eefea4082425b63" prot="private" static="yes" mutable="no">
        <type><ref refid="class_s_v_f_1_1_l_l_v_m_module_set" kindref="compound">LLVMModuleSet</ref> *</type>
        <definition>LLVMModuleSet * LLVMModuleSet::llvmModuleSet</definition>
        <argsstring></argsstring>
        <name>llvmModuleSet</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="50" column="26" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_l_l_v_m_module_set_1a43832e93a42ae43d44b0cc160981678f" prot="private" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_s_v_f_module" kindref="compound">SVFModule</ref> *</type>
        <definition>SVFModule* SVF::LLVMModuleSet::svfModule</definition>
        <argsstring></argsstring>
        <name>svfModule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="51" column="15" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_l_l_v_m_module_set_1ad06a92bf8bc556de742e0ffdf79ffafe" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; LLVMContext &gt;</type>
        <definition>std::unique_ptr&lt;LLVMContext&gt; SVF::LLVMModuleSet::cxts</definition>
        <argsstring></argsstring>
        <name>cxts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="52" column="21" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_l_l_v_m_module_set_1ae365189769640adb919a23c36978e5e2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; Module &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;Module&gt; &gt; SVF::LLVMModuleSet::owned_modules</definition>
        <argsstring></argsstring>
        <name>owned_modules</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="53" column="17" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_l_l_v_m_module_set_1acde6292e719c80f93d3d1c344ab442cd" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::reference_wrapper&lt; Module &gt; &gt;</type>
        <definition>std::vector&lt;std::reference_wrapper&lt;Module&gt; &gt; SVF::LLVMModuleSet::modules</definition>
        <argsstring></argsstring>
        <name>modules</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="54" column="17" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_l_l_v_m_module_set_1aee80b29e5246e3eaa0e30e165346101f" prot="private" static="no" mutable="no">
        <type>FunDeclToDefMapTy</type>
        <definition>FunDeclToDefMapTy SVF::LLVMModuleSet::FunDeclToDefMap</definition>
        <argsstring></argsstring>
        <name>FunDeclToDefMap</name>
        <briefdescription>
<para>Function declaration to function definition map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="57" column="23" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_l_l_v_m_module_set_1a377cefaad4b688ab6edf94ba4abe00ee" prot="private" static="no" mutable="no">
        <type>FunDefToDeclsMapTy</type>
        <definition>FunDefToDeclsMapTy SVF::LLVMModuleSet::FunDefToDeclsMap</definition>
        <argsstring></argsstring>
        <name>FunDefToDeclsMap</name>
        <briefdescription>
<para>Function definition to function declaration map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="59" column="24" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_l_l_v_m_module_set_1ae2a1fa0b908cf372c50af90e62c4bf2b" prot="private" static="no" mutable="no">
        <type>GlobalDefToRepMapTy</type>
        <definition>GlobalDefToRepMapTy SVF::LLVMModuleSet::GlobalDefToRepMap</definition>
        <argsstring></argsstring>
        <name>GlobalDefToRepMap</name>
        <briefdescription>
<para>Global definition to a rep definition map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="61" column="25" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1a8e70de9eefe2e188b10e214e073750e6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::LLVMModuleSet::LLVMModuleSet</definition>
        <argsstring>()</argsstring>
        <name>LLVMModuleSet</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="64" column="5" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1af8edfe08027020f14b81b44362c6018e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LLVMModuleSet::build</definition>
        <argsstring>()</argsstring>
        <name>build</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>building symbol table</para>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="66" column="10" bodyfile="lib/SVF-FE/LLVMModule.cpp" bodystart="102" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1a298966366b02d0a34f409c2c77da3789" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LLVMModuleSet::loadModules</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;moduleNameVec)</argsstring>
        <name>loadModules</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>moduleNameVec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="232" column="10" bodyfile="lib/SVF-FE/LLVMModule.cpp" bodystart="117" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1a8af6b911b728713f66f7c809d5c0fbf1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LLVMModuleSet::addSVFMain</definition>
        <argsstring>()</argsstring>
        <name>addSVFMain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="233" column="10" bodyfile="lib/SVF-FE/LLVMModule.cpp" bodystart="183" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1a9782bf6b7b015fd8fb48f75eb4508d22" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LLVMModuleSet::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Function</para>
<para>GlobalVariable</para>
<para>GlobalAlias</para>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="234" column="10" bodyfile="lib/SVF-FE/LLVMModule.cpp" bodystart="150" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1ac7c646a78c989807c52263fc35fb3628" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LLVMModuleSet::buildFunToFunMap</definition>
        <argsstring>()</argsstring>
        <name>buildFunToFunMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Fun decl --&gt; def</para>
<para>Fun def --&gt; decls</para>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="235" column="10" bodyfile="lib/SVF-FE/LLVMModule.cpp" bodystart="249" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1aaab03cb6ff665bc008c67b866ba81e47" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LLVMModuleSet::buildGlobalDefToRepMap</definition>
        <argsstring>()</argsstring>
        <name>buildGlobalDefToRepMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="236" column="10" bodyfile="lib/SVF-FE/LLVMModule.cpp" bodystart="361" bodyend="409"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1acf40310917909e4234282c0695a43160" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_l_l_v_m_module_set" kindref="compound">LLVMModuleSet</ref> *</type>
        <definition>static LLVMModuleSet* SVF::LLVMModuleSet::getLLVMModuleSet</definition>
        <argsstring>()</argsstring>
        <name>getLLVMModuleSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="69" column="33" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="69" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1a2f8e91c075d90be66412a079fe73e936" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void SVF::LLVMModuleSet::releaseLLVMModuleSet</definition>
        <argsstring>()</argsstring>
        <name>releaseLLVMModuleSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="76" column="17" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="76" bodyend="81"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1ae919327019b5014f64b754dbdeb07f75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_s_v_f_module" kindref="compound">SVFModule</ref> *</type>
        <definition>SVFModule * LLVMModuleSet::buildSVFModule</definition>
        <argsstring>(Module &amp;mod)</argsstring>
        <name>buildSVFModule</name>
        <param>
          <type>Module &amp;</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="83" column="15" bodyfile="lib/SVF-FE/LLVMModule.cpp" bodystart="63" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1a1f8e769251c89433311eeb6f98d115e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_s_v_f_module" kindref="compound">SVFModule</ref> *</type>
        <definition>SVFModule * LLVMModuleSet::buildSVFModule</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;moduleNameVec)</argsstring>
        <name>buildSVFModule</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>moduleNameVec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="84" column="15" bodyfile="lib/SVF-FE/LLVMModule.cpp" bodystart="73" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1a16572a3d7639fa65c699b6c3982fa20e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_s_v_f_module" kindref="compound">SVFModule</ref> *</type>
        <definition>SVFModule* SVF::LLVMModuleSet::getSVFModule</definition>
        <argsstring>()</argsstring>
        <name>getSVFModule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="86" column="18" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1ae265a7f3cc7367d62013e0f15cf3d233" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>u32_t</type>
        <definition>u32_t SVF::LLVMModuleSet::getModuleNum</definition>
        <argsstring>() const</argsstring>
        <name>getModuleNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="91" column="11" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1a8afb7ab3ee4632e78d546e549110e74c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Module *</type>
        <definition>Module* SVF::LLVMModuleSet::getModule</definition>
        <argsstring>(u32_t idx) const</argsstring>
        <name>getModule</name>
        <param>
          <type>u32_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="96" column="12" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1ad647d73d2e1bda61348eff658e32f481" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Module &amp;</type>
        <definition>Module&amp; SVF::LLVMModuleSet::getModuleRef</definition>
        <argsstring>(u32_t idx) const</argsstring>
        <name>getModuleRef</name>
        <param>
          <type>u32_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="101" column="12" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="101" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1ad5ef9421d501b2747d4fb31d4189b53f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LLVMModuleSet::dumpModulesToFile</definition>
        <argsstring>(const std::string suffix)</argsstring>
        <name>dumpModulesToFile</name>
        <param>
          <type>const std::string</type>
          <declname>suffix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="108" column="10" bodyfile="lib/SVF-FE/LLVMModule.cpp" bodystart="412" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1a547b3bc62de65b9dbfc6dee55c063dd7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
        <definition>const SVFFunction* SVF::LLVMModuleSet::getSVFFunction</definition>
        <argsstring>(const Function *fun) const</argsstring>
        <name>getSVFFunction</name>
        <param>
          <type>const Function *</type>
          <declname>fun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="110" column="23" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1a32558da64f03452c502ec57d1e106427" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::LLVMModuleSet::hasDefinition</definition>
        <argsstring>(const Function *fun) const</argsstring>
        <name>hasDefinition</name>
        <param>
          <type>const Function *</type>
          <declname>fun</declname>
        </param>
        <briefdescription>
<para>Fun decl --&gt; def. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="116" column="10" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1acc6addcaf254069cd2d7d96206710b4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::LLVMModuleSet::hasDefinition</definition>
        <argsstring>(const SVFFunction *fun) const</argsstring>
        <name>hasDefinition</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>fun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="121" column="10" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="121" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1abc83c5da519d2d05133106d92df8053e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
        <definition>const SVFFunction* SVF::LLVMModuleSet::getDefinition</definition>
        <argsstring>(const Function *fun) const</argsstring>
        <name>getDefinition</name>
        <param>
          <type>const Function *</type>
          <declname>fun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="128" column="23" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1a3e695d3d1dbe32ca881a2458f07128c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
        <definition>const SVFFunction* SVF::LLVMModuleSet::getDefinition</definition>
        <argsstring>(const SVFFunction *fun) const</argsstring>
        <name>getDefinition</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>fun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="133" column="23" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="133" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1a74a7961552498d1a99e1da70b7f78620" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::LLVMModuleSet::hasDeclaration</definition>
        <argsstring>(const Function *fun) const</argsstring>
        <name>hasDeclaration</name>
        <param>
          <type>const Function *</type>
          <declname>fun</declname>
        </param>
        <briefdescription>
<para>Fun def --&gt; decl. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="142" column="10" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1ad6eee135f40ba367478cc12aad8faf4d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::LLVMModuleSet::hasDeclaration</definition>
        <argsstring>(const SVFFunction *fun) const</argsstring>
        <name>hasDeclaration</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>fun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="147" column="10" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="147" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1aa4a604e47daaaf95babc7aca68991000" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const FunctionSetType &amp;</type>
        <definition>const FunctionSetType&amp; SVF::LLVMModuleSet::getDeclaration</definition>
        <argsstring>(const Function *fun) const</argsstring>
        <name>getDeclaration</name>
        <param>
          <type>const Function *</type>
          <declname>fun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="160" column="27" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1ac0e82b950677c010a647f24245a6d127" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const FunctionSetType &amp;</type>
        <definition>const FunctionSetType&amp; SVF::LLVMModuleSet::getDeclaration</definition>
        <argsstring>(const SVFFunction *fun) const</argsstring>
        <name>getDeclaration</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>fun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="165" column="27" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="165" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1a0e5ab0def54815f67ed7495d028dab1b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::LLVMModuleSet::hasGlobalRep</definition>
        <argsstring>(const GlobalVariable *val) const</argsstring>
        <name>hasGlobalRep</name>
        <param>
          <type>const GlobalVariable *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Global to rep. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="177" column="10" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="177" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1a757bf149437cce22163c764ea9993e12" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>GlobalVariable *</type>
        <definition>GlobalVariable* SVF::LLVMModuleSet::getGlobalRep</definition>
        <argsstring>(const GlobalVariable *val) const</argsstring>
        <name>getGlobalRep</name>
        <param>
          <type>const GlobalVariable *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="183" column="20" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="183" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1a9fe3fa15a6a0ec25864cb8439a45596e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Module *</type>
        <definition>Module* SVF::LLVMModuleSet::getMainLLVMModule</definition>
        <argsstring>() const</argsstring>
        <name>getMainLLVMModule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="191" column="12" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="191" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1ac1a9d20d62066ec4e181fad223669e32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>LLVMContext &amp;</type>
        <definition>LLVMContext&amp; SVF::LLVMModuleSet::getContext</definition>
        <argsstring>() const</argsstring>
        <name>getContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="196" column="17" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="196" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1ae19e38054c55d5822dfc83a12f12aa60" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::LLVMModuleSet::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="202" column="10" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_l_l_v_m_module_set_1a4e125a4acf17d42a24576df6499eb491" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::LLVMModuleSet::allCTir</definition>
        <argsstring>(void) const</argsstring>
        <name>allCTir</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns true if all LLVM modules are compiled with ctir. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SVF-FE/LLVMModule.h" line="208" column="10" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="208" bodyend="229"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/SVF-FE/LLVMModule.h" line="40" column="1" bodyfile="include/SVF-FE/LLVMModule.h" bodystart="41" bodyend="237"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1a8af6b911b728713f66f7c809d5c0fbf1" prot="private" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>addSVFMain</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1a4e125a4acf17d42a24576df6499eb491" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>allCTir</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1af8edfe08027020f14b81b44362c6018e" prot="private" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>build</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1ac7c646a78c989807c52263fc35fb3628" prot="private" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>buildFunToFunMap</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1aaab03cb6ff665bc008c67b866ba81e47" prot="private" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>buildGlobalDefToRepMap</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1ae919327019b5014f64b754dbdeb07f75" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>buildSVFModule</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1a1f8e769251c89433311eeb6f98d115e9" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>buildSVFModule</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1ad06a92bf8bc556de742e0ffdf79ffafe" prot="private" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>cxts</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1ad5ef9421d501b2747d4fb31d4189b53f" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>dumpModulesToFile</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1ae19e38054c55d5822dfc83a12f12aa60" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>empty</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1a79eb13fae9ea80e9476723c8e15183f6" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>FunctionSetType</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1aee80b29e5246e3eaa0e30e165346101f" prot="private" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>FunDeclToDefMap</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1ae047f3b5b27ce0a3988842b83880ee4b" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>FunDeclToDefMapTy</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1a377cefaad4b688ab6edf94ba4abe00ee" prot="private" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>FunDefToDeclsMap</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1a69310319ea60cec5c8f3dea128a3f7c3" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>FunDefToDeclsMapTy</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1ac1a9d20d62066ec4e181fad223669e32" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>getContext</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1aa4a604e47daaaf95babc7aca68991000" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>getDeclaration</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1ac0e82b950677c010a647f24245a6d127" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>getDeclaration</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1abc83c5da519d2d05133106d92df8053e" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>getDefinition</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1a3e695d3d1dbe32ca881a2458f07128c6" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>getDefinition</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1a757bf149437cce22163c764ea9993e12" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>getGlobalRep</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1acf40310917909e4234282c0695a43160" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>getLLVMModuleSet</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1a9fe3fa15a6a0ec25864cb8439a45596e" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>getMainLLVMModule</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1a8afb7ab3ee4632e78d546e549110e74c" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>getModule</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1ae265a7f3cc7367d62013e0f15cf3d233" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>getModuleNum</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1ad647d73d2e1bda61348eff658e32f481" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>getModuleRef</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1a547b3bc62de65b9dbfc6dee55c063dd7" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>getSVFFunction</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1a16572a3d7639fa65c699b6c3982fa20e" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>getSVFModule</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1ae2a1fa0b908cf372c50af90e62c4bf2b" prot="private" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>GlobalDefToRepMap</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1a4dc808f3f69a87c74933d1f6183d1459" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>GlobalDefToRepMapTy</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1a74a7961552498d1a99e1da70b7f78620" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>hasDeclaration</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1ad6eee135f40ba367478cc12aad8faf4d" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>hasDeclaration</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1a32558da64f03452c502ec57d1e106427" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>hasDefinition</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1acc6addcaf254069cd2d7d96206710b4a" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>hasDefinition</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1a0e5ab0def54815f67ed7495d028dab1b" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>hasGlobalRep</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1a9782bf6b7b015fd8fb48f75eb4508d22" prot="private" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>initialize</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1ac59b07cafcbacc950eefea4082425b63" prot="private" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>llvmModuleSet</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1a8e70de9eefe2e188b10e214e073750e6" prot="private" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>LLVMModuleSet</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1a298966366b02d0a34f409c2c77da3789" prot="private" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>loadModules</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1acde6292e719c80f93d3d1c344ab442cd" prot="private" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>modules</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1ae365189769640adb919a23c36978e5e2" prot="private" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>owned_modules</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1a2f8e91c075d90be66412a079fe73e936" prot="public" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>releaseLLVMModuleSet</name></member>
      <member refid="class_s_v_f_1_1_l_l_v_m_module_set_1a43832e93a42ae43d44b0cc160981678f" prot="private" virt="non-virtual"><scope>SVF::LLVMModuleSet</scope><name>svfModule</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
