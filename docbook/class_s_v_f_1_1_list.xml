<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_list" xml:lang="en-US">
<title>SVF::List&lt; Data &gt; Class Template Reference</title>
<indexterm><primary>SVF::List&lt; Data &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;WorkList.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_list_1a063246d2aa23e389e513c5498ff33aca"/>bool <emphasis role="strong">empty</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_list_1a3ac922ec28c4e6fe86db6ac262cd6dbd"/>bool <emphasis role="strong">find</emphasis> (Data data) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_list_1aaec02f979702cf4bd899e41defd53c1a"/>void <emphasis role="strong">push</emphasis> (Data data)</para>
</listitem>
            <listitem><para>Data <link linkend="_class_s_v_f_1_1_list_1a6e85bd3d8b23ccc7752a72e2a5b171ab">pop</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;class Data&gt;
class SVF::List&lt; Data &gt;</title></simplesect>


<para>Worklist with &quot;first come first go&quot; order. New nodes pushed at back and popped from front. Elements in the list are unique as they&apos;re recorded by Set. </para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_list_1a6e85bd3d8b23ccc7752a72e2a5b171ab"/>    <section>
    <title>pop()</title>
<indexterm><primary>pop</primary><secondary>SVF::List&lt; Data &gt;</secondary></indexterm>
<indexterm><primary>SVF::List&lt; Data &gt;</primary><secondary>pop</secondary></indexterm>
<computeroutput>template&lt;class Data &gt; </computeroutput><para><computeroutput>Data <link linkend="_class_s_v_f_1_1_list">SVF::List</link>&lt; Data &gt;::pop ( )<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>get node from list head</para>

<para>change list head to the next node</para>

<para>the last node is popped.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
include/Util/WorkList.h</section>
</section>
