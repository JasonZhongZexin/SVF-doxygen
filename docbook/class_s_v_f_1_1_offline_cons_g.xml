<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_offline_cons_g" xml:lang="en-US">
<title>SVF::OfflineConsG Class Reference</title>
<indexterm><primary>SVF::OfflineConsG</primary></indexterm>
<para>
<computeroutput>#include &lt;OfflineConsG.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for SVF::OfflineConsG:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_offline_cons_g.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1ab7ce6d127d85cedfdeb6501195b8818f"/>typedef <link linkend="_class_s_v_f_1_1_s_c_c_detection">SCCDetection</link>&lt; <link linkend="_class_s_v_f_1_1_offline_cons_g">OfflineConsG</link> * &gt; <emphasis role="strong">OSCC</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1a832953ac86452c45f55aa6ff3c545f36"/>typedef Set&lt; <link linkend="_class_s_v_f_1_1_load_c_g_edge">LoadCGEdge</link> * &gt; <emphasis role="strong">LoadEdges</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1a9880cb387e24fa2c87297487411f95ea"/>typedef Set&lt; <link linkend="_class_s_v_f_1_1_store_c_g_edge">StoreCGEdge</link> * &gt; <emphasis role="strong">StoreEdges</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1a421e5e609fa52c6f5092e54ea6e86734"/><emphasis role="strong">OfflineConsG</emphasis> (<link linkend="_class_s_v_f_1_1_p_a_g">PAG</link> *p)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1a0a03ef009894059fa2591ea5f9ef87d9"/>bool <emphasis role="strong">hasOCGRep</emphasis> (NodeID node) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1a3f390900ee8761055c6d59107bc0ad27"/>NodeID <emphasis role="strong">getOCGRep</emphasis> (NodeID node) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1a4c27bd33977816db33d0e7d92036239a"/>const NodeToRepMap &amp; <emphasis role="strong">getOCGRepMap</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1ac2e7ddb9b7b45f9db47b60d8a0be06ae"/>bool <emphasis role="strong">isaRef</emphasis> (NodeID node) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1a576cfa438bb109b7e451b410cd3a8569"/>bool <emphasis role="strong">hasRef</emphasis> (NodeID node) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1af701f54b1db07a16e926cd40ab17eb12"/>NodeID <emphasis role="strong">getRef</emphasis> (NodeID node) const</para>
</listitem>
            <listitem><para>void <link linkend="_class_s_v_f_1_1_offline_cons_g_1ab7d06ed7e5e186b97452391c1162b181">solveOfflineSCC</link> (<link linkend="_class_s_v_f_1_1_s_c_c_detection">OSCC</link> *oscc)</para>
</listitem>
            <listitem><para>void <link linkend="_class_s_v_f_1_1_offline_cons_g_1afc60c6d897517437597c54e8f83622eb">buildOfflineMap</link> (<link linkend="_class_s_v_f_1_1_s_c_c_detection">OSCC</link> *oscc)</para>
</listitem>
            <listitem><para>void <link linkend="_class_s_v_f_1_1_offline_cons_g_1a727c635892986998167f30ff23a75f4c">dump</link> (std::string name)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1af61052f5a84ca45304833de7eaf85319"/>bool <emphasis role="strong">hasNorRep</emphasis> (NodeID nor) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1a3cb6384160b50bd0a94de3fd2eb6facd"/>void <emphasis role="strong">setNorRep</emphasis> (NodeID nor, NodeID rep)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1a5deba2c74d1a3dc24ec55e3ecf3227be"/>NodeID <emphasis role="strong">getNorRep</emphasis> (NodeID nor) const</para>
</listitem>
            <listitem><para>NodeID <link linkend="_class_s_v_f_1_1_offline_cons_g_1aeb069df3700dafcf365f11d697501c8f">solveRep</link> (<link linkend="_class_s_v_f_1_1_s_c_c_detection">OSCC</link> *oscc, NodeID rep)</para>
</listitem>
            <listitem><para>void <link linkend="_class_s_v_f_1_1_offline_cons_g_1ac6197a5515ace76b2d51451f5149aef7">buildOfflineCG</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_s_v_f_1_1_offline_cons_g_1a6c8afd3dc37fc60aecc6efd238312940">addRefLoadEdge</link> (NodeID src, NodeID dst)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_s_v_f_1_1_offline_cons_g_1a99e2de184d8f532074666881b67e0b17">addRefStoreEdge</link> (NodeID src, NodeID dst)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_s_v_f_1_1_offline_cons_g_1a984e82f3185be03b8d1cb942685b2010">createRefNode</link> (NodeID nodeId)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1a381e656d0034b91935f62aeb7924dd4e"/>NodeSet <emphasis role="strong">refNodes</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1aebeb8a44fcfbb677a738fa04c8e9c5e1"/>NodeToRepMap <emphasis role="strong">nodeToRefMap</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1a6eff43757344f75cd3775d473f14fd9c"/>NodeToRepMap <emphasis role="strong">norToRepMap</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Offline constraint graph for <link linkend="_class_s_v_f_1_1_andersen">Andersen</link>&apos;s analysis. In OCG, a &apos;ref&apos; node is used to represent the point-to set of a constraint node. &apos;Nor&apos; means a constraint node of its corresponding ref node. </para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1a6c8afd3dc37fc60aecc6efd238312940"/>    <section>
    <title>addRefLoadEdge()</title>
<indexterm><primary>addRefLoadEdge</primary><secondary>SVF::OfflineConsG</secondary></indexterm>
<indexterm><primary>SVF::OfflineConsG</primary><secondary>addRefLoadEdge</secondary></indexterm>
<para><computeroutput>bool OfflineConsG::addRefLoadEdge (NodeID src, NodeID dst)<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Add a copy edge between the ref node of src node and dst node, while meeting a LOAD constraint. </para>
    </section><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1a99e2de184d8f532074666881b67e0b17"/>    <section>
    <title>addRefStoreEdge()</title>
<indexterm><primary>addRefStoreEdge</primary><secondary>SVF::OfflineConsG</secondary></indexterm>
<indexterm><primary>SVF::OfflineConsG</primary><secondary>addRefStoreEdge</secondary></indexterm>
<para><computeroutput>bool OfflineConsG::addRefStoreEdge (NodeID src, NodeID dst)<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Add a copy edge between src node and the ref node of dst node, while meeting a STORE constraint. </para>
    </section><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1ac6197a5515ace76b2d51451f5149aef7"/>    <section>
    <title>buildOfflineCG()</title>
<indexterm><primary>buildOfflineCG</primary><secondary>SVF::OfflineConsG</secondary></indexterm>
<indexterm><primary>SVF::OfflineConsG</primary><secondary>buildOfflineCG</secondary></indexterm>
<para><computeroutput>void OfflineConsG::buildOfflineCG ( )<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Builder of offline constraint graph </para>
    </section><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1afc60c6d897517437597c54e8f83622eb"/>    <section>
    <title>buildOfflineMap()</title>
<indexterm><primary>buildOfflineMap</primary><secondary>SVF::OfflineConsG</secondary></indexterm>
<indexterm><primary>SVF::OfflineConsG</primary><secondary>buildOfflineMap</secondary></indexterm>
<para><computeroutput>void OfflineConsG::buildOfflineMap (<link linkend="_class_s_v_f_1_1_s_c_c_detection">OSCC</link> * oscc)</computeroutput></para>
<para>Build offline node to rep map, which only collect nodes having a ref node </para>
    </section><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1a984e82f3185be03b8d1cb942685b2010"/>    <section>
    <title>createRefNode()</title>
<indexterm><primary>createRefNode</primary><secondary>SVF::OfflineConsG</secondary></indexterm>
<indexterm><primary>SVF::OfflineConsG</primary><secondary>createRefNode</secondary></indexterm>
<para><computeroutput>bool OfflineConsG::createRefNode (NodeID nodeId)<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Create a ref node for a constraint node if it does not have one </para>
    </section><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1a727c635892986998167f30ff23a75f4c"/>    <section>
    <title>dump()</title>
<indexterm><primary>dump</primary><secondary>SVF::OfflineConsG</secondary></indexterm>
<indexterm><primary>SVF::OfflineConsG</primary><secondary>dump</secondary></indexterm>
<para><computeroutput>void OfflineConsG::dump (std::string name)</computeroutput></para>
<para>Dump offline constraint graph </para>
    </section><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1ab7d06ed7e5e186b97452391c1162b181"/>    <section>
    <title>solveOfflineSCC()</title>
<indexterm><primary>solveOfflineSCC</primary><secondary>SVF::OfflineConsG</secondary></indexterm>
<indexterm><primary>SVF::OfflineConsG</primary><secondary>solveOfflineSCC</secondary></indexterm>
<para><computeroutput>void OfflineConsG::solveOfflineSCC (<link linkend="_class_s_v_f_1_1_s_c_c_detection">OSCC</link> * oscc)</computeroutput></para>
<para>Use a offline SCC detector to solve node relations in OCG. Generally, the &apos;oscc&apos; should be solved first. </para>
    </section><anchor xml:id="_class_s_v_f_1_1_offline_cons_g_1aeb069df3700dafcf365f11d697501c8f"/>    <section>
    <title>solveRep()</title>
<indexterm><primary>solveRep</primary><secondary>SVF::OfflineConsG</secondary></indexterm>
<indexterm><primary>SVF::OfflineConsG</primary><secondary>solveRep</secondary></indexterm>
<para><computeroutput>NodeID OfflineConsG::solveRep (<link linkend="_class_s_v_f_1_1_s_c_c_detection">OSCC</link> * oscc, NodeID rep)<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>The rep nodes of offline constraint graph are possible to be &apos;ref&apos; nodes. These nodes should be replaced by one of its sub nodes which is not a ref node. </para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/Graphs/OfflineConsG.hlib/Graphs/OfflineConsG.cpp</section>
</section>
