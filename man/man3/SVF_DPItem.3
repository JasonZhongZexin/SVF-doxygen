.TH "SVF::DPItem" 3 "Sun Feb 14 2021" "SVF" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SVF::DPItem
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <DPItem\&.h>\fP
.PP
Inherited by \fBSVF::CxtDPItem\fP, and \fBSVF::StmtDPItem< LocCond >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDPItem\fP (NodeID c)"
.br
.RI "Constructor\&. "
.ti -1c
.RI "\fBDPItem\fP (const \fBDPItem\fP &dps)"
.br
.RI "Copy constructor\&. "
.ti -1c
.RI "virtual \fB~DPItem\fP ()"
.br
.RI "Destructor\&. "
.ti -1c
.RI "NodeID \fBgetCurNodeID\fP () const"
.br
.ti -1c
.RI "void \fBsetCurNodeID\fP (NodeID c)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (const \fBDPItem\fP &rhs) const"
.br
.ti -1c
.RI "\fBDPItem\fP & \fBoperator=\fP (const \fBDPItem\fP &rhs)"
.br
.RI "Overloading Operator=\&. "
.ti -1c
.RI "bool \fBoperator==\fP (const \fBDPItem\fP &rhs) const"
.br
.RI "Overloading Operator==\&. "
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBDPItem\fP &rhs) const"
.br
.RI "Overloading Operator!=\&. "
.ti -1c
.RI "void \fBdump\fP () const"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBsetMaxBudget\fP (u32_t max)"
.br
.RI "set max step budge per query "
.ti -1c
.RI "static u32_t \fBgetMaxBudget\fP ()"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "NodeID \fBcur\fP"
.br
.in -1c
.SS "Static Protected Attributes"

.in +1c
.ti -1c
.RI "static u64_t \fBmaximumBudget\fP = ULONG_MAX \- 1"
.br
.in -1c
.SH "Detailed Description"
.PP 
Dynamic programming item for CFL researchability search This serves as a base class for CFL-reachability formulation by matching parentheses\&. Extend this class for further sophisticated CFL-reachability items (e\&.g\&. field, flow, path) 
.SH "Member Function Documentation"
.PP 
.SS "bool SVF::DPItem::operator< (const \fBDPItem\fP & rhs) const\fC [inline]\fP"
Enable compare operator to avoid duplicated item insertion in map or set to be noted that two vectors can also overload operator() 

.SH "Author"
.PP 
Generated automatically by Doxygen for SVF from the source code\&.
