<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_versioned_p_t_data" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>SVF::VersionedPTData</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_p_t_data" prot="public" virt="non-virtual">SVF::PTData&lt; Key, Datum, Data &gt;</basecompoundref>
    <derivedcompoundref refid="class_s_v_f_1_1_mutable_versioned_p_t_data" prot="public" virt="non-virtual">SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;</derivedcompoundref>
    <includes refid="_abstract_points_to_d_s_8h" local="no">AbstractPointsToDS.h</includes>
    <templateparamlist>
      <param>
        <type>typename Key</type>
      </param>
      <param>
        <type>typename Datum</type>
      </param>
      <param>
        <type>typename Data</type>
      </param>
      <param>
        <type>typename VersionedKey</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="class_s_v_f_1_1_versioned_p_t_data_1aad5a199fc9542ee5aaf14fe418a13ee6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::classof</definition>
        <argsstring>(const VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt; *)</argsstring>
        <name>classof</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_versioned_p_t_data" kindref="compound">VersionedPTData</ref>&lt; Key, Datum, Data, VersionedKey &gt; *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Methods to support type inquiry through isa, cast, and dyn_cast: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="244" column="24" bodyfile="include/MemoryModel/AbstractPointsToDS.h" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_versioned_p_t_data_1af90e86e2cefca127923a6d5661d31739" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::classof</definition>
        <argsstring>(const PTData&lt; Key, Datum, Data &gt; *ptd)</argsstring>
        <name>classof</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData</ref>&lt; Key, Datum, Data &gt; *</type>
          <declname>ptd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="249" column="24" bodyfile="include/MemoryModel/AbstractPointsToDS.h" bodystart="249" bodyend="252"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_versioned_p_t_data_1a2908a27b3b6f720a140134124eac86e7" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData</ref>&lt; Key, Datum, Data &gt;</type>
        <definition>typedef PTData&lt;Key, Datum, Data&gt; SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::BasePTData</definition>
        <argsstring></argsstring>
        <name>BasePTData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="219" column="20" bodyfile="include/MemoryModel/AbstractPointsToDS.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_versioned_p_t_data_1a84a4cc7bf0077f92821ad092c0ad73be" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848" kindref="member">BasePTData::PTDataTy</ref></type>
        <definition>typedef BasePTData::PTDataTy SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::PTDataTy</definition>
        <argsstring></argsstring>
        <name>PTDataTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="220" column="43" bodyfile="include/MemoryModel/AbstractPointsToDS.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_versioned_p_t_data_1a310e2323b6c64580fcdddc0375a08738" prot="public" static="no">
        <type>BasePTData::KeySet</type>
        <definition>typedef BasePTData::KeySet SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::KeySet</definition>
        <argsstring></argsstring>
        <name>KeySet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="221" column="41" bodyfile="include/MemoryModel/AbstractPointsToDS.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_versioned_p_t_data_1a4befa2e8a7c348191ba42ff54c574a12" prot="public" static="no">
        <type>Set&lt; VersionedKey &gt;</type>
        <definition>typedef Set&lt;VersionedKey&gt; SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::VersionedKeySet</definition>
        <argsstring></argsstring>
        <name>VersionedKeySet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="223" column="17" bodyfile="include/MemoryModel/AbstractPointsToDS.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_versioned_p_t_data_1a4d9ac1680e6719a9b3da706478bbdee4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::VersionedPTData</definition>
        <argsstring>(bool reversePT=true, PTDataTy ty=PTDataTy::Versioned)</argsstring>
        <name>VersionedPTData</name>
        <param>
          <type>bool</type>
          <declname>reversePT</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848" kindref="member">PTDataTy</ref></type>
          <declname>ty</declname>
          <defval>PTDataTy::Versioned</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="225" column="5" bodyfile="include/MemoryModel/AbstractPointsToDS.h" bodystart="225" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_versioned_p_t_data_1a745e82ba75807e10688198e378f109a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::~VersionedPTData</definition>
        <argsstring>()</argsstring>
        <name>~VersionedPTData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="227" column="13" bodyfile="include/MemoryModel/AbstractPointsToDS.h" bodystart="227" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_versioned_p_t_data_1a45bd3c3d1af738b998701dfaae544777" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const Data &amp;</type>
        <definition>virtual const Data&amp; SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::getPts</definition>
        <argsstring>(const VersionedKey &amp;vk)=0</argsstring>
        <name>getPts</name>
        <reimplementedby refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1a8bd59cf022c590261ad770522265538d">getPts</reimplementedby>
        <param>
          <type>const VersionedKey &amp;</type>
          <declname>vk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="229" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_versioned_p_t_data_1aa090922fa8d0a2434994ceb56c1ba8fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const VersionedKeySet &amp;</type>
        <definition>virtual const VersionedKeySet&amp; SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::getVersionedKeyRevPts</definition>
        <argsstring>(const Datum &amp;datum)=0</argsstring>
        <name>getVersionedKeyRevPts</name>
        <reimplementedby refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1ae3491bde317f1e6359c2d6a2658c4f18">getVersionedKeyRevPts</reimplementedby>
        <param>
          <type>const Datum &amp;</type>
          <declname>datum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="230" column="35"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_versioned_p_t_data_1adf3c8af290b0d465e2745bca647e4812" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::addPts</definition>
        <argsstring>(const VersionedKey &amp;vk, const Datum &amp;element)=0</argsstring>
        <name>addPts</name>
        <reimplementedby refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1a39bdea088d50ae62994b5fb29940ec85">addPts</reimplementedby>
        <param>
          <type>const VersionedKey &amp;</type>
          <declname>vk</declname>
        </param>
        <param>
          <type>const Datum &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="232" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_versioned_p_t_data_1a3503c0cab8db30aaa2b0603bbdd28632" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::unionPts</definition>
        <argsstring>(const VersionedKey &amp;dstVar, const VersionedKey &amp;srcVar)=0</argsstring>
        <name>unionPts</name>
        <reimplementedby refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1a4b0119e55f672429884e3a5262f0e213">unionPts</reimplementedby>
        <param>
          <type>const VersionedKey &amp;</type>
          <declname>dstVar</declname>
        </param>
        <param>
          <type>const VersionedKey &amp;</type>
          <declname>srcVar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="234" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_versioned_p_t_data_1a6a494dbc79246f2f207d8db35478e2cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::unionPts</definition>
        <argsstring>(const VersionedKey &amp;dstVar, const Key &amp;srcVar)=0</argsstring>
        <name>unionPts</name>
        <reimplementedby refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1afd1d94c485aac81642ca690e8e1e4d3c">unionPts</reimplementedby>
        <param>
          <type>const VersionedKey &amp;</type>
          <declname>dstVar</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>srcVar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="235" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_versioned_p_t_data_1ae259d1f362090248abd4f4520dc43ba3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::unionPts</definition>
        <argsstring>(const Key &amp;dstVar, const VersionedKey &amp;srcVar)=0</argsstring>
        <name>unionPts</name>
        <reimplementedby refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1a24bf9e1d4d8da3bbef9fbb5a671af42d">unionPts</reimplementedby>
        <param>
          <type>const Key &amp;</type>
          <declname>dstVar</declname>
        </param>
        <param>
          <type>const VersionedKey &amp;</type>
          <declname>srcVar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="236" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_versioned_p_t_data_1a56586d50f1f53f0ef5d61d480a825c16" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::unionPts</definition>
        <argsstring>(const VersionedKey &amp;dstVar, const Data &amp;srcData)=0</argsstring>
        <name>unionPts</name>
        <reimplementedby refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1a5897263968acfa99c0257f9580c196e2">unionPts</reimplementedby>
        <param>
          <type>const VersionedKey &amp;</type>
          <declname>dstVar</declname>
        </param>
        <param>
          <type>const Data &amp;</type>
          <declname>srcData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="237" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_versioned_p_t_data_1a7cdde443124531c080e5ab2b55629326" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::clearPts</definition>
        <argsstring>(const VersionedKey &amp;vk, const Datum &amp;element)=0</argsstring>
        <name>clearPts</name>
        <reimplementedby refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1a3d11f7bb5ec34c8bb7b7f5e0662c2372">clearPts</reimplementedby>
        <param>
          <type>const VersionedKey &amp;</type>
          <declname>vk</declname>
        </param>
        <param>
          <type>const Datum &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="239" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_versioned_p_t_data_1a928eca53e077c9a0f544d7334de2f549" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;::clearFullPts</definition>
        <argsstring>(const VersionedKey &amp;vk)=0</argsstring>
        <name>clearFullPts</name>
        <reimplementedby refid="class_s_v_f_1_1_mutable_versioned_p_t_data_1ab5bf2dc41daf9a04fac6eac4f66a1b2f">clearFullPts</reimplementedby>
        <param>
          <type>const VersionedKey &amp;</type>
          <declname>vk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/AbstractPointsToDS.h" line="240" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData</ref> with normal keys and versioned keys. Replicates the <ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData</ref> interface for versioned keys too. Intended to be used for versioned flow-sensitive PTA<ndash/>hence the name<ndash/>but can be used anywhere where there are two types of keys at play. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>SVF::PTData&lt; Key, Datum, Data &gt;</label>
        <link refid="class_s_v_f_1_1_p_t_data"/>
      </node>
      <node id="3">
        <label>SVF::MutableVersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;</label>
        <link refid="class_s_v_f_1_1_mutable_versioned_p_t_data"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;</label>
        <link refid="class_s_v_f_1_1_versioned_p_t_data"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>SVF::PTData&lt; Key, Datum, Data &gt;</label>
        <link refid="class_s_v_f_1_1_p_t_data"/>
      </node>
      <node id="1">
        <label>SVF::VersionedPTData&lt; Key, Datum, Data, VersionedKey &gt;</label>
        <link refid="class_s_v_f_1_1_versioned_p_t_data"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/MemoryModel/AbstractPointsToDS.h" line="216" column="1" bodyfile="include/MemoryModel/AbstractPointsToDS.h" bodystart="217" bodyend="254"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_versioned_p_t_data_1adf3c8af290b0d465e2745bca647e4812" prot="public" virt="pure-virtual"><scope>SVF::VersionedPTData</scope><name>addPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a1365146d19ee927f870a7384c0d1db6b" prot="public" virt="pure-virtual" ambiguityscope="SVF::PTData::"><scope>SVF::VersionedPTData</scope><name>addPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a48ea0972c2495007d758a0674fd958a0" prot="public" virt="non-virtual"><scope>SVF::VersionedPTData</scope><name>Base</name></member>
      <member refid="class_s_v_f_1_1_versioned_p_t_data_1a2908a27b3b6f720a140134124eac86e7" prot="public" virt="non-virtual"><scope>SVF::VersionedPTData</scope><name>BasePTData</name></member>
      <member refid="class_s_v_f_1_1_versioned_p_t_data_1aad5a199fc9542ee5aaf14fe418a13ee6" prot="public" virt="non-virtual"><scope>SVF::VersionedPTData</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_versioned_p_t_data_1af90e86e2cefca127923a6d5661d31739" prot="public" virt="non-virtual"><scope>SVF::VersionedPTData</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a3cdec1f0be962716508d3922dce058d5" prot="public" virt="pure-virtual"><scope>SVF::VersionedPTData</scope><name>clear</name></member>
      <member refid="class_s_v_f_1_1_versioned_p_t_data_1a928eca53e077c9a0f544d7334de2f549" prot="public" virt="pure-virtual"><scope>SVF::VersionedPTData</scope><name>clearFullPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a4a27923265487dac1eede5a57cc0c9a5" prot="public" virt="pure-virtual" ambiguityscope="SVF::PTData::"><scope>SVF::VersionedPTData</scope><name>clearFullPts</name></member>
      <member refid="class_s_v_f_1_1_versioned_p_t_data_1a7cdde443124531c080e5ab2b55629326" prot="public" virt="pure-virtual"><scope>SVF::VersionedPTData</scope><name>clearPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a2ee28cb51800a57a7646d72f1b92e6ac" prot="public" virt="pure-virtual" ambiguityscope="SVF::PTData::"><scope>SVF::VersionedPTData</scope><name>clearPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a9fd234f8ac4f0615ef1bc2f9c02e00ab" prot="public" virt="non-virtual"><scope>SVF::VersionedPTData</scope><name>DataFlow</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a12db671c6effedfcd48f3a390a3cea39" prot="public" virt="non-virtual"><scope>SVF::VersionedPTData</scope><name>Diff</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1affb0e613229679f926c52c37b3c141ea" prot="public" virt="pure-virtual"><scope>SVF::VersionedPTData</scope><name>dumpPTData</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a22b25cb7e65dd9989dbb4c1819d68dee" prot="public" virt="non-virtual"><scope>SVF::VersionedPTData</scope><name>getPTDTY</name></member>
      <member refid="class_s_v_f_1_1_versioned_p_t_data_1a45bd3c3d1af738b998701dfaae544777" prot="public" virt="pure-virtual"><scope>SVF::VersionedPTData</scope><name>getPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a86a93186b51b6ce9dccffecad8381281" prot="public" virt="pure-virtual" ambiguityscope="SVF::PTData::"><scope>SVF::VersionedPTData</scope><name>getPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a5ac0805846fb6bac6c58c0fefb106c5f" prot="public" virt="pure-virtual"><scope>SVF::VersionedPTData</scope><name>getRevPts</name></member>
      <member refid="class_s_v_f_1_1_versioned_p_t_data_1aa090922fa8d0a2434994ceb56c1ba8fa" prot="public" virt="pure-virtual"><scope>SVF::VersionedPTData</scope><name>getVersionedKeyRevPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a85136c4ad93cefd1d2371cc92aa2423d" prot="public" virt="non-virtual"><scope>SVF::VersionedPTData</scope><name>IncMutDataFlow</name></member>
      <member refid="class_s_v_f_1_1_versioned_p_t_data_1a310e2323b6c64580fcdddc0375a08738" prot="public" virt="non-virtual"><scope>SVF::VersionedPTData</scope><name>KeySet</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848ad89e3219f31ba0f1424c1a219565b7b0" prot="public" virt="non-virtual"><scope>SVF::VersionedPTData</scope><name>MutBase</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a13666448dbecfb781405aff71a674d4e" prot="public" virt="non-virtual"><scope>SVF::VersionedPTData</scope><name>MutDataFlow</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a31e94f61c6e2166b4c205fe03a4e912d" prot="public" virt="non-virtual"><scope>SVF::VersionedPTData</scope><name>MutDiff</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a97fea46c57fe00f026da2cd3f510e785" prot="public" virt="non-virtual"><scope>SVF::VersionedPTData</scope><name>MutVersioned</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a4481e26740c77bd69239552badf85614" prot="public" virt="non-virtual"><scope>SVF::VersionedPTData</scope><name>PTData</name></member>
      <member refid="class_s_v_f_1_1_versioned_p_t_data_1a84a4cc7bf0077f92821ad092c0ad73be" prot="public" virt="non-virtual"><scope>SVF::VersionedPTData</scope><name>PTDataTy</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a11120561456b00e1a6210e5105e8f718" prot="protected" virt="non-virtual"><scope>SVF::VersionedPTData</scope><name>ptdTy</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1aea15e71384244f3ad556e9924a1d0d21" prot="protected" virt="non-virtual"><scope>SVF::VersionedPTData</scope><name>rev</name></member>
      <member refid="class_s_v_f_1_1_versioned_p_t_data_1a3503c0cab8db30aaa2b0603bbdd28632" prot="public" virt="pure-virtual"><scope>SVF::VersionedPTData</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_versioned_p_t_data_1a6a494dbc79246f2f207d8db35478e2cb" prot="public" virt="pure-virtual"><scope>SVF::VersionedPTData</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_versioned_p_t_data_1ae259d1f362090248abd4f4520dc43ba3" prot="public" virt="pure-virtual"><scope>SVF::VersionedPTData</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_versioned_p_t_data_1a56586d50f1f53f0ef5d61d480a825c16" prot="public" virt="pure-virtual"><scope>SVF::VersionedPTData</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a482eda0b2ea6a8e1326ee1a0c25c1fdc" prot="public" virt="pure-virtual" ambiguityscope="SVF::PTData::"><scope>SVF::VersionedPTData</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1ab378c0f2171f6de9b8aa076b43f88e89" prot="public" virt="pure-virtual" ambiguityscope="SVF::PTData::"><scope>SVF::VersionedPTData</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a4fcfbbd2f9f50444a49c4cc4065b0aeb" prot="public" virt="non-virtual"><scope>SVF::VersionedPTData</scope><name>Versioned</name></member>
      <member refid="class_s_v_f_1_1_versioned_p_t_data_1a4befa2e8a7c348191ba42ff54c574a12" prot="public" virt="non-virtual"><scope>SVF::VersionedPTData</scope><name>VersionedKeySet</name></member>
      <member refid="class_s_v_f_1_1_versioned_p_t_data_1a4d9ac1680e6719a9b3da706478bbdee4" prot="public" virt="non-virtual"><scope>SVF::VersionedPTData</scope><name>VersionedPTData</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a982153a8d2300d18549a7a6c4235c52d" prot="public" virt="virtual"><scope>SVF::VersionedPTData</scope><name>~PTData</name></member>
      <member refid="class_s_v_f_1_1_versioned_p_t_data_1a745e82ba75807e10688198e378f109a3" prot="public" virt="virtual"><scope>SVF::VersionedPTData</scope><name>~VersionedPTData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
