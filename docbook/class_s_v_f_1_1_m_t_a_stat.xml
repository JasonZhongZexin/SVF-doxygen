<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_m_t_a_stat" xml:lang="en-US">
<title>SVF::MTAStat Class Reference</title>
<indexterm><primary>SVF::MTAStat</primary></indexterm>
<para>
<computeroutput>#include &lt;MTAStat.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for SVF::MTAStat:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_m_t_a_stat.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_m_t_a_stat_1a424ec97192aa5681f9f92a0a6f3ee8a8"/>typedef Set&lt; const Instruction * &gt; <emphasis role="strong">InstSet</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_m_t_a_stat_1a10631a14fd258679f98c17622de4352a"/><link linkend="_class_s_v_f_1_1_m_t_a_stat_1a10631a14fd258679f98c17622de4352a">MTAStat</link> ()</para>

<para>Constructor. </para>
</listitem>
            <listitem><para>void <link linkend="_class_s_v_f_1_1_m_t_a_stat_1a19c9c1cba3a2cf665f7a05570e316e2e">performThreadCallGraphStat</link> (<link linkend="_class_s_v_f_1_1_thread_call_graph">ThreadCallGraph</link> *tcg)</para>

<para>Statistics for thread call graph. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_m_t_a_stat_1a12f6bd291b206c18001f5d4775251481"/>void <link linkend="_class_s_v_f_1_1_m_t_a_stat_1a12f6bd291b206c18001f5d4775251481">performTCTStat</link> (<link linkend="_class_s_v_f_1_1_t_c_t">TCT</link> *tct)</para>

<para>Statistics for thread creation tree. </para>
</listitem>
            <listitem><para>void <link linkend="_class_s_v_f_1_1_m_t_a_stat_1a6464eb27715b598bab0217258860a04b">performMHPPairStat</link> (<link linkend="_class_s_v_f_1_1_m_h_p">MHP</link> *mhp, <link linkend="_class_s_v_f_1_1_lock_analysis">LockAnalysis</link> *lsa)</para>

<para>Statistics for <link linkend="_class_s_v_f_1_1_m_h_p">MHP</link> statement pairs. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_m_t_a_stat_1a21f01e6b0362de2c2ad12d5689c26940"/>void <link linkend="_class_s_v_f_1_1_m_t_a_stat_1a21f01e6b0362de2c2ad12d5689c26940">performAnnotationStat</link> (<link linkend="_class_s_v_f_1_1_m_t_a_annotator">MTAAnnotator</link> *anno)</para>

<para>Statistics for annotation. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_m_t_a_stat_1a3298dd910e731fdabc87bbcf65371a4a"/>double <emphasis role="strong">TCTTime</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_m_t_a_stat_1a56411f7e64febab8aab94a4a9207e5d8"/>double <emphasis role="strong">MHPTime</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_m_t_a_stat_1a030671ec358a93e3c2887f048dcfcce8"/>double <emphasis role="strong">FSMPTATime</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_m_t_a_stat_1a51e1ba35f81d89e210a937942f516839"/>double <emphasis role="strong">AnnotationTime</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Statistics for <link linkend="_class_s_v_f_1_1_m_t_a">MTA</link> </para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_m_t_a_stat_1a6464eb27715b598bab0217258860a04b"/>    <section>
    <title>performMHPPairStat()</title>
<indexterm><primary>performMHPPairStat</primary><secondary>SVF::MTAStat</secondary></indexterm>
<indexterm><primary>SVF::MTAStat</primary><secondary>performMHPPairStat</secondary></indexterm>
<para><computeroutput>void MTAStat::performMHPPairStat (<link linkend="_class_s_v_f_1_1_m_h_p">MHP</link> * mhp, <link linkend="_class_s_v_f_1_1_lock_analysis">LockAnalysis</link> * lsa)</computeroutput></para><para>

<para>Statistics for <link linkend="_class_s_v_f_1_1_m_h_p">MHP</link> statement pairs. </para>
</para>

<para>Iterate every memory access pairs write vs read write vs write </para>
    </section><anchor xml:id="_class_s_v_f_1_1_m_t_a_stat_1a19c9c1cba3a2cf665f7a05570e316e2e"/>    <section>
    <title>performThreadCallGraphStat()</title>
<indexterm><primary>performThreadCallGraphStat</primary><secondary>SVF::MTAStat</secondary></indexterm>
<indexterm><primary>SVF::MTAStat</primary><secondary>performThreadCallGraphStat</secondary></indexterm>
<para><computeroutput>void MTAStat::performThreadCallGraphStat (<link linkend="_class_s_v_f_1_1_thread_call_graph">ThreadCallGraph</link> * tcg)</computeroutput></para><para>

<para>Statistics for thread call graph. </para>
</para>

<para>Statistics for thread call graph </para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/MTA/MTAStat.hlib/MTA/MTAStat.cpp</section>
</section>
