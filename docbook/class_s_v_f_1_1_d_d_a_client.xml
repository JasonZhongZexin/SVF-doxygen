<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_d_d_a_client" xml:lang="en-US">
<title>SVF::DDAClient Class Reference</title>
<indexterm><primary>SVF::DDAClient</primary></indexterm>
<para>
<computeroutput>#include &lt;DDAClient.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for SVF::DDAClient:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_d_d_a_client.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_d_d_a_client_1a1070c1a68fa7da7bdb23240957048ee9"/><emphasis role="strong">DDAClient</emphasis> (<link linkend="_class_s_v_f_1_1_s_v_f_module">SVFModule</link> *mod)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_d_d_a_client_1a40f6d8769db41f4c907fe5b615e5df83"/>virtual void <emphasis role="strong">initialise</emphasis> (<link linkend="_class_s_v_f_1_1_s_v_f_module">SVFModule</link> *)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_d_d_a_client_1a77da21e92c5068d3c9bdbc1cac0486b9"/>virtual OrderedNodeSet &amp; <link linkend="_class_s_v_f_1_1_d_d_a_client_1a77da21e92c5068d3c9bdbc1cac0486b9">collectCandidateQueries</link> (<link linkend="_class_s_v_f_1_1_p_a_g">PAG</link> *p)</para>

<para>Collect candidate pointers for query. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_d_d_a_client_1a6f50b9a26f66e716acf163cc77030e5f"/>const OrderedNodeSet &amp; <link linkend="_class_s_v_f_1_1_d_d_a_client_1a6f50b9a26f66e716acf163cc77030e5f">getCandidateQueries</link> () const</para>

<para>Get candidate queries. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_d_d_a_client_1aec3de00152e828beb5037269430f387d"/>virtual void <link linkend="_class_s_v_f_1_1_d_d_a_client_1aec3de00152e828beb5037269430f387d">handleStatement</link> (const <link linkend="_class_s_v_f_1_1_v_f_g_node">SVFGNode</link> *, NodeID)</para>

<para>Call back used by <link linkend="_class_s_v_f_1_1_d_d_a_v_f_solver">DDAVFSolver</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_d_d_a_client_1af0ca064f86a9e9a7764c0e2577d49ce2"/>void <link linkend="_class_s_v_f_1_1_d_d_a_client_1af0ca064f86a9e9a7764c0e2577d49ce2">setPAG</link> (<link linkend="_class_s_v_f_1_1_p_a_g">PAG</link> *g)</para>

<para>Set <link linkend="_class_s_v_f_1_1_p_a_g">PAG</link> graph. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_d_d_a_client_1a3fbe4ffde0a14b2db40189883d49237f"/>void <link linkend="_class_s_v_f_1_1_d_d_a_client_1a3fbe4ffde0a14b2db40189883d49237f">setCurrentQueryPtr</link> (NodeID ptr)</para>

<para>Set the pointer being queried. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_d_d_a_client_1a3d0f732e284f3237287b375582c0aa88"/>void <link linkend="_class_s_v_f_1_1_d_d_a_client_1a3d0f732e284f3237287b375582c0aa88">setQuery</link> (NodeID ptr)</para>

<para>Set pointer to be queried by DDA analysis. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_d_d_a_client_1ad9484fac56de8beaf120b1611d23dddc"/><link linkend="_class_s_v_f_1_1_s_v_f_module">SVFModule</link> * <link linkend="_class_s_v_f_1_1_d_d_a_client_1ad9484fac56de8beaf120b1611d23dddc">getModule</link> () const</para>

<para>Get LLVM module. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_d_d_a_client_1a3b202f9a70b6e23c06a15556d23d245e"/>virtual void <emphasis role="strong">answerQueries</emphasis> (<link linkend="_class_s_v_f_1_1_pointer_analysis">PointerAnalysis</link> *pta)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_d_d_a_client_1aedd25e487775d37d4f6dcc8a5565c2a3"/>virtual void <emphasis role="strong">performStat</emphasis> (<link linkend="_class_s_v_f_1_1_pointer_analysis">PointerAnalysis</link> *)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_d_d_a_client_1a76b4c50a1051ff7c0b162b55473de028"/>virtual void <emphasis role="strong">collectWPANum</emphasis> (<link linkend="_class_s_v_f_1_1_s_v_f_module">SVFModule</link> *)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_d_d_a_client_1a7c07d9527011ea0165038e3a112a85d8"/>void <emphasis role="strong">addCandidate</emphasis> (NodeID id)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_d_d_a_client_1a9b5fe841dca605d3a30fe0e9e77baf08"/><link linkend="_class_s_v_f_1_1_p_a_g">PAG</link> * <link linkend="_class_s_v_f_1_1_d_d_a_client_1a9b5fe841dca605d3a30fe0e9e77baf08">pag</link></para>

<para><link linkend="_class_s_v_f_1_1_p_a_g">PAG</link> graph used by current DDA analysis. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_d_d_a_client_1a4ac68012099540beb87ee4700e824d64"/><link linkend="_class_s_v_f_1_1_s_v_f_module">SVFModule</link> * <link linkend="_class_s_v_f_1_1_d_d_a_client_1a4ac68012099540beb87ee4700e824d64">module</link></para>

<para>LLVM module. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_d_d_a_client_1a6a133cf24ef65eaf58c82ec213f3f6cb"/>NodeID <link linkend="_class_s_v_f_1_1_d_d_a_client_1a6a133cf24ef65eaf58c82ec213f3f6cb">curPtr</link></para>

<para>current pointer being queried </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_d_d_a_client_1aa6fdff97be2e1a886237b515406d2e61"/>OrderedNodeSet <link linkend="_class_s_v_f_1_1_d_d_a_client_1aa6fdff97be2e1a886237b515406d2e61">candidateQueries</link></para>

<para>store all candidate pointers to be queried </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>General <link linkend="_class_s_v_f_1_1_d_d_a_client">DDAClient</link> which queries all top level pointers by default. </para>
<para>
The documentation for this class was generated from the following files:</para>
include/DDA/DDAClient.hlib/DDA/DDAClient.cpp</section>
</section>
