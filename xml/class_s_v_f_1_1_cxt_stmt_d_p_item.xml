<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_cxt_stmt_d_p_item" kind="class" language="C++" prot="public">
    <compoundname>SVF::CxtStmtDPItem</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_stmt_d_p_item" prot="public" virt="non-virtual">SVF::StmtDPItem&lt; LocCond &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>class LocCond</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_cxt_stmt_d_p_item_1a96f1d7c309e3b69af66200e2cfb5a466" prot="private" static="no" mutable="no">
        <type><ref refid="class_s_v_f_1_1_context_cond" kindref="compound">ContextCond</ref></type>
        <definition>ContextCond SVF::CxtStmtDPItem&lt; LocCond &gt;::context</definition>
        <argsstring></argsstring>
        <name>context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="358" column="17" bodyfile="include/Util/DPItem.h" bodystart="358" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_cxt_stmt_d_p_item_1a5c3bd4e8f26bfdc863baeb1241a557d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::CxtStmtDPItem&lt; LocCond &gt;::CxtStmtDPItem</definition>
        <argsstring>(const CxtVar &amp;var, const LocCond *locCond)</argsstring>
        <name>CxtStmtDPItem</name>
        <param>
          <type>const <ref refid="namespace_s_v_f_1ab3532a31724d8719d29aa4c3521ca215" kindref="member">CxtVar</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>const LocCond *</type>
          <declname>locCond</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="361" column="5" bodyfile="include/Util/DPItem.h" bodystart="361" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_cxt_stmt_d_p_item_1a595d44fa92f4ebef2fe789873fd357e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::CxtStmtDPItem&lt; LocCond &gt;::CxtStmtDPItem</definition>
        <argsstring>(const CxtStmtDPItem&lt; LocCond &gt; &amp;dps)</argsstring>
        <name>CxtStmtDPItem</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_cxt_stmt_d_p_item" kindref="compound">CxtStmtDPItem</ref>&lt; LocCond &gt; &amp;</type>
          <declname>dps</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="365" column="5" bodyfile="include/Util/DPItem.h" bodystart="365" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_cxt_stmt_d_p_item_1a18c4928c23037cdb34637ca16e1ac06d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::CxtStmtDPItem&lt; LocCond &gt;::~CxtStmtDPItem</definition>
        <argsstring>()</argsstring>
        <name>~CxtStmtDPItem</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="370" column="13" bodyfile="include/Util/DPItem.h" bodystart="370" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_cxt_stmt_d_p_item_1ab1098f5093419b62ea27a20933059270" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_s_v_f_1ab3532a31724d8719d29aa4c3521ca215" kindref="member">CxtVar</ref></type>
        <definition>CxtVar SVF::CxtStmtDPItem&lt; LocCond &gt;::getCondVar</definition>
        <argsstring>() const</argsstring>
        <name>getCondVar</name>
        <briefdescription>
<para>Get context var. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="374" column="19" bodyfile="include/Util/DPItem.h" bodystart="374" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_cxt_stmt_d_p_item_1ace41c90e66f6a85f12ff67540ad9d594" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_s_v_f_1_1_context_cond" kindref="compound">ContextCond</ref> &amp;</type>
        <definition>const ContextCond&amp; SVF::CxtStmtDPItem&lt; LocCond &gt;::getCond</definition>
        <argsstring>() const</argsstring>
        <name>getCond</name>
        <briefdescription>
<para>Get context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="380" column="30" bodyfile="include/Util/DPItem.h" bodystart="380" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_cxt_stmt_d_p_item_1a987f57970d633acc10aa3f3e69b68cb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_context_cond" kindref="compound">ContextCond</ref> &amp;</type>
        <definition>ContextCond&amp; SVF::CxtStmtDPItem&lt; LocCond &gt;::getCond</definition>
        <argsstring>()</argsstring>
        <name>getCond</name>
        <briefdescription>
<para>Get context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="385" column="24" bodyfile="include/Util/DPItem.h" bodystart="385" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_cxt_stmt_d_p_item_1a3bb07147466d6ccb397616e1c09fc60b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::CxtStmtDPItem&lt; LocCond &gt;::pushContext</definition>
        <argsstring>(NodeID cxt)</argsstring>
        <name>pushContext</name>
        <param>
          <type>NodeID</type>
          <declname>cxt</declname>
        </param>
        <briefdescription>
<para>Push context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="390" column="17" bodyfile="include/Util/DPItem.h" bodystart="390" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_cxt_stmt_d_p_item_1a35c0c0d5194983769e313d6e31b3d7ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::CxtStmtDPItem&lt; LocCond &gt;::matchContext</definition>
        <argsstring>(NodeID cxt)</argsstring>
        <name>matchContext</name>
        <param>
          <type>NodeID</type>
          <declname>cxt</declname>
        </param>
        <briefdescription>
<para>Match context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="396" column="17" bodyfile="include/Util/DPItem.h" bodystart="396" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_cxt_stmt_d_p_item_1a307f95b6f22e0231a2da7b14a2db07cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::CxtStmtDPItem&lt; LocCond &gt;::operator&lt;</definition>
        <argsstring>(const CxtStmtDPItem&lt; LocCond &gt; &amp;rhs) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_cxt_stmt_d_p_item" kindref="compound">CxtStmtDPItem</ref>&lt; LocCond &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable compare operator to avoid duplicated item insertion in map or set to be noted that two vectors can also overload operator() </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="403" column="12" bodyfile="include/Util/DPItem.h" bodystart="403" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_cxt_stmt_d_p_item_1aef8f7d034bdd10730e3ff1a2ae52350c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_s_v_f_1_1_cxt_stmt_d_p_item" kindref="compound">CxtStmtDPItem</ref>&lt; LocCond &gt; &amp;</type>
        <definition>CxtStmtDPItem&lt;LocCond&gt;&amp; SVF::CxtStmtDPItem&lt; LocCond &gt;::operator=</definition>
        <argsstring>(const CxtStmtDPItem&lt; LocCond &gt; &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_cxt_stmt_d_p_item" kindref="compound">CxtStmtDPItem</ref>&lt; LocCond &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Overloading operator=. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="413" column="26" bodyfile="include/Util/DPItem.h" bodystart="413" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_cxt_stmt_d_p_item_1a201619b723a5548029dd7402e06608e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::CxtStmtDPItem&lt; LocCond &gt;::operator==</definition>
        <argsstring>(const CxtStmtDPItem&lt; LocCond &gt; &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_cxt_stmt_d_p_item" kindref="compound">CxtStmtDPItem</ref>&lt; LocCond &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Overloading operator==. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="423" column="17" bodyfile="include/Util/DPItem.h" bodystart="423" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_cxt_stmt_d_p_item_1a2cab28448a57f568ac7c3ff43af0d60d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::CxtStmtDPItem&lt; LocCond &gt;::operator!=</definition>
        <argsstring>(const CxtStmtDPItem&lt; LocCond &gt; &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_cxt_stmt_d_p_item" kindref="compound">CxtStmtDPItem</ref>&lt; LocCond &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Overloading operator==. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="428" column="17" bodyfile="include/Util/DPItem.h" bodystart="428" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_cxt_stmt_d_p_item_1abc67c264dd262d25899e04f8d68e8a31" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::CxtStmtDPItem&lt; LocCond &gt;::dump</definition>
        <argsstring>() const</argsstring>
        <name>dump</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Util/DPItem.h" line="432" column="17" bodyfile="include/Util/DPItem.h" bodystart="432" bodyend="436"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>SVF::DPItem</label>
        <link refid="class_s_v_f_1_1_d_p_item"/>
      </node>
      <node id="1">
        <label>SVF::CxtStmtDPItem&lt; LocCond &gt;</label>
        <link refid="class_s_v_f_1_1_cxt_stmt_d_p_item"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SVF::StmtDPItem&lt; LocCond &gt;</label>
        <link refid="class_s_v_f_1_1_stmt_d_p_item"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>SVF::DPItem</label>
        <link refid="class_s_v_f_1_1_d_p_item"/>
      </node>
      <node id="1">
        <label>SVF::CxtStmtDPItem&lt; LocCond &gt;</label>
        <link refid="class_s_v_f_1_1_cxt_stmt_d_p_item"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SVF::StmtDPItem&lt; LocCond &gt;</label>
        <link refid="class_s_v_f_1_1_stmt_d_p_item"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/Util/DPItem.h" line="355" column="1" bodyfile="include/Util/DPItem.h" bodystart="356" bodyend="437"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_cxt_stmt_d_p_item_1a96f1d7c309e3b69af66200e2cfb5a466" prot="private" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>context</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a82d2a11fb456192ec88fcb5ffe239d80" prot="protected" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>cur</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a9e20ebd5ae8272a4aef74914098f97ef" prot="protected" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>curloc</name></member>
      <member refid="class_s_v_f_1_1_cxt_stmt_d_p_item_1a5c3bd4e8f26bfdc863baeb1241a557d1" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>CxtStmtDPItem</name></member>
      <member refid="class_s_v_f_1_1_cxt_stmt_d_p_item_1a595d44fa92f4ebef2fe789873fd357e0" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>CxtStmtDPItem</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1ac5dbe11ebf512e6dccdfa1eceba04fe8" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>DPItem</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a715b7de4a392d8c389e611e27f8b9184" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>DPItem</name></member>
      <member refid="class_s_v_f_1_1_cxt_stmt_d_p_item_1abc67c264dd262d25899e04f8d68e8a31" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>dump</name></member>
      <member refid="class_s_v_f_1_1_cxt_stmt_d_p_item_1ace41c90e66f6a85f12ff67540ad9d594" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>getCond</name></member>
      <member refid="class_s_v_f_1_1_cxt_stmt_d_p_item_1a987f57970d633acc10aa3f3e69b68cb0" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>getCond</name></member>
      <member refid="class_s_v_f_1_1_cxt_stmt_d_p_item_1ab1098f5093419b62ea27a20933059270" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>getCondVar</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a03a90eca842c0e83d874902103f6fdb2" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>getCurNodeID</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a3616c94c4394b61c757ffcd39888d5b9" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>getLoc</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1af9d8f95249190e164131dc19b6db1b67" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>getMaxBudget</name></member>
      <member refid="class_s_v_f_1_1_cxt_stmt_d_p_item_1a35c0c0d5194983769e313d6e31b3d7ec" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>matchContext</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a5dbb0e6010b38c5b937ff06cb40cd0ef" prot="protected" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>maximumBudget</name></member>
      <member refid="class_s_v_f_1_1_cxt_stmt_d_p_item_1a2cab28448a57f568ac7c3ff43af0d60d" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>operator!=</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1ab89875a3b692ed348b1b28bb9a173254" prot="public" virt="non-virtual" ambiguityscope="SVF::StmtDPItem::"><scope>SVF::CxtStmtDPItem</scope><name>operator!=</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1add804064ca2bfaa16bcc25503698a1ea" prot="public" virt="non-virtual" ambiguityscope="SVF::DPItem::"><scope>SVF::CxtStmtDPItem</scope><name>operator!=</name></member>
      <member refid="class_s_v_f_1_1_cxt_stmt_d_p_item_1a307f95b6f22e0231a2da7b14a2db07cf" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>operator&lt;</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1af92976dc7a8785165cefb047e742cdf6" prot="public" virt="non-virtual" ambiguityscope="SVF::StmtDPItem::"><scope>SVF::CxtStmtDPItem</scope><name>operator&lt;</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a639c757076141a14bedc26c73f875ffe" prot="public" virt="non-virtual" ambiguityscope="SVF::DPItem::"><scope>SVF::CxtStmtDPItem</scope><name>operator&lt;</name></member>
      <member refid="class_s_v_f_1_1_cxt_stmt_d_p_item_1aef8f7d034bdd10730e3ff1a2ae52350c" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>operator=</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a072da7dc37fd3f9b7a79196394382499" prot="public" virt="non-virtual" ambiguityscope="SVF::StmtDPItem::"><scope>SVF::CxtStmtDPItem</scope><name>operator=</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a10226d37dfef045bec9f7cfb78315440" prot="public" virt="non-virtual" ambiguityscope="SVF::DPItem::"><scope>SVF::CxtStmtDPItem</scope><name>operator=</name></member>
      <member refid="class_s_v_f_1_1_cxt_stmt_d_p_item_1a201619b723a5548029dd7402e06608e7" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>operator==</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1afd63ae0d881101d6c61709b9ac25dbf8" prot="public" virt="non-virtual" ambiguityscope="SVF::StmtDPItem::"><scope>SVF::CxtStmtDPItem</scope><name>operator==</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1ad67fcd340351360555b0cb88f57b183a" prot="public" virt="non-virtual" ambiguityscope="SVF::DPItem::"><scope>SVF::CxtStmtDPItem</scope><name>operator==</name></member>
      <member refid="class_s_v_f_1_1_cxt_stmt_d_p_item_1a3bb07147466d6ccb397616e1c09fc60b" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>pushContext</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a5fbde30cae2cb09bd9dc9a6969ea4b90" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>setCurNodeID</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a9ba9ab1013a36530369aa6d684397f4f" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>setLoc</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a3feb4bc8e003cfdd30c1b2cfb2219efb" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>setLocVar</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a687ef8944ccb55b826508c47ea5b9240" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>setMaxBudget</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1aed9239e5558569f6e957e691fa1872d7" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>StmtDPItem</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a3882dc175baaccfa1f811dcbfef98f71" prot="public" virt="non-virtual"><scope>SVF::CxtStmtDPItem</scope><name>StmtDPItem</name></member>
      <member refid="class_s_v_f_1_1_cxt_stmt_d_p_item_1a18c4928c23037cdb34637ca16e1ac06d" prot="public" virt="virtual"><scope>SVF::CxtStmtDPItem</scope><name>~CxtStmtDPItem</name></member>
      <member refid="class_s_v_f_1_1_d_p_item_1a1df86140eee6015369836d20d509f14d" prot="public" virt="virtual"><scope>SVF::CxtStmtDPItem</scope><name>~DPItem</name></member>
      <member refid="class_s_v_f_1_1_stmt_d_p_item_1a710bee7fe8262d1fe8ed9c6160562abb" prot="public" virt="virtual"><scope>SVF::CxtStmtDPItem</scope><name>~StmtDPItem</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
