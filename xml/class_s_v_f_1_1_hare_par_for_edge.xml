<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_hare_par_for_edge" kind="class" language="C++" prot="public">
    <compoundname>SVF::HareParForEdge</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_p_t_a_call_graph_edge" prot="public" virt="non-virtual">SVF::PTACallGraphEdge</basecompoundref>
    <includes refid="_thread_call_graph_8h" local="no">ThreadCallGraph.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_hare_par_for_edge_1ac352ec0ba628ac5fe96b1f6d74808cb2" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_generic_node" kindref="compound">GenericNode</ref>&lt; <ref refid="class_s_v_f_1_1_p_t_a_call_graph_node" kindref="compound">PTACallGraphNode</ref>, <ref refid="class_s_v_f_1_1_hare_par_for_edge" kindref="compound">HareParForEdge</ref> &gt;::GEdgeSetTy</type>
        <definition>typedef GenericNode&lt;PTACallGraphNode, HareParForEdge&gt;::GEdgeSetTy SVF::HareParForEdge::ParForEdgeSet</definition>
        <argsstring></argsstring>
        <name>ParForEdgeSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ThreadCallGraph.h" line="151" column="38" bodyfile="include/Graphs/ThreadCallGraph.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_hare_par_for_edge_1a097ccd687d7ca511a4a453dd56b7c665" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::HareParForEdge::HareParForEdge</definition>
        <argsstring>(PTACallGraphNode *s, PTACallGraphNode *d, CallSiteID csId)</argsstring>
        <name>HareParForEdge</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_t_a_call_graph_node" kindref="compound">PTACallGraphNode</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_t_a_call_graph_node" kindref="compound">PTACallGraphNode</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>CallSiteID</type>
          <declname>csId</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ThreadCallGraph.h" line="130" column="5" bodyfile="include/Graphs/ThreadCallGraph.h" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_hare_par_for_edge_1a6496eb7d7d33d49cc174722034451b1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::HareParForEdge::~HareParForEdge</definition>
        <argsstring>()</argsstring>
        <name>~HareParForEdge</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ThreadCallGraph.h" line="135" column="13" bodyfile="include/Graphs/ThreadCallGraph.h" bodystart="135" bodyend="137"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_s_v_f_1_1_hare_par_for_edge_1ab1dba5dff1e71bce578dc7b0009ba518" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SVF::HareParForEdge::classof</definition>
        <argsstring>(const HareParForEdge *)</argsstring>
        <name>classof</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_hare_par_for_edge" kindref="compound">HareParForEdge</ref> *</type>
        </param>
        <briefdescription>
<para>ClassOf. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ThreadCallGraph.h" line="141" column="24" bodyfile="include/Graphs/ThreadCallGraph.h" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_hare_par_for_edge_1af9cc260c4a767f9ebd4a454dff4f88be" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SVF::HareParForEdge::classof</definition>
        <argsstring>(const PTACallGraphEdge *edge)</argsstring>
        <name>classof</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_p_t_a_call_graph_edge" kindref="compound">PTACallGraphEdge</ref> *</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ThreadCallGraph.h" line="145" column="24" bodyfile="include/Graphs/ThreadCallGraph.h" bodystart="145" bodyend="148"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>hare_parallel_for edge from fork site to the entry of a start routine function </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>SVF::HareParForEdge</label>
        <link refid="class_s_v_f_1_1_hare_par_for_edge"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SVF::PTACallGraphEdge</label>
        <link refid="class_s_v_f_1_1_p_t_a_call_graph_edge"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>GenericCallGraphEdgeTy</label>
        <link refid="class_s_v_f_1_1_generic_edge"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>SVF::HareParForEdge</label>
        <link refid="class_s_v_f_1_1_hare_par_for_edge"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SVF::PTACallGraphEdge</label>
        <link refid="class_s_v_f_1_1_p_t_a_call_graph_edge"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>GenericCallGraphEdgeTy</label>
        <link refid="class_s_v_f_1_1_generic_edge"/>
      </node>
    </collaborationgraph>
    <location file="include/Graphs/ThreadCallGraph.h" line="125" column="1" bodyfile="include/Graphs/ThreadCallGraph.h" bodystart="126" bodyend="152"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a9f2ef4c539e31e91f26a3af2ffae26de" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>addDirectCallSite</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1aad95920da19b78c0211e68caadba6d39" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>addInDirectCallSite</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1aa96d6bc3ffd3a5537b871a4c87c65888" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>CallGraphEdgeSet</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1aca11d1b778309a72e9d345bd02324459" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>CallInstSet</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a9738544725458bb022b8d5f2dbd281f7aa968b68fb87a0135833105f4e6413c69" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>CallRetEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a9738544725458bb022b8d5f2dbd281f7" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>CEDGEK</name></member>
      <member refid="class_s_v_f_1_1_hare_par_for_edge_1ab1dba5dff1e71bce578dc7b0009ba518" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_hare_par_for_edge_1af9cc260c4a767f9ebd4a454dff4f88be" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1afb092fc0502837b52ebcaa3c0dedb736" prot="public" virt="non-virtual" ambiguityscope="SVF::PTACallGraphEdge::"><scope>SVF::HareParForEdge</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a750e50a9022451e406c4819979edffa5" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>directCallsBegin</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1acc4fcacefdc9be9a214dfcc455fe7970" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>directCallsEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a93dec4c27088242a4b1b6aa82cea46b9" prot="protected" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>EdgeKindMask</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1af1c2fd4b5ef1d7b7605572bf2489c298" prot="protected" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>EdgeKindMaskBits</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1aab8892b73370c32b48621cd1d0cce614" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>GEdgeFlag</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a7eb93c9018c80057672a8ce71615dc0d" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>GEdgeKind</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a6764973569c281d483afab17a75cb4dc" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>GenericEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1af9ca9cfffbba3b68838d41be62c914ac" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>getCallSiteID</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1af0e9f86be3cf263b868f80d374641fc9" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>getDirectCalls</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a6310e7684d6b6ecd345f557eda899160" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>getDirectCalls</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1ad9edb45e74ae675d9da82f5acf02d56e" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>getDstID</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1aeaa31a2c8479e831b36ce2e2582ceb86" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>getDstNode</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1abe8525c542def8162b094c169a01993b" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>getEdgeKind</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a76aa19edf03a4cacfa3e27a21abfcd07" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>getIndirectCalls</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a51dbd8a7b9d0a4602215f71e3fdfee5f" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>getIndirectCalls</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1ae6792506a0150a9400d635eceab7f9e7" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>getSrcID</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1ab47ca533c415841ef75456cbad439589" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>getSrcNode</name></member>
      <member refid="class_s_v_f_1_1_hare_par_for_edge_1a097ccd687d7ca511a4a453dd56b7c665" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>HareParForEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a9738544725458bb022b8d5f2dbd281f7a17e0d58fd42d0d493087e698d4ecd838" prot="public" virt="non-virtual" ambiguityscope="SVF::PTACallGraphEdge::"><scope>SVF::HareParForEdge</scope><name>HareParForEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1afbdb582d20ab953b2de1f3efacb74679" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>indirectCallsBegin</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a494bc8bacca5ca8d266286f3fb303495" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>indirectCallsEnd</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a8c46ccaa41f6792ca4a31a56548a554a" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>isDirectCallEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a74692d47f929dc2188eede497acb91b7" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>isIndirectCallEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a4eaeb2765fdcc455116537dbe2119800" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>makeEdgeFlagWithInvokeID</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1aff95460d4b859e657a9198b7c5e5c736" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>NodeType</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a88b2086dcebb60bc86bca0fb94f49fca" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>operator==</name></member>
      <member refid="class_s_v_f_1_1_hare_par_for_edge_1ac352ec0ba628ac5fe96b1f6d74808cb2" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>ParForEdgeSet</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1aa34123e6c62c3f152b579510c09984e6" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>PTACallGraphEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a9738544725458bb022b8d5f2dbd281f7af32caf15ca19d512b5183bcf0d859cd7" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>TDForkEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a9738544725458bb022b8d5f2dbd281f7a2d65840140263a0808f5b9d553a4bff5" prot="public" virt="non-virtual"><scope>SVF::HareParForEdge</scope><name>TDJoinEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1a27979e812ced26f114369b46e1536b02" prot="public" virt="virtual"><scope>SVF::HareParForEdge</scope><name>toString</name></member>
      <member refid="class_s_v_f_1_1_generic_edge_1a548daea0cac6491de91d4840b7297741" prot="public" virt="virtual"><scope>SVF::HareParForEdge</scope><name>~GenericEdge</name></member>
      <member refid="class_s_v_f_1_1_hare_par_for_edge_1a6496eb7d7d33d49cc174722034451b1b" prot="public" virt="virtual"><scope>SVF::HareParForEdge</scope><name>~HareParForEdge</name></member>
      <member refid="class_s_v_f_1_1_p_t_a_call_graph_edge_1af17fd69ee1061b7348af1b2739f145a9" prot="public" virt="virtual"><scope>SVF::HareParForEdge</scope><name>~PTACallGraphEdge</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
