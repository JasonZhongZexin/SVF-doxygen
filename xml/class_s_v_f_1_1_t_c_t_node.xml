<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_t_c_t_node" kind="class" language="C++" prot="public">
    <compoundname>SVF::TCTNode</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_generic_node" prot="public" virt="non-virtual">SVF::GenericNode&lt; TCTNode, TCTEdge &gt;</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_t_c_t_node_1a8f2ef1020b45aada8b79ac3b8d27c2a6" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_s_v_f_1_1_cxt_thread" kindref="compound">CxtThread</ref></type>
        <definition>const CxtThread SVF::TCTNode::ctx</definition>
        <argsstring></argsstring>
        <name>ctx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/TCT.h" line="107" column="21" bodyfile="include/MTA/TCT.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_t_c_t_node_1a414f4b98fb8fd36d2cb381ff56eb98d8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SVF::TCTNode::multiforked</definition>
        <argsstring></argsstring>
        <name>multiforked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/TCT.h" line="108" column="10" bodyfile="include/MTA/TCT.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_t_c_t_node_1afdb40d78890c84d47441ade941a6d8c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::TCTNode::TCTNode</definition>
        <argsstring>(NodeID i, const CxtThread &amp;cctx)</argsstring>
        <name>TCTNode</name>
        <param>
          <type>NodeID</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_cxt_thread" kindref="compound">CxtThread</ref> &amp;</type>
          <declname>cctx</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/TCT.h" line="70" column="5" bodyfile="include/MTA/TCT.h" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_t_c_t_node_1a47964661d78a61eb1389acc48701abf8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::TCTNode::dump</definition>
        <argsstring>()</argsstring>
        <name>dump</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/TCT.h" line="75" column="10" bodyfile="include/MTA/TCT.h" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_t_c_t_node_1a21591b19f6a9267151c31178f9543ee6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_s_v_f_1_1_cxt_thread" kindref="compound">CxtThread</ref> &amp;</type>
        <definition>const CxtThread&amp; SVF::TCTNode::getCxtThread</definition>
        <argsstring>() const</argsstring>
        <name>getCxtThread</name>
        <briefdescription>
<para>Get <ref refid="class_s_v_f_1_1_cxt_thread" kindref="compound">CxtThread</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/TCT.h" line="81" column="28" bodyfile="include/MTA/TCT.h" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_t_c_t_node_1a4541cd85dcde2ce789ea411ebb1d89c7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::TCTNode::isInloop</definition>
        <argsstring>() const</argsstring>
        <name>isInloop</name>
        <briefdescription>
<para>inloop, incycle attributes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/TCT.h" line="88" column="17" bodyfile="include/MTA/TCT.h" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_t_c_t_node_1a42dde4c3714cc5605f7c0e76cfd4a74c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::TCTNode::isIncycle</definition>
        <argsstring>() const</argsstring>
        <name>isIncycle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/TCT.h" line="92" column="17" bodyfile="include/MTA/TCT.h" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_t_c_t_node_1a0fafde34cdffde6d38bb9efca9b7a9a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::TCTNode::setMultiforked</definition>
        <argsstring>(bool value)</argsstring>
        <name>setMultiforked</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/TCT.h" line="96" column="17" bodyfile="include/MTA/TCT.h" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_t_c_t_node_1a5dd0cf88e381438d191b275314117561" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::TCTNode::isMultiforked</definition>
        <argsstring>() const</argsstring>
        <name>isMultiforked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MTA/TCT.h" line="100" column="17" bodyfile="include/MTA/TCT.h" bodystart="100" bodyend="103"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>SVF::TCTNode</label>
        <link refid="class_s_v_f_1_1_t_c_t_node"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GenericTCTNodeTy</label>
        <link refid="class_s_v_f_1_1_generic_node"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>SVF::TCTNode</label>
        <link refid="class_s_v_f_1_1_t_c_t_node"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GenericTCTNodeTy</label>
        <link refid="class_s_v_f_1_1_generic_node"/>
      </node>
    </collaborationgraph>
    <location file="include/MTA/TCT.h" line="65" column="1" bodyfile="include/MTA/TCT.h" bodystart="66" bodyend="109"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_generic_node_1a93d217b0c9fd8008a2989ca2b4f3fbfb" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>addIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ae74283fbc788665296a69e56f334557b" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>addOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ab6dc1ae41ae23b383f8add474caa7429" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>const_iterator</name></member>
      <member refid="class_s_v_f_1_1_t_c_t_node_1a8f2ef1020b45aada8b79ac3b8d27c2a6" prot="private" virt="non-virtual"><scope>SVF::TCTNode</scope><name>ctx</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a4ab1f2e5db301e4a37215905a22e6476" prot="public" virt="virtual"><scope>SVF::TCTNode</scope><name>directInEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ab331402aed245c33bad841df2bc21f7b" prot="public" virt="virtual"><scope>SVF::TCTNode</scope><name>directInEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a19599627ba095b5452373284deab7f6c" prot="public" virt="virtual"><scope>SVF::TCTNode</scope><name>directInEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1aa7be9ff204bf85bc3bf2fa4e078fcab2" prot="public" virt="virtual"><scope>SVF::TCTNode</scope><name>directInEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1aa0e258d3a92dae367f2809a6f16c80db" prot="public" virt="virtual"><scope>SVF::TCTNode</scope><name>directOutEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1acfae7a2809931cbd62b6f47c4813510d" prot="public" virt="virtual"><scope>SVF::TCTNode</scope><name>directOutEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a5950d69d4ba6c2122dd06b93911e4992" prot="public" virt="virtual"><scope>SVF::TCTNode</scope><name>directOutEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a7f914b128f7839483efc9ad56834e7c2" prot="public" virt="virtual"><scope>SVF::TCTNode</scope><name>directOutEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_t_c_t_node_1a47964661d78a61eb1389acc48701abf8" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>dump</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a458c626543431b4314f5f4f532eb51de" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>EdgeType</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a03c6da4a73c47f84f5c5b47252bc339a" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>GEdgeSetTy</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1acdca5baae3e9e4208a60322fec9c9d3f" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>GenericNode</name></member>
      <member refid="class_s_v_f_1_1_t_c_t_node_1a21591b19f6a9267151c31178f9543ee6" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>getCxtThread</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ac3e55ef37aefb411ea4c87b1aa3b1895" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>getId</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1afc8b5f86d7795b6a0dfc0687d942d79b" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>getInEdges</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a391e996d695b114530120723da1d003e" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>getNodeKind</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a2d9cd758d6f8c5189d9b90b74f43e009" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>getOutEdges</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a363b90ab02cce2ebc3ede8e5b7cc141c" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>GNodeK</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a06a7373b11143e709784de784fa476fe" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>hasIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1add6b6b3bd45a9460335c5db9eda821b8" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>hasIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a0931220d7a38e03f206cbdc6465d32ad" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>hasOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1aa0c40cb708b39300b3cb7354194e4993" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>hasOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ae5b113921530eee6afe58a65d8e5b3a7" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>InEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a7c0ff80b1c0ae8b76fc620f21495ca39" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>InEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1afe6a7b286d9af4992f41b59612fd2900" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>InEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a0118fbeb2b314dcdcb53c56a2a13ab07" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>InEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_t_c_t_node_1a42dde4c3714cc5605f7c0e76cfd4a74c" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>isIncycle</name></member>
      <member refid="class_s_v_f_1_1_t_c_t_node_1a4541cd85dcde2ce789ea411ebb1d89c7" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>isInloop</name></member>
      <member refid="class_s_v_f_1_1_t_c_t_node_1a5dd0cf88e381438d191b275314117561" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>isMultiforked</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a2f5471985dfe62bc9ded830a693ab153" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>iterator</name></member>
      <member refid="class_s_v_f_1_1_t_c_t_node_1a414f4b98fb8fd36d2cb381ff56eb98d8" prot="private" virt="non-virtual"><scope>SVF::TCTNode</scope><name>multiforked</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ad63e862eb1d1369bd69318fe698e4a22" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>NodeType</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1aa4f103330118c8976bf95e4bf53416eb" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>OutEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a50219c203fb5a8a44fe22428699f26e7" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>OutEdgeBegin</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a19a3366fd8a58290d0c740c46c3dcb3d" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>OutEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1ace88b6c7561f61f747ff08f61e2c18bc" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>OutEdgeEnd</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a56dff05dc2b3c5664d3b8fc1c6c927d5" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>removeIncomingEdge</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a7c6192cb176bda3fad1819711302e468" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>removeOutgoingEdge</name></member>
      <member refid="class_s_v_f_1_1_t_c_t_node_1a0fafde34cdffde6d38bb9efca9b7a9a1" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>setMultiforked</name></member>
      <member refid="class_s_v_f_1_1_t_c_t_node_1afdb40d78890c84d47441ade941a6d8c6" prot="public" virt="non-virtual"><scope>SVF::TCTNode</scope><name>TCTNode</name></member>
      <member refid="class_s_v_f_1_1_generic_node_1a48a8d05b81b5c8099c3f3d1f2c4983a9" prot="public" virt="virtual"><scope>SVF::TCTNode</scope><name>~GenericNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
