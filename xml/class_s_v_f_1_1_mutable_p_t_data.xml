<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_mutable_p_t_data" kind="class" language="C++" prot="public">
    <compoundname>SVF::MutablePTData</compoundname>
    <basecompoundref refid="class_s_v_f_1_1_p_t_data" prot="public" virt="non-virtual">SVF::PTData&lt; Key, Datum, Data &gt;</basecompoundref>
    <includes refid="_mutable_points_to_d_s_8h" local="no">MutablePointsToDS.h</includes>
    <templateparamlist>
      <param>
        <type>typename Key</type>
      </param>
      <param>
        <type>typename Datum</type>
      </param>
      <param>
        <type>typename Data</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_p_t_data_1a7ae5c1e151d61bda9b88403e3e7a7364" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SVF::MutablePTData&lt; Key, Datum, Data &gt;::classof</definition>
        <argsstring>(const MutablePTData&lt; Key, Datum, Data &gt; *)</argsstring>
        <name>classof</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_mutable_p_t_data" kindref="compound">MutablePTData</ref>&lt; Key, Datum, Data &gt; *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Methods to support type inquiry through isa, cast, and dyn_cast: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="92" column="24" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_p_t_data_1a61a4b5dd0715f3ee0b002fdbbf5d6f1f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SVF::MutablePTData&lt; Key, Datum, Data &gt;::classof</definition>
        <argsstring>(const PTData&lt; Key, Datum, Data &gt; *ptd)</argsstring>
        <name>classof</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData</ref>&lt; Key, Datum, Data &gt; *</type>
          <declname>ptd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="97" column="24" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="97" bodyend="100"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_p_t_data_1a7db94d4d8cbeed91a9db61b4ef180812" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::MutablePTData&lt; Key, Datum, Data &gt;::unionPts</definition>
        <argsstring>(Data &amp;dstData, const Data &amp;srcData)</argsstring>
        <name>unionPts</name>
        <param>
          <type>Data &amp;</type>
          <declname>dstData</declname>
        </param>
        <param>
          <type>const Data &amp;</type>
          <declname>srcData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Internal union/add points-to helper methods. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="124" column="17" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_p_t_data_1a5860b97a363a50dcdb52d51bf75e1a16" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::MutablePTData&lt; Key, Datum, Data &gt;::addPts</definition>
        <argsstring>(Data &amp;d, const Datum &amp;e)</argsstring>
        <name>addPts</name>
        <param>
          <type>Data &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const Datum &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="128" column="17" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_p_t_data_1a6630e8f73c316f4d448ca7d6aefcc6ae" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::MutablePTData&lt; Key, Datum, Data &gt;::addSingleRevPts</definition>
        <argsstring>(KeySet &amp;revData, const Key &amp;tgr)</argsstring>
        <name>addSingleRevPts</name>
        <param>
          <type>KeySet &amp;</type>
          <declname>revData</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>tgr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="132" column="17" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_p_t_data_1a1b6188e4e57cacbc033057fbf8d7d7cd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::MutablePTData&lt; Key, Datum, Data &gt;::addRevPts</definition>
        <argsstring>(const Data &amp;ptsData, const Key &amp;tgr)</argsstring>
        <name>addRevPts</name>
        <param>
          <type>const Data &amp;</type>
          <declname>ptsData</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>tgr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="136" column="17" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="136" bodyend="143"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_p_t_data_1a381ace65c16e2ce5966e3f8878362f36" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData</ref>&lt; Key, Datum, Data &gt;</type>
        <definition>typedef PTData&lt;Key, Datum, Data&gt; SVF::MutablePTData&lt; Key, Datum, Data &gt;::BasePTData</definition>
        <argsstring></argsstring>
        <name>BasePTData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="19" column="20" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_p_t_data_1a6ee023e6d345597d9bb71bd4603d12af" prot="public" static="no">
        <type><ref refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848" kindref="member">BasePTData::PTDataTy</ref></type>
        <definition>typedef BasePTData::PTDataTy SVF::MutablePTData&lt; Key, Datum, Data &gt;::PTDataTy</definition>
        <argsstring></argsstring>
        <name>PTDataTy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="20" column="43" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_p_t_data_1a7b2248c0361c50c56d485b79063d76c3" prot="public" static="no">
        <type>BasePTData::KeySet</type>
        <definition>typedef BasePTData::KeySet SVF::MutablePTData&lt; Key, Datum, Data &gt;::KeySet</definition>
        <argsstring></argsstring>
        <name>KeySet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="21" column="41" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_p_t_data_1a538c90a9b9cb08ca3d52e19bc6d9862c" prot="public" static="no">
        <type>Map&lt; Key, Data &gt;</type>
        <definition>typedef Map&lt;Key, Data&gt; SVF::MutablePTData&lt; Key, Datum, Data &gt;::PtsMap</definition>
        <argsstring></argsstring>
        <name>PtsMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="23" column="17" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_p_t_data_1a3d3ab4e8a26b86bf33650deed10b26bc" prot="public" static="no">
        <type>Map&lt; Datum, KeySet &gt;</type>
        <definition>typedef Map&lt;Datum, KeySet&gt; SVF::MutablePTData&lt; Key, Datum, Data &gt;::RevPtsMap</definition>
        <argsstring></argsstring>
        <name>RevPtsMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="24" column="17" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_p_t_data_1afb11dce77935458e8b0c1451fed6ffb2" prot="public" static="no">
        <type>PtsMap::iterator</type>
        <definition>typedef PtsMap::iterator SVF::MutablePTData&lt; Key, Datum, Data &gt;::PtsMapIter</definition>
        <argsstring></argsstring>
        <name>PtsMapIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="25" column="39" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_p_t_data_1a0173f2c011f6ee51ffd3eb1ad39aa717" prot="public" static="no">
        <type>PtsMap::const_iterator</type>
        <definition>typedef PtsMap::const_iterator SVF::MutablePTData&lt; Key, Datum, Data &gt;::PtsMapConstIter</definition>
        <argsstring></argsstring>
        <name>PtsMapConstIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="26" column="45" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_s_v_f_1_1_mutable_p_t_data_1a70fa6e85fe5db1b82c67385f2a4d4c6c" prot="public" static="no">
        <type>Data::iterator</type>
        <definition>typedef Data::iterator SVF::MutablePTData&lt; Key, Datum, Data &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="27" column="37" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_s_v_f_1_1_mutable_p_t_data_1a1e40a996267413ac46fbfa3c69764255" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class MutableDFPTData&lt; Key, Datum, Data &gt;</definition>
        <argsstring></argsstring>
        <name>MutableDFPTData&lt; Key, Datum, Data &gt;</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_mutable_d_f_p_t_data" kindref="compound">MutableDFPTData</ref>&lt; Key, Datum, Data &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="1" column="0" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_mutable_p_t_data_1a912838d447bf49c60c205e213677a7f7" prot="protected" static="no" mutable="no">
        <type>PtsMap</type>
        <definition>PtsMap SVF::MutablePTData&lt; Key, Datum, Data &gt;::ptsMap</definition>
        <argsstring></argsstring>
        <name>ptsMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="147" column="12" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_mutable_p_t_data_1a86e291dcb4d7bf3d288f9954629bb3ad" prot="protected" static="no" mutable="no">
        <type>RevPtsMap</type>
        <definition>RevPtsMap SVF::MutablePTData&lt; Key, Datum, Data &gt;::revPtsMap</definition>
        <argsstring></argsstring>
        <name>revPtsMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="148" column="15" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_p_t_data_1a1959d20d1bf780da7107fb527df68c9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::MutablePTData&lt; Key, Datum, Data &gt;::MutablePTData</definition>
        <argsstring>(bool reversePT=true, PTDataTy ty=PTDataTy::MutBase)</argsstring>
        <name>MutablePTData</name>
        <param>
          <type>bool</type>
          <declname>reversePT</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848" kindref="member">PTDataTy</ref></type>
          <declname>ty</declname>
          <defval>PTDataTy::MutBase</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="30" column="5" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_p_t_data_1a5c3aa718b55afc11fe943c57230b8bfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual SVF::MutablePTData&lt; Key, Datum, Data &gt;::~MutablePTData</definition>
        <argsstring>()</argsstring>
        <name>~MutablePTData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="32" column="13" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_p_t_data_1a322653e012be4d7b48bcde7aab228119" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const PtsMap &amp;</type>
        <definition>virtual const PtsMap&amp; SVF::MutablePTData&lt; Key, Datum, Data &gt;::getPtsMap</definition>
        <argsstring>() const</argsstring>
        <name>getPtsMap</name>
        <briefdescription>
<para>Return Points-to map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="35" column="33" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_p_t_data_1a1defaebec7aef83dbac6066259f7fe24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::MutablePTData&lt; Key, Datum, Data &gt;::clear</definition>
        <argsstring>() override</argsstring>
        <name>clear</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1a3cdec1f0be962716508d3922dce058d5">clear</reimplements>
        <briefdescription>
<para>Clears all points-to sets as if nothing is stored. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="40" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="40" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_p_t_data_1a9221ae9cf4e9f992b5a60637d64668c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>const Data &amp;</type>
        <definition>virtual const Data&amp; SVF::MutablePTData&lt; Key, Datum, Data &gt;::getPts</definition>
        <argsstring>(const Key &amp;var) override</argsstring>
        <name>getPts</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1a86a93186b51b6ce9dccffecad8381281">getPts</reimplements>
        <param>
          <type>const Key &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
<para>Get points-to set of var. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="46" column="31" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_p_t_data_1abd663d8229d8cb3bd011886777e6d51a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>const KeySet &amp;</type>
        <definition>virtual const KeySet&amp; SVF::MutablePTData&lt; Key, Datum, Data &gt;::getRevPts</definition>
        <argsstring>(const Datum &amp;datum) override</argsstring>
        <name>getRevPts</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1a5ac0805846fb6bac6c58c0fefb106c5f">getRevPts</reimplements>
        <param>
          <type>const Datum &amp;</type>
          <declname>datum</declname>
        </param>
        <briefdescription>
<para>Get reverse points-to set of datum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="51" column="33" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_p_t_data_1ad5b17668c526e8db4f77cb5f3f3be5f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutablePTData&lt; Key, Datum, Data &gt;::addPts</definition>
        <argsstring>(const Key &amp;dstKey, const Datum &amp;element) override</argsstring>
        <name>addPts</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1a1365146d19ee927f870a7384c0d1db6b">addPts</reimplements>
        <param>
          <type>const Key &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>const Datum &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
<para>Adds element to the points-to set associated with var. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="57" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_p_t_data_1a55a05edae50e365c1da8dee3bec2ea9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutablePTData&lt; Key, Datum, Data &gt;::unionPts</definition>
        <argsstring>(const Key &amp;dstKey, const Key &amp;srcKey) override</argsstring>
        <name>unionPts</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1a482eda0b2ea6a8e1326ee1a0c25c1fdc">unionPts</reimplements>
        <param>
          <type>const Key &amp;</type>
          <declname>dstVar</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>srcVar</declname>
        </param>
        <briefdescription>
<para>Performs pts(dstVar) = pts(dstVar) U pts(srcVar). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="63" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="63" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_p_t_data_1a6a9c045a3b68d543c5066388ad3a2f86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SVF::MutablePTData&lt; Key, Datum, Data &gt;::unionPts</definition>
        <argsstring>(const Key &amp;dstKey, const Data &amp;srcData) override</argsstring>
        <name>unionPts</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1ab378c0f2171f6de9b8aa076b43f88e89">unionPts</reimplements>
        <param>
          <type>const Key &amp;</type>
          <declname>dstVar</declname>
        </param>
        <param>
          <type>const Data &amp;</type>
          <declname>srcData</declname>
        </param>
        <briefdescription>
<para>Performs pts(dstVar) = pts(dstVar) U srcData. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="69" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="69" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_p_t_data_1ad9a85e50883a1d93e5d456046bd0812d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::MutablePTData&lt; Key, Datum, Data &gt;::dumpPTData</definition>
        <argsstring>() override</argsstring>
        <name>dumpPTData</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1affb0e613229679f926c52c37b3c141ea">dumpPTData</reimplements>
        <briefdescription>
<para>Dump stored keys and points-to sets. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="75" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_p_t_data_1aaeb78d084ff0e9f1b418d47ad0e99cd3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::MutablePTData&lt; Key, Datum, Data &gt;::clearPts</definition>
        <argsstring>(const Key &amp;var, const Datum &amp;element) override</argsstring>
        <name>clearPts</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1a2ee28cb51800a57a7646d72f1b92e6ac">clearPts</reimplements>
        <param>
          <type>const Key &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>const Datum &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
<para>Clears element from the points-to set of var. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="80" column="18" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_p_t_data_1a7ac688a755ea2d9fdcd4369cd6564887" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::MutablePTData&lt; Key, Datum, Data &gt;::clearFullPts</definition>
        <argsstring>(const Key &amp;var) override</argsstring>
        <name>clearFullPts</name>
        <reimplements refid="class_s_v_f_1_1_p_t_data_1a4a27923265487dac1eede5a57cc0c9a5">clearFullPts</reimplements>
        <param>
          <type>const Key &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
<para>Fully clears the points-to set of var. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="85" column="18" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="85" bodyend="88"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_s_v_f_1_1_mutable_p_t_data_1ab4530d4a877e696474e6e2f1f86fb4dd" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SVF::MutablePTData&lt; Key, Datum, Data &gt;::dumpPts</definition>
        <argsstring>(const PtsMap &amp;ptsSet, raw_ostream &amp;O=SVFUtil::outs()) const</argsstring>
        <name>dumpPts</name>
        <param>
          <type>const PtsMap &amp;</type>
          <declname>ptsSet</declname>
        </param>
        <param>
          <type><ref refid="namespace_s_v_f_1a424cc053c29ad7303699c529d1a2cc71" kindref="member">raw_ostream</ref> &amp;</type>
          <declname>O</declname>
          <defval>SVFUtil::outs()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MemoryModel/MutablePointsToDS.h" line="104" column="25" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="104" bodyend="119"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_s_v_f_1_1_p_t_data" kindref="compound">PTData</ref> implemented using points-to sets which are created once and updated continuously. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>SVF::MutablePTData&lt; Key, Datum, Data &gt;</label>
        <link refid="class_s_v_f_1_1_mutable_p_t_data"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SVF::PTData&lt; Key, Datum, Data &gt;</label>
        <link refid="class_s_v_f_1_1_p_t_data"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>SVF::MutablePTData&lt; Key, Datum, Data &gt;</label>
        <link refid="class_s_v_f_1_1_mutable_p_t_data"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SVF::PTData&lt; Key, Datum, Data &gt;</label>
        <link refid="class_s_v_f_1_1_p_t_data"/>
      </node>
    </collaborationgraph>
    <location file="include/MemoryModel/MutablePointsToDS.h" line="15" column="1" bodyfile="include/MemoryModel/MutablePointsToDS.h" bodystart="16" bodyend="149"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1ad5b17668c526e8db4f77cb5f3f3be5f1" prot="public" virt="virtual"><scope>SVF::MutablePTData</scope><name>addPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a5860b97a363a50dcdb52d51bf75e1a16" prot="private" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>addPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a1b6188e4e57cacbc033057fbf8d7d7cd" prot="private" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>addRevPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a6630e8f73c316f4d448ca7d6aefcc6ae" prot="private" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>addSingleRevPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a48ea0972c2495007d758a0674fd958a0" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>Base</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a381ace65c16e2ce5966e3f8878362f36" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>BasePTData</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a7ae5c1e151d61bda9b88403e3e7a7364" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a61a4b5dd0715f3ee0b002fdbbf5d6f1f" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>classof</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a1defaebec7aef83dbac6066259f7fe24" prot="public" virt="virtual"><scope>SVF::MutablePTData</scope><name>clear</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a7ac688a755ea2d9fdcd4369cd6564887" prot="public" virt="virtual"><scope>SVF::MutablePTData</scope><name>clearFullPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1aaeb78d084ff0e9f1b418d47ad0e99cd3" prot="public" virt="virtual"><scope>SVF::MutablePTData</scope><name>clearPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a9fd234f8ac4f0615ef1bc2f9c02e00ab" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>DataFlow</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a12db671c6effedfcd48f3a390a3cea39" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>Diff</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1ad9a85e50883a1d93e5d456046bd0812d" prot="public" virt="virtual"><scope>SVF::MutablePTData</scope><name>dumpPTData</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1ab4530d4a877e696474e6e2f1f86fb4dd" prot="protected" virt="virtual"><scope>SVF::MutablePTData</scope><name>dumpPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a22b25cb7e65dd9989dbb4c1819d68dee" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>getPTDTY</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a9221ae9cf4e9f992b5a60637d64668c6" prot="public" virt="virtual"><scope>SVF::MutablePTData</scope><name>getPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a322653e012be4d7b48bcde7aab228119" prot="public" virt="virtual"><scope>SVF::MutablePTData</scope><name>getPtsMap</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1abd663d8229d8cb3bd011886777e6d51a" prot="public" virt="virtual"><scope>SVF::MutablePTData</scope><name>getRevPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a85136c4ad93cefd1d2371cc92aa2423d" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>IncMutDataFlow</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a70fa6e85fe5db1b82c67385f2a4d4c6c" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>iterator</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a7b2248c0361c50c56d485b79063d76c3" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>KeySet</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a1e40a996267413ac46fbfa3c69764255" prot="private" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>MutableDFPTData&lt; Key, Datum, Data &gt;</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a1959d20d1bf780da7107fb527df68c9a" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>MutablePTData</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848ad89e3219f31ba0f1424c1a219565b7b0" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>MutBase</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a13666448dbecfb781405aff71a674d4e" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>MutDataFlow</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a31e94f61c6e2166b4c205fe03a4e912d" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>MutDiff</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a97fea46c57fe00f026da2cd3f510e785" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>MutVersioned</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a4481e26740c77bd69239552badf85614" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>PTData</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a6ee023e6d345597d9bb71bd4603d12af" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>PTDataTy</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a11120561456b00e1a6210e5105e8f718" prot="protected" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>ptdTy</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a912838d447bf49c60c205e213677a7f7" prot="protected" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>ptsMap</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a538c90a9b9cb08ca3d52e19bc6d9862c" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>PtsMap</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a0173f2c011f6ee51ffd3eb1ad39aa717" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>PtsMapConstIter</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1afb11dce77935458e8b0c1451fed6ffb2" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>PtsMapIter</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1aea15e71384244f3ad556e9924a1d0d21" prot="protected" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>rev</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a3d3ab4e8a26b86bf33650deed10b26bc" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>RevPtsMap</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a86e291dcb4d7bf3d288f9954629bb3ad" prot="protected" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>revPtsMap</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a55a05edae50e365c1da8dee3bec2ea9b" prot="public" virt="virtual"><scope>SVF::MutablePTData</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a6a9c045a3b68d543c5066388ad3a2f86" prot="public" virt="virtual"><scope>SVF::MutablePTData</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a7db94d4d8cbeed91a9db61b4ef180812" prot="private" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>unionPts</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a74ce29609c51f2be34a0b5b7650a9848a4fcfbbd2f9f50444a49c4cc4065b0aeb" prot="public" virt="non-virtual"><scope>SVF::MutablePTData</scope><name>Versioned</name></member>
      <member refid="class_s_v_f_1_1_mutable_p_t_data_1a5c3aa718b55afc11fe943c57230b8bfb" prot="public" virt="virtual"><scope>SVF::MutablePTData</scope><name>~MutablePTData</name></member>
      <member refid="class_s_v_f_1_1_p_t_data_1a982153a8d2300d18549a7a6c4235c52d" prot="public" virt="virtual"><scope>SVF::MutablePTData</scope><name>~PTData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
