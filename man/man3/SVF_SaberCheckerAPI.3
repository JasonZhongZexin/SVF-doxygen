.TH "SVF::SaberCheckerAPI" 3 "Sun Feb 14 2021" "SVF" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SVF::SaberCheckerAPI
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBCHECKER_TYPE\fP { \fBCK_DUMMY\fP = 0, \fBCK_ALLOC\fP, \fBCK_FREE\fP, \fBCK_FOPEN\fP, \fBCK_FCLOSE\fP }"
.br
.ti -1c
.RI "typedef llvm::StringMap< \fBCHECKER_TYPE\fP > \fBTDAPIMap\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "bool \fBisMemAlloc\fP (const \fBSVFFunction\fP *fun) const"
.br
.RI "Return true if this call is a memory allocation\&. "
.ti -1c
.RI "bool \fBisMemAlloc\fP (const Instruction *inst) const"
.br
.ti -1c
.RI "bool \fBisMemAlloc\fP (const \fBCallBlockNode\fP *cs) const"
.br
.ti -1c
.RI "bool \fBisMemDealloc\fP (const \fBSVFFunction\fP *fun) const"
.br
.RI "Return true if this call is a memory deallocation\&. "
.ti -1c
.RI "bool \fBisMemDealloc\fP (const Instruction *inst) const"
.br
.ti -1c
.RI "bool \fBisMemDealloc\fP (const \fBCallBlockNode\fP *cs) const"
.br
.ti -1c
.RI "bool \fBisFOpen\fP (const \fBSVFFunction\fP *fun) const"
.br
.RI "Return true if this call is a file open\&. "
.ti -1c
.RI "bool \fBisFOpen\fP (const Instruction *inst) const"
.br
.ti -1c
.RI "bool \fBisFOpen\fP (const \fBCallBlockNode\fP *cs) const"
.br
.ti -1c
.RI "bool \fBisFClose\fP (const \fBSVFFunction\fP *fun) const"
.br
.RI "Return true if this call is a file close\&. "
.ti -1c
.RI "bool \fBisFClose\fP (const Instruction *inst) const"
.br
.ti -1c
.RI "bool \fBisFClose\fP (const \fBCallBlockNode\fP *cs) const"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBSaberCheckerAPI\fP * \fBgetCheckerAPI\fP ()"
.br
.RI "Return a static reference\&. "
.in -1c
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBSVF::SaberCheckerAPI::CHECKER_TYPE\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fICK_ALLOC \fP\fP
dummy type 
.TP
\fB\fICK_FREE \fP\fP
memory allocation 
.TP
\fB\fICK_FOPEN \fP\fP
memory deallocation 
.TP
\fB\fICK_FCLOSE \fP\fP
File open\&. File close 

.SH "Author"
.PP 
Generated automatically by Doxygen for SVF from the source code\&.
