<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_s_v_f_1_1_external_p_a_g" kind="class" language="C++" prot="public">
    <compoundname>SVF::ExternalPAG</compoundname>
    <includes refid="_external_p_a_g_8h" local="no">ExternalPAG.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_external_p_a_g_1a851dbb85d0b80c3942398732ba900e41" prot="private" static="yes" mutable="no">
        <type>Map&lt; const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *, Map&lt; int, <ref refid="class_s_v_f_1_1_p_a_g_node" kindref="compound">PAGNode</ref> * &gt; &gt;</type>
        <definition>Map&lt; const SVFFunction *, Map&lt; int, PAGNode * &gt; &gt; ExternalPAG::functionToExternalPAGEntries</definition>
        <argsstring></argsstring>
        <name>functionToExternalPAGEntries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maps function names to the entry nodes of the extpag which implements it. This is to connect arguments and callsites. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="28" column="13" bodyfile="include/Graphs/ExternalPAG.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_external_p_a_g_1aa478936bbf34d5cc23c6322a61a6885e" prot="private" static="yes" mutable="no">
        <type>Map&lt; const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *, <ref refid="class_s_v_f_1_1_p_a_g_node" kindref="compound">PAGNode</ref> * &gt;</type>
        <definition>Map&lt; const SVFFunction *, PAGNode * &gt; ExternalPAG::functionToExternalPAGReturns</definition>
        <argsstring></argsstring>
        <name>functionToExternalPAGReturns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="29" column="16" bodyfile="include/Graphs/ExternalPAG.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_v_f_1_1_external_p_a_g_1a3afc6af562a7900d682394acc64d5890" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SVF::ExternalPAG::functionName</definition>
        <argsstring></argsstring>
        <name>functionName</name>
        <briefdescription>
<para>Name of the function this external <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> represents. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="32" column="17" bodyfile="include/Graphs/ExternalPAG.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_external_p_a_g_1a4776a673e53d7b0bdd17f29a608a5620" prot="private" static="no" mutable="no">
        <type>NodeSet</type>
        <definition>NodeSet SVF::ExternalPAG::valueNodes</definition>
        <argsstring></argsstring>
        <name>valueNodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Value nodes in this external <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref>, represented by NodeIDs because we will rebuild these nodes in the main <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="36" column="13" bodyfile="include/Graphs/ExternalPAG.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_external_p_a_g_1a817a1204dd3469910ee0590679159b14" prot="private" static="no" mutable="no">
        <type>NodeSet</type>
        <definition>NodeSet SVF::ExternalPAG::objectNodes</definition>
        <argsstring></argsstring>
        <name>objectNodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Object nodes in this external <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref>, represented by NodeIDs because we will rebuild these nodes in the main <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="39" column="13" bodyfile="include/Graphs/ExternalPAG.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_external_p_a_g_1a6b937c69282317ddf07bdcaaf9c560d4" prot="private" static="no" mutable="no">
        <type>OrderedSet&lt; std::tuple&lt; NodeID, NodeID, std::string, int &gt; &gt;</type>
        <definition>OrderedSet&lt;std::tuple&lt;NodeID, NodeID, std::string, int&gt; &gt; SVF::ExternalPAG::edges</definition>
        <argsstring></argsstring>
        <name>edges</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Edges in this external <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref>, represented by the parts of an Edge because we will rebuild these edges in the main <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="42" column="16" bodyfile="include/Graphs/ExternalPAG.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_external_p_a_g_1ae8d9064d781ed859cba85b99a69070ac" prot="private" static="no" mutable="no">
        <type>Map&lt; int, NodeID &gt;</type>
        <definition>Map&lt;int, NodeID&gt; SVF::ExternalPAG::argNodes</definition>
        <argsstring></argsstring>
        <name>argNodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Nodes in the <ref refid="class_s_v_f_1_1_external_p_a_g" kindref="compound">ExternalPAG</ref> which call edges should connect to. argNodes[0] is arg 0, argNodes[1] is arg 1, ... </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="48" column="9" bodyfile="include/Graphs/ExternalPAG.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_external_p_a_g_1a72d638670931f9984cea132f38cdce5a" prot="private" static="no" mutable="no">
        <type>NodeID</type>
        <definition>NodeID SVF::ExternalPAG::returnNode</definition>
        <argsstring></argsstring>
        <name>returnNode</name>
        <briefdescription>
<para>Node from which return edges connect. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="50" column="12" bodyfile="include/Graphs/ExternalPAG.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_v_f_1_1_external_p_a_g_1a10963e35a9e28ba2c5d2781a71a2c8bf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SVF::ExternalPAG::hasReturn</definition>
        <argsstring></argsstring>
        <name>hasReturn</name>
        <briefdescription>
<para>Whether this function has a return or not. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="53" column="10" bodyfile="include/Graphs/ExternalPAG.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_s_v_f_1_1_external_p_a_g_1a50cf3da29657a69d66396a6951f628d8" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::pair&lt; std::string, std::string &gt; &gt;</type>
        <definition>std::vector&lt; std::pair&lt; std::string, std::string &gt; &gt; ExternalPAG::parseExternalPAGs</definition>
        <argsstring>(llvm::cl::list&lt; std::string &gt; &amp;extpagsArgs)</argsstring>
        <name>parseExternalPAGs</name>
        <param>
          <type>llvm::cl::list&lt; std::string &gt; &amp;</type>
          <declname>extpagsArgs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For passing that passed to -extpags option, splitting fname@path into a pair. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="58" column="13" bodyfile="lib/Graphs/ExternalPAG.cpp" bodystart="36" bodyend="52"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_s_v_f_1_1_external_p_a_g_1ae010036c742cfdf95fad5355f0100984" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ExternalPAG::readFromFile</definition>
        <argsstring>(std::string filename)</argsstring>
        <name>readFromFile</name>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads nodes and edges from file.</para>
<para>File format: Node: nodeID Nodetype [[0|1|2|...]+|ret]<itemizedlist>
<listitem><para>Giving a number means that node represents such argument.</para>
</listitem><listitem><para>Giving ret means that node represents the return node.. Edge: nodeID edgetype NodeID Offset</para>
</listitem></itemizedlist>
</para>
<para>Example: 1 o 2 v 3 v 4 v 1 addr 2 0 1 addr 3 0 3 gep 4 4 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="76" column="10" bodyfile="lib/Graphs/ExternalPAG.cpp" bodystart="506" bodyend="621"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_v_f_1_1_external_p_a_g_1a7401db95a642fc218e6337dce61b98e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::ExternalPAG::ExternalPAG</definition>
        <argsstring>(std::string functionName)</argsstring>
        <name>ExternalPAG</name>
        <param>
          <type>std::string</type>
          <declname>functionName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="79" column="5" bodyfile="include/Graphs/ExternalPAG.h" bodystart="79" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_external_p_a_g_1a4ede253f0e34780aa56ee884924f76f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVF::ExternalPAG::~ExternalPAG</definition>
        <argsstring>()</argsstring>
        <name>~ExternalPAG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="82" column="5" bodyfile="include/Graphs/ExternalPAG.h" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_external_p_a_g_1a25d59d95afaa5f548e09e6e625a14f33" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SVF::ExternalPAG::getFunctionName</definition>
        <argsstring>() const</argsstring>
        <name>getFunctionName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="99" column="17" bodyfile="include/Graphs/ExternalPAG.h" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_external_p_a_g_1a1d35176325629ae64beb28d5474dd8d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodeSet &amp;</type>
        <definition>NodeSet&amp; SVF::ExternalPAG::getValueNodes</definition>
        <argsstring>()</argsstring>
        <name>getValueNodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="104" column="13" bodyfile="include/Graphs/ExternalPAG.h" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_external_p_a_g_1acb3156be31f4dd45590d931b0f9279f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodeSet &amp;</type>
        <definition>NodeSet&amp; SVF::ExternalPAG::getObjectNodes</definition>
        <argsstring>()</argsstring>
        <name>getObjectNodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="108" column="13" bodyfile="include/Graphs/ExternalPAG.h" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_external_p_a_g_1a68a53b3db6cdf02f49786492fc49c012" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>OrderedSet&lt; std::tuple&lt; NodeID, NodeID, std::string, int &gt; &gt; &amp;</type>
        <definition>OrderedSet&lt;std::tuple&lt;NodeID, NodeID, std::string, int&gt; &gt;&amp; SVF::ExternalPAG::getEdges</definition>
        <argsstring>()</argsstring>
        <name>getEdges</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="112" column="16" bodyfile="include/Graphs/ExternalPAG.h" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_external_p_a_g_1af88e42a31e396ee9df11146638f1efcd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Map&lt; int, NodeID &gt; &amp;</type>
        <definition>Map&lt;int, NodeID&gt;&amp; SVF::ExternalPAG::getArgNodes</definition>
        <argsstring>()</argsstring>
        <name>getArgNodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="117" column="9" bodyfile="include/Graphs/ExternalPAG.h" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_external_p_a_g_1ab32ce97e36e69379bc6b70c1657bbaa6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NodeID</type>
        <definition>NodeID SVF::ExternalPAG::getReturnNode</definition>
        <argsstring>() const</argsstring>
        <name>getReturnNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="122" column="12" bodyfile="include/Graphs/ExternalPAG.h" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_external_p_a_g_1a8f692a4725b0b9d548f816c71b2c3401" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SVF::ExternalPAG::setReturnNode</definition>
        <argsstring>(NodeID returnNode)</argsstring>
        <name>setReturnNode</name>
        <param>
          <type>NodeID</type>
          <declname>returnNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="126" column="10" bodyfile="include/Graphs/ExternalPAG.h" bodystart="126" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_external_p_a_g_1a419d2de51e3af016cf2cc3514ee0d735" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SVF::ExternalPAG::hasReturnNode</definition>
        <argsstring>() const</argsstring>
        <name>hasReturnNode</name>
        <briefdescription>
<para>Does this function have a return node? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="133" column="10" bodyfile="include/Graphs/ExternalPAG.h" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_external_p_a_g_1a6e8b309508de040504ad4b2ce6a5de28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ExternalPAG::addExternalPAG</definition>
        <argsstring>(const SVFFunction *function)</argsstring>
        <name>addExternalPAG</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds (creates new equivalents) all the nodes and edges of this extpag to the main <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref>. function is used as a key for future lookups. Returns true on success, false otherwise (incl. if it already exists). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="141" column="10" bodyfile="lib/Graphs/ExternalPAG.cpp" bodystart="376" bodyend="503"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_s_v_f_1_1_external_p_a_g_1a865a75aec231c9122842d2bdafeb4f6b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ExternalPAG::initialise</definition>
        <argsstring>(SVFModule *svfModule)</argsstring>
        <name>initialise</name>
        <param>
          <type><ref refid="class_s_v_f_1_1_s_v_f_module" kindref="compound">SVFModule</ref> *</type>
          <declname>svfModule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parses command line arguments and attaches external PAGs to main <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="86" column="17" bodyfile="lib/Graphs/ExternalPAG.cpp" bodystart="54" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_external_p_a_g_1a7a82128508395830433145977dbe37c0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ExternalPAG::connectCallsiteToExternalPAG</definition>
        <argsstring>(CallSite *cs)</argsstring>
        <name>connectCallsiteToExternalPAG</name>
        <param>
          <type>CallSite *</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Connects callsite if a external <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> implementing the relevant function has been added. Returns true on success, false otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="91" column="17" bodyfile="lib/Graphs/ExternalPAG.cpp" bodystart="72" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_external_p_a_g_1a3a798aa788c5f1c200b7e2719660b5ec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ExternalPAG::hasExternalPAG</definition>
        <argsstring>(const SVFFunction *function)</argsstring>
        <name>hasExternalPAG</name>
        <param>
          <type>const <ref refid="class_s_v_f_1_1_s_v_f_function" kindref="compound">SVFFunction</ref> *</type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>Whether an external <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> implementing function exists. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="94" column="17" bodyfile="lib/Graphs/ExternalPAG.cpp" bodystart="147" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_f_1_1_external_p_a_g_1acee9fa409f3649dcf2c0f5e6da66ceb0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ExternalPAG::dumpFunctions</definition>
        <argsstring>(std::vector&lt; std::string &gt; functions)</argsstring>
        <name>dumpFunctions</name>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>functions</declname>
        </param>
        <briefdescription>
<para>Dump individual PAGs of specified functions. Currently to outs(). </para>
        </briefdescription>
        <detaileddescription>
<para>Dump PAGs for the functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Graphs/ExternalPAG.h" line="97" column="17" bodyfile="lib/Graphs/ExternalPAG.cpp" bodystart="255" bodyend="374"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Represents the <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> of a function loaded externally (i.e. from file). It&apos;s purpose is to be attached to the main <ref refid="class_s_v_f_1_1_p_a_g" kindref="compound">PAG</ref> (almost) seamlessly. </para>
    </detaileddescription>
    <location file="include/Graphs/ExternalPAG.h" line="22" column="1" bodyfile="include/Graphs/ExternalPAG.h" bodystart="23" bodyend="143"/>
    <listofallmembers>
      <member refid="class_s_v_f_1_1_external_p_a_g_1a6e8b309508de040504ad4b2ce6a5de28" prot="public" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>addExternalPAG</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1ae8d9064d781ed859cba85b99a69070ac" prot="private" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>argNodes</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1a7a82128508395830433145977dbe37c0" prot="public" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>connectCallsiteToExternalPAG</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1acee9fa409f3649dcf2c0f5e6da66ceb0" prot="public" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>dumpFunctions</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1a6b937c69282317ddf07bdcaaf9c560d4" prot="private" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>edges</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1a7401db95a642fc218e6337dce61b98e1" prot="public" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>ExternalPAG</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1a3afc6af562a7900d682394acc64d5890" prot="private" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>functionName</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1a851dbb85d0b80c3942398732ba900e41" prot="private" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>functionToExternalPAGEntries</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1aa478936bbf34d5cc23c6322a61a6885e" prot="private" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>functionToExternalPAGReturns</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1af88e42a31e396ee9df11146638f1efcd" prot="public" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>getArgNodes</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1a68a53b3db6cdf02f49786492fc49c012" prot="public" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>getEdges</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1a25d59d95afaa5f548e09e6e625a14f33" prot="public" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>getFunctionName</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1acb3156be31f4dd45590d931b0f9279f5" prot="public" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>getObjectNodes</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1ab32ce97e36e69379bc6b70c1657bbaa6" prot="public" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>getReturnNode</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1a1d35176325629ae64beb28d5474dd8d7" prot="public" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>getValueNodes</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1a3a798aa788c5f1c200b7e2719660b5ec" prot="public" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>hasExternalPAG</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1a10963e35a9e28ba2c5d2781a71a2c8bf" prot="private" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>hasReturn</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1a419d2de51e3af016cf2cc3514ee0d735" prot="public" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>hasReturnNode</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1a865a75aec231c9122842d2bdafeb4f6b" prot="public" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>initialise</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1a817a1204dd3469910ee0590679159b14" prot="private" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>objectNodes</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1a50cf3da29657a69d66396a6951f628d8" prot="private" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>parseExternalPAGs</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1ae010036c742cfdf95fad5355f0100984" prot="private" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>readFromFile</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1a72d638670931f9984cea132f38cdce5a" prot="private" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>returnNode</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1a8f692a4725b0b9d548f816c71b2c3401" prot="public" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>setReturnNode</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1a4776a673e53d7b0bdd17f29a608a5620" prot="private" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>valueNodes</name></member>
      <member refid="class_s_v_f_1_1_external_p_a_g_1a4ede253f0e34780aa56ee884924f76f9" prot="public" virt="non-virtual"><scope>SVF::ExternalPAG</scope><name>~ExternalPAG</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
