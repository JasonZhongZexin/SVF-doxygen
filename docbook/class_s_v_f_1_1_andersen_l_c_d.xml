<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_andersen_l_c_d" xml:lang="en-US">
<title>SVF::AndersenLCD Class Reference</title>
<indexterm><primary>SVF::AndersenLCD</primary></indexterm>
<para>Inheritance diagram for SVF::AndersenLCD:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_andersen_l_c_d.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_l_c_d_1ae654ed2cf8cce00c649a30e573f5eefd"/><emphasis role="strong">AndersenLCD</emphasis> (<link linkend="_class_s_v_f_1_1_p_a_g">PAG</link> *_pag, <link linkend="_class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85">PTATY</link> type=<link linkend="_class_s_v_f_1_1_pointer_analysis_1a0b182ac680cce0547dbe7714c870ca85ac7c033efd59e2b5fcded79fc3ebdb9d4">AndersenLCD_WPA</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_l_c_d_1a4686b12f15a80b4bbce52127c937f7ff"/>static <link linkend="_class_s_v_f_1_1_andersen_l_c_d">AndersenLCD</link> * <link linkend="_class_s_v_f_1_1_andersen_l_c_d_1a4686b12f15a80b4bbce52127c937f7ff">createAndersenLCD</link> (<link linkend="_class_s_v_f_1_1_p_a_g">PAG</link> *_pag)</para>

<para>Create an singleton instance directly instead of invoking llvm pass manager. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_l_c_d_1a583b062b7c221bd50e5f37b7cb9b7a62"/>static void <emphasis role="strong">releaseAndersenLCD</emphasis> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_l_c_d_1ad3f4bd35f98c43a0642b91c6b0e7acb3"/>bool <emphasis role="strong">hasLCDCandidate</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_l_c_d_1ab58bd928fbfcc56344dcaf82a9c360a2"/>void <emphasis role="strong">cleanLCDCandidate</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_l_c_d_1aa830cfc0e46114751337e8ea3586d0bb"/>void <emphasis role="strong">addLCDCandidate</emphasis> (NodeID nodeId)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_l_c_d_1a4f374bbd066f9e8b1480184a1416b68b"/>bool <emphasis role="strong">isMetEdge</emphasis> (<link linkend="_class_s_v_f_1_1_constraint_edge">ConstraintEdge</link> *edge) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_l_c_d_1a0c5adfc0876e9bea02fe8ded41baeb91"/>void <emphasis role="strong">addMetEdge</emphasis> (<link linkend="_class_s_v_f_1_1_constraint_edge">ConstraintEdge</link> *edge)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_andersen_l_c_d_1a52399086e540c2adabc03a978155f55d"/>void <emphasis role="strong">solveWorklist</emphasis> ()</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_s_v_f_1_1_andersen_l_c_d_1a139d80e25fe713194f719581915d36d5">handleCopyGep</link> (<link linkend="_class_s_v_f_1_1_constraint_node">ConstraintNode</link> *node)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_s_v_f_1_1_andersen_l_c_d_1a132fe3985f04b55b5e172649db7e44d7">mergeSCC</link> ()</para>
</listitem>
            <listitem><para>NodeStack &amp; <link linkend="_class_s_v_f_1_1_andersen_l_c_d_1a078a58b3b3f18cca4e09ff5a9a8ed791">SCCDetect</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_s_v_f_1_1_andersen_l_c_d_1ac78efb1e4246c06c64dad1d368ed032d">mergeSrcToTgt</link> (NodeID nodeId, NodeID newRepId)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_s_v_f_1_1_andersen_l_c_d_1a139d80e25fe713194f719581915d36d5"/>    <section>
    <title>handleCopyGep()</title>
<indexterm><primary>handleCopyGep</primary><secondary>SVF::AndersenLCD</secondary></indexterm>
<indexterm><primary>SVF::AndersenLCD</primary><secondary>handleCopyGep</secondary></indexterm>
<para><computeroutput>void AndersenLCD::handleCopyGep (<link linkend="_class_s_v_f_1_1_constraint_node">ConstraintNode</link> * node)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Process copy and gep edges </para>
<para>
Reimplemented from <link linkend="_class_s_v_f_1_1_andersen_1ab069683dd6ca563113efbde2813ab35e">SVF::Andersen</link>.</para>
<para>
Reimplemented in <link linkend="_class_s_v_f_1_1_andersen_h_l_c_d_1a9582cde6cbb510f3fb624109f8ea8f63">SVF::AndersenHLCD</link>.</para>
    </section><anchor xml:id="_class_s_v_f_1_1_andersen_l_c_d_1a132fe3985f04b55b5e172649db7e44d7"/>    <section>
    <title>mergeSCC()</title>
<indexterm><primary>mergeSCC</primary><secondary>SVF::AndersenLCD</secondary></indexterm>
<indexterm><primary>SVF::AndersenLCD</primary><secondary>mergeSCC</secondary></indexterm>
<para><computeroutput>void AndersenLCD::mergeSCC ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Collapse nodes and fields based on &apos;lcdCandidates&apos; </para>
    </section><anchor xml:id="_class_s_v_f_1_1_andersen_l_c_d_1ac78efb1e4246c06c64dad1d368ed032d"/>    <section>
    <title>mergeSrcToTgt()</title>
<indexterm><primary>mergeSrcToTgt</primary><secondary>SVF::AndersenLCD</secondary></indexterm>
<indexterm><primary>SVF::AndersenLCD</primary><secondary>mergeSrcToTgt</secondary></indexterm>
<para><computeroutput>bool AndersenLCD::mergeSrcToTgt (NodeID nodeId, NodeID newRepId)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>merge nodeId to newRepId. Return true if the newRepId is a PWC node </para>

<para>union pts of node to rep</para>

<para>move the edges from node to rep, and remove the node</para>

<para>set rep and sub relations</para>
<para>
Reimplemented from <link linkend="_class_s_v_f_1_1_andersen_1ae6b1e54a389abc68994219e39539127e">SVF::Andersen</link>.</para>
<para>
Reimplemented in <link linkend="_class_s_v_f_1_1_andersen_h_l_c_d_1a59da289c87f9ab815a15e0a745bdc31f">SVF::AndersenHLCD</link>.</para>
    </section><anchor xml:id="_class_s_v_f_1_1_andersen_l_c_d_1a078a58b3b3f18cca4e09ff5a9a8ed791"/>    <section>
    <title>SCCDetect()</title>
<indexterm><primary>SCCDetect</primary><secondary>SVF::AndersenLCD</secondary></indexterm>
<indexterm><primary>SVF::AndersenLCD</primary><secondary>SCCDetect</secondary></indexterm>
<para><computeroutput>NodeStack &amp; AndersenLCD::SCCDetect ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para><link linkend="_class_s_v_f_1_1_andersen_l_c_d">AndersenLCD</link> specified SCC detector, need to input a nodeStack &apos;lcdCandidate&apos; </para>

<para>Detect SCC cycles</para>

<para>Merge SCC cycles</para>
<para>
Reimplemented from <link linkend="_class_s_v_f_1_1_andersen_1a31ea24432ff42ab86a4728f2bde571bc">SVF::Andersen</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/WPA/Andersen.hlib/WPA/AndersenLCD.cpp</section>
</section>
