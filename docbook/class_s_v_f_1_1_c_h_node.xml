<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_s_v_f_1_1_c_h_node" xml:lang="en-US">
<title>SVF::CHNode Class Reference</title>
<indexterm><primary>SVF::CHNode</primary></indexterm>
<para>Inheritance diagram for SVF::CHNode:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_s_v_f_1_1_c_h_node.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_node_1a7111a3971f9f03e32bfd291a783d43b4"/>enum <emphasis role="strong">CLASSATTR</emphasis> { <emphasis role="strong">PURE_ABSTRACT</emphasis> = 0x1
, <emphasis role="strong">MULTI_INHERITANCE</emphasis> = 0x2
, <emphasis role="strong">TEMPLATE</emphasis> = 0x04
 }</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_node_1aa4af6538c9994ec54a7b82691f846a31"/>typedef std::vector&lt; const <link linkend="_class_s_v_f_1_1_s_v_f_function">SVFFunction</link> * &gt; <emphasis role="strong">FuncVector</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_node_1a1f2c496e378d01841e4dc164942dc145"/><emphasis role="strong">CHNode</emphasis> (const std::string name, NodeID i=0, <link linkend="_class_s_v_f_1_1_generic_node_1a363b90ab02cce2ebc3ede8e5b7cc141c">GNodeK</link> k=0)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_node_1af6e71c1a932464b1b615fc177f5af089"/>std::string <emphasis role="strong">getName</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_node_1ab3755d804852b8a98bdf8cd0171f3a2f"/>void <link linkend="_class_s_v_f_1_1_c_h_node_1ab3755d804852b8a98bdf8cd0171f3a2f">setFlag</link> (CLASSATTR mask)</para>

<para>Flags. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_node_1aebcbd36a7efc0dbe9b3c3f680ef033e7"/>bool <emphasis role="strong">hasFlag</emphasis> (CLASSATTR mask) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_node_1abac89987927dadd53dd646eae540a024"/>void <link linkend="_class_s_v_f_1_1_c_h_node_1abac89987927dadd53dd646eae540a024">setPureAbstract</link> ()</para>

<para>Attribute. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_node_1a5d751a3a0d88c0de374bfeb526051440"/>void <emphasis role="strong">setMultiInheritance</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_node_1a00343177422c8d84d707432d0c483438"/>void <emphasis role="strong">setTemplate</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_node_1a268ccdfb486cc2efa8581ee7a3b5af39"/>bool <emphasis role="strong">isPureAbstract</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_node_1a224a394537fae62e64cf62a0d4fdd430"/>bool <emphasis role="strong">isMultiInheritance</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_node_1aff23fda93401c60422a4a5a08d77d749"/>bool <emphasis role="strong">isTemplate</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_node_1a8c51571df92b5e152cc42e9aaf712dc9"/>void <emphasis role="strong">addVirtualFunctionVector</emphasis> (FuncVector vfuncvec)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_node_1a5df1cf4d51bf3406d188c96bc9aae0af"/>const std::vector&lt; FuncVector &gt; &amp; <emphasis role="strong">getVirtualFunctionVectors</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_node_1a1abfdc91ec77cab40d6894f471f0733d"/>void <emphasis role="strong">getVirtualFunctions</emphasis> (u32_t idx, FuncVector &amp;virtualFunctions) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_node_1a600b63dac83e526c933c141d4e2bcc0c"/>const GlobalValue * <emphasis role="strong">getVTable</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_s_v_f_1_1_c_h_node_1a2c31580f1cf43fbdd01a07b6f9f6b04e"/>void <emphasis role="strong">setVTable</emphasis> (const GlobalValue *vtbl)</para>
</listitem>
        </itemizedlist>
</simplesect>
<para>
The documentation for this class was generated from the following files:</para>
include/SVF-FE/CHG.hlib/SVF-FE/CHG.cpp</section>
